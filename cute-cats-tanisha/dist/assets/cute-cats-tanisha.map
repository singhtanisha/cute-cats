{"version":3,"sources":["vendor/ember-cli/app-prefix.js","cute-cats-tanisha/app.js","cute-cats-tanisha/components/image-row.js","cute-cats-tanisha/components/image-tile.js","cute-cats-tanisha/components/vertical-collection.js","cute-cats-tanisha/components/welcome-page.js","cute-cats-tanisha/controllers/full-screen.js","cute-cats-tanisha/controllers/homepage.js","cute-cats-tanisha/helpers/app-version.js","cute-cats-tanisha/helpers/cancel-all.js","cute-cats-tanisha/helpers/perform.js","cute-cats-tanisha/helpers/pluralize.js","cute-cats-tanisha/helpers/singularize.js","cute-cats-tanisha/helpers/task.js","cute-cats-tanisha/initializers/app-version.js","cute-cats-tanisha/initializers/container-debug-adapter.js","cute-cats-tanisha/initializers/debug.js","cute-cats-tanisha/initializers/ember-concurrency.js","cute-cats-tanisha/initializers/ember-data.js","cute-cats-tanisha/initializers/export-application-global.js","cute-cats-tanisha/instance-initializers/ember-data.js","cute-cats-tanisha/resolver.js","cute-cats-tanisha/router.js","cute-cats-tanisha/routes/full-screen.js","cute-cats-tanisha/routes/homepage.js","cute-cats-tanisha/routes/index.js","cute-cats-tanisha/services/ajax.js","cute-cats-tanisha/templates/application.js","cute-cats-tanisha/templates/components/acceptance/care-plan-test.js","cute-cats-tanisha/templates/components/acceptance/cds-alerts-deep-link-test.js","cute-cats-tanisha/templates/components/acceptance/cds-alerts-test.js","cute-cats-tanisha/templates/components/acceptance/cognitive-status-test.js","cute-cats-tanisha/templates/components/acceptance/copy-link-to-patient-test.js","cute-cats-tanisha/templates/components/acceptance/customize-charting-test.js","cute-cats-tanisha/templates/components/acceptance/deprecated/copy-link-to-patient-test.js","cute-cats-tanisha/templates/components/acceptance/deprecated/encounter-creation-test.js","cute-cats-tanisha/templates/components/acceptance/deprecated/flowsheet-encounter-range-test.js","cute-cats-tanisha/templates/components/acceptance/deprecated/medication-print-preview-summary-test.js","cute-cats-tanisha/templates/components/acceptance/deprecated/patient-list-test.js","cute-cats-tanisha/templates/components/acceptance/encounter-asthma-control-test.js","cute-cats-tanisha/templates/components/acceptance/encounter-attachments-test.js","cute-cats-tanisha/templates/components/acceptance/encounter-copy-note-test.js","cute-cats-tanisha/templates/components/acceptance/encounter-creation-test.js","cute-cats-tanisha/templates/components/acceptance/encounter-delete-test.js","cute-cats-tanisha/templates/components/acceptance/encounter-growth-chart-test.js","cute-cats-tanisha/templates/components/acceptance/encounter-limited-access-test.js","cute-cats-tanisha/templates/components/acceptance/encounter-migraine-assessment-test.js","cute-cats-tanisha/templates/components/acceptance/encounter-note-save-test.js","cute-cats-tanisha/templates/components/acceptance/encounter-preview-test.js","cute-cats-tanisha/templates/components/acceptance/encounter-referral-test.js","cute-cats-tanisha/templates/components/acceptance/encounter-refresh-test.js","cute-cats-tanisha/templates/components/acceptance/encounter-search-highlight-test.js","cute-cats-tanisha/templates/components/acceptance/encounter-sia-test.js","cute-cats-tanisha/templates/components/acceptance/encounter-smoking-status-test.js","cute-cats-tanisha/templates/components/acceptance/encounter-snapshots-error-test.js","cute-cats-tanisha/templates/components/acceptance/encounter-subjective-note-test.js","cute-cats-tanisha/templates/components/acceptance/encounter-tabs-test.js","cute-cats-tanisha/templates/components/acceptance/encounter-template-usage-test.js","cute-cats-tanisha/templates/components/acceptance/encounter-timeline-test.js","cute-cats-tanisha/templates/components/acceptance/flowsheet-encounter-range-test.js","cute-cats-tanisha/templates/components/acceptance/medication-print-preview-encounter-test.js","cute-cats-tanisha/templates/components/acceptance/medication-print-preview-summary-test.js","cute-cats-tanisha/templates/components/acceptance/orders-attached-to-encounter-test.js","cute-cats-tanisha/templates/components/acceptance/past-medical-history-test.js","cute-cats-tanisha/templates/components/acceptance/patient-access-test.js","cute-cats-tanisha/templates/components/acceptance/patient-list-limited-access-test.js","cute-cats-tanisha/templates/components/acceptance/patient-list-test.js","cute-cats-tanisha/templates/components/acceptance/print-chart-test.js","cute-cats-tanisha/templates/components/acceptance/print-diagnoses-test.js","cute-cats-tanisha/templates/components/acceptance/print-encounter-test.js","cute-cats-tanisha/templates/components/acceptance/print-referral-test.js","cute-cats-tanisha/templates/components/acceptance/quality-of-care-test.js","cute-cats-tanisha/templates/components/acceptance/sign-encounter-test.js","cute-cats-tanisha/templates/components/acceptance/signed-encounter-test.js","cute-cats-tanisha/templates/components/acceptance/signing-hidden-structured-observations-test.js","cute-cats-tanisha/templates/components/acceptance/structured-observations-limited-access-test.js","cute-cats-tanisha/templates/components/acceptance/structured-observations-test.js","cute-cats-tanisha/templates/components/acceptance/syndromic-surveillance-test.js","cute-cats-tanisha/templates/components/acceptance/templates-encounter-test.js","cute-cats-tanisha/templates/components/acceptance/templates-settings-test.js","cute-cats-tanisha/templates/components/acceptance/templates-timeout-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/allergies-v3-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/assessment-modal-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/behavioral-health-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/care-team-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/clinical-documents-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/configurable-ccda-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/diagnoses-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/encounter-assessment-diagnoses-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/encounter-plan-medications-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/family-history-limited-access-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/family-history-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/health-concerns-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/healthcare-devices-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/limited-access-patient-header-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/medications-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/osteoporosis-dexa-modal-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/patient-goal-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/patient-immunization-bidirectional-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/patient-immunization-limited-access-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/patient-summary-limited-access-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/prolia-modal-limited-access-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/recent-activity-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/risk-score-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/social-health-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/social-history-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/summary-sia-list-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/using-my-dx-list-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/integration/components/add-patient-photo-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/integration/components/ccda-preview-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/integration/components/cds-alert-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/integration/components/goals-section-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/integration/components/patient-header-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/integration/components/patient-health-concerns-list-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/components/cds-alert-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/components/medication-detail-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/components/patient-image-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/controllers/favorite-diagnoses-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/controllers/immunizations-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/models/allergen-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/models/diagnoses-array-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/models/diagnoses-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/models/immunization-search-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/models/medications-array-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/models/medications-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/models/patient-goal-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/models/patient-health-concern-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/repositories/diagnoses-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/repositories/medications-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/repositories/patient-demographics-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/repositories/patients-test.js","cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/utils/patient-search-test.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/advanced-directive.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/allergy-reaction.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/allergy-substance.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/appointment.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/behavioral-health.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/care-team-member.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/care-team.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/ccda-document-type.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/ccda-template-component.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/clinical-document.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/ethnicity-option.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/favorite-diagnosis.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/immunization-drug.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/immunization-registry-connection.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/immunization-registry-option.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/immunization-registry-property.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/immunization-registry-result.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/immunization-registry.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/immunization-transmission-status.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/immunization.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/patient-allergy.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/patient-goal.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/patient-health-concern.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/patient-practice-guid.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/patient-summary-sia.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/patient-summary.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/personal-medical-history.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/race-option.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/recent-patient.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/relationshiptype.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/smoking-status-type.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/smoking-status.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/social-health.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/social-history-option.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/social-history.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/vaccination.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/vaccine-inventory.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/vaccine-lookup-datum.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/vaccine-lot-usage.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/vaccine-manufacturer.js","cute-cats-tanisha/templates/components/clinical/addon/adapters/vaccine-type.js","cute-cats-tanisha/templates/components/clinical/addon/components/add-patient-photo.js","cute-cats-tanisha/templates/components/clinical/addon/components/advance-directive-detail.js","cute-cats-tanisha/templates/components/clinical/addon/components/advance-directives.js","cute-cats-tanisha/templates/components/clinical/addon/components/allergen-search.js","cute-cats-tanisha/templates/components/clinical/addon/components/allergies-list-item.js","cute-cats-tanisha/templates/components/clinical/addon/components/allergies-list-section.js","cute-cats-tanisha/templates/components/clinical/addon/components/allergies-list.js","cute-cats-tanisha/templates/components/clinical/addon/components/allergy-detail.js","cute-cats-tanisha/templates/components/clinical/addon/components/allergy-details-pane.js","cute-cats-tanisha/templates/components/clinical/addon/components/allergy-free-text-message.js","cute-cats-tanisha/templates/components/clinical/addon/components/allergy-select.js","cute-cats-tanisha/templates/components/clinical/addon/components/assessment-modal.js","cute-cats-tanisha/templates/components/clinical/addon/components/card-field.js","cute-cats-tanisha/templates/components/clinical/addon/components/care-team-contact-form.js","cute-cats-tanisha/templates/components/clinical/addon/components/care-team-detail.js","cute-cats-tanisha/templates/components/clinical/addon/components/care-team-list.js","cute-cats-tanisha/templates/components/clinical/addon/components/ccda-preview-modal.js","cute-cats-tanisha/templates/components/clinical/addon/components/cds-alert.js","cute-cats-tanisha/templates/components/clinical/addon/components/cds-alerts.js","cute-cats-tanisha/templates/components/clinical/addon/components/create-clinical-document-modal.js","cute-cats-tanisha/templates/components/clinical/addon/components/create-patient-clinical-document-modal.js","cute-cats-tanisha/templates/components/clinical/addon/components/datetime-formatted.js","cute-cats-tanisha/templates/components/clinical/addon/components/deprecated/allergy-free-text-message.js","cute-cats-tanisha/templates/components/clinical/addon/components/deprecated/diagnoses-summary-list-item.js","cute-cats-tanisha/templates/components/clinical/addon/components/deprecated/diagnoses-summary-list-section.js","cute-cats-tanisha/templates/components/clinical/addon/components/deprecated/diagnoses-summary-list.js","cute-cats-tanisha/templates/components/clinical/addon/components/device-detail.js","cute-cats-tanisha/templates/components/clinical/addon/components/diagnoses-assessment-list-read-only.js","cute-cats-tanisha/templates/components/clinical/addon/components/diagnoses-assessment-list.js","cute-cats-tanisha/templates/components/clinical/addon/components/diagnoses-flyout.js","cute-cats-tanisha/templates/components/clinical/addon/components/diagnoses-summary-list-item.js","cute-cats-tanisha/templates/components/clinical/addon/components/diagnoses-summary-list-section.js","cute-cats-tanisha/templates/components/clinical/addon/components/diagnoses-summary-list.js","cute-cats-tanisha/templates/components/clinical/addon/components/diagnosis-codes.js","cute-cats-tanisha/templates/components/clinical/addon/components/diagnosis-description.js","cute-cats-tanisha/templates/components/clinical/addon/components/diagnosis-detail-form-icd10.js","cute-cats-tanisha/templates/components/clinical/addon/components/diagnosis-detail-form.js","cute-cats-tanisha/templates/components/clinical/addon/components/diagnosis-detail.js","cute-cats-tanisha/templates/components/clinical/addon/components/diagnosis-display-selector-v2.js","cute-cats-tanisha/templates/components/clinical/addon/components/diagnosis-display-selector.js","cute-cats-tanisha/templates/components/clinical/addon/components/diagnosis-facets.js","cute-cats-tanisha/templates/components/clinical/addon/components/diagnosis-refine.js","cute-cats-tanisha/templates/components/clinical/addon/components/diagnosis-search-for-family-history.js","cute-cats-tanisha/templates/components/clinical/addon/components/diagnosis-typeahead-icd10.js","cute-cats-tanisha/templates/components/clinical/addon/components/diagnosis-typeahead-item-icd10.js","cute-cats-tanisha/templates/components/clinical/addon/components/diagnosis-typeahead-item.js","cute-cats-tanisha/templates/components/clinical/addon/components/diagnosis-typeahead.js","cute-cats-tanisha/templates/components/clinical/addon/components/encounter-diagnoses-list-item.js","cute-cats-tanisha/templates/components/clinical/addon/components/encounter-diagnoses-list-section.js","cute-cats-tanisha/templates/components/clinical/addon/components/encounter-diagnoses-list.js","cute-cats-tanisha/templates/components/clinical/addon/components/eventing-radio-button.js","cute-cats-tanisha/templates/components/clinical/addon/components/family-health-history-card.js","cute-cats-tanisha/templates/components/clinical/addon/components/family-history-diagnosis-detail.js","cute-cats-tanisha/templates/components/clinical/addon/components/family-history-list.js","cute-cats-tanisha/templates/components/clinical/addon/components/family-history-relative-card.js","cute-cats-tanisha/templates/components/clinical/addon/components/family-history-relative-detail.js","cute-cats-tanisha/templates/components/clinical/addon/components/favorite-diagnoses-toolbox.js","cute-cats-tanisha/templates/components/clinical/addon/components/favorite-diagnosis-detail.js","cute-cats-tanisha/templates/components/clinical/addon/components/frequent-diagnoses.js","cute-cats-tanisha/templates/components/clinical/addon/components/frequent-medications.js","cute-cats-tanisha/templates/components/clinical/addon/components/goal-detail.js","cute-cats-tanisha/templates/components/clinical/addon/components/goals-section.js","cute-cats-tanisha/templates/components/clinical/addon/components/health-concern-detail.js","cute-cats-tanisha/templates/components/clinical/addon/components/immunization-select.js","cute-cats-tanisha/templates/components/clinical/addon/components/immunizations/add-immunization-details.js","cute-cats-tanisha/templates/components/clinical/addon/components/immunizations/add-immunization-historical.js","cute-cats-tanisha/templates/components/clinical/addon/components/immunizations/add-immunization-refused.js","cute-cats-tanisha/templates/components/clinical/addon/components/immunizations/add-immunization.js","cute-cats-tanisha/templates/components/clinical/addon/components/immunizations/download-immunizations.js","cute-cats-tanisha/templates/components/clinical/addon/components/immunizations/list-immunizations.js","cute-cats-tanisha/templates/components/clinical/addon/components/immunizations/print-immunizations.js","cute-cats-tanisha/templates/components/clinical/addon/components/immunizations/registry-results-forecast.js","cute-cats-tanisha/templates/components/clinical/addon/components/immunizations/registry-results-history.js","cute-cats-tanisha/templates/components/clinical/addon/components/immunizations/registry-search-form.js","cute-cats-tanisha/templates/components/clinical/addon/components/immunizations/registry-search.js","cute-cats-tanisha/templates/components/clinical/addon/components/immunizations/transmission-errors.js","cute-cats-tanisha/templates/components/clinical/addon/components/immunizations/vis-edition.js","cute-cats-tanisha/templates/components/clinical/addon/components/interaction-alert-duplicate-therapies.js","cute-cats-tanisha/templates/components/clinical/addon/components/interaction-alert-item.js","cute-cats-tanisha/templates/components/clinical/addon/components/interaction-alerts.js","cute-cats-tanisha/templates/components/clinical/addon/components/medication-detail-duplicates.js","cute-cats-tanisha/templates/components/clinical/addon/components/medication-detail.js","cute-cats-tanisha/templates/components/clinical/addon/components/medication-select.js","cute-cats-tanisha/templates/components/clinical/addon/components/medication-sig-typeahead.js","cute-cats-tanisha/templates/components/clinical/addon/components/medication-typeahead-item.js","cute-cats-tanisha/templates/components/clinical/addon/components/medication-typeahead.js","cute-cats-tanisha/templates/components/clinical/addon/components/medications-flyout.js","cute-cats-tanisha/templates/components/clinical/addon/components/medications-grid.js","cute-cats-tanisha/templates/components/clinical/addon/components/medications-plan-list-read-only.js","cute-cats-tanisha/templates/components/clinical/addon/components/medications-plan-list.js","cute-cats-tanisha/templates/components/clinical/addon/components/medications-summary-list-item.js","cute-cats-tanisha/templates/components/clinical/addon/components/medications-summary-list.js","cute-cats-tanisha/templates/components/clinical/addon/components/medline-plus-link.js","cute-cats-tanisha/templates/components/clinical/addon/components/monograph-parser.js","cute-cats-tanisha/templates/components/clinical/addon/components/new-medication-assessment-card.js","cute-cats-tanisha/templates/components/clinical/addon/components/osteoporosis-dexa-modal.js","cute-cats-tanisha/templates/components/clinical/addon/components/patient-alert.js","cute-cats-tanisha/templates/components/clinical/addon/components/patient-alerts-popover-modal.js","cute-cats-tanisha/templates/components/clinical/addon/components/patient-education-link.js","cute-cats-tanisha/templates/components/clinical/addon/components/patient-email-popover.js","cute-cats-tanisha/templates/components/clinical/addon/components/patient-header-insurance-info.js","cute-cats-tanisha/templates/components/clinical/addon/components/patient-header-phone-column.js","cute-cats-tanisha/templates/components/clinical/addon/components/patient-header.js","cute-cats-tanisha/templates/components/clinical/addon/components/patient-health-concern-note.js","cute-cats-tanisha/templates/components/clinical/addon/components/patient-health-concerns-list-section.js","cute-cats-tanisha/templates/components/clinical/addon/components/patient-health-concerns-list.js","cute-cats-tanisha/templates/components/clinical/addon/components/patient-image.js","cute-cats-tanisha/templates/components/clinical/addon/components/patient-list-phone-number.js","cute-cats-tanisha/templates/components/clinical/addon/components/patient-persistent-navigation.js","cute-cats-tanisha/templates/components/clinical/addon/components/patient-pinned-note-provider-section.js","cute-cats-tanisha/templates/components/clinical/addon/components/patient-pinned-note.js","cute-cats-tanisha/templates/components/clinical/addon/components/patient-preview-encounter.js","cute-cats-tanisha/templates/components/clinical/addon/components/patient-preview-list.js","cute-cats-tanisha/templates/components/clinical/addon/components/patient-preview-order.js","cute-cats-tanisha/templates/components/clinical/addon/components/patient-preview-result.js","cute-cats-tanisha/templates/components/clinical/addon/components/patient-preview.js","cute-cats-tanisha/templates/components/clinical/addon/components/patient-previews.js","cute-cats-tanisha/templates/components/clinical/addon/components/patient-risk-score.js","cute-cats-tanisha/templates/components/clinical/addon/components/patient-search.js","cute-cats-tanisha/templates/components/clinical/addon/components/patient-search2-item.js","cute-cats-tanisha/templates/components/clinical/addon/components/patient-search2-selected-item.js","cute-cats-tanisha/templates/components/clinical/addon/components/patient-search2.js","cute-cats-tanisha/templates/components/clinical/addon/components/pmh-detail.js","cute-cats-tanisha/templates/components/clinical/addon/components/pmh-section.js","cute-cats-tanisha/templates/components/clinical/addon/components/prescription-item.js","cute-cats-tanisha/templates/components/clinical/addon/components/prescriptions-list.js","cute-cats-tanisha/templates/components/clinical/addon/components/previous-diagnoses.js","cute-cats-tanisha/templates/components/clinical/addon/components/previous-diagnosis.js","cute-cats-tanisha/templates/components/clinical/addon/components/previous-medication.js","cute-cats-tanisha/templates/components/clinical/addon/components/print-allergies-section.js","cute-cats-tanisha/templates/components/clinical/addon/components/print-allergies.js","cute-cats-tanisha/templates/components/clinical/addon/components/print-allergy-item.js","cute-cats-tanisha/templates/components/clinical/addon/components/print-device.js","cute-cats-tanisha/templates/components/clinical/addon/components/print-devices-section.js","cute-cats-tanisha/templates/components/clinical/addon/components/print-diagnoses.js","cute-cats-tanisha/templates/components/clinical/addon/components/print-dropdown.js","cute-cats-tanisha/templates/components/clinical/addon/components/print-external-image.js","cute-cats-tanisha/templates/components/clinical/addon/components/print-family-health-history-section.js","cute-cats-tanisha/templates/components/clinical/addon/components/print-family-health-history.js","cute-cats-tanisha/templates/components/clinical/addon/components/print-goals-section.js","cute-cats-tanisha/templates/components/clinical/addon/components/print-goals.js","cute-cats-tanisha/templates/components/clinical/addon/components/print-health-concerns.js","cute-cats-tanisha/templates/components/clinical/addon/components/print-immunizations-section.js","cute-cats-tanisha/templates/components/clinical/addon/components/print-medications-section.js","cute-cats-tanisha/templates/components/clinical/addon/components/print-medications.js","cute-cats-tanisha/templates/components/clinical/addon/components/print-patient-sia-section.js","cute-cats-tanisha/templates/components/clinical/addon/components/print-social-behavioral-health-section.js","cute-cats-tanisha/templates/components/clinical/addon/components/print-worksheet.js","cute-cats-tanisha/templates/components/clinical/addon/components/recent-patient-activity.js","cute-cats-tanisha/templates/components/clinical/addon/components/risk-score-detail.js","cute-cats-tanisha/templates/components/clinical/addon/components/sia-worksheet/default-v2.js","cute-cats-tanisha/templates/components/clinical/addon/components/sia-worksheet/default.js","cute-cats-tanisha/templates/components/clinical/addon/components/sia-worksheet/depression-phq-2-v2.js","cute-cats-tanisha/templates/components/clinical/addon/components/sia-worksheet/migraine-v2.js","cute-cats-tanisha/templates/components/clinical/addon/components/sia-worksheet/migraine.js","cute-cats-tanisha/templates/components/clinical/addon/components/sia-worksheet/transcript-event-fields.js","cute-cats-tanisha/templates/components/clinical/addon/components/smoking-status-detail-v2.js","cute-cats-tanisha/templates/components/clinical/addon/components/smoking-status-detail.js","cute-cats-tanisha/templates/components/clinical/addon/components/social-behavioral-health.js","cute-cats-tanisha/templates/components/clinical/addon/components/social-health/field-details.js","cute-cats-tanisha/templates/components/clinical/addon/components/social-health/gender-identity-details.js","cute-cats-tanisha/templates/components/clinical/addon/components/social-health/sexual-orientation-details.js","cute-cats-tanisha/templates/components/clinical/addon/components/social-history-detail.js","cute-cats-tanisha/templates/components/clinical/addon/components/summary-devices-list-item.js","cute-cats-tanisha/templates/components/clinical/addon/components/summary-devices-list.js","cute-cats-tanisha/templates/components/clinical/addon/components/summary-encounter-list.js","cute-cats-tanisha/templates/components/clinical/addon/components/summary-sia-list-item.js","cute-cats-tanisha/templates/components/clinical/addon/components/summary-sia-list.js","cute-cats-tanisha/templates/components/clinical/addon/components/text-area-counter.js","cute-cats-tanisha/templates/components/clinical/addon/components/transcript-comment.js","cute-cats-tanisha/templates/components/clinical/addon/components/transcript-comments.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/allergy.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/encounter/allergy.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/encounter/diagnosis.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/encounter/health-concern.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/encounter/medication.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/encounter/pmh.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/encounter/risk-score.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/encounter/smoking.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/encounter/social.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/encounter/worksheet.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/health-concern.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/patient.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/patient/d-immunizations.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/patient/familyhistory.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/patient/growth/charts.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/patient/immunizations.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/patient/summary.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/practice-dashboard/clinical-trials-login-redirect.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/practice-dashboard/clinical-trials.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/settings/favorite-diagnoses.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/summary/allergy.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/summary/behavioral.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/summary/device.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/summary/diagnosis.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/summary/family-health-history.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/summary/goal.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/summary/health-concern.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/summary/medication.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/summary/nutrition.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/summary/pmh.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/summary/risk-score.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/summary/sia.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/summary/smoking.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/summary/social-health.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/summary/social.js","cute-cats-tanisha/templates/components/clinical/addon/controllers/summary/summary-pmh.js","cute-cats-tanisha/templates/components/clinical/addon/helpers/age-on-date.js","cute-cats-tanisha/templates/components/clinical/addon/helpers/user-session-cache.js","cute-cats-tanisha/templates/components/clinical/addon/mixins/allergies-controller.js","cute-cats-tanisha/templates/components/clinical/addon/mixins/encounter-controller.js","cute-cats-tanisha/templates/components/clinical/addon/mixins/encounter-route.js","cute-cats-tanisha/templates/components/clinical/addon/mixins/immunizations-tooltip-support.js","cute-cats-tanisha/templates/components/clinical/addon/mixins/loading.js","cute-cats-tanisha/templates/components/clinical/addon/mixins/patient-list-data.js","cute-cats-tanisha/templates/components/clinical/addon/mixins/pmh-controller.js","cute-cats-tanisha/templates/components/clinical/addon/mixins/row-height-hack.js","cute-cats-tanisha/templates/components/clinical/addon/mixins/social-history-controller.js","cute-cats-tanisha/templates/components/clinical/addon/mixins/summary-controller.js","cute-cats-tanisha/templates/components/clinical/addon/mixins/summary-route.js","cute-cats-tanisha/templates/components/clinical/addon/mixins/vaccination-form.js","cute-cats-tanisha/templates/components/clinical/addon/mixins/with-allergies.js","cute-cats-tanisha/templates/components/clinical/addon/mixins/with-comments.js","cute-cats-tanisha/templates/components/clinical/addon/mixins/with-devices.js","cute-cats-tanisha/templates/components/clinical/addon/mixins/with-diagnoses.js","cute-cats-tanisha/templates/components/clinical/addon/mixins/with-health-concerns.js","cute-cats-tanisha/templates/components/clinical/addon/mixins/with-medications.js","cute-cats-tanisha/templates/components/clinical/addon/mixins/with-pmh.js","cute-cats-tanisha/templates/components/clinical/addon/models/advanced-directive.js","cute-cats-tanisha/templates/components/clinical/addon/models/allergen.js","cute-cats-tanisha/templates/components/clinical/addon/models/allergies-array.js","cute-cats-tanisha/templates/components/clinical/addon/models/allergy-reaction.js","cute-cats-tanisha/templates/components/clinical/addon/models/allergy-substance.js","cute-cats-tanisha/templates/components/clinical/addon/models/appointment.js","cute-cats-tanisha/templates/components/clinical/addon/models/assessment.js","cute-cats-tanisha/templates/components/clinical/addon/models/assessments/prolia-aesi-medication-history.js","cute-cats-tanisha/templates/components/clinical/addon/models/assessments/prolia-aesi-modal.js","cute-cats-tanisha/templates/components/clinical/addon/models/assessments/prolia-aesi-select-options.js","cute-cats-tanisha/templates/components/clinical/addon/models/assessments/prolia-aesi-task.js","cute-cats-tanisha/templates/components/clinical/addon/models/behavioral-health.js","cute-cats-tanisha/templates/components/clinical/addon/models/care-team-member.js","cute-cats-tanisha/templates/components/clinical/addon/models/care-team.js","cute-cats-tanisha/templates/components/clinical/addon/models/ccda-document-type.js","cute-cats-tanisha/templates/components/clinical/addon/models/ccda-template-component.js","cute-cats-tanisha/templates/components/clinical/addon/models/clinical-document.js","cute-cats-tanisha/templates/components/clinical/addon/models/contact-to-profile-adapter.js","cute-cats-tanisha/templates/components/clinical/addon/models/demographic-option.js","cute-cats-tanisha/templates/components/clinical/addon/models/diagnoses-array.js","cute-cats-tanisha/templates/components/clinical/addon/models/diagnosis.js","cute-cats-tanisha/templates/components/clinical/addon/models/dx-search-result.js","cute-cats-tanisha/templates/components/clinical/addon/models/ethnicity-option.js","cute-cats-tanisha/templates/components/clinical/addon/models/familyhealthhistory/familyhealthhistory.js","cute-cats-tanisha/templates/components/clinical/addon/models/familyhealthhistory/observation.js","cute-cats-tanisha/templates/components/clinical/addon/models/familyhealthhistory/relative.js","cute-cats-tanisha/templates/components/clinical/addon/models/favorite-diagnoses-settings.js","cute-cats-tanisha/templates/components/clinical/addon/models/favorite-diagnosis.js","cute-cats-tanisha/templates/components/clinical/addon/models/immunization-drug.js","cute-cats-tanisha/templates/components/clinical/addon/models/immunization-funding-source.js","cute-cats-tanisha/templates/components/clinical/addon/models/immunization-option-notification.js","cute-cats-tanisha/templates/components/clinical/addon/models/immunization-option-protection.js","cute-cats-tanisha/templates/components/clinical/addon/models/immunization-option-status.js","cute-cats-tanisha/templates/components/clinical/addon/models/immunization-registry-connection-property.js","cute-cats-tanisha/templates/components/clinical/addon/models/immunization-registry-connection.js","cute-cats-tanisha/templates/components/clinical/addon/models/immunization-registry-filter.js","cute-cats-tanisha/templates/components/clinical/addon/models/immunization-registry-notification-preference.js","cute-cats-tanisha/templates/components/clinical/addon/models/immunization-registry-option.js","cute-cats-tanisha/templates/components/clinical/addon/models/immunization-registry-property.js","cute-cats-tanisha/templates/components/clinical/addon/models/immunization-registry-result.js","cute-cats-tanisha/templates/components/clinical/addon/models/immunization-registry.js","cute-cats-tanisha/templates/components/clinical/addon/models/immunization-search.js","cute-cats-tanisha/templates/components/clinical/addon/models/immunization-transmission-status.js","cute-cats-tanisha/templates/components/clinical/addon/models/immunization.js","cute-cats-tanisha/templates/components/clinical/addon/models/medication-encounter.js","cute-cats-tanisha/templates/components/clinical/addon/models/medication.js","cute-cats-tanisha/templates/components/clinical/addon/models/medications-array.js","cute-cats-tanisha/templates/components/clinical/addon/models/past-medical-history-section.js","cute-cats-tanisha/templates/components/clinical/addon/models/patient-allergy.js","cute-cats-tanisha/templates/components/clinical/addon/models/patient-goal.js","cute-cats-tanisha/templates/components/clinical/addon/models/patient-health-concern.js","cute-cats-tanisha/templates/components/clinical/addon/models/patient-search-options.js","cute-cats-tanisha/templates/components/clinical/addon/models/patient-summary-sia.js","cute-cats-tanisha/templates/components/clinical/addon/models/patient-summary.js","cute-cats-tanisha/templates/components/clinical/addon/models/patient/activity-segment.js","cute-cats-tanisha/templates/components/clinical/addon/models/patient/order-preview.js","cute-cats-tanisha/templates/components/clinical/addon/models/patient/preview.js","cute-cats-tanisha/templates/components/clinical/addon/models/patient/result-preview.js","cute-cats-tanisha/templates/components/clinical/addon/models/personal-medical-history.js","cute-cats-tanisha/templates/components/clinical/addon/models/provider-profile-to-profile-adapter.js","cute-cats-tanisha/templates/components/clinical/addon/models/race-option.js","cute-cats-tanisha/templates/components/clinical/addon/models/recent-patient.js","cute-cats-tanisha/templates/components/clinical/addon/models/relationshiptype.js","cute-cats-tanisha/templates/components/clinical/addon/models/smoking-status-type.js","cute-cats-tanisha/templates/components/clinical/addon/models/smoking-status.js","cute-cats-tanisha/templates/components/clinical/addon/models/social-health-field.js","cute-cats-tanisha/templates/components/clinical/addon/models/social-health.js","cute-cats-tanisha/templates/components/clinical/addon/models/social-history-option.js","cute-cats-tanisha/templates/components/clinical/addon/models/social-history.js","cute-cats-tanisha/templates/components/clinical/addon/models/sortable-array.js","cute-cats-tanisha/templates/components/clinical/addon/models/sub-demographic-option.js","cute-cats-tanisha/templates/components/clinical/addon/models/vaccination-indication.js","cute-cats-tanisha/templates/components/clinical/addon/models/vaccination-reaction.js","cute-cats-tanisha/templates/components/clinical/addon/models/vaccination-rejection.js","cute-cats-tanisha/templates/components/clinical/addon/models/vaccination-route.js","cute-cats-tanisha/templates/components/clinical/addon/models/vaccination-site.js","cute-cats-tanisha/templates/components/clinical/addon/models/vaccination-source.js","cute-cats-tanisha/templates/components/clinical/addon/models/vaccination-unit.js","cute-cats-tanisha/templates/components/clinical/addon/models/vaccination.js","cute-cats-tanisha/templates/components/clinical/addon/models/vaccine-inventory.js","cute-cats-tanisha/templates/components/clinical/addon/models/vaccine-lookup-datum.js","cute-cats-tanisha/templates/components/clinical/addon/models/vaccine-lot-usage.js","cute-cats-tanisha/templates/components/clinical/addon/models/vaccine-manufacturer.js","cute-cats-tanisha/templates/components/clinical/addon/models/vaccine-type.js","cute-cats-tanisha/templates/components/clinical/addon/models/vfc-status.js","cute-cats-tanisha/templates/components/clinical/addon/models/vis-concept.js","cute-cats-tanisha/templates/components/clinical/addon/models/worksheet-question.js","cute-cats-tanisha/templates/components/clinical/addon/models/worksheet-responses.js","cute-cats-tanisha/templates/components/clinical/addon/repositories/assessments.js","cute-cats-tanisha/templates/components/clinical/addon/repositories/ccda-preview.js","cute-cats-tanisha/templates/components/clinical/addon/repositories/devices.js","cute-cats-tanisha/templates/components/clinical/addon/repositories/diagnoses.js","cute-cats-tanisha/templates/components/clinical/addon/repositories/family-health-history.js","cute-cats-tanisha/templates/components/clinical/addon/repositories/immunization-registry.js","cute-cats-tanisha/templates/components/clinical/addon/repositories/immunization.js","cute-cats-tanisha/templates/components/clinical/addon/repositories/interaction-alerts.js","cute-cats-tanisha/templates/components/clinical/addon/repositories/medications.js","cute-cats-tanisha/templates/components/clinical/addon/repositories/patient-demographics.js","cute-cats-tanisha/templates/components/clinical/addon/repositories/patient.js","cute-cats-tanisha/templates/components/clinical/addon/repositories/patients.js","cute-cats-tanisha/templates/components/clinical/addon/repositories/worksheets.js","cute-cats-tanisha/templates/components/clinical/addon/routes/allergy.js","cute-cats-tanisha/templates/components/clinical/addon/routes/detail-pane.js","cute-cats-tanisha/templates/components/clinical/addon/routes/device.js","cute-cats-tanisha/templates/components/clinical/addon/routes/diagnosis.js","cute-cats-tanisha/templates/components/clinical/addon/routes/encounter/allergy.js","cute-cats-tanisha/templates/components/clinical/addon/routes/encounter/diagnosis.js","cute-cats-tanisha/templates/components/clinical/addon/routes/encounter/health-concern.js","cute-cats-tanisha/templates/components/clinical/addon/routes/encounter/medication.js","cute-cats-tanisha/templates/components/clinical/addon/routes/encounter/pmh.js","cute-cats-tanisha/templates/components/clinical/addon/routes/encounter/risk-score.js","cute-cats-tanisha/templates/components/clinical/addon/routes/encounter/smoking.js","cute-cats-tanisha/templates/components/clinical/addon/routes/encounter/social.js","cute-cats-tanisha/templates/components/clinical/addon/routes/encounter/worksheet.js","cute-cats-tanisha/templates/components/clinical/addon/routes/goal.js","cute-cats-tanisha/templates/components/clinical/addon/routes/health-concern.js","cute-cats-tanisha/templates/components/clinical/addon/routes/medication.js","cute-cats-tanisha/templates/components/clinical/addon/routes/patient.js","cute-cats-tanisha/templates/components/clinical/addon/routes/patient/familyhealthhistory.js","cute-cats-tanisha/templates/components/clinical/addon/routes/patient/familyhistory.js","cute-cats-tanisha/templates/components/clinical/addon/routes/patient/growth/charts.js","cute-cats-tanisha/templates/components/clinical/addon/routes/patient/immunizations.js","cute-cats-tanisha/templates/components/clinical/addon/routes/patient/index.js","cute-cats-tanisha/templates/components/clinical/addon/routes/patient/summary.js","cute-cats-tanisha/templates/components/clinical/addon/routes/patients.js","cute-cats-tanisha/templates/components/clinical/addon/routes/patients/index.js","cute-cats-tanisha/templates/components/clinical/addon/routes/pmh.js","cute-cats-tanisha/templates/components/clinical/addon/routes/practice-dashboard/clinical-trials.js","cute-cats-tanisha/templates/components/clinical/addon/routes/risk-score.js","cute-cats-tanisha/templates/components/clinical/addon/routes/settings/favorite-diagnoses.js","cute-cats-tanisha/templates/components/clinical/addon/routes/smoking.js","cute-cats-tanisha/templates/components/clinical/addon/routes/social.js","cute-cats-tanisha/templates/components/clinical/addon/routes/summary/advance-directive.js","cute-cats-tanisha/templates/components/clinical/addon/routes/summary/allergy.js","cute-cats-tanisha/templates/components/clinical/addon/routes/summary/behavioral.js","cute-cats-tanisha/templates/components/clinical/addon/routes/summary/device.js","cute-cats-tanisha/templates/components/clinical/addon/routes/summary/diagnosis.js","cute-cats-tanisha/templates/components/clinical/addon/routes/summary/family-health-history.js","cute-cats-tanisha/templates/components/clinical/addon/routes/summary/goal.js","cute-cats-tanisha/templates/components/clinical/addon/routes/summary/health-concern.js","cute-cats-tanisha/templates/components/clinical/addon/routes/summary/medication.js","cute-cats-tanisha/templates/components/clinical/addon/routes/summary/nutrition.js","cute-cats-tanisha/templates/components/clinical/addon/routes/summary/pmh.js","cute-cats-tanisha/templates/components/clinical/addon/routes/summary/risk-score.js","cute-cats-tanisha/templates/components/clinical/addon/routes/summary/sia.js","cute-cats-tanisha/templates/components/clinical/addon/routes/summary/smoking.js","cute-cats-tanisha/templates/components/clinical/addon/routes/summary/social-health.js","cute-cats-tanisha/templates/components/clinical/addon/routes/summary/social.js","cute-cats-tanisha/templates/components/clinical/addon/routes/summary/summary-pmh.js","cute-cats-tanisha/templates/components/clinical/addon/routes/support-info.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/advanced-directive.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/allergy-reaction.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/allergy-substance.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/appointment.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/behavioral-health.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/care-team-member.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/care-team.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/ccda-document-type.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/ccda-template-component.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/clinical-document.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/demographic-option.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/ethnicity-option.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/favorite-diagnosis.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/immunization-drug.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/immunization-funding-source.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/immunization-option-notification.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/immunization-option-protection.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/immunization-option-status.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/immunization-registry-connection-property.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/immunization-registry-connection.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/immunization-registry-filter.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/immunization-registry-notification-preference.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/immunization-registry-option.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/immunization-registry-property.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/immunization-registry-result.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/immunization-registry.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/immunization-transmission-status.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/immunization.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/patient-allergy.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/patient-goal.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/patient-health-concern.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/patient-summary-sia.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/patient-summary.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/personal-medical-history.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/race-option.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/recent-patient.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/smoking-status-type.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/smoking-status.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/social-health-field.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/social-health.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/social-history-option.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/social-history.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/sub-demographic-option.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/vaccination-indication.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/vaccination-reaction.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/vaccination-rejection.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/vaccination-route.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/vaccination-site.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/vaccination-source.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/vaccination-unit.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/vaccination.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/vaccine-inventory.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/vaccine-lookup-datum.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/vaccine-lot-usage.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/vaccine-manufacturer.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/vaccine-type.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/vfc-status.js","cute-cats-tanisha/templates/components/clinical/addon/serializers/vis-concept.js","cute-cats-tanisha/templates/components/clinical/addon/services/transcript-comments.js","cute-cats-tanisha/templates/components/clinical/addon/templates/advance-directive.js","cute-cats-tanisha/templates/components/clinical/addon/templates/allergy.js","cute-cats-tanisha/templates/components/clinical/addon/templates/assessments/prolia-aesi-medication-history.js","cute-cats-tanisha/templates/components/clinical/addon/templates/assessments/prolia-aesi-modal.js","cute-cats-tanisha/templates/components/clinical/addon/templates/behavioral.js","cute-cats-tanisha/templates/components/clinical/addon/templates/cancel-delete-done-footer.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/-encounter-medication.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/add-patient-photo.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/advance-directive-detail.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/advance-directives.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/allergies-list-item.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/allergies-list-section.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/allergies-list.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/allergy-detail.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/allergy-free-text-message.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/assessment-modal.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/card-field.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/care-team-contact-form.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/care-team-detail.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/care-team-list.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/ccda-preview-modal-configurable.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/ccda-preview-modal-default.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/cds-alert.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/cds-alerts.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/create-clinical-document-modal.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/create-patient-clinical-document-modal.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/datetime-formatted.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/deprecated/allergy-free-text-message.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/deprecated/diagnoses-summary-list-item.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/deprecated/diagnoses-summary-list-section.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/deprecated/diagnoses-summary-list.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/device-detail.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnoses-assessment-list-read-only.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnoses-assessment-list.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnoses-flyout.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnoses-summary-list-item.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnoses-summary-list-section.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnoses-summary-list.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-codes.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-description.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-detail-form-icd10.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-detail-form.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-detail.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-display-selector-v2.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-display-selector.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-facets.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-refine.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-typeahead-item-icd10.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-typeahead-item.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/encounter-diagnoses-list-item.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/encounter-diagnoses-list-section.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/encounter-diagnoses-list.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/family-health-history-card.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/family-history-diagnosis-detail.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/family-history-list.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/family-history-relative-card.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/family-history-relative-detail.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/favorite-diagnoses-toolbox.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/frequent-diagnoses.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/frequent-medications.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/goal-detail.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/goals-section.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/health-concern-detail.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/add-immunization-details.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/add-immunization-historical.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/add-immunization-refused.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/add-immunization.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/download-immunizations.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/list-immunizations.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/print-immunizations.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/registry-results-forecast.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/registry-results-history.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/registry-search-form.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/registry-search.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/transmission-errors.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/vis-edition.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/interaction-alert-duplicate-therapies.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/interaction-alert-item.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/interaction-alerts.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/medication-detail-duplicates.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/medication-detail.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/medication-typeahead-item.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/medications-flyout.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/medications-grid.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/medications-plan-list-read-only.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/medications-plan-list.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/medications-summary-list-item.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/medications-summary-list.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/medline-plus-link.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/monograph-parser.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/osteoporosis-dexa-modal.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-alerts-popover-modal.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-education-link.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-email-popover.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-header-insurance-info.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-header-phone-column.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-header.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-health-concern-note.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-health-concerns-list-section.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-health-concerns-list.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-list-phone-number.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-persistent-navigation.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-pinned-note-provider-section.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-pinned-note.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-preview-encounter.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-preview-list.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-preview-order.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-preview-result.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-preview.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-previews.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-risk-score.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-search.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-search2-item.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-search2-selected-item.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-search2.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/pmh-detail.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/pmh-section.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/pmh-tab.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/prescription-item.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/prescriptions-list.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/previous-diagnoses.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/previous-diagnosis.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/previous-medication.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-access-history-section.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-advanced-directives-section.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-allergies-section.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-allergies.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-allergy-item.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-chart-section.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-device.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-devices-section.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-diagnoses-section.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-diagnoses.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-dropdown.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-encounter-header.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-encounter-section.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-external-image.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-facility-header.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-family-health-history-section.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-family-health-history.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-goals-section.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-goals.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-health-concerns-section.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-health-concerns.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-immunizations-section.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-medications-section.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-medications.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-patient-demographics.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-patient-header.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-patient-modal.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-patient-risk-score-section.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-patient-row.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-patient-sia-section.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-pmh-section.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-social-behavioral-health-section.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-social-history-section.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-vitals-history-section.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-worksheet.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/risk-score-detail.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/sia-detail.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/sia-worksheet/default-readonly.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/sia-worksheet/default-v2.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/sia-worksheet/default.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/sia-worksheet/depression-phq-2-readonly.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/sia-worksheet/depression-phq-2-v2.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/sia-worksheet/migraine-readonly.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/sia-worksheet/migraine-v2.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/sia-worksheet/migraine.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/sia-worksheet/transcript-event-fields.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/smoking-status-detail-v2.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/smoking-status-detail.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/social-behavioral-health.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/social-health/education-details.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/social-health/financial-resources-details.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/social-health/gender-identity-details.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/social-health/sexual-orientation-details.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/social-health/social-history-details.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/social-history-detail.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/social-history.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/summary-devices-list-item.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/summary-devices-list.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/summary-encounter-list.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/summary-sia-list-item.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/summary-sia-list.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/text-area-counter.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/transcript-comment.js","cute-cats-tanisha/templates/components/clinical/addon/templates/components/transcript-comments.js","cute-cats-tanisha/templates/components/clinical/addon/templates/dashboardPanelItem.js","cute-cats-tanisha/templates/components/clinical/addon/templates/dashboardPanelItemNoSubHeaders.js","cute-cats-tanisha/templates/components/clinical/addon/templates/device.js","cute-cats-tanisha/templates/components/clinical/addon/templates/diagnosis.js","cute-cats-tanisha/templates/components/clinical/addon/templates/encounter/worksheet.js","cute-cats-tanisha/templates/components/clinical/addon/templates/family-health-history-details.js","cute-cats-tanisha/templates/components/clinical/addon/templates/goal.js","cute-cats-tanisha/templates/components/clinical/addon/templates/health-concern.js","cute-cats-tanisha/templates/components/clinical/addon/templates/medication-detail-pane-footer.js","cute-cats-tanisha/templates/components/clinical/addon/templates/medication-detail-pane-toolbox.js","cute-cats-tanisha/templates/components/clinical/addon/templates/medication.js","cute-cats-tanisha/templates/components/clinical/addon/templates/nutrition.js","cute-cats-tanisha/templates/components/clinical/addon/templates/patient.js","cute-cats-tanisha/templates/components/clinical/addon/templates/patient/-download-immunization-record.js","cute-cats-tanisha/templates/components/clinical/addon/templates/patient/-search-result-header.js","cute-cats-tanisha/templates/components/clinical/addon/templates/patient/-search-result.js","cute-cats-tanisha/templates/components/clinical/addon/templates/patient/familyhistory.js","cute-cats-tanisha/templates/components/clinical/addon/templates/patient/growth/charts.js","cute-cats-tanisha/templates/components/clinical/addon/templates/patient/immunizations.js","cute-cats-tanisha/templates/components/clinical/addon/templates/patient/loading.js","cute-cats-tanisha/templates/components/clinical/addon/templates/patient/summary.js","cute-cats-tanisha/templates/components/clinical/addon/templates/pmh.js","cute-cats-tanisha/templates/components/clinical/addon/templates/practice-dashboard/clinical-trials-login-redirect.js","cute-cats-tanisha/templates/components/clinical/addon/templates/practice-dashboard/clinical-trials.js","cute-cats-tanisha/templates/components/clinical/addon/templates/risk-score.js","cute-cats-tanisha/templates/components/clinical/addon/templates/settings/favorite-diagnoses.js","cute-cats-tanisha/templates/components/clinical/addon/templates/sia.js","cute-cats-tanisha/templates/components/clinical/addon/templates/smoking.js","cute-cats-tanisha/templates/components/clinical/addon/templates/social-health.js","cute-cats-tanisha/templates/components/clinical/addon/templates/social.js","cute-cats-tanisha/templates/components/clinical/addon/templates/summary-pmh.js","cute-cats-tanisha/templates/components/clinical/addon/templates/support-info.js","cute-cats-tanisha/templates/components/clinical/addon/templates/support/pompe.js","cute-cats-tanisha/templates/components/clinical/addon/transforms/patient-activity-segment-array.js","cute-cats-tanisha/templates/components/clinical/addon/util/assessments/prolia-aesi-modal.js","cute-cats-tanisha/templates/components/clinical/addon/util/patient-search.js","cute-cats-tanisha/templates/components/clinical/addon/util/transcript-comments.js","cute-cats-tanisha/templates/components/clinical/index.js","cute-cats-tanisha/templates/components/image-row.js","cute-cats-tanisha/templates/components/image-tile.js","cute-cats-tanisha/templates/full-screen.js","cute-cats-tanisha/templates/homepage.js","cute-cats-tanisha/templates/index.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-config.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["'use strict';\n\n\n","define('cute-cats-tanisha/app', ['exports', 'cute-cats-tanisha/resolver', 'ember-load-initializers', 'cute-cats-tanisha/config/environment'], function (exports, _resolver, _emberLoadInitializers, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  const App = Ember.Application.extend({\n    modulePrefix: _environment.default.modulePrefix,\n    podModulePrefix: _environment.default.podModulePrefix,\n    Resolver: _resolver.default\n  });\n\n  (0, _emberLoadInitializers.default)(App, _environment.default.modulePrefix);\n\n  exports.default = App;\n});","define('cute-cats-tanisha/components/image-row', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({});\n});","define('cute-cats-tanisha/components/image-tile', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        classNames: ['cat-tile--inline-display']\n    });\n});","define('cute-cats-tanisha/components/vertical-collection', ['exports', '@html-next/vertical-collection/components/vertical-collection/component'], function (exports, _component) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _component.default;\n    }\n  });\n});","define('cute-cats-tanisha/components/welcome-page', ['exports', 'ember-welcome-page/components/welcome-page'], function (exports, _welcomePage) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _welcomePage.default;\n    }\n  });\n});","define('cute-cats-tanisha/controllers/full-screen', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        formattedImgurLink: Ember.computed('model', function () {\n            const model = this.get('model');\n            if (model) {\n                return `https://i.imgur.com/${model.imageId}.jpg`;\n            }\n            return null;\n        })\n    });\n});","define('cute-cats-tanisha/controllers/homepage', ['exports', 'ember-concurrency'], function (exports, _emberConcurrency) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    const NUM_ROWS_ON_LOAD_MORE = 20;\n    const CAT_SERVER_URL = 'http://127.0.0.1:8000/';\n\n    exports.default = Ember.Controller.extend({\n        ajax: Ember.inject.service(),\n        cats: [],\n        rows: [],\n        lastImageIndex: 0,\n        rowsToGenerate: NUM_ROWS_ON_LOAD_MORE,\n        showLoadingMoreCatsMessage: Ember.computed('loadCats.isRunning', 'rows.length', function () {\n            return this.get('loadCats.isRunning') && this.get('rows.length') > 0;\n        }),\n        landingMessage: 'LOADING CUTE CATS...',\n        init() {\n            this._super();\n            this.get('loadCats').perform();\n        },\n        loadCats: (0, _emberConcurrency.task)(function* () {\n            var url = CAT_SERVER_URL;\n            yield $.ajax({\n                url: url,\n                type: 'GET',\n                dataType: 'json'\n            }).then(response => {\n                const cats = this.get('cats');\n                this.set('cats', cats.pushObjects(response));\n                this.generateRows();\n            }).fail(error => {\n                this.set('landingMessage', `OH NO! WE CAN'T FIND THE CATS. TRY REFRESHING THE PAGE.`);\n            });\n        }),\n        generateRows() {\n            const cats = this.get('cats');\n            const rows = this.get('rows');\n            const lastImageIndex = this.get('lastImageIndex');\n            let countRows = this.get('rowsToGenerate');\n            let i = lastImageIndex;\n\n            for (i = lastImageIndex; countRows > 0 && i + 10 <= cats.length;) {\n                rows.pushObject(cats.slice(i, i + 10));\n                i = i + 10;\n                countRows = countRows - 1;\n            }\n            if (countRows === 0) {\n                this.set('rowsToGenerate', NUM_ROWS_ON_LOAD_MORE);\n            } else {\n                this.set('rowsToGenerate', countRows);\n                this.get('loadCats').perform();\n            }\n            this.set('rows', rows);\n            this.set('lastImageIndex', i);\n        },\n        fetchMoreRows() {\n            const lastImageIndex = this.get('lastImageIndex');\n            const cats = this.get('cats');\n\n            if (lastImageIndex + 10 > cats.length) {\n                this.get('loadCats').perform();\n            } else {\n                this.generateRows();\n            }\n        },\n        actions: {\n            loadMore() {\n                this.fetchMoreRows();\n            },\n            viewFullScreen(url) {\n                const imgurId = url.match(/imgur.com\\/(.{7})/)[1];\n                this.transitionToRoute('full-screen', imgurId);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/helpers/app-version', ['exports', 'cute-cats-tanisha/config/environment', 'ember-cli-app-version/utils/regexp'], function (exports, _environment, _regexp) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.appVersion = appVersion;\n  function appVersion(_, hash = {}) {\n    const version = _environment.default.APP.version;\n    // e.g. 1.0.0-alpha.1+4jds75hf\n\n    // Allow use of 'hideSha' and 'hideVersion' For backwards compatibility\n    let versionOnly = hash.versionOnly || hash.hideSha;\n    let shaOnly = hash.shaOnly || hash.hideVersion;\n\n    let match = null;\n\n    if (versionOnly) {\n      if (hash.showExtended) {\n        match = version.match(_regexp.versionExtendedRegExp); // 1.0.0-alpha.1\n      }\n      // Fallback to just version\n      if (!match) {\n        match = version.match(_regexp.versionRegExp); // 1.0.0\n      }\n    }\n\n    if (shaOnly) {\n      match = version.match(_regexp.shaRegExp); // 4jds75hf\n    }\n\n    return match ? match[0] : version;\n  }\n\n  exports.default = Ember.Helper.helper(appVersion);\n});","define('cute-cats-tanisha/helpers/cancel-all', ['exports', 'ember-concurrency/helpers/cancel-all'], function (exports, _cancelAll) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _cancelAll.default;\n    }\n  });\n});","define('cute-cats-tanisha/helpers/perform', ['exports', 'ember-concurrency/helpers/perform'], function (exports, _perform) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _perform.default;\n    }\n  });\n});","define('cute-cats-tanisha/helpers/pluralize', ['exports', 'ember-inflector/lib/helpers/pluralize'], function (exports, _pluralize) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _pluralize.default;\n});","define('cute-cats-tanisha/helpers/singularize', ['exports', 'ember-inflector/lib/helpers/singularize'], function (exports, _singularize) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _singularize.default;\n});","define('cute-cats-tanisha/helpers/task', ['exports', 'ember-concurrency/helpers/task'], function (exports, _task) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _task.default;\n    }\n  });\n});","define('cute-cats-tanisha/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'cute-cats-tanisha/config/environment'], function (exports, _initializerFactory, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  let name, version;\n  if (_environment.default.APP) {\n    name = _environment.default.APP.name;\n    version = _environment.default.APP.version;\n  }\n\n  exports.default = {\n    name: 'App Version',\n    initialize: (0, _initializerFactory.default)(name, version)\n  };\n});","define('cute-cats-tanisha/initializers/container-debug-adapter', ['exports', 'ember-resolver/resolvers/classic/container-debug-adapter'], function (exports, _containerDebugAdapter) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'container-debug-adapter',\n\n    initialize() {\n      let app = arguments[1] || arguments[0];\n\n      app.register('container-debug-adapter:main', _containerDebugAdapter.default);\n      app.inject('container-debug-adapter:main', 'namespace', 'application:main');\n    }\n  };\n});","define('cute-cats-tanisha/initializers/debug', ['exports', '@html-next/vertical-collection/-debug'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'vertical-collection-debug',\n    initialize() {}\n  };\n});","define('cute-cats-tanisha/initializers/ember-concurrency', ['exports', 'ember-concurrency/initializers/ember-concurrency'], function (exports, _emberConcurrency) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _emberConcurrency.default;\n    }\n  });\n});","define('cute-cats-tanisha/initializers/ember-data', ['exports', 'ember-data/setup-container', 'ember-data'], function (exports, _setupContainer) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'ember-data',\n    initialize: _setupContainer.default\n  };\n});","define('cute-cats-tanisha/initializers/export-application-global', ['exports', 'cute-cats-tanisha/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.initialize = initialize;\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (_environment.default.exportApplicationGlobal !== false) {\n      var theGlobal;\n      if (typeof window !== 'undefined') {\n        theGlobal = window;\n      } else if (typeof global !== 'undefined') {\n        theGlobal = global;\n      } else if (typeof self !== 'undefined') {\n        theGlobal = self;\n      } else {\n        // no reasonable global, just bail\n        return;\n      }\n\n      var value = _environment.default.exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = Ember.String.classify(_environment.default.modulePrefix);\n      }\n\n      if (!theGlobal[globalName]) {\n        theGlobal[globalName] = application;\n\n        application.reopen({\n          willDestroy: function () {\n            this._super.apply(this, arguments);\n            delete theGlobal[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports.default = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n});","define('cute-cats-tanisha/instance-initializers/ember-data', ['exports', 'ember-data/initialize-store-service'], function (exports, _initializeStoreService) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'ember-data',\n    initialize: _initializeStoreService.default\n  };\n});","define('cute-cats-tanisha/resolver', ['exports', 'ember-resolver'], function (exports, _emberResolver) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _emberResolver.default;\n});","define('cute-cats-tanisha/router', ['exports', 'cute-cats-tanisha/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  const Router = Ember.Router.extend({\n    location: _environment.default.locationType,\n    rootURL: _environment.default.rootURL\n  });\n\n  Router.map(function () {\n    this.route('homepage');\n    this.route('full-screen', { path: '/:imageId' });\n  });\n\n  exports.default = Router;\n});","define('cute-cats-tanisha/routes/full-screen', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n        model(params) {\n            return params;\n        }\n    });\n});","define('cute-cats-tanisha/routes/homepage', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({});\n});","define('cute-cats-tanisha/routes/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    beforeModel() {\n      this.replaceWith('homepage');\n    }\n  });\n});","define('cute-cats-tanisha/services/ajax', ['exports', 'ember-ajax/services/ajax'], function (exports, _ajax) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _ajax.default;\n    }\n  });\n});","define(\"cute-cats-tanisha/templates/application\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"c7rcFmHC\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"container\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"body\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[21,\\\"outlet\\\"],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/application.hbs\" } });\n});","define('cute-cats-tanisha/templates/components/acceptance/care-plan-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/blur-auto-saving-text-area'], function (_qunit, _moduleForAcceptanceAuth, _blurAutoSavingTextArea) {\n    'use strict';\n\n    const ENCOUNTER_GUID = '7022d94f-d70a-4722-a205-dac898cf9f69';\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const CARE_PLAN_TEXT = 'I love it when a plan comes together.';\n    const CARE_PLAN_NULL_DISPLAY = 'No Care plan recorded.';\n    const CARE_PLAN = '#dFinalizeCarePlan';\n    const TEXT_AREA = `${CARE_PLAN} textarea`;\n    const CARE_PLAN_COMPONENT = `${CARE_PLAN} .auto-saving-text-area`;\n    const READ_ONLY_TEXT = `${CARE_PLAN} .comment-event-area > p:first`;\n    const RECORD_BUTTON = `${CARE_PLAN} .btn.heading-action:first`;\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Encounter care plan');\n\n    (0, _qunit.test)('Can update and remove care plan', async assert => {\n        let callCount = 0;\n        assert.expect(7);\n        server.post(`ChartingEndpoint/api/v3/patients/${PATIENT_GUID}/transcriptEvents/`, ({ db }, request) => {\n            callCount++;\n            const event = JSON.parse(request.requestBody);\n            if (callCount === 1) {\n                assert.equal(event.comments, CARE_PLAN_TEXT, 'The care plan was saved with the correct text');\n            } else {\n                assert.equal(event.comments, '', 'The care plan was saved with empty text');\n            }\n            return event;\n        });\n        await visit(`/PF/charts/patients/${PATIENT_GUID}/encounter/${ENCOUNTER_GUID}`);\n        // ensure care plan section is not hidden\n        await toggleEncounterSections(['Care plan'], true);\n        assert.equal(find(`${CARE_PLAN} .comment-event-area`).length, 1, 'The care plan is rendered on the page');\n        await click(RECORD_BUTTON);\n        // Confirm that care plan controls show up, and enter information\n        assert.equal(find('#dFinalizeCarePlan .font-size-button:visible').length, 2, 'Care plan font controls appear in edit mode');\n        assert.ok(find(`${TEXT_AREA}:visible`).length, 'Care plan text area control appears in edit mode');\n        fillIn(TEXT_AREA, CARE_PLAN_TEXT);\n        await (0, _blurAutoSavingTextArea.default)(CARE_PLAN_COMPONENT);\n        assert.equal(find(READ_ONLY_TEXT).text(), CARE_PLAN_TEXT, 'Care plan updated text is displayed when done editing');\n\n        // Remove info, confirm that changes persist\n        await click(RECORD_BUTTON);\n        fillIn(TEXT_AREA, '');\n        await (0, _blurAutoSavingTextArea.default)(CARE_PLAN_COMPONENT);\n        assert.equal(find(READ_ONLY_TEXT).text(), CARE_PLAN_NULL_DISPLAY, 'Care plan is displayed properly when text is removed');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/cds-alerts-deep-link-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth'], function (_qunit, _moduleForAcceptanceAuth) {\n    'use strict';\n\n    const ENCOUNTER_GUID = '7022d94f-d70a-4722-a205-dac898cf9f69';\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | CDS alert linking');\n\n    // Deep links mean action attributes.\n    (0, _qunit.test)('Cds Alerts with with deep links contain data-ember-action attribtues', async assert => {\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/encounter/' + ENCOUNTER_GUID);\n        const vaccineLink = find('a:contains(\"Add vaccine\")');\n\n        assert.ok(typeof vaccineLink.attr('data-ember-action') !== 'undefined', 'action attribute exists');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/cds-alerts-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth'], function (_qunit, _moduleForAcceptanceAuth) {\n    'use strict';\n\n    const ENCOUNTER_GUID = '7022d94f-d70a-4722-a205-dac898cf9f69';\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    let store;\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | CDS alert functionality', {\n        beforeEach() {\n            store = this.application.__container__.lookup('service:store');\n        }\n    });\n\n    (0, _qunit.test)('Cds Alerts Render', async assert => {\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/encounter/' + ENCOUNTER_GUID);\n        assert.equal(find('.cdsAccordion .cds-alerts').length, 1, 'There is 1 CDS alert container.');\n        assert.ok(find('.cds-alert-text').length > 0, 'There is more than one CDS alert.');\n    });\n\n    (0, _qunit.test)('A CDS alert is dismissible.', async assert => {\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/encounter/' + ENCOUNTER_GUID);\n\n        // Assert there are 6 CDS alerts to start, which there are based on the fixture data. Using .ember-accordion-container as the seleector\n        assert.equal(find('.ember-accordion-container').length, 5, 'There are 5 CDS alert containers');\n\n        // Click to dismiss the last alert\n        await click('.ember-accordion-container:last-child .ember-accordion-header .icon-go-away-small');\n\n        // Assert there are then 5 CDS alerts.\n        assert.equal(find('.ember-accordion-container').length, 4, 'There are 4 CDS alert containers');\n    });\n\n    (0, _qunit.test)('A cds alert according can be expanded', async assert => {\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/encounter/' + ENCOUNTER_GUID);\n        assert.ok(find('.ember-accordion-expand-icon:first'), 'The first expand icon exists.');\n\n        // none before click\n        assert.equal(find('.ember-accordion-pane-content').length, 0, 'No content panes are visible before clicking icon.');\n\n        await click('.ember-accordion-expand-icon:first');\n        assert.equal(find('.ember-accordion-pane-content').length, 1, 'One content pane is visible after clicking icon.');\n    });\n\n    (0, _qunit.test)('Cds alert with infobutton links', async assert => {\n        let cdsAlertCallCount = 0;\n        let infobuttonUrl;\n        const patientPracticeGuid = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n        const transcriptGuid = '7022d94f-d70a-4722-a205-dac898cf9f69';\n        const alertText = 'Diabetes Care: Patient due for retina exam.';\n        const cdsAccordion = 'div.cds-alert-text-custom-action';\n        const refreshButton = 'a:contains(Refresh):eq(1)';\n        const intendedUrl = 'https://apps.nlm.nih.gov/medlineplus/services/mpconnect.cfm?mainSearchCriteria.v.cs=2.16.840.1.113883.6.90&mainSearchCriteria.v.c=E11.9';\n        const infobuttonParams = [{\n            paramName: 'mainSearchCriteria.v.cs',\n            paramValue: '2.16.840.1.113883.6.90'\n        }, {\n            paramName: 'mainSearchCriteria.v.c',\n            paramValue: 'E11.9'\n        }];\n\n        server.get('PracticeEndpoint/api/v1/preferences/practice', () => ({ preferences: { 'infobutton.BaseUrl': null } }));\n\n        server.get('AlertEndpoint/api/v1/CdsAlerts/:patientPracticeGuid/:transcriptGuid', () => {\n            const params = cdsAlertCallCount < 2 ? infobuttonParams : [];\n            cdsAlertCallCount++;\n\n            return [{\n                alertIdentifier: 'DiabetesCare.Eye',\n                ruleId: 6,\n                citations: [],\n                developer: 'Practice Fusion, Inc.',\n                sponsor: '',\n                link: 'https://www.qualitymeasures.ahrq.gov/summaries/summary/49720',\n                source: 'Practice Fusion, Inc.',\n                error: false,\n                infobutton: params,\n                alertText\n            }];\n        });\n\n        await visit(`/PF/charts/patients/${patientPracticeGuid}/encounter/${transcriptGuid}`);\n        await click(cdsAccordion);\n        infobuttonUrl = find('a:contains(Diagnostic/Therapeutic Information)')[0].href;\n\n        assert.throws(findWithAssert('a:contains(Diagnostic/Therapeutic Information)'), 'Infobutton link appears when cds alert contains infobutton params');\n        assert.equal(infobuttonUrl, intendedUrl, 'Infobutton defualts to Medline plus when practice preference is empty and link is constructed correctly');\n        Ember.run(() => store.peekRecord('practice-preference', 'infobutton.BaseUrl').set('value', 'http://www.uptodate.com/online/content/search.do?'));\n\n        await click(refreshButton);\n        await click('div.cds-header');\n        await delayAsync(100);\n        await click(cdsAccordion);\n        infobuttonUrl = find('a:contains(Diagnostic/Therapeutic Information)')[0].href;\n        assert.ok(infobuttonUrl.indexOf('www.uptodate.com') >= 0, 'Base url is updated when practice preference is set');\n        await click(refreshButton);\n        await click('div.cds-header');\n        await delayAsync(100);\n        await click(cdsAccordion);\n        assert.equal(find('a:contains(Diagnostic/Therapeutic Information)').length, 0, 'Infobutton link does not appear when cds alert does not contain infobutton params');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/cognitive-status-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/blur-auto-saving-text-area'], function (_qunit, _moduleForAcceptanceAuth, _blurAutoSavingTextArea) {\n    'use strict';\n\n    const TRANSCRIPT_GUID = 'd3bfaa39-52ca-4069-bb27-6655a9a92ebd';\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const COGNITIVE_STATUS_TEXT = 'I think therefore I am. (' + Date() + ')';\n    const FUNCTIONAL_STATUS_TEXT = 'We\\'re fine, uh we\\'re all fine here now. Situation normal. How are you? (' + Date() + ')';\n    const OBSERVATIONS = '#dFinalizeObservations';\n    const RECORD_BUTTON = `${OBSERVATIONS} .btn.heading-action`;\n    const FIRST_BUTTON = `${RECORD_BUTTON}:first`;\n    const OBSERVATIONS_COMPONENT = `${OBSERVATIONS} .auto-saving-text-area`;\n    const TEXT_AREA = `${OBSERVATIONS} textarea`;\n    const CHECKBOX = `${OBSERVATIONS} .pf-input--checkbox:first`;\n    const ENCOUNTER_URL = `/PF/charts/patients/${PATIENT_GUID}/encounter/${TRANSCRIPT_GUID}`;\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Cognitive and Functional Status');\n\n    (0, _qunit.test)('Can update and remove cognitive and functional status', async assert => {\n        let callCount = 0;\n        assert.expect(6);\n        server.put(`ChartingEndpoint/api/v3/patients/${PATIENT_GUID}/transcriptEvents/:transcriptEvent`, ({ db }, request) => {\n            const event = JSON.parse(request.requestBody);\n            callCount++;\n\n            switch (callCount) {\n                case 1:\n                    assert.equal(event.comments, FUNCTIONAL_STATUS_TEXT, 'The functional status was saved with the correct text');\n                    break;\n                case 2:\n                    assert.equal(event.comments, COGNITIVE_STATUS_TEXT, 'The cognitive status was saved with the correct text');\n                    break;\n                case 3:\n                    assert.ok(event.resultCode, 'The cognitive status was saved due to \"No Impairment\"');\n                    assert.equal(event.resultCode.codeValue, '66557003', 'The \"No Impairment\" result SNOMED code is 66557003');\n                    break;\n                case 4:\n                    assert.notOk(event.resultCode, 'The \"No Impairment\" result code was removed');\n                    break;\n            }\n\n            return event;\n        });\n\n        await visit(ENCOUNTER_URL);\n        await toggleEncounterSections(['Observations'], true);\n        assert.equal(find(RECORD_BUTTON).length, 2, 'There are 2 observational status entries');\n        await click(FIRST_BUTTON);\n        // Confirm that functional status controls show up, and enter information\n        fillIn(TEXT_AREA, FUNCTIONAL_STATUS_TEXT);\n        (0, _blurAutoSavingTextArea.default)(`${OBSERVATIONS_COMPONENT}:first`);\n        await click(`${RECORD_BUTTON}:last`);\n        // Confirm that cognitive status controls show up, and enter information\n        fillIn(TEXT_AREA, COGNITIVE_STATUS_TEXT);\n        (0, _blurAutoSavingTextArea.default)(`${OBSERVATIONS_COMPONENT}:last`);\n        await click(FIRST_BUTTON);\n        // Test that clicking on the No Impairment checkbox saves properly\n        await click(CHECKBOX);\n        await (0, _blurAutoSavingTextArea.default)(`${OBSERVATIONS_COMPONENT}:first`);\n        await click(FIRST_BUTTON);\n        await click(CHECKBOX);\n        (0, _blurAutoSavingTextArea.default)(`${OBSERVATIONS_COMPONENT}:first`);\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/copy-link-to-patient-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element'], function (_qunit, _moduleForAcceptanceAuth, _dataElement) {\n    'use strict';\n\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const ACTIONS_MENU_ITEM = `${(0, _dataElement.default)('actions-menu-options')} a:contains('Copy link to patient')`;\n    const MODAL_ELEMENT = '.modal.info.copy-modal';\n    const EXPECTED_LINK = '/PF/charts/patients/ecd212c3-5c99-499e-b3c6-b2645b8a4c98/summary';\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Copy link to patient - v2');\n\n    (0, _qunit.test)('Copy link to patient displays properly in summary', async assert => {\n        assert.expect(5);\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/summary/');\n        await click((0, _dataElement.default)('actions-menu'));\n        await click(ACTIONS_MENU_ITEM);\n        assert.ok(find(`${MODAL_ELEMENT}:visible`).length > 0, 'Copy link to patient modal appears');\n        assert.ok(find(`${MODAL_ELEMENT} header:contains('Copy a link to this patient')`).length > 0, 'Copy link to patient modal has correct title');\n        assert.ok(find(`${MODAL_ELEMENT} .copy-modal-content:contains('Copy the link below to access this patient directly in the future')`).length > 0, 'Copy link to patient modal shows correct instructions');\n        assert.ok(find(`${MODAL_ELEMENT} .copy-modal-content textarea`).val().indexOf(EXPECTED_LINK) !== -1, 'Copy link to patient modal contains correct link in text area');\n\n        await click(`${MODAL_ELEMENT} .btn-primary`);\n        assert.ok(find(`${MODAL_ELEMENT}:visible`).length < 1, 'Copy link to patient modal closed properly');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/customize-charting-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth'], function (_qunit, _moduleForAcceptanceAuth) {\n    'use strict';\n\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98',\n          TRANSCRIPT_GUID = '7022d94f-d70a-4722-a205-dac898cf9f69',\n          ENCOUNTER_URL = '/PF/charts/patients/' + PATIENT_GUID + '/encounter/' + TRANSCRIPT_GUID,\n          GOTO_BTN = `[data-toggle='dropdown']:contains('Go to')`,\n          CUSTOMIZE_BTN = `a:contains('Customize')`,\n          FLOWSHEETS_CHECKBOX = `.pf-input--checkbox-label:contains('Flowsheets')`,\n          HEALTHCONCERNS_CHECKBOX = `.pf-input--checkbox-label:contains('Health concerns')`,\n          DONE_CUSTOMIZING_BTN = `.customize-links a:contains('Done')`,\n          FLOWSHEET_ENCOUNTER_LIST = '.flowsheet-list',\n          HEALTHCONCERNS_LIST = '.patient-health-concerns-list',\n          CUSTOMIZE_LIST = '.control-bar .dropdown-menu .pf-input--checkbox-label',\n          FLOWSHEETS_GOTO_LINK = `a:contains('Flowsheets')`,\n          HEALTHCONCERNS_GOTO_LINK = `a:contains('Health concerns')`;\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Customize summary and encounter - v2');\n\n    (0, _qunit.test)('Customize Charting - Encounter test', async assert => {\n        const customizeOptionsArr = ['Encounter details', 'Chief complaint', 'Health concerns', 'Flowsheets', 'Growth charts', 'Diagnoses', 'Allergies', 'Medications', 'Family history', 'Immunizations', 'Social history', 'Past medical history', 'Note - Subjective', 'Note - Objective', 'Note - Assessment', 'Note - Plan', 'Orders', 'Attachments', 'Procedures (S/I/A)', 'Observations', 'Quality of care', 'Care plan', 'Referrals', 'Superbill'];\n        await visit(ENCOUNTER_URL);\n        assert.ok(find(FLOWSHEET_ENCOUNTER_LIST).length > 0, 'Flowsheet encounter list renders properly upon load of the encounter.');\n        await click(GOTO_BTN);\n        await click(CUSTOMIZE_BTN);\n        const customizeOpts = find(CUSTOMIZE_LIST);\n        const customizeOptsLength = customizeOpts.length;\n        let hasExpectedCustomizableOptions = true;\n        for (let i = 0; i < customizeOptsLength; i++) {\n            if (find(customizeOpts[i]).text().trim() !== customizeOptionsArr[i]) {\n                hasExpectedCustomizableOptions = false;\n            }\n        }\n        assert.ok(hasExpectedCustomizableOptions, 'Customize encounter options are rendered properly.');\n\n        await click(FLOWSHEETS_CHECKBOX);\n        await click(DONE_CUSTOMIZING_BTN);\n        assert.equal(find(FLOWSHEET_ENCOUNTER_LIST).length, 0, 'Flowsheet encounter list is no longer visible on encounter after customization.');\n        await click(GOTO_BTN);\n        assert.equal(find('.section-search ' + FLOWSHEETS_GOTO_LINK).attr('class'), 'disabled', 'Flowsheets link from goto dropdown menu is now disabled on encounter.');\n        await click(CUSTOMIZE_BTN);\n        await click(FLOWSHEETS_CHECKBOX);\n        await click(DONE_CUSTOMIZING_BTN);\n        assert.equal(find('.section-search ' + FLOWSHEETS_GOTO_LINK).attr('class'), undefined, 'Flowsheets link from goto dropdown menu is no longer disabled on encounter.');\n        assert.ok(find(FLOWSHEET_ENCOUNTER_LIST).length > 0, 'Flowsheet encounter list is visible again on encounter after customization.');\n\n        assert.equal(find(HEALTHCONCERNS_LIST).length, 0, 'Health Concerns section hidden on encounter by default (intended for new users) before customization.');\n        await click(GOTO_BTN);\n        await click(CUSTOMIZE_BTN);\n        await click(HEALTHCONCERNS_CHECKBOX);\n        await click(DONE_CUSTOMIZING_BTN);\n        assert.ok(find(HEALTHCONCERNS_LIST).length > 0, 'Health Concerns section shown on encounter after customization.');\n        await click(GOTO_BTN);\n        assert.equal(find('.section-search ' + HEALTHCONCERNS_GOTO_LINK).attr('class'), undefined, 'Health concerns link from goto dropdown menu is enabled on encounter.');\n        await click(CUSTOMIZE_BTN);\n        await click(HEALTHCONCERNS_CHECKBOX);\n        await click(DONE_CUSTOMIZING_BTN);\n        assert.equal(find('.section-search ' + HEALTHCONCERNS_GOTO_LINK).attr('class'), 'disabled', 'Health concerns link from goto dropdown menu is disabled again on encounter.');\n        assert.equal(find(HEALTHCONCERNS_LIST).length, 0, 'Health concerns list is hidden again on encounter after customization.');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/deprecated/copy-link-to-patient-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element'], function (_qunit, _moduleForAcceptanceAuth, _dataElement) {\n    'use strict';\n\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const ACTIONS_MENU_ITEM = `${(0, _dataElement.default)('actions-menu-options')} a:contains('Copy link to patient')`;\n    const MODAL_ELEMENT = '.modal.info.copy-modal';\n    const EXPECTED_LINK = '/PF/charts/patients/ecd212c3-5c99-499e-b3c6-b2645b8a4c98/summary';\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Copy link to patient');\n\n    (0, _qunit.test)('Copy link to patient displays properly in summary', async assert => {\n        assert.expect(5);\n        await visit(`/PF/charts/patients/${PATIENT_GUID}/summary/`);\n        await click((0, _dataElement.default)('actions-menu'));\n        await click(ACTIONS_MENU_ITEM);\n        assert.ok(find(`${MODAL_ELEMENT}:visible`).length > 0, 'Copy link to patient modal appears');\n        assert.ok(find(`${MODAL_ELEMENT} header:contains('Copy a link to this patient')`).length > 0, 'Copy link to patient modal has correct title');\n        assert.ok(find(`${MODAL_ELEMENT} .copy-modal-content:contains('Copy the link below to access this patient directly in the future')`).length > 0, 'Copy link to patient modal shows correct instructions');\n        assert.ok(find(`${MODAL_ELEMENT} .copy-modal-content textarea`).val().indexOf(EXPECTED_LINK) !== -1, 'Copy link to patient modal contains correct link in text area');\n\n        await click(`${MODAL_ELEMENT} .btn-primary`);\n        assert.ok(find(`${MODAL_ELEMENT}:visible`).length < 1, 'Copy link to patient modal closed properly');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/deprecated/encounter-creation-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element', 'ember-cli-mirage'], function (_qunit, _moduleForAcceptanceAuth, _dataElement, _emberCliMirage) {\n    'use strict';\n\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const SUMMARY_URL = '/PF/charts/patients/' + PATIENT_GUID + '/summary';\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Visual - Core - Charting | Create encounter from summary');\n\n    (0, _qunit.test)('Encounter - Create From Summary with Proper Date', async assert => {\n        const currentDate = moment().startOf('day').format('MM/DD/YYYY');\n        let dateOfService;\n        server.post('ChartingEndpoint/api/v3/patients/:patientPracticeGuid/encounters', ({ db }, request) => {\n            const data = JSON.parse(request.requestBody);\n            data.transcriptGuid = 'NEW_TRANSCRIPT_GUID';\n            dateOfService = data.dateOfServiceUtc;\n            return data;\n        });\n        server.put('/ChartingEndpoint/api/v3/patients/:patientPracticeGuid/encounters/NEW_TRANSCRIPT_GUID/autosave', () => {\n            return new _emberCliMirage.default.Response(204, {});\n        });\n        server.put('ChartingEndpoint/api/v3/patients/:patientPracticeGuid/encounters/NEW_TRANSCRIPT_GUID', ({ db }, request) => {\n            const data = JSON.parse(request.requestBody);\n            return data;\n        });\n        await visit(SUMMARY_URL);\n        await click((0, _dataElement.default)('new-soap-note'));\n        const formattedDateOfService = moment.utc(dateOfService).format('MM/DD/YYYY');\n        assert.equal(formattedDateOfService, currentDate, 'Encounter date sent to service is current date.');\n        assert.equal(find('.encounter-tab .menu-label').text().trim(), formattedDateOfService, 'Encounter date renders current date from service properly on tab.');\n        await fillIn((0, _dataElement.default)('encounter-details-date') + ' input', '11/11/2016');\n        await click('.btn-save-encounter');\n        percySnapshot(assert);\n        assert.equal(find('.encounter-tab .menu-label').text().trim(), '11/11/2016', 'Updated encounter date renders properly on tab.');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/deprecated/flowsheet-encounter-range-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element', 'boot/tests/helpers/data-value', 'ember-cli-mirage'], function (_qunit, _moduleForAcceptanceAuth, _dataElement, _dataValue, _emberCliMirage) {\n    'use strict';\n\n    const PATIENT_PRACTICE_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const SUMMARY_URL = `/PF/charts/patients/${PATIENT_PRACTICE_GUID}/summary`;\n    const FLOWSHEET_LINK = 'summary-flowsheet-list-item';\n    const SELECT_RANGE_LINK = '.input-dropdown-button';\n    const CUSTOM_LINK = 'custom';\n    const SET_RANGE_BTN = '.pull-right .btn-primary';\n    const START_DATE_INPUT = 'flowsheet-modal-start-date';\n    const END_DATE_INPUT = 'flowsheet-modal-end-date';\n\n    // The following tests are based on user inputted ranges and asserting against what query params are sent to the service.\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Flowsheet range');\n\n    (0, _qunit.test)('Flowsheet Encounter Range - Render last 5, 10 or most recent encounter(s) makes the proper service calls', async assert => {\n        let callCount = 0;\n        server.get('FlowsheetEndpoint/api/v1/patients/:patientPracticeGuid/flowsheetData/:flowsheetGuid', ({ db }, request) => {\n            const { mostRecentCount } = request.queryParams;\n            callCount++;\n            if (callCount === 1) {\n                assert.equal(mostRecentCount, '5', 'Flowsheets most recent call count default lists the last 5 encounters on load.');\n            } else if (callCount === 2) {\n                assert.equal(mostRecentCount, '10', 'Flowsheets most recent call count lists the last 10 encounters.');\n            } else if (callCount === 3) {\n                assert.equal(mostRecentCount, '1', 'Flowsheets most recent call count lists the last encounter.');\n            } else if (callCount === 4) {\n                assert.equal(mostRecentCount, '5', 'Flowsheets most recent call count lists the last 5 encounters.');\n            }\n            return db.flowsheetData.find(request.params.patientPracticeGuid);\n        });\n\n        await visit(SUMMARY_URL);\n        await click((0, _dataElement.default)(FLOWSHEET_LINK));\n        await click(SELECT_RANGE_LINK);\n        await click((0, _dataValue.default)('lastTen'));\n        await click('.input-dropdown-button');\n        await click((0, _dataValue.default)('mostRecent'));\n        await click('.input-dropdown-button');\n        click((0, _dataValue.default)('lastFive'));\n    });\n\n    (0, _qunit.test)('Flowsheet Encounter Range - Render encounters from a specified date range makes the proper service calls', async assert => {\n        const dateFormat = 'MM/DD/YYYY';\n        const startDate = moment('11/03/2016').format(dateFormat);\n        const endDate = moment('11/06/2016').format(dateFormat);\n        let callCount = 0;\n\n        server.get('FlowsheetEndpoint/api/v1/patients/:patientPracticeGuid/flowsheetData/:flowsheetGuid', ({ db }, request) => {\n            const { fromDate, toDate } = request.queryParams;\n            callCount++;\n            if (callCount === 1) {\n                assert.ok('Flowsheets are loaded from service.');\n            } else if (callCount === 2) {\n                // Dates need to be converted to utc for normalization during testing run time\n                assert.equal(moment(fromDate).utc().format(dateFormat), moment(startDate).utc().format(dateFormat), 'Correct start date range is sent to flowsheetData service.');\n                // End date is set to end of day, so we need to set the endDate to end of day to compare.\n                assert.equal(moment(toDate).utc().format(dateFormat), moment(endDate).endOf('day').utc().format(dateFormat), 'Correct end date range is sent to flowsheetData service.');\n            } else if (callCount === 3) {\n                assert.equal(fromDate, 'Invalid date', 'Empty start date sets the fromDate as invalid to the flowsheetData service.');\n                assert.equal(toDate, 'Invalid date', 'Empty end date sets the toDate as invalid to the flowsheetData service.');\n                return new _emberCliMirage.default.Response(400);\n            }\n\n            return db.flowsheetData.find(request.params.patientPracticeGuid);\n        });\n\n        await visit(SUMMARY_URL);\n        await click((0, _dataElement.default)(FLOWSHEET_LINK));\n        await click(SELECT_RANGE_LINK);\n        await click((0, _dataValue.default)(CUSTOM_LINK));\n        assert.ok(find('.content-modal').length > 0, 'The custom range of flowsheets modal pops up.');\n        await fillIn((0, _dataElement.default)(START_DATE_INPUT), startDate);\n        await fillIn((0, _dataElement.default)(END_DATE_INPUT), endDate);\n        await click(SET_RANGE_BTN);\n        await click('.input-dropdown-button');\n        await click((0, _dataValue.default)('custom'));\n        // Invalid dates sent to service returns 400\n        await fillIn((0, _dataElement.default)(START_DATE_INPUT), '');\n        await fillIn((0, _dataElement.default)(END_DATE_INPUT), '');\n        click(SET_RANGE_BTN);\n    });\n\n    (0, _qunit.test)('Flowsheet Encounter Range - Render encounters from a specified number of columns makes the proper service calls', async assert => {\n        let callCount = 0;\n        server.get('FlowsheetEndpoint/api/v1/patients/:patientPracticeGuid/flowsheetData/:flowsheetGuid', ({ db }, request) => {\n            const { mostRecentCount } = request.queryParams;\n            callCount++;\n            if (callCount === 1) {\n                assert.ok('Flowsheets are loaded from service.');\n            } else if (callCount === 2) {\n                assert.equal(mostRecentCount, '2', 'Setting custom column range to 2 sends the propery query parameter to flowsheetData service call.');\n            }\n            return db.flowsheetData.find(request.params.patientPracticeGuid);\n        });\n\n        await visit(SUMMARY_URL);\n        await click((0, _dataElement.default)(FLOWSHEET_LINK));\n        await click(SELECT_RANGE_LINK);\n        await click((0, _dataValue.default)(CUSTOM_LINK));\n        assert.ok(find('.content-modal').length > 0, 'The custom range of flowsheets modal pops up.');\n        await click((0, _dataElement.default)('flowsheet-modal-column-range'));\n        await fillIn((0, _dataElement.default)('flowsheet-modal-n-most-recent'), '2');\n        click(SET_RANGE_BTN);\n    });\n\n    (0, _qunit.test)('Flowsheet Encounter Range - Refresh renders last selected number of encounters to display', async assert => {\n        let callCount = 0;\n        server.get('FlowsheetEndpoint/api/v1/patients/:patientPracticeGuid/flowsheetData/:flowsheetGuid', ({ db }, request) => {\n            const { mostRecentCount } = request.queryParams;\n            callCount++;\n            if (callCount === 1) {\n                assert.equal(mostRecentCount, '5', 'Flowsheets most recent call count default lists the last 5 encounters on load.');\n            } else if (callCount === 2) {\n                assert.equal(mostRecentCount, '10', 'Flowsheets most recent call count lists the last 10 encounters.');\n            } else if (callCount === 3) {\n                assert.equal(mostRecentCount, '10', 'Flowsheets most recent call count retains user selected number of encounters (10) on refresh.');\n            }\n            return db.flowsheetData.find(request.params.patientPracticeGuid);\n        });\n\n        await visit(SUMMARY_URL);\n        await click((0, _dataElement.default)(FLOWSHEET_LINK));\n        await click(SELECT_RANGE_LINK);\n        await click((0, _dataValue.default)('lastTen'));\n        await click('.input-dropdown-button');\n        await click((0, _dataElement.default)('flowsheet-refresh-link'));\n        assert.equal(find(SELECT_RANGE_LINK).text().trim(), 'Last 10 encounters or labs', 'Refresh flowsheet retains user selected number of encounters to render.');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/deprecated/medication-print-preview-summary-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element', 'boot/tests/helpers/get-text-in-print'], function (_qunit, _moduleForAcceptanceAuth, _dataElement, _getTextInPrint) {\n    'use strict';\n\n    const PATIENT_PRACTICE_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const SUMMARY_URL = '/PF/charts/patients/' + PATIENT_PRACTICE_GUID + '/summary';\n    const MEDICATION_PRINT_PREVIEW_BUTTON = 'button.print-icon-button';\n    const ALL_MEDICATIONS = (0, _dataElement.default)('print-medications-dropdown') + ' a:eq(0)';\n    const ACTIVE_MEDICATIONS = (0, _dataElement.default)('print-medications-dropdown') + ' a:eq(1)';\n    const HISTORICAL_MEDICATIONS = (0, _dataElement.default)('print-medications-dropdown') + ' a:eq(2)';\n    const ACTIVE_MED_HEADER = '.header-row h2:contains(Active Medications)';\n    const HISTORICAL_MED_HEADER = '.header-row h2:contains(Historical Medications)';\n    const CLOSE_BUTTON = '.close-link';\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Print Medication Print Preview within Summary - All, Active, or Historical');\n\n    (0, _qunit.test)('Medication Print Preview - Summary - all medications', async assert => {\n        await visit(SUMMARY_URL);\n        await click(find(MEDICATION_PRINT_PREVIEW_BUTTON));\n        await click(find(ALL_MEDICATIONS));\n        assert.equal(find(ACTIVE_MED_HEADER).length, 1, 'All: Active Medications header renders correctly.');\n        assert.equal(find(HISTORICAL_MED_HEADER).length, 1, 'All: Historical Medications header renders correctly.');\n\n        assert.equal((0, _getTextInPrint.default)('head title'), 'Medications - Patient: Some L Baby DOB: 02/01/2013 PRN: BS186029', 'The print preview has the correct header');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-header-patient-name')), 'Some L Baby', 'The patient name renders correctly on the print preview');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-header-facility-name')), 'Rosalise Ron Practice', 'The facility name renders correctly on the print preview');\n\n        // Confirm headers for active/historical medications\n        assert.equal(find(`${(0, _dataElement.default)('print-medications')} h2:contains('Active Medications')`).text(), 'Active Medications', 'There is an Active Medications header');\n        assert.equal(find(`${(0, _dataElement.default)('print-medications')} h2:contains('Historical Medications')`).text(), 'Historical Medications', 'There is a Historical Medications header');\n\n        // Confirm column headers under active and historical medications\n        assert.equal($('.row.header-row .col-xs-4:contains(\\'Medication\\')').length, 2, 'There are two medication rows under Active and Historical medications ');\n        assert.equal(find(`.row.header-row:contains('Sig')`).length, 2, 'There is a sig column under active and historical medications');\n        assert.equal(find(`.row.header-row:contains('Start/Stop')`).length, 2, 'There is a start/stop date column under active and historical medications');\n        assert.equal(find(`.row.header-row:contains('Associated Dx')`).length, 2, 'There is an associated diagnosis column under active and historical medications');\n        // Confirm active medications\n        assert.equal(find(`${(0, _dataElement.default)('medication-item-text')}:eq(0)`).text().trim(), 'methylTESTOSTERone (Methitest) 10 mg oral tablet', 'There is a medication present with generic name, product strength, route and dose form for active medication.');\n        assert.equal(find(`${(0, _dataElement.default)('medication-item-sig')}:eq(0)`).text().trim(), '4 times a day', 'There is a medication sig present for active medication.');\n        assert.equal(find(`${(0, _dataElement.default)('medication-item-dates')}:eq(0)`).text().trim().replace('\\n', ''), '02/10/15 -', 'Medication item dates start and have not stopped yet for active medication.');\n        assert.equal(find(`${(0, _dataElement.default)('medication-item-diagnosis')}:eq(0)`).text().trim(), '-', 'There is no diagnosis for this medication present for active medication.');\n\n        // Confirm historical medications\n        assert.equal(find(`${(0, _dataElement.default)('medication-item-text')}:eq(1)`).text().trim(), 'Alprazolam (Xanax) 0.25 MG Oral Tablet', 'There is a medication present with generic name, product strength, route and dose form for historical medication.');\n        assert.equal(find(`${(0, _dataElement.default)('medication-item-sig')}:eq(1)`).text().trim(), '4 times a day', 'There is a medication sig present for historical medication.');\n        assert.equal(find(`${(0, _dataElement.default)('medication-item-dates')}:eq(1)`).text().trim().replace('\\n', ''), '09/27/16 - 09/30/16', 'Medication item dates start / stop is present for historical medication.');\n        assert.equal(find(`${(0, _dataElement.default)('medication-item-diagnosis')}:eq(1)`).text().trim(), 'Fracture of femur', 'There is a diagnosis for this medication present for historical medication.');\n\n        click(CLOSE_BUTTON);\n    });\n\n    (0, _qunit.test)('Medication Print Preview - Summary - active medications', async assert => {\n        await visit(SUMMARY_URL);\n        await click(MEDICATION_PRINT_PREVIEW_BUTTON);\n        await click(ACTIVE_MEDICATIONS);\n        assert.equal(find(ACTIVE_MED_HEADER).length, 1, 'Active Only: Active Medications header renders correctly.');\n        assert.equal(find(HISTORICAL_MED_HEADER).length, 0, 'Active Only: Historical Medications header does not render.');\n        click(CLOSE_BUTTON);\n    });\n\n    (0, _qunit.test)('Medication Print Preview - Summary - historical medications', async assert => {\n        await visit(SUMMARY_URL);\n        await click(find(MEDICATION_PRINT_PREVIEW_BUTTON));\n        await click(find(HISTORICAL_MEDICATIONS));\n        assert.equal(find(ACTIVE_MED_HEADER).length, 0, 'Historical Only: Active Medications header does not render.');\n        assert.equal(find(HISTORICAL_MED_HEADER).length, 1, 'Historical Only: Historical Medications header renders correctly.');\n        click(CLOSE_BUTTON);\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/deprecated/patient-list-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element', 'boot/tests/helpers/get-text', 'boot/config'], function (_qunit, _moduleForAcceptanceAuth, _dataElement, _getText, _config) {\n    'use strict';\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Visual - Core - Charting | Patient list', {\n        beforeEach() {\n            if (window.localStorage && window.localStorage.clear) {\n                window.localStorage.clear();\n            }\n        }\n    });\n\n    const page = '.charts.outlet';\n    const buttonBar = `${page} .charts-list-toolbar`;\n    const providerDropdown = `${buttonBar} ${(0, _dataElement.default)('patient-list-provider-dropdown')}`;\n    const recentPatientList = `${page} .recent-patients-container`;\n    const firstRecentPatient = `${recentPatientList} .row-patient:first`;\n    const firstNameColumn = 'first-name-column';\n    const patientPracticeGuid = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const inactiveCheckbox = `${buttonBar} .show-inactive-checkbox`;\n    const inactiveCheckboxInput = `${inactiveCheckbox} input`;\n    const PREFERENCES = { preferences: {} };\n\n    function headerColumn(dataElement) {\n        return `${page} .header-row ${(0, _dataElement.default)(dataElement)}`;\n    }\n    function validateColumnSort(assert, dataElement, isAscending) {\n        const arrow = isAscending ? '.arrow-up' : '.arrow-down';\n        assert.throws(findWithAssert(`${headerColumn(dataElement)} ${arrow}`), 'The correct column sort is visible');\n    }\n    function validateFirstRecentPatientColumn(assert, column, expected) {\n        assert.equal((0, _getText.default)(`${firstRecentPatient} ${(0, _dataElement.default)(column)}`), expected, `The first patient's ${column} is correct`);\n    }\n    function validateFirstScheduledPatientColumn(assert, column, expected) {\n        assert.equal((0, _getText.default)(find(`#appointments .row-patient ${(0, _dataElement.default)(column)}`).first()), expected, `The first patient's ${column} is correct`);\n    }\n    function validateFirstSearchPatientColumn(assert, column, expected) {\n        assert.equal((0, _getText.default)(`#search-results .row-patient:first-child ${(0, _dataElement.default)(column)}`), expected, `The first patient's ${column} is correct`);\n    }\n\n    (0, _qunit.test)('Recent patients list', async assert => {\n        _config.default.isNewPatientListChartOn = false;\n        server.get('PracticeEndpoint/api/v1/preferences/provider', () => PREFERENCES);\n        await visit('/PF/charts/list');\n        percySnapshot(assert);\n        assert.throws(findWithAssert(`${buttonBar} ${(0, _dataElement.default)('new-patient-button')}`), 'The new patient button exists');\n        assert.throws(findWithAssert(`${buttonBar} .patient-search2`), 'The patient search box exists');\n        assert.throws(findWithAssert(inactiveCheckbox), 'The show inactive checkbox exists');\n        click(`${(0, _dataElement.default)('patient-list-scheduled-recent-toggle-1')}`);\n        click(`${providerDropdown} .composable-select__choice`);\n        await click(`${providerDropdown} .composable-select__result-item:eq(1)`);\n        assert.equal((0, _getText.default)((0, _dataElement.default)('patient-list-number-of-patients')), '0 recent patients', 'The correct number of recent patients is displayed');\n        if (!find(inactiveCheckboxInput)[0].checked) {\n            click(inactiveCheckboxInput);\n        }\n        click(`${providerDropdown} .composable-select__choice`);\n        await click(`${providerDropdown} .composable-select__result-item:eq(0)`);\n        await wait();\n        assert.equal((0, _getText.default)((0, _dataElement.default)('patient-list-number-of-patients')), '55 recent patients', 'The correct number of recent patients is displayed');\n        validateColumnSort(assert, 'accessed-column', false);\n        validateFirstRecentPatientColumn(assert, 'patient-first-name', 'Testtest');\n        validateFirstRecentPatientColumn(assert, 'patient-last-name', 'PAtient');\n        validateFirstRecentPatientColumn(assert, 'patient-dob', '09/02/2015 Sep 02, 2015');\n        validateFirstRecentPatientColumn(assert, 'patient-gender', 'Male');\n        validateFirstRecentPatientColumn(assert, 'patient-address', '1 fake street, San Francisco, CA 94110');\n        validateFirstRecentPatientColumn(assert, 'patient-record-number', 'PRN PT169775');\n        validateFirstRecentPatientColumn(assert, 'patient-phone-numbers', 'M (123) 123-1234');\n        assert.throws(findWithAssert(`${recentPatientList} .row-patient ${(0, _dataElement.default)('patient-first-name')}:contains('(Inactive)')`), 'An inactive patient is visible after clicking the inactive checkbox');\n        await click(`${recentPatientList} [data-guid=\"${patientPracticeGuid}\"]`);\n        assert.equal(currentURL(), `/PF/charts/patients/${patientPracticeGuid}/summary`, 'The patient was opened after clicking on it');\n        await click('.pf.outlet .menu-list li a:contains(\"Patient lists\")');\n        await click(headerColumn(firstNameColumn));\n        validateColumnSort(assert, firstNameColumn, true);\n        await click(headerColumn(firstNameColumn));\n        validateColumnSort(assert, firstNameColumn, false);\n        // Disabling for now. This was causing failures after the ember 2.4\n        // upgrade. The test would only fail when run as part of the entire test suite\n        // validateFirstRecentPatientColumn(assert, 'patient-first-name', 'zxc');\n        // validateFirstRecentPatientColumn(assert, 'patient-last-name', 'zxc');\n        // click(headerColumn('dob-column')).then(() => {\n        //     validateColumnSort(assert, 'dob-column', true);\n        //     validateFirstRecentPatientColumn(assert, 'patient-first-name', 'new');\n        //     validateFirstRecentPatientColumn(assert, 'patient-last-name', 'patient');\n        // });\n    });\n\n    (0, _qunit.test)('Scheduled patients list', async assert => {\n        _config.default.isNewPatientListChartOn = false;\n        const dateFormat = 'YYYY-MM-DD';\n        const today = moment().format(dateFormat);\n        const tomorrow = moment().add(1, 'days').format(dateFormat);\n        let lastScheduleDate;\n        let lastProviderGuid;\n        server.get('ChartingEndpoint/api/v2/Appointment', ({ db }, request) => {\n            lastScheduleDate = request.queryParams.scheduleDate;\n            lastProviderGuid = request.queryParams.providerGuid;\n\n            if (Ember.isEmpty(lastProviderGuid) && lastScheduleDate === today) {\n                return db.chartsAppointments;\n            }\n            return [];\n        });\n        server.get('PracticeEndpoint/api/v1/preferences/provider', () => PREFERENCES);\n\n        await visit('/PF/charts/list/all/recent');\n        await click(`${(0, _dataElement.default)('patient-list-scheduled-recent-toggle-0')}`);\n        assert.equal((0, _getText.default)((0, _dataElement.default)('patient-list-number-of-patients')), '4 scheduled', 'The correct number of scheduled patients is displayed');\n        assert.equal((0, _getText.default)('.date-navigation-date'), moment().format('dddd, MMM Do'), 'Today\\'s date is displayed correctly');\n        assert.equal(lastScheduleDate, today, 'The appointments endpoint was called with the correct initial date');\n        validateColumnSort(assert, 'appointment-time-column', true);\n        validateFirstScheduledPatientColumn(assert, 'patient-first-name', 'Some L');\n        validateFirstScheduledPatientColumn(assert, 'patient-last-name', 'Baby');\n        validateFirstScheduledPatientColumn(assert, 'patient-dob', '02/01/2013 Feb 01, 2013');\n        validateFirstScheduledPatientColumn(assert, 'patient-gender', 'Male');\n        validateFirstScheduledPatientColumn(assert, 'patient-address', '123 Who cares, No way, AL 95835');\n        validateFirstScheduledPatientColumn(assert, 'patient-phone-numbers', 'M (555) 555-5554 H (555) 456-7890');\n        validateFirstScheduledPatientColumn(assert, 'patient-appointment-date', '10:00 AM');\n        validateFirstScheduledPatientColumn(assert, 'patient-appointment-status', 'Pending');\n        await click(headerColumn(firstNameColumn));\n        validateColumnSort(assert, firstNameColumn, true);\n        await click(headerColumn(firstNameColumn));\n        validateColumnSort(assert, firstNameColumn, false);\n        validateFirstScheduledPatientColumn(assert, 'patient-first-name', 'Testtest');\n        validateFirstScheduledPatientColumn(assert, 'patient-last-name', 'PAtient');\n        await click(headerColumn('dob-column'));\n        validateColumnSort(assert, 'dob-column', true);\n        validateFirstScheduledPatientColumn(assert, 'patient-first-name', 'Some L');\n        validateFirstScheduledPatientColumn(assert, 'patient-last-name', 'Baby');\n        click(`${providerDropdown} .composable-select__choice`);\n        await click(`${providerDropdown} .composable-select__result-item:eq(1)`);\n        assert.ok(lastProviderGuid, 'The appointments endpoint was called with a provider guid after changing providers');\n        assert.throws(findWithAssert(`${page} .no-appointments`), 'The empty state is visible when there are no scheduled patients');\n        assert.equal((0, _getText.default)((0, _dataElement.default)('patient-list-number-of-patients')), 'None Scheduled', 'The correct number of scheduled patients is displayed');\n        await click('.charts-list-header .date-navigation .date-navigation-next');\n        assert.equal(lastScheduleDate, tomorrow, 'The appointments endpoint was called with the correct date after clicking next');\n        click('.charts-list-header .date-navigation .date-navigation-previous');\n        click(`${providerDropdown} .composable-select__choice`);\n        click(`${providerDropdown} .composable-select__result-item:eq(0)`);\n        await click(`.row-patient[data-guid=\"${patientPracticeGuid}\"]`);\n        assert.equal(currentURL(), `/PF/charts/patients/${patientPracticeGuid}/summary`, 'The patient was opened after clicking on it');\n    });\n\n    (0, _qunit.test)('Patient search', async assert => {\n        _config.default.isNewPatientListChartOn = false;\n        let lastSearchQuery;\n        server.post('PatientEndpoint/api/v1/patients/search', ({ db }, request) => {\n            const data = JSON.parse(request.requestBody);\n            lastSearchQuery = data.firstOrLastName;\n            if (lastSearchQuery === 'empty') {\n                return { patients: [] };\n            }\n            return db.patientSearches[0];\n        });\n        server.get('PracticeEndpoint/api/v1/preferences/provider', () => PREFERENCES);\n\n        await visit('/PF/charts/list/all/recent');\n        const patientSearch = '.patient-search2';\n        const searchInput = `${patientSearch} input`;\n        const searchButton = `${patientSearch} .filtered-search-btn`;\n        fillIn(searchInput, 'empty');\n        await click(searchButton);\n        assert.equal(lastSearchQuery, 'empty', 'The search call was made with the correct firstOrLastName query');\n        assert.throws(findWithAssert('#search-results .no-patients-found'), 'The empty state is displayed when no patients are found');\n        click(`${patientSearch} .ember-select-search-choice-close`);\n        fillIn(searchInput, 'test');\n        await click(searchButton);\n        validateFirstSearchPatientColumn(assert, 'patient-first-name', 'JOHNATHAN');\n        validateFirstSearchPatientColumn(assert, 'patient-last-name', 'SWIFT');\n        validateFirstSearchPatientColumn(assert, 'patient-dob', '10/24/1979 Oct 24, 1979');\n        validateFirstSearchPatientColumn(assert, 'patient-address', '99238 VERTIGO LANE, MINNEAPOLIS, MN 55427');\n        validateFirstSearchPatientColumn(assert, 'patient-phone-numbers', 'M (415) 555-4444 H (307) 855-3055');\n        await click(headerColumn(firstNameColumn));\n        validateColumnSort(assert, firstNameColumn, false);\n        validateFirstSearchPatientColumn(assert, 'patient-first-name', 'Zart L');\n        validateFirstSearchPatientColumn(assert, 'patient-last-name', 'Simpson');\n        await click(headerColumn('dob-column'));\n        validateColumnSort(assert, 'dob-column', true);\n        validateFirstSearchPatientColumn(assert, 'patient-first-name', 'Test');\n        validateFirstSearchPatientColumn(assert, 'patient-last-name', 'ER');\n        await click(inactiveCheckboxInput);\n        assert.throws(findWithAssert(`#search-results .row-patient ${(0, _dataElement.default)('patient-first-name')}:contains('(Inactive)')`), 'An inactive patient is visible after clicking the inactive checkbox');\n        await click(`.row-patient[data-guid=\"${patientPracticeGuid}\"]`);\n        assert.equal(currentURL(), `/PF/charts/patients/${patientPracticeGuid}/summary`, 'The patient was opened after clicking on it');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/encounter-asthma-control-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element'], function (_qunit, _moduleForAcceptanceAuth, _dataElement) {\n    'use strict';\n\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const TRANSCRIPT_GUID = '7022d94f-d70a-4722-a205-dac898cf9f69';\n    const SIA_SECTION = 'section #dFinalizeEvents';\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Encounter asthma control worksheet');\n\n    (0, _qunit.test)('Can add, edit and delete adult asthma control worksheet', async assert => {\n        server.post('ChartingEndpoint/api/v3/patients/:patientGuid/transcriptEvents', ({ db }) => db.asthmaTranscriptEvents[0]);\n\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/encounter/' + TRANSCRIPT_GUID);\n        assert.ok(find(`${SIA_SECTION} header:contains('Screenings/ Interventions/ Assessments')`).length > 0, 'Screenings/ Interventions/ Assessments is visible in encounter');\n        await click(`${SIA_SECTION} a:contains('Add item')`);\n        await fillIn(`${SIA_SECTION} input`, 'Asthma');\n        // Opening up the asthma control right module\n        await keyEvent(`${SIA_SECTION} .sia-search-single-select`, 'keydown', 13);\n        await wait();\n        await click(`${SIA_SECTION} .sia-search-single-select .ember-select-result-item > a:contains(\"Adult Asthma\")`);\n        // Confirm headers for the right module is correct\n        assert.ok(find('.right-module .right-module-top h15').text().trim() === 'Screenings/ Interventions/ Assessments > Record', 'Adult Asthma Control Right module heading renders properly');\n        assert.dom('.worksheet-details-v2 h4').hasText('Asthma Control Test™', 'Adult Asthma Control Right module title renders properly');\n\n        // Confirm Asthma Control Status\n        assert.equal(find('.right-module .field-label:first').text(), 'Status', 'Adult Asthma control status header renders properly');\n        assert.equal(find('.right-module .composable-select__selection').text().trim(), 'Performed', 'Adult Asthma control status for performed renders properly');\n\n        // Ensure all the Asthma Control questions render properly\n        assert.equal(find((0, _dataElement.default)('worksheet-question-label-0')).text(), 'In the past 4 weeks, how much of the time did your asthma keep you from getting as much done at work, school or at home?', 'First Adult Asthma Control question renders properly.');\n        assert.equal(find((0, _dataElement.default)('worksheet-question-label-1')).text(), 'During the past 4 weeks, how often have you had shortness of breath?', 'Second Adult Asthma Control question renders properly.');\n        assert.equal(find((0, _dataElement.default)('worksheet-question-label-2')).text(), 'During the past 4 weeks, how often did your asthma symptoms (wheezing, coughing, shortness of breath, chest tightness or pain) wake you up at night or earlier than usual in the morning?', 'Third Adult Asthma Control question renders properly.');\n        assert.equal(find((0, _dataElement.default)('worksheet-question-label-3')).text(), 'During the past 4 weeks, how often have you used your rescue inhaler or nebulizer medication (such as albuterol)?', 'Fourth Adult Asthma Control question renders properly.');\n        assert.equal(find((0, _dataElement.default)('worksheet-question-label-4')).text(), 'How would you rate your asthma control during the past 4 weeks?', 'Fifth Adult Asthma Control question renders properly.');\n\n        // Select an answer for each asthma control question\n        await click('.right-module ol li:first .pf-input--radio-label:eq(2)');\n        await click('.right-module ol li:eq(1) .pf-input--radio-label:eq(2)');\n        await click('.right-module ol li:eq(2) .pf-input--radio-label:eq(2)');\n        await click('.right-module ol li:eq(3) .pf-input--radio-label:eq(2)');\n        await click('.right-module ol li:eq(4) .pf-input--radio-label:eq(2)');\n        assert.dom((0, _dataElement.default)('worksheet-score')).hasText('15', 'Confirm Adult Asthma Control scoring renders properly with the right number of points accumulated.');\n        assert.ok(find(`.right-module:contains('If your score is 19 or less, your asthma may not be as well controlled as it could be.')`).length > 0, 'Adult Asthma Control informational text on resulting score renders properly.');\n        assert.dom((0, _dataElement.default)('worksheet-copyright')).hasText('Copyright 2002, by QualityMetric Incorporated. Asthma Control Test is a trademark of QualityMetric Incorporated.', 'Adult Asthma Control copyright text renders properly.');\n\n        await click((0, _dataElement.default)('btn-worksheet-save'));\n        assert.ok(find(`${SIA_SECTION} li .event-heading .event-name`).text() === 'Adult Asthma Control Test (ages 12 and up)', 'Confirm Adult Asthma Control was updated on encounter');\n        // Confirm Total Score\n        assert.ok(find(SIA_SECTION + ' li .event-heading .event-info:eq(1)').text() === 'Total score:', 'Confirm Total Score text renders properly for adult asthma control assessment.');\n        assert.ok(find(SIA_SECTION + ' li .event-heading .event-info:eq(2)').text() === '15', 'Confirm score renders properly for adult asthma control assessment.');\n        // Confirm Result\n        assert.ok(find(SIA_SECTION + ' li .event-heading .event-info:eq(3)').text() === 'Result:', 'Confirm Result text renders properly for adult asthma control assessment.');\n        assert.ok(find(SIA_SECTION + ' li .event-heading .event-info:eq(4)').text() === 'If your score is 19 or less, your asthma may not be as well controlled as it could be.', 'Confirm Result renders properly for adult asthma control assessment.');\n        // Edit the asthma control worksheet\n        await click(`${SIA_SECTION} li .event-heading .event-name`);\n        await click('.right-module ol li:first .pf-input--radio-label:eq(3)');\n        // Change one of th answers and confirm the result\n        assert.dom((0, _dataElement.default)('worksheet-score')).hasText('16', 'Confirm updating Adult Asthma Control scoring renders properly with the right number of points accumulated.');\n        await click((0, _dataElement.default)('btn-worksheet-save'));\n        // Delete the asthma control worksheet\n        await click(`${SIA_SECTION} li .event-heading .event-name`);\n        await click((0, _dataElement.default)('btn-worksheet-delete'));\n        assert.ok(find(`${SIA_SECTION} li .event-heading .event-name`).length < 1, 'Confirm Adult Asthma Control was deleted on encounter.');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/encounter-attachments-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'ember-cli-mirage', 'boot/tests/helpers/get-text'], function (_qunit, _moduleForAcceptanceAuth, _emberCliMirage, _getText) {\n    'use strict';\n\n    const UNSIGNED_TRANSCRIPT_GUID = '7022d94f-d70a-4722-a205-dac898cf9f69';\n    const SIGNED_TRANSCRIPT_GUID = 'SIGNED_TRANSCRIPT_GUID';\n    const PATIENT_PRACTICE_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const ATTACHMENTS_SECTION = '.encounter-documents';\n    const ATTACHMENTS_ATTACH_BUTTON = `${ATTACHMENTS_SECTION} .heading-action`;\n    const DETAILS_PANE = '.side-fixed.attach-documents';\n    const DETAILS_PANE_ATTACH = `${DETAILS_PANE} .detail-pane-footer .btn-primary`;\n    const FAX_REFERRAL_GUID = 'cf6ed305-5e7f-4615-89d1-ca5f965b7634';\n    const FAX_REFERRAL_NAME = 'Fax Referral.pdf';\n    const XML_GUID = '6eaf927b-19e4-4c5b-9334-57e1afd52802';\n    const XML_NAME = '12216.xml';\n    const DIGITAL_REFERRAL_GUID = 'ccecb46c-994d-4ae4-a0b9-c43480e2afdd';\n    const DOCUMENTS_TABLE = `${ATTACHMENTS_SECTION} .encounter-documents-table`;\n    const ADDENDA_SECTION = '#dFinalizeAmendments';\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Encounter attachments');\n\n    function getAttachDocumentRow(guid) {\n        return `.document-list-row[data-guid=\"${guid}\"]`;\n    }\n    function getAttachDocumentName(guid) {\n        return (0, _getText.default)(`${getAttachDocumentRow(guid)} .document-name-column`);\n    }\n    function checkDocument(guid) {\n        return click(`${getAttachDocumentRow(guid)} input`);\n    }\n    function getDocumentTableRow(name) {\n        return `${DOCUMENTS_TABLE} tr:contains(\"${name}\")`;\n    }\n    function clickXButton(name) {\n        return click(`${getDocumentTableRow(name)} td .icon-go-away-small`);\n    }\n    function clickPopoverButton(selector) {\n        return click(`.popover .popover-btn-row ${selector}`);\n    }\n\n    (0, _qunit.test)('Attach documents to an encounter', async assert => {\n        let transcriptDocumentPostCount = 0;\n        let deletedDocumentGuid;\n        let fullDeleteDocumentCalled = false;\n\n        server.post('ChartingEndpoint/api/v2/TranscriptDocument', ({ db }, request) => {\n            transcriptDocumentPostCount++;\n            const data = JSON.parse(request.requestBody);\n            if (transcriptDocumentPostCount < 4) {\n                assert.equal(data.transcriptGuid, UNSIGNED_TRANSCRIPT_GUID, 'The transcriptGuid is correct on the POST data');\n                assert.equal(data.transcriptDocumentType, 'Encounter', 'The transcript document type is correct for unsigned encounters');\n            } else {\n                assert.equal(data.transcriptGuid, SIGNED_TRANSCRIPT_GUID, 'The transcriptGuid is correct on the POST data');\n                assert.equal(data.transcriptDocumentType, 'Addendum', 'The transcript document type is correct for signed encounters');\n            }\n            return data;\n        });\n\n        server.delete(`ChartingEndpoint/api/v2/TranscriptDocument/${UNSIGNED_TRANSCRIPT_GUID}/:documentGuid`, ({ db }, request) => {\n            deletedDocumentGuid = request.params.documentGuid;\n            return new _emberCliMirage.default.Response(204, {}, null);\n        });\n\n        server.delete('DocumentsEndpoint/api/v2/documents/meta/:documentGuid', ({ db }, request) => {\n            fullDeleteDocumentCalled = true;\n            assert.equal(request.params.documentGuid, XML_GUID, 'The document full delete was called with the correct documentGuid');\n            return new _emberCliMirage.default.Response(204, {}, null);\n        });\n\n        await visit(`/PF/charts/patients/${PATIENT_PRACTICE_GUID}/encounter/${UNSIGNED_TRANSCRIPT_GUID}`);\n        await click(ATTACHMENTS_ATTACH_BUTTON);\n        assert.throws(findWithAssert(DETAILS_PANE), 'The attach documents details pane appears after clicking the Attach button');\n        assert.equal(getAttachDocumentName(FAX_REFERRAL_GUID), FAX_REFERRAL_NAME, 'The Fax Referral document name is rendered correctly');\n        assert.equal(getAttachDocumentName(XML_GUID), XML_NAME, 'The xml file name is rendered correctly');\n        assert.throws(findWithAssert(`${getAttachDocumentRow(FAX_REFERRAL_GUID)} .document-name-column .icon-lock`), 'Signed documents contain the lock icon');\n        checkDocument(FAX_REFERRAL_GUID);\n        checkDocument(XML_GUID);\n        checkDocument(DIGITAL_REFERRAL_GUID);\n        await click(DETAILS_PANE_ATTACH);\n\n        const FAX_REFERRAL_ROW = getDocumentTableRow(FAX_REFERRAL_NAME);\n        const XML_ROW = getDocumentTableRow(XML_NAME);\n        assert.equal(transcriptDocumentPostCount, 3, 'The POST TranscriptDocument endpoint was called 3 times');\n        assert.throws(findWithAssert(`${FAX_REFERRAL_ROW} td .icon-lock`), 'Signed documents contain the lock icon in the table');\n        assert.throws(findWithAssert(`${FAX_REFERRAL_ROW} td:contains(\"Fax Referral\")`), 'The document comment is rendered correctly');\n        assert.throws(findWithAssert(XML_ROW), 'The unsigned document appears in the table');\n        clickXButton(FAX_REFERRAL_NAME);\n        await clickPopoverButton('.confirm-btn');\n        assert.equal(deletedDocumentGuid, FAX_REFERRAL_GUID, 'The delete endpoint was called with the correct document guid');\n        assert.notOk(find(FAX_REFERRAL_ROW).length, 'The document was removed from the table after the \"x\" icon was clicked');\n        clickXButton(XML_NAME);\n        await clickPopoverButton('.secondary-confirm-btn');\n        assert.equal(deletedDocumentGuid, XML_GUID, 'The delete endpoint was called with the correct document guid');\n        assert.ok(fullDeleteDocumentCalled, 'The document full delete endpoint was called');\n        assert.notOk(find(XML_ROW).length, 'The document was removed from the table after the \"x\" icon was clicked');\n        await click(ATTACHMENTS_ATTACH_BUTTON);\n        assert.throws(findWithAssert(`${getAttachDocumentRow(DIGITAL_REFERRAL_GUID)}.is-selected .icon-checkmark`), 'Documents that are already attached are rendered as selected with a checkmark');\n        await visit(`/PF/charts/patients/${PATIENT_PRACTICE_GUID}/encounter/${SIGNED_TRANSCRIPT_GUID}`);\n        click(`${ADDENDA_SECTION} .heading-action:contains(\"Attach documents\")`);\n        checkDocument(FAX_REFERRAL_GUID);\n        checkDocument(DIGITAL_REFERRAL_GUID);\n        await click(DETAILS_PANE_ATTACH);\n        assert.equal(transcriptDocumentPostCount, 5, 'The POST TranscriptDocument endpoint was called 2 more times');\n        assert.throws(findWithAssert(`${ADDENDA_SECTION} .encounter-documents-table tr:contains(\"${FAX_REFERRAL_NAME}\")`), 'The newly attached documents appear in the addenda attachments table');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/encounter-copy-note-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element', 'boot/tests/helpers/get-text'], function (_qunit, _moduleForAcceptanceAuth, _dataElement, _getText) {\n    'use strict';\n\n    const ENCOUNTER_GUID = '7022d94f-d70a-4722-a205-dac898cf9f69';\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const ACTIONS_MENU_ITEM = `${(0, _dataElement.default)('actions-menu-options')} a:contains('Copy note to clipboard')`;\n    const ENCOUNTER_GUID_SIGNED = 'SIGNED_TRANSCRIPT_GUID';\n    const ADDENDUM_TEXT = 'This is a test addendum';\n    const COPY_MODAL = '.copy-note-modal';\n    const EXPECTED_TITLE = '03/08/16';\n    const EXPECTED_TITLE_SIGNED = '01/05/16';\n    const RICH_TEXT_CONTAINER = '.auto-saving-section .rich-text-editor';\n    const RICH_TEXT_SAVE = '.auto-saving-section .right-module-bottom .save';\n    const SOAP_UPDATES = {\n        subjective: 'this is a test subjective',\n        objective: 'this is a test objective',\n        assessment: 'this is a test assesment',\n        plan: 'this is the plan'\n    };\n\n    const getExpectedText = (values, fieldName) => `${fieldName} ${values[fieldName.toLowerCase()]}`;\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Encounter copy note');\n\n    (0, _qunit.test)('Copy unsigned chart note displays correctly', async assert => {\n        assert.expect(15);\n        let copyText = '';\n\n        server.put(`ChartingEndpoint/api/v3/patients/${PATIENT_GUID}/encounters/${ENCOUNTER_GUID}/autosave`, ({ db }, request) => {\n            const saved = JSON.parse(request.requestBody);\n            assert.ok(saved.fieldValue.indexOf(SOAP_UPDATES[saved.fieldType]) > -1, `Autosave correctly saved the ${saved.fieldType}`);\n            return saved;\n        });\n\n        server.post('ChartingEndpoint/api/v2/PrintAudit', ({ db }, request) => {\n            const audit = JSON.parse(request.requestBody);\n            assert.equal(audit.patientPracticeGuid, PATIENT_GUID, 'Print audit event fired for correct patient');\n            assert.equal(audit.transcriptGuid, ENCOUNTER_GUID, 'Print audit event fired for correct encounter');\n            assert.equal(audit.printEvent, 'PatientChartNoteCopy', 'Print audit event fired with the correct event');\n            return {};\n        });\n\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/encounter/' + ENCOUNTER_GUID);\n        // Update all the SOAP fields\n        await click((0, _dataElement.default)('edit-note-subjective'));\n        await fillInRichText(RICH_TEXT_CONTAINER, SOAP_UPDATES.subjective);\n        await click(RICH_TEXT_SAVE);\n        await fillInRichText(RICH_TEXT_CONTAINER, SOAP_UPDATES.objective);\n        await click(RICH_TEXT_SAVE);\n        await fillInRichText(RICH_TEXT_CONTAINER, SOAP_UPDATES.assessment);\n        await click(RICH_TEXT_SAVE);\n        await fillInRichText(RICH_TEXT_CONTAINER, SOAP_UPDATES.plan);\n        await click(RICH_TEXT_SAVE);\n        await click((0, _dataElement.default)('actions-menu'));\n        assert.ok(find(ACTIONS_MENU_ITEM).length > 0, 'Copy action is available in the actions menu');\n        await click(ACTIONS_MENU_ITEM);\n        assert.ok(find(`${COPY_MODAL}:visible`).length > 0, 'Copy note modal appears');\n        assert.ok(find(`${COPY_MODAL} .copy-modal div:contains('${EXPECTED_TITLE}')`).length > 0, 'Copy note modal has correct title');\n\n        copyText = (0, _getText.default)(`${COPY_MODAL} .copy-modal-content .text-area`);\n        assert.ok(copyText.indexOf(getExpectedText(SOAP_UPDATES, 'Subjective')) > -1, 'Copy note contains correct Subjective text');\n        assert.ok(copyText.indexOf(getExpectedText(SOAP_UPDATES, 'Objective')) > -1, 'Copy note contains correct Objective text');\n        assert.ok(copyText.indexOf(getExpectedText(SOAP_UPDATES, 'Assessment')) > -1, 'Copy note contains correct Assessment text');\n        assert.ok(copyText.indexOf(getExpectedText(SOAP_UPDATES, 'Plan')) > -1, 'Copy note contains correct Plan text');\n\n        await click(`${COPY_MODAL} .btn-warning`);\n        assert.ok(find(`${COPY_MODAL}:visible`).length < 1, 'Copy note modal closed properly');\n    });\n\n    (0, _qunit.test)('Copy signed chart note displays correctly with amendments', async assert => {\n        assert.expect(13);\n        const soapValues = {\n            subjective: '',\n            objective: '',\n            assessment: '',\n            plan: ''\n        };\n        let copyText = '';\n\n        server.post(`ChartingEndpoint/api/v3/patients/${PATIENT_GUID}/encounters/${ENCOUNTER_GUID_SIGNED}/amendments`, ({ db }, request) => {\n            const addendum = JSON.parse(request.requestBody);\n            assert.equal(addendum.note, ADDENDUM_TEXT, 'The addendum was added with the correct text');\n            addendum.id = 0;\n            return addendum;\n        });\n\n        server.post('ChartingEndpoint/api/v2/PrintAudit', ({ db }, request) => {\n            const audit = JSON.parse(request.requestBody);\n            assert.equal(audit.patientPracticeGuid, PATIENT_GUID, 'Print audit event fired for correct patient');\n            assert.equal(audit.transcriptGuid, ENCOUNTER_GUID_SIGNED, 'Print audit event fired for correct encounter');\n            assert.equal(audit.printEvent, 'PatientChartNoteCopy', 'Print audit event fired with the correct event');\n            return {};\n        });\n\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/encounter/' + ENCOUNTER_GUID_SIGNED);\n        // Get SOAP values\n        soapValues.subjective = (0, _getText.default)('.note-subjective .display-text');\n        soapValues.objective = (0, _getText.default)('.note-objective .display-text');\n        soapValues.assessment = (0, _getText.default)('.note-assessment .display-text');\n        soapValues.plan = (0, _getText.default)('.note-plan .display-text');\n\n        // Add addendum\n        await click('.btn-add-addendum');\n        fillIn('.encounter-addendum textarea', ADDENDUM_TEXT);\n        await click('.encounter-addendum .btn-primary');\n        await click((0, _dataElement.default)('actions-menu'));\n        assert.ok(find(ACTIONS_MENU_ITEM).length > 0, 'Copy action is available in the actions menu');\n        await click(ACTIONS_MENU_ITEM);\n        assert.ok(find(`${COPY_MODAL}:visible`).length > 0, 'Copy note modal appears');\n        assert.ok(find(`${COPY_MODAL} .copy-modal div:contains('${EXPECTED_TITLE_SIGNED}')`).length > 0, 'Copy note modal has correct title');\n\n        copyText = (0, _getText.default)(`${COPY_MODAL} .copy-modal-content .text-area`);\n        assert.ok(copyText.indexOf(getExpectedText(soapValues, 'Subjective')) > -1, 'Copy note contains correct Subjective text');\n        assert.ok(copyText.indexOf(getExpectedText(soapValues, 'Objective')) > -1, 'Copy note contains correct Objective text');\n        assert.ok(copyText.indexOf(getExpectedText(soapValues, 'Assessment')) > -1, 'Copy note contains correct Assessment text');\n        assert.ok(copyText.indexOf(getExpectedText(soapValues, 'Plan')) > -1, 'Copy note contains correct Plan text');\n        assert.ok(copyText.indexOf(ADDENDUM_TEXT) > -1, 'Copy note contains the added addendum');\n\n        await click(`${COPY_MODAL} .btn-warning`);\n        assert.ok(find(`${COPY_MODAL}:visible`).length < 1, 'Copy note modal closed properly');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/encounter-creation-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element', 'ember-cli-mirage'], function (_qunit, _moduleForAcceptanceAuth, _dataElement, _emberCliMirage) {\n    'use strict';\n\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const SUMMARY_URL = '/PF/charts/patients/' + PATIENT_GUID + '/summary';\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Visual - Core - Charting | Create encounter from summary - v2');\n\n    (0, _qunit.test)('Encounter - Create From Summary with Proper Date', async assert => {\n        const currentDate = moment().startOf('day').format('MM/DD/YYYY');\n        let dateOfService;\n        server.post('ChartingEndpoint/api/v3/patients/:patientPracticeGuid/encounters', ({ db }, request) => {\n            const data = JSON.parse(request.requestBody);\n            data.transcriptGuid = 'NEW_TRANSCRIPT_GUID';\n            dateOfService = data.dateOfServiceUtc;\n            return data;\n        });\n        server.put('/ChartingEndpoint/api/v3/patients/:patientPracticeGuid/encounters/NEW_TRANSCRIPT_GUID/autosave', () => new _emberCliMirage.default.Response(204, {}));\n        server.put('ChartingEndpoint/api/v3/patients/:patientPracticeGuid/encounters/NEW_TRANSCRIPT_GUID', ({ db }, request) => {\n            const data = JSON.parse(request.requestBody);\n            return data;\n        });\n        await visit(SUMMARY_URL);\n        await click((0, _dataElement.default)('new-soap-note'));\n        const formattedDateOfService = moment.utc(dateOfService).format('MM/DD/YYYY');\n        assert.equal(formattedDateOfService, currentDate, 'Encounter date sent to service is current date.');\n        assert.equal(find('.encounter-tab .menu-label').text().trim(), formattedDateOfService, 'Encounter date renders current date from service properly on tab.');\n        await fillIn((0, _dataElement.default)('encounter-details-date') + ' input', '11/11/2016');\n        await click('.btn-save-encounter');\n        percySnapshot(assert);\n        assert.equal(find('.encounter-tab .menu-label').text().trim(), '11/11/2016', 'Updated encounter date renders properly on tab.');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/encounter-delete-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element', 'boot/tests/helpers/get-text', 'ember-cli-mirage', 'sinon'], function (_qunit, _moduleForAcceptanceAuth, _dataElement, _getText, _emberCliMirage, _sinon) {\n    'use strict';\n\n    const ENCOUNTER_GUID = '7022d94f-d70a-4722-a205-dac898cf9f69';\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const ACTIONS_MENU_ITEM = `${(0, _dataElement.default)('actions-menu-options')} a:contains('Delete encounter')`;\n    const ENCOUNTER_GUID_SIGNED = 'SIGNED_TRANSCRIPT_GUID';\n    const CONFIRM_BUTTON_ITEM = `${(0, _dataElement.default)('confirm-dialog-confirm')}:visible`;\n    const CANCEL_BUTTON_ITEM = `${(0, _dataElement.default)('confirm-dialog-cancel')}:visible`;\n    let toastrSuccessStub;\n    let toastrErrorStub;\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Delete encounter', {\n        beforeEach() {\n            toastrSuccessStub = _sinon.default.stub(window.toastr, 'success');\n            toastrErrorStub = _sinon.default.stub(window.toastr, 'error');\n        },\n        afterEach() {\n            window.toastr.success.restore();\n            window.toastr.error.restore();\n        }\n    });\n\n    (0, _qunit.test)('Able to delete unsigned encounter', async assert => {\n        assert.expect(6);\n        let countDeleteCalled = 0;\n\n        server.del('ChartingEndpoint/api/v2/ChartNote/:encounterGuid', ({ db }, request) => {\n            assert.equal(request.params.encounterGuid, ENCOUNTER_GUID, 'Encounter was sucessfully deleted');\n            countDeleteCalled++;\n            return true;\n        });\n\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/encounter/' + ENCOUNTER_GUID);\n\n        await click((0, _dataElement.default)('actions-menu'));\n        assert.ok(find(ACTIONS_MENU_ITEM).length > 0, 'Delete action is available in the actions menu');\n        await click(ACTIONS_MENU_ITEM);\n        assert.equal((0, _getText.default)(CONFIRM_BUTTON_ITEM), 'Delete', 'Proper confirm dialog is shown when attempting to delete');\n        await click(CANCEL_BUTTON_ITEM);\n        assert.equal(countDeleteCalled, 0, 'Cancelling does not delete the note');\n        await click((0, _dataElement.default)('actions-menu'));\n        await click(ACTIONS_MENU_ITEM);\n        await click(CONFIRM_BUTTON_ITEM);\n        assert.equal(countDeleteCalled, 1, 'Confirming the delete deletes the encounter');\n        assert.equal(toastrSuccessStub.args[0][0], 'Deleted encounter', 'The toast message displayed to confirm the deletion');\n    });\n\n    (0, _qunit.test)('Cannot delete signed encounter', async assert => {\n        assert.expect(1);\n\n        server.del('ChartingEndpoint/api/v2/ChartNote/:encounterGuid', ({ db }, request) => {\n            assert.equal(request.params.encounterGuid, ENCOUNTER_GUID, 'Encounter was sucessfully deleted');\n            return true;\n        });\n\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/encounter/' + ENCOUNTER_GUID_SIGNED);\n        await click((0, _dataElement.default)('actions-menu'));\n        assert.ok(find(ACTIONS_MENU_ITEM).length < 1, 'Delete action is not in the actions menu');\n    });\n\n    (0, _qunit.test)('Attempting to delete encounter that has been attached to a lab order renders toast', async assert => {\n        const labOrderErrorMessage = 'Transcript has associated lab order and cannot be deleted.';\n        let countDeleteCalled = 0;\n        server.del('ChartingEndpoint/api/v2/ChartNote/:encounterGuid', () => {\n            countDeleteCalled++;\n            // Service determines whether or not the encounter has a lab order associated - UI does not send anything to indicate that it is\n            return new _emberCliMirage.default.Response(412, {}, {\n                message: labOrderErrorMessage\n            });\n        });\n\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/encounter/' + ENCOUNTER_GUID);\n        await click((0, _dataElement.default)('actions-menu'));\n        await click(ACTIONS_MENU_ITEM);\n        await click(CONFIRM_BUTTON_ITEM);\n        assert.equal(countDeleteCalled, 1, 'Confirm that deleting the encounter was called.');\n        assert.equal(toastrErrorStub.args[0][0], labOrderErrorMessage, 'The toast message displayed to inform user that encounter failed to delete since it was linked to a lab order.');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/encounter-growth-chart-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element', 'boot/tests/helpers/get-text', 'ember-cli-mirage', 'flowsheets/repositories/flowsheet-data'], function (_qunit, _moduleForAcceptanceAuth, _dataElement, _getText, _emberCliMirage, _flowsheetData) {\n    'use strict';\n\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const TRANSCRIPT_GUID = '7022d94f-d70a-4722-a205-dac898cf9f69';\n    const SUMMARY_URL = '/PF/charts/patients/' + PATIENT_GUID + '/summary';\n    const ENCOUNTER_URL = '/PF/charts/patients/' + PATIENT_GUID + '/encounter/' + TRANSCRIPT_GUID;\n    const GROWTH_CHART_URL = '/PF/charts/patients/' + PATIENT_GUID + '/growthcharts';\n    const GOTO_BTN = '[data-toggle=\"dropdown\"]:contains(\"Go to\")';\n    const GROWTH_CHARTS_BTN = 'a:contains(\"Growth charts\")';\n    const ENCOUNTER_SHOW_GROWTH_CHARTS = (0, _dataElement.default)('show-growth-charts-link');\n    const GIRL_TOOLTIP_TARGET = '.growth-chart.ht-wt.girl svg .line-chart__point-tooltip-target';\n    const BOY_TOOLTIP_TARGET = '.growth-chart.ht-wt.boy svg .line-chart__point-tooltip-target';\n    const INNER_TOOLTIP = '.line-chart__popover-content';\n    const GIRL_CHART_IMAGE = 'g-2-20yr-ht-wt.png';\n    const BOY_CHART_IMAGE = 'b-2-20yr-ht-wt.png';\n    const GROWTH_CHART_IMAGE = (0, _dataElement.default)('growth-chart-child-height-img');\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Encounter and summary growth chart - v2', {\n        beforeEach() {\n            _flowsheetData.default.saveIsMetric(false);\n        }\n    });\n\n    (0, _qunit.test)('Can open growth chart from summary and renders blue chart for male patient', async assert => {\n        await visit(SUMMARY_URL);\n        await click(`${(0, _dataElement.default)('dropdown-go-to')} .composable-select__choice`);\n        await click((0, _dataElement.default)('dropdown-go-to-option-2'));\n        assert.ok(find(GROWTH_CHART_IMAGE).attr('src').split('images/')[1], BOY_CHART_IMAGE, 'Loaded image for growth chart height and weight renders blue chart for male patient.');\n        await click(BOY_TOOLTIP_TARGET + ':first');\n        assert.equal((0, _getText.default)(INNER_TOOLTIP), '3 yrs 70 in', 'First data point point for vitals history - height renders properly on growth chart from summary for male patient.');\n        await click(BOY_TOOLTIP_TARGET + ':eq(1)');\n        assert.equal((0, _getText.default)(INNER_TOOLTIP), '3 yrs 75 in', 'Second data point point for vitals history - height renders properly on growth chart from summary for male patient.');\n        await click(BOY_TOOLTIP_TARGET + ':eq(2)');\n        assert.equal((0, _getText.default)(INNER_TOOLTIP), '3 yrs 120 lb', 'First data point point for vitals history - weight renders properly on growth chart from summary for male patient.');\n        await click(BOY_TOOLTIP_TARGET + ':eq(3)');\n        assert.equal((0, _getText.default)(INNER_TOOLTIP), '3 yrs 130 lb', 'Second data point point for vitals history - weight renders properly on growth chart from summary for male patient.');\n    });\n\n    (0, _qunit.test)('Can open growth chart from encounter and renders blue chart for male patient', async assert => {\n        await visit(ENCOUNTER_URL);\n        await click(GOTO_BTN);\n        await click(GROWTH_CHARTS_BTN);\n        assert.ok(find(GROWTH_CHART_IMAGE).attr('src').split('images/')[1], BOY_CHART_IMAGE, 'Loaded image for growth chart height and weight renders blue chart for male patient.');\n        await click(BOY_TOOLTIP_TARGET + ':first');\n        assert.equal((0, _getText.default)(INNER_TOOLTIP), '3 yrs 70 in', 'First data point point for vitals history - height renders properly on growth chart from encounter for male patient.');\n        await click(BOY_TOOLTIP_TARGET + ':eq(1)');\n        assert.equal((0, _getText.default)(INNER_TOOLTIP), '3 yrs 75 in', 'Second data point point for vitals history - height renders properly on growth chart from encounter for male patient.');\n        await click(BOY_TOOLTIP_TARGET + ':eq(2)');\n        assert.equal((0, _getText.default)(INNER_TOOLTIP), '3 yrs 120 lb', 'First data point point for vitals history - weight renders properly on growth chart from encounter for male patient.');\n        await click(BOY_TOOLTIP_TARGET + ':eq(3)');\n        assert.equal((0, _getText.default)(INNER_TOOLTIP), '3 yrs 130 lb', 'Second data point point for vitals history - weight renders properly on growth chart from encounter for male patient.');\n    });\n\n    (0, _qunit.test)('Can open growth chart from summary and renders red chart for female patient', async assert => {\n        server.get('/PatientEndpoint/api/v1/patients/:id/patientRibbonInfo', ({ db }, request) => {\n            const patientPracticeGuid = request.params.id;\n            const patient = db.patientRibbonInfos.where({ patientPracticeGuid })[0];\n            patient.gender = '1';\n            patient.genderString = 'Female';\n            return patient;\n        });\n        await visit(SUMMARY_URL);\n        await click(`${(0, _dataElement.default)('dropdown-go-to')} .composable-select__choice`);\n        await click((0, _dataElement.default)('dropdown-go-to-option-2'));\n        assert.ok(find(GROWTH_CHART_IMAGE).attr('src').split('images/')[1], GIRL_CHART_IMAGE, 'Loaded image for growth chart height and weight renders red chart for female patient.');\n        await click(GIRL_TOOLTIP_TARGET + ':first');\n        assert.equal((0, _getText.default)(INNER_TOOLTIP), '3 yrs 70 in', 'First data point point for vitals history - height renders properly on growth chart from summary for female patient.');\n        await click(GIRL_TOOLTIP_TARGET + ':eq(1)');\n        assert.equal((0, _getText.default)(INNER_TOOLTIP), '3 yrs 75 in', 'Second data point point for vitals history - height renders properly on growth chart from summary for female patient.');\n        await click(GIRL_TOOLTIP_TARGET + ':eq(2)');\n        assert.equal((0, _getText.default)(INNER_TOOLTIP), '3 yrs 120 lb', 'First data point point for vitals history - weight renders properly on growth chart from summary for female patient.');\n        await click(GIRL_TOOLTIP_TARGET + ':eq(3)');\n        assert.equal((0, _getText.default)(INNER_TOOLTIP), '3 yrs 130 lb', 'Second data point point for vitals history - weight renders properly on growth chart from summary for female patient.');\n    });\n\n    (0, _qunit.test)('Can open growth chart directly and renders properly for female patient.', async assert => {\n        server.get('/PatientEndpoint/api/v1/patients/:id/patientRibbonInfo', ({ db }, request) => {\n            const patientPracticeGuid = request.params.id;\n            const patient = db.patientRibbonInfos.where({ patientPracticeGuid })[0];\n            patient.gender = '1';\n            patient.genderString = 'Female';\n            return patient;\n        });\n        await visit(GROWTH_CHART_URL);\n        assert.ok(find(GROWTH_CHART_IMAGE).attr('src').split('images/')[1], GIRL_CHART_IMAGE, 'Loaded image for growth chart height and weight renders red chart for female patient.');\n        await click(GIRL_TOOLTIP_TARGET + ':first');\n        assert.equal((0, _getText.default)(INNER_TOOLTIP), '3 yrs 70 in', 'First data point point for vitals history - height renders properly on growth chart.');\n        await click(GIRL_TOOLTIP_TARGET + ':eq(1)');\n        assert.equal((0, _getText.default)(INNER_TOOLTIP), '3 yrs 75 in', 'Second data point point for vitals history - height renders properly on growth chart.');\n        await click(GIRL_TOOLTIP_TARGET + ':eq(2)');\n        assert.equal((0, _getText.default)(INNER_TOOLTIP), '3 yrs 120 lb', 'First data point point for vitals history - weight renders properly on growth chart.');\n        await click(GIRL_TOOLTIP_TARGET + ':eq(3)');\n        assert.equal((0, _getText.default)(INNER_TOOLTIP), '3 yrs 130 lb', 'Second data point point for vitals history - weight renders properly on growth chart.');\n    });\n\n    (0, _qunit.test)('Can open growth chart from encounter and can toggle metric units', async assert => {\n        let callCount = 0;\n        server.put('/ChartingEndpoint/api/v1/UserOperation/Metric/:isMetric', ({ db }, request) => {\n            const { isMetric } = request.params;\n            callCount++;\n            if (callCount === 1) {\n                assert.equal(isMetric, 'true', 'Toggling from US Customary to Metric sends true query parameter to metric service call.');\n            } else if (callCount === 2) {\n                assert.equal(isMetric, 'false', 'Toggling from Metric to US Customary sends false query parameter to metric service call.');\n            }\n            return new _emberCliMirage.default.Response(204, {}, null);\n        });\n        await visit(ENCOUNTER_URL);\n        await click(ENCOUNTER_SHOW_GROWTH_CHARTS);\n        // Confirm that US customary first\n        const flowsheetMetricToggle = 'flowsheet-metric-toggle-link';\n        assert.equal(find((0, _dataElement.default)(flowsheetMetricToggle)).text(), 'US Customary', 'Encounter loads with US Customary units');\n        // Toggle to Metric\n        await click((0, _dataElement.default)(flowsheetMetricToggle));\n        assert.equal(find((0, _dataElement.default)(flowsheetMetricToggle)).text(), 'Metric', 'Encounter flowsheet metric toggle now renders Metrics units');\n        await click(BOY_TOOLTIP_TARGET + ':first');\n        assert.equal((0, _getText.default)(INNER_TOOLTIP), '3 yrs 177.8 cm', 'First data point point for vitals history - metric height renders properly on growth chart from encounter.');\n        await click(BOY_TOOLTIP_TARGET + ':eq(1)');\n        assert.equal((0, _getText.default)(INNER_TOOLTIP), '3 yrs 190.5 cm', 'Second data point point for vitals history - metric height renders properly on growth chart from encounter.');\n        await click(BOY_TOOLTIP_TARGET + ':eq(2)');\n        assert.equal((0, _getText.default)(INNER_TOOLTIP), '3 yrs 54.43 kg', 'First data point point for vitals history - metric weight renders properly on growth chart from encounter.');\n        await click(BOY_TOOLTIP_TARGET + ':eq(3)');\n        assert.equal((0, _getText.default)(INNER_TOOLTIP), '3 yrs 58.97 kg', 'Second data point point for vitals history - metric weight renders properly on growth chart from encounter.');\n\n        // Toggle back to US Customary\n        await click((0, _dataElement.default)(flowsheetMetricToggle));\n        await click(BOY_TOOLTIP_TARGET + ':first');\n        assert.equal((0, _getText.default)(INNER_TOOLTIP), '3 yrs 70 in', 'First data point point for vitals history - US Customary height renders properly on growth chart from encounter.');\n        await click(BOY_TOOLTIP_TARGET + ':eq(1)');\n        assert.equal((0, _getText.default)(INNER_TOOLTIP), '3 yrs 75 in', 'Second data point point for vitals history - US Customary height renders properly on growth chart from encounter.');\n        await click(BOY_TOOLTIP_TARGET + ':eq(2)');\n        assert.equal((0, _getText.default)(INNER_TOOLTIP), '3 yrs 120 lb', 'First data point point for vitals history - US Customary weight renders properly on growth chart from encounter.');\n        await click(BOY_TOOLTIP_TARGET + ':eq(3)');\n        assert.equal((0, _getText.default)(INNER_TOOLTIP), '3 yrs 130 lb', 'Second data point point for vitals history - US Customary weight renders properly on growth chart from encounter.');\n    });\n\n    (0, _qunit.test)('Can open growth chart from summary and renders metric units for patient', async assert => {\n        server.put('/ChartingEndpoint/api/v1/UserOperation/Metric/true', () => null);\n        await visit(SUMMARY_URL);\n        await click(`${(0, _dataElement.default)('dropdown-go-to')} .composable-select__choice`);\n        await click((0, _dataElement.default)('dropdown-go-to-option-2'));\n        await click('.btn.heading-action.pull-left');\n        await click(BOY_TOOLTIP_TARGET + ':first');\n        assert.equal((0, _getText.default)(INNER_TOOLTIP), '3 yrs 177.8 cm', 'First data point point for vitals history - metric height renders properly on growth chart from summary.');\n        await click(BOY_TOOLTIP_TARGET + ':eq(1)');\n        assert.equal((0, _getText.default)(INNER_TOOLTIP), '3 yrs 190.5 cm', 'Second data point point for vitals history - metric height renders properly on growth chart from summary.');\n        await click(BOY_TOOLTIP_TARGET + ':eq(2)');\n        assert.equal((0, _getText.default)(INNER_TOOLTIP), '3 yrs 54.43 kg', 'First data point point for vitals history - metric weight renders properly on growth chart from summary.');\n        await click(BOY_TOOLTIP_TARGET + ':eq(3)');\n        assert.equal((0, _getText.default)(INNER_TOOLTIP), '3 yrs 58.97 kg', 'Second data point point for vitals history - metric weight renders properly on growth chart from summary.');\n    });\n\n    (0, _qunit.test)('Can open growth chart from encounter and toggling between patients renders the correct plot points', async assert => {\n        let growthChartCount = 0;\n        let encounterSummaryCount = 0;\n        server.put('/ChartingEndpoint/api/v1/UserOperation/Metric/true', () => null);\n        server.get('/ChartingEndpoint/api/v3/patients/:patientGuid/growthCharts', ({ db }) => {\n            growthChartCount++;\n            const growthCharts = db.growthCharts;\n            if (growthChartCount === 2) {\n                return [{\n                    'observationGuid': '08d3fd32-2c26-898f-981b-1afcc19ae937',\n                    'transcriptGuid': 'GROWTH_CHART_TRANSCRIPT_EMPTY',\n                    'eventSetGuid': '6087f089-9789-4a8e-8642-5ebfeb615658',\n                    'patientPracticeGuid': 'c5faffde-78e2-4924-acaf-2115bc686d5e',\n                    'eventDateTimeUtc': '2016-10-25T23:53:00Z',\n                    'code': {\n                        'codeSystem': 'LOINC',\n                        'code': '8302-2'\n                    },\n                    'value': '150.0',\n                    'units': 'cm'\n                }];\n            }\n            return growthCharts;\n        });\n        server.get('ChartingEndpoint/api/v2/EncounterSummary', ({ db }) => {\n            encounterSummaryCount++;\n            if (encounterSummaryCount === 2) {\n                return [{\n                    'transcriptGuid': 'GROWTH_CHART_TRANSCRIPT_EMPTY',\n                    'encounterType': 'Office Visit',\n                    'dateOfService': '2016-01-19T00:00:00Z',\n                    'seenByProvider': '',\n                    'seenByProviderGuid': 'eaa90f53-9dfa-4c2a-93db-83f3b3243d5b',\n                    'signed': false,\n                    'noteType': 'SOAP Note',\n                    'facilityGuid': 'cac98ae6-1add-4780-b923-1df79732add6',\n                    'createdDateTime': '2016-01-19T18:07:11.85Z',\n                    'lastModifiedDateTime': '2016-03-04T19:31:52.233Z'\n                }];\n            }\n            return db.encounterSummaries;\n        });\n        await visit(SUMMARY_URL);\n        await click((0, _dataElement.default)('encounter-item-0'));\n        await click((0, _dataElement.default)('show-growth-charts-link'));\n        await click('[data-tracking=\"Patient lists\"]');\n        await wait();\n        await click('[data-guid=\"c5faffde-78e2-4924-acaf-2115bc686d5e\"]');\n        // Get another patient's encounter\n        await click((0, _dataElement.default)('encounter-item-0'));\n        assert.ok('ok');\n        await click(BOY_TOOLTIP_TARGET + ':first');\n        assert.equal((0, _getText.default)(INNER_TOOLTIP), '3 yrs 59.06 in', 'Data point for vitals history in growth charts renders for second patient.');\n        await click('.menu-label:contains(\"Some L Baby\")');\n        await click(BOY_TOOLTIP_TARGET + ':first');\n        assert.equal((0, _getText.default)(INNER_TOOLTIP), '3 yrs 70 in', 'Data point for vitals history in growth charts renders correctly for first patient after toggling from one patient to another.');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/encounter-limited-access-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element'], function (_qunit, _moduleForAcceptanceAuth, _dataElement) {\n    'use strict';\n\n    const TRANSCRIPT_GUID = 'UNSIGNED_ENCOUNTER_WITH_SIA';\n    const PATIENT_PRACTICE_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const TOOLBAR = '.encounter-container .control-bar';\n    const ACTIONS_MENU = (0, _dataElement.default)('actions-menu-options');\n    const FLOWSHEET_CELL_POPUP = '.flowsheet-cell-details-popup';\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Encounter limited access - v2', {\n        beforeLogin() {\n            server.get('AuthzEndpoint/api/v1/users/:id/rights', () => ({\n                entitledFeatures: ['ERX.Send', 'Chart.Sign', 'EPCS.Send']\n            }));\n        }\n    });\n\n    function assertEncounterSections(assert) {\n        // Encounter toolbar\n        assert.dom(`${TOOLBAR} .btn-save-encounter`).doesNotExist('Save button is hidden');\n        assert.dom(`${TOOLBAR} .btn-sign`).doesNotExist('Sign button is hidden');\n\n        // Encounter details\n        assert.dom((0, _dataElement.default)('encounter-details-encounter-type-dropdown')).doesNotExist('Encounter type is not a dropdown');\n        assert.dom((0, _dataElement.default)('encounter-details-note-type-dropdown')).doesNotExist('Note type is not a dropdown');\n        assert.dom(`${(0, _dataElement.default)('encounter-details-date')} .k-datepicker`).doesNotExist('Encounter date is not a date picker');\n        assert.dom((0, _dataElement.default)('encounter-details-seen-by-dropdown')).doesNotExist('Seen by is not a dropdown');\n        assert.dom((0, _dataElement.default)('encounter-details-facility-dropdown')).doesNotExist('Facility is not a dropdown');\n\n        // Flowsheets\n        assert.dom((0, _dataElement.default)('flowsheet-top-edit-button')).doesNotExist('Edit flowsheets button is hidden');\n        assert.dom((0, _dataElement.default)('flowsheet-add-column-link')).doesNotExist('Add column button is hidden');\n        assert.dom((0, _dataElement.default)('flowsheet-edit-link')).doesNotExist('Edit individual flowsheet button is hidden');\n        assert.dom('.flowsheet-table .flowsheet-add-column').doesNotExist('\"Add column\" column on a flowsheet does not exist');\n        assert.dom(`.flowsheet-table .flowsheet-cell ${(0, _dataElement.default)('flowsheet-cell-value-and-units')}`).doesNotExist('No flowsheet cells are editable');\n\n        // Record buttons\n        assert.dom('#chief-complaint .heading-action').doesNotExist('CC Record button is hidden');\n        assert.dom((0, _dataElement.default)('encounter-record-diagnoses-btn')).doesNotExist('Diagnoses record button is hidden');\n        assert.dom((0, _dataElement.default)('add-allergy-button')).doesNotExist('Allergies record button is hidden');\n        assert.dom((0, _dataElement.default)('encounter-record-medication-btn')).doesNotExist('Medications record button is hidden');\n        assert.dom(`${(0, _dataElement.default)('smoking-status-header')} .btn.heading-action`).doesNotExist('Smoking status record button is hidden');\n        assert.dom((0, _dataElement.default)('encounter-record-pmh-btn')).doesNotExist('PMH record button is hidden');\n        assert.dom((0, _dataElement.default)('pmh-record-allergy-link')).doesNotExist('PMH record allergy link is hidden');\n        assert.dom((0, _dataElement.default)('edit-note-subjective')).doesNotExist('Edit subjective button is hidden');\n        assert.dom((0, _dataElement.default)('edit-note-objective')).doesNotExist('Edit objective button is hidden');\n        assert.dom((0, _dataElement.default)('edit-note-assessment')).doesNotExist('Edit assessment button is hidden');\n        assert.dom((0, _dataElement.default)('edit-note-plan')).doesNotExist('Edit plan button is hidden');\n        assert.dom('.orders-attached-to-encounter > div .btn.heading-action').doesNotExist('Add labs and imaging order buttons are hidden');\n        assert.dom('.encounter-documents .btn.heading-action').doesNotExist('Attach document button is hidden');\n        assert.dom('#dFinalizeEvents .btn.heading-action').doesNotExist('Add SIA button is hidden');\n        assert.dom('#observations .btn.heading-action').doesNotExist('Record functional and cognitive status buttons are hidden');\n        assert.dom(`#dFinalizeCarePlan ${(0, _dataElement.default)('auto-saving-text-area-edit')}`).doesNotExist('Record care plan button is hidden');\n        assert.dom((0, _dataElement.default)('add-referral-button')).doesNotExist('Add referral button is hidden');\n        assert.dom('#dFinalizeSuperbill .btn.heading-action').doesNotExist('Add/edit superbill button is hidden');\n        assert.dom('#dFinalizeQOC input[type=\"checkbox\"]').isDisabled('QoC checkboxes are disabled');\n        assert.dom('.patient-health-concerns-list >.btn').doesNotExist('Add health concerns button and Edit health concern note button are hidden');\n    }\n    function assertActionsMenuItemIsDisabled(assert, text) {\n        assert.dom(find(`${ACTIONS_MENU} a:contains(\"${text}\")`)[0]).hasClass('disabled', `Actions menu item \"${text}\" is disabled`);\n    }\n    function assertActionsMenuItemIsEnabled(assert, text) {\n        assert.dom(find(`${ACTIONS_MENU} a:contains(\"${text}\")`)[0]).doesNotHaveClass('disabled', `Actions menu item \"${text}\" is enabled`);\n    }\n    async function assertActionsMenu(assert) {\n        await click((0, _dataElement.default)('actions-menu'));\n        assertActionsMenuItemIsDisabled(assert, 'Add referral');\n        assertActionsMenuItemIsDisabled(assert, 'Edit superbill');\n        assertActionsMenuItemIsDisabled(assert, 'Copy note to clipboard');\n        assertActionsMenuItemIsDisabled(assert, 'Delete encounter');\n        assertActionsMenuItemIsDisabled(assert, 'Send follow-up message');\n        assertActionsMenuItemIsDisabled(assert, 'Add imaging order');\n        assertActionsMenuItemIsDisabled(assert, 'Add lab order');\n        assertActionsMenuItemIsDisabled(assert, 'Copy link to patient');\n        assertActionsMenuItemIsDisabled(assert, 'Invite to patient portal');\n        assertActionsMenuItemIsDisabled(assert, 'Enter imaging results');\n        assertActionsMenuItemIsDisabled(assert, 'Enter lab results');\n        assertActionsMenuItemIsDisabled(assert, 'Send message');\n        assertActionsMenuItemIsDisabled(assert, 'Create task');\n        assertActionsMenuItemIsEnabled(assert, 'View imaging orders');\n        assertActionsMenuItemIsEnabled(assert, 'View lab orders');\n        assertActionsMenuItemIsEnabled(assert, 'Print encounter');\n        assertActionsMenuItemIsEnabled(assert, 'Print visit summary');\n        assertActionsMenuItemIsEnabled(assert, 'Syndromic Surveillance');\n        assertActionsMenuItemIsEnabled(assert, 'Create clinical document');\n        assertActionsMenuItemIsEnabled(assert, 'Print patient chart');\n        assertActionsMenuItemIsEnabled(assert, 'Refresh patient chart');\n        assertActionsMenuItemIsEnabled(assert, 'View access history');\n        assertActionsMenuItemIsEnabled(assert, 'View exported patient records');\n        assertActionsMenuItemIsEnabled(assert, 'View recent activity');\n    }\n    async function assertFlowsheets(assert) {\n        await click('.flowsheet-table .flowsheet-cell.selectable:not(.flowsheet-table-header):first');\n        assert.dom(`${FLOWSHEET_CELL_POPUP} ${(0, _dataElement.default)('flowsheet-validated-cell-result')}`).doesNotExist('No edit fields in flowsheet cell popup');\n        assert.dom(`${FLOWSHEET_CELL_POPUP} .comments-container textarea`).doesNotExist('Comments text area is hidden');\n        assert.dom((0, _dataElement.default)('flowsheet-cell-popup-delete-button')).doesNotExist('Delete button is hidden');\n        assert.dom((0, _dataElement.default)('flowsheet-cell-popup-done-button')).hasText('Done');\n    }\n    async function assertDxDetails(assert) {\n        await click((0, _dataElement.default)('acute-dx-0'));\n        assert.dom(`.diagnosis-detail ${(0, _dataElement.default)('diagnosis-attach-to-encounter')} input[type=\"checkbox\"]`).doesNotExist('Dx attach diagnosis to encounter checkbox is hidden');\n        assert.dom('.diagnosis-detail #acuity-chronic').isDisabled('Dx chronic radio button is disabled');\n        assert.dom('.diagnosis-detail #acuity-acute').isDisabled('Dx acute radio button is disabled');\n        assert.dom('.diagnosis-detail #start-dates input').isDisabled('Dx start date picker is disabled');\n        assert.dom('.diagnosis-detail #start-stop input').isDisabled('Dx stop date picker is disabled');\n        assert.dom(`.diagnosis-detail ${(0, _dataElement.default)('dx-add-medication-link')}`).doesNotExist('Associate med with Dx link is hidden');\n        assert.dom(`.diagnosis-detail ${(0, _dataElement.default)('dx-show-comment-link')}`).doesNotExist('Dx edit comment link is hidden');\n        assert.dom(`.diagnosis-detail ${(0, _dataElement.default)('delete-diagnosis-button')}`).doesNotExist('Save Dx button is hidden');\n    }\n    async function assertAllergiesDetails(assert) {\n        await click(`.encounter-allergies-container ${(0, _dataElement.default)('active-allergy')}:first`);\n        assert.dom(`.allergy-details ${(0, _dataElement.default)('allergy-severity-button-group')}`).doesNotExist('Allergy severity button group is hidden');\n        assert.dom(`.allergy-details ${(0, _dataElement.default)('allergy-reactions-select')}`).doesNotExist('Allergy reactions select is hidden');\n        assert.dom('.allergy-details .onset-section .ember-button-group').doesNotExist('Allergy onset button group is hidden');\n        assert.dom('.allergy-details .onset-section .k-datepicker').doesNotExist('Allergy onset datepicker is hidden');\n        assert.dom(`.allergy-details ${(0, _dataElement.default)('allergy-comment')}`).doesNotExist('Allergy comment textarea is hidden');\n        assert.dom('.allergy-details .make-switch').doesNotExist('Allergy status switch is hidden');\n        assert.dom(`.allergy-details ${(0, _dataElement.default)('btn-delete')}`).doesNotExist('Allergy delete button is hidden');\n        assert.dom('.allergy-details .detail-pane-footer .btn-primary').doesNotExist('Allergy save button is hidden');\n    }\n    async function assertMedDetails(assert) {\n        await click('.medications-grid .data-grid-cell a:first');\n        assert.dom(`.medication-detail ${(0, _dataElement.default)('sig-search')}`).doesNotExist('Med sig search is hidden');\n        assert.dom('.medication-detail .sig-text textarea').doesNotExist('Med sig textarea is hidden');\n        assert.dom(`.medication-detail ${(0, _dataElement.default)('quantity-txt')}`).doesNotExist('Med dispense quantity input is hidden');\n        assert.dom(`.medication-detail ${(0, _dataElement.default)('doseForm-search')}`).doesNotExist('Med unit search is hidden');\n        assert.dom(`.medication-detail ${(0, _dataElement.default)('daysSupply-txt')}`).doesNotExist('Med days supply input is hidden');\n        assert.dom(`.medication-detail ${(0, _dataElement.default)('diagnosis-search')}`).doesNotExist('Med associate with dx search is hidden');\n        assert.dom('.medication-detail #start-dates input').doesNotExist('Med start date picker is hidden');\n        assert.dom('.medication-detail #start-stop input').doesNotExist('Med stop date picker is hidden');\n        assert.dom(`.medication-detail ${(0, _dataElement.default)('medication-comment-txt')}`).doesNotExist('Med comment text box is hidden');\n        assert.dom(`.medication-detail ${(0, _dataElement.default)('attachToEncounter-ck')} input[type=\"checkbox\"]`).isDisabled('Med attach to encounter checkbox is disabled');\n        assert.dom(`.medication-detail ${(0, _dataElement.default)('medication-detail-footer-buttons')}`).doesNotExist('Med footer buttons are hidden');\n    }\n    async function assertSocialHistory(assert) {\n        click(`${(0, _dataElement.default)('smoking-status-item')}:first`).then(() => assert.dom('.smoking-detail').doesNotExist('Smoking status detail pane is hidden'));\n        await click(`${(0, _dataElement.default)('gender-identity-item')}:first`);\n        assert.dom('.social-history-detail input[type=\"radio\"]').isDisabled('Social history radio buttons are disabled');\n        assert.dom(`.social-history-detail ${(0, _dataElement.default)('gender-identity-delete')}`).doesNotExist('Delete gender identity link is hidden');\n        assert.dom('.social-history-detail .detail-pane-footer .btn-primary').doesNotExist('Social history save button is hidden');\n    }\n    async function assertSia(assert) {\n        await click('#dFinalizeEvents li:first');\n        // Verify the editable fields are not visible on the details pane anymore.\n        assert.dom(`.event-details ${(0, _dataElement.default)('sia-status-select')}`).doesNotExist('SIA status dropdown is hidden');\n        assert.dom(`.event-details ${(0, _dataElement.default)('sia-reason-select')}`).doesNotExist('SIA reason dropdown is hidden');\n        assert.dom(`.event-details ${(0, _dataElement.default)('sia-result-select')}`).doesNotExist('SIA result dropdown is hidden');\n        assert.dom('.event-details .k-datepicker').doesNotExist('SIA datepickers are hidden');\n        assert.dom('.event-details textareas').doesNotExist('SIA comment field is hidden');\n        assert.dom(`.event-details ${(0, _dataElement.default)('sia-delete-button')}`).doesNotExist('SIA delete button is hidden');\n\n        // Verify the read-only fields are displayed on the details pane.\n        assert.dom('.event-details .title').exists({ count: 6 });\n    }\n    async function assertObservations(assert) {\n        await click(`#dFinalizeObservations ${(0, _dataElement.default)('observation-description')}:first`);\n        assert.dom('.observation-detail .k-datepicker input').isDisabled('Observation date picker is disabled');\n        assert.dom(`.observation-details ${(0, _dataElement.default)('btn-delete')}`).doesNotExist('Observation delete button is hidden');\n        assert.dom(`.observation-details ${(0, _dataElement.default)('btn-save')}`).doesNotExist('Observation save button is hidden');\n    }\n    async function assertSuperbill(assert) {\n        await click('#dFinalizeSuperbill .d-complex-list-container a:first');\n        assert.dom((0, _dataElement.default)('edit-procedure')).doesNotExist('Superbill edit procedure link is hidden');\n        assert.dom((0, _dataElement.default)('remove-procedure')).doesNotExist('Superbill remove procedure link is hidden');\n        assert.dom('.procedure-edit-diagnosis .inline-edit-link').doesNotExist('Superbill delete Dx link is hidden');\n        assert.dom((0, _dataElement.default)('edit-diagnosis-button')).doesNotExist('Superbill add Dx link is hidden');\n        assert.dom((0, _dataElement.default)('edit-modifiers-button')).doesNotExist('Superbill add modifiers link is hidden');\n        assert.dom((0, _dataElement.default)('add-procedure')).doesNotExist('Superbill add procedure link is hidden');\n        assert.dom((0, _dataElement.default)('edit-other-details')).doesNotExist('Superbill edit other details link is hidden');\n        assert.dom('.patient-superbill .button-bar .btn-group.dropdown').doesNotExist('Superbill save button dropdown is hidden');\n    }\n    (0, _qunit.test)('Encounter is disabled in limited access mode', async assert => {\n        await visit(`/PF/charts/patients/${PATIENT_PRACTICE_GUID}/encounter/${TRANSCRIPT_GUID}`);\n        assertEncounterSections(assert);\n        await assertActionsMenu(assert);\n        await assertFlowsheets(assert);\n        await assertDxDetails(assert);\n        await assertAllergiesDetails(assert);\n        await assertMedDetails(assert);\n        click(`.medication-detail ${(0, _dataElement.default)('cancel-btn')}`);\n        await assertSocialHistory(assert);\n        await assertSia(assert);\n        await assertObservations(assert);\n        assertSuperbill(assert);\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/encounter-migraine-assessment-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element'], function (_qunit, _moduleForAcceptanceAuth, _dataElement) {\n    'use strict';\n\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const TRANSCRIPT_GUID = '7022d94f-d70a-4722-a205-dac898cf9f69';\n    const SIA_SECTION = 'section #dFinalizeEvents';\n    const SIA_SECTION_HEADER = `${SIA_SECTION} header:contains('Screenings/ Interventions/ Assessments')`;\n    const SIA_ADD_ITEM = `${SIA_SECTION} a:contains('Add item')`;\n    const SIA_SELECT_FIELD = `${SIA_SECTION} .sia-search-single-select`;\n    const SIA_TEXT_SEARCH = `${SIA_SELECT_FIELD} input`;\n    const MIGRAINE_SEARCH_ITEM = `${SIA_SECTION} .sia-search-single-select .ember-select-result-item a:contains(\"MIDAS\")`;\n    const MIDAS_EDITABLE_SELECT_INPUTS = '.days-selector .editable-select input.form-control';\n    const SCORE_15_GRADE_III_TEXT = '15 - Grade III, moderate disability';\n    const SCORE_30_GRADE_IV_TEXT = '30 - Grade IV, severe disability';\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Encounter MIDAS assesment worksheet');\n\n    (0, _qunit.test)('Can add, edit and migraine assessment worksheet', async assert => {\n        assert.expect(10);\n\n        server.post('ChartingEndpoint/api/v3/patients/:patientGuid/transcriptEvents', ({ db }) => db.midasTranscriptEvents[0]);\n\n        server.post('ChartingEndpoint/api/v2/WorksheetResponses', ({ db }, request) => {\n            const requestBody = JSON.parse(request.requestBody);\n            const { responses } = requestBody;\n            assert.equal(responses.length, 12, 'The proper number of responses are present in the response.');\n            return {};\n        });\n\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/encounter/' + TRANSCRIPT_GUID);\n        assert.ok(find(SIA_SECTION_HEADER).length > 0, 'Sia header section exists.');\n        await click(SIA_ADD_ITEM);\n        await fillIn(SIA_TEXT_SEARCH, 'Migraine');\n        await keyEvent(`${SIA_SECTION} .sia-search-single-select`, 'keydown', 13);\n        await wait();\n        await click(MIGRAINE_SEARCH_ITEM);\n        assert.ok(find('.right-module .right-module-top h15').text().trim() === 'Screenings/ Interventions/ Assessments > Record', 'Module heading renders properly');\n        assert.dom((0, _dataElement.default)('worksheet-display-name')).hasText('Migraine disability assessment test', 'Module title render properly');\n        assert.equal(find(MIDAS_EDITABLE_SELECT_INPUTS).toArray().length, 6, 'There are 6 editable inputs');\n        assert.dom((0, _dataElement.default)('worksheet-score')).hasText('No score', 'The proper score is render when worksheet is displayed');\n        assert.dom((0, _dataElement.default)('btn-worksheet-save')).isDisabled('Save button is disabled if there is no score');\n        click(`${(0, _dataElement.default)('worksheet-question-0')} button`);\n        click(`${(0, _dataElement.default)('worksheet-question-0')} .editable-select ul.dropdown-menu li:eq(3) a`);\n        click(`${(0, _dataElement.default)('worksheet-question-2')} .editable-select ul.dropdown-menu li:eq(3) a`);\n        click(`${(0, _dataElement.default)('worksheet-question-4')} .editable-select ul.dropdown-menu li:eq(3) a`);\n        click(`${(0, _dataElement.default)('worksheet-question-6')} .editable-select ul.dropdown-menu li:eq(3) a`);\n        await click(`${(0, _dataElement.default)('worksheet-question-8')} .editable-select ul.dropdown-menu li:eq(3) a`);\n        assert.dom(`${(0, _dataElement.default)('worksheet-score')}`).hasText(SCORE_15_GRADE_III_TEXT, 'The proper score and summary text is render based on the response values');\n        await click(`${(0, _dataElement.default)('worksheet-question-10')} .editable-select ul.dropdown-menu li:eq(7) a`);\n        assert.dom(`${(0, _dataElement.default)('worksheet-score')}`).hasText(SCORE_15_GRADE_III_TEXT, 'Changing a non required numeric input field does not affect worksheet scoring.');\n        await click(`${(0, _dataElement.default)('worksheet-question-0')} .editable-select ul.dropdown-menu li:eq(18) a`);\n        assert.dom(`${(0, _dataElement.default)('worksheet-score')}`).hasText(SCORE_30_GRADE_IV_TEXT, 'Changing a required field affects worksheet scoring. And updates the summary text.');\n        click(`${(0, _dataElement.default)('btn-worksheet-save')}`);\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/encounter-note-save-test', ['qunit', 'ember-cli-mirage', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element'], function (_qunit, _emberCliMirage, _moduleForAcceptanceAuth, _dataElement) {\n    'use strict';\n\n    const TRANSCRIPT_GUID = '7022d94f-d70a-4722-a205-dac898cf9f69';\n    const PATIENT_PRACTICE_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const NOTE_NEXT = '.auto-saving-section .right-module-bottom .save';\n    const SAVE_ENCOUNTER = '.btn-save-encounter';\n    const OBJECTIVE_TEXT = 'Test objective text';\n\n    let emberError;\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Encounter note save', {\n        // We don't want to fail the test when the 500 is returned from the autosave endpoint\n        // https://github.com/emberjs/ember.js/issues/12791#issuecomment-218561153\n        beforeEach() {\n            emberError = Ember.onerror;\n            Ember.onerror = arg => {\n                if (arg && arg.status === 500) {\n                    return null;\n                }\n                throw arg;\n            };\n        },\n        afterEach() {\n            Ember.onerror = emberError;\n        }\n    });\n\n    (0, _qunit.test)('Manual save on encounter functions correctly on autosave failure', async assert => {\n        let autosaveCallCount = 0;\n        let fullSaveCount = 0;\n        server.put('ChartingEndpoint/api/v3/patients/:patientPracticeGuid/encounters/:transcriptGuid/autosave', () => {\n            autosaveCallCount++;\n            return new _emberCliMirage.default.Response(500, {}, null);\n        });\n\n        server.put('ChartingEndpoint/api/v3/patients/:patientPracticeGuid/encounters/:transcriptGuid', ({ db }, request) => {\n            fullSaveCount++;\n            return JSON.parse(request.requestBody);\n        });\n\n        await visit(`/PF/charts/patients/${PATIENT_PRACTICE_GUID}/encounter/${TRANSCRIPT_GUID}`);\n        click((0, _dataElement.default)('edit-note-subjective'));\n        await click(NOTE_NEXT);\n        assert.equal(autosaveCallCount, 0, 'The autosave endpoint was not called because the encounter is not dirty');\n        fillInRichText('.auto-saving-section .rich-text-editor', OBJECTIVE_TEXT);\n        await click(NOTE_NEXT);\n        assert.equal(autosaveCallCount, 1, 'The autosave endpoint was called because the encounter is dirty');\n        click(NOTE_NEXT);\n        click(NOTE_NEXT);\n        await click(SAVE_ENCOUNTER);\n        assert.equal(fullSaveCount, 1, 'The full save endpoint was called since the autosave failed');\n        await click(SAVE_ENCOUNTER);\n        assert.equal(fullSaveCount, 1, 'The encounter was not saved since it is not dirty');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/encounter-preview-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element', 'flowsheets/repositories/flowsheet-data'], function (_qunit, _moduleForAcceptanceAuth, _dataElement, _flowsheetData) {\n    'use strict';\n\n    const SIGNED_ENCOUNTER_GUID = '82a597e5-b1b8-46e4-8a07-5c3a4f778e95';\n    const PATIENT_PRACTICE_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const SUMMARY_URL = `/PF/charts/patients/${PATIENT_PRACTICE_GUID}/summary`;\n    const ENCOUNTER_URL = `/PF/charts/patients/${PATIENT_PRACTICE_GUID}/encounter/${SIGNED_ENCOUNTER_GUID}`;\n    const signedEncounterItem = `.previews [data-guid=\"${SIGNED_ENCOUNTER_GUID}\"]`;\n    const previewIcon = (0, _dataElement.default)('quick-preview-icon');\n    const visiblePreviewPopover = '.patient-previews .popover-modal.visible';\n    const previewItem = text => `.patient-previews .previews :contains('${text}')`;\n    const filterItem = text => `.patient-previews .filter-bar ${(0, _dataElement.default)('preview-type')} .dropdown-menu li:contains('${text}')`;\n    const getVitalValue = vital => find(`${(0, _dataElement.default)('preview-encounter-vitals')} [data-vital='${vital}'] .encounter-vital-observation`).text().replace(/\\s/g, '');\n    const getSection = section => find(`${(0, _dataElement.default)('preview-encounter-' + section)} .display-text`).text();\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Encounter preview - v2', {\n        beforeEach() {\n            _flowsheetData.default.saveIsMetric(false);\n        }\n    });\n\n    (0, _qunit.test)('Open encounter from quick preview', async assert => {\n        const previewTitle = (0, _dataElement.default)('preview-header-title');\n        visit(SUMMARY_URL);\n        await click(previewIcon);\n        assert.throws(findWithAssert(visiblePreviewPopover), 'The patient preview popover is visible after clicking the clock icon');\n        assert.throws(findWithAssert(previewItem('SOAP Note')), 'The previews contain SOAP notes');\n        assert.throws(findWithAssert(previewItem('Lab order')), 'The previews contain lab orders');\n        assert.throws(findWithAssert(previewItem('Lab result')), 'The previews contain lab results');\n        assert.throws(findWithAssert(`${signedEncounterItem} .icon-lock`), 'The lock icon appears on signed items');\n        assert.throws(findWithAssert(`.previews ${(0, _dataElement.default)('preview-0')}.active`), 'The first item in the list is selected when the preview popover opens');\n        assert.throws(findWithAssert(`.patient-previews .filter-bar ${(0, _dataElement.default)('preview-type')} .ember-select-choice:contains('Show all types')`), 'The \"Show all types\" filter is selected');\n\n        await click('.filter-bar .ember-select-choice');\n        assert.throws(findWithAssert(filterItem('Encounters')), 'The Encounters filter is present');\n        assert.throws(findWithAssert(filterItem('Lab orders')), 'The Lab orders filter is present');\n        assert.throws(findWithAssert(filterItem('Lab results')), 'The Lab results filter is present');\n        assert.throws(findWithAssert(filterItem('Imaging orders')), 'The Imaging orders filter is present');\n        assert.throws(findWithAssert(filterItem('Imaging results')), 'The Imaging results filter is present');\n\n        assert.equal(find(previewTitle).text(), '03/08/2016 - SOAP Note', 'The header contains the correct value');\n\n        await click(signedEncounterItem);\n        await waitForPromise(null, 'loadingPromise', find('.preview-pane').attr('id'));\n        assert.equal(find(previewTitle).text(), '01/05/2016 - SOAP Note', 'The header changed to the new value');\n        assert.equal(find((0, _dataElement.default)('preview-encounter-type')).text(), 'Office Visit', 'The encounter type is correct');\n        assert.equal(find((0, _dataElement.default)('preview-encounter-age')).text(), '35 mos', 'The age is correct');\n        assert.equal(find((0, _dataElement.default)('preview-encounter-seen-by')).text(), 'George Bush M.D.', 'The snapshotted seen by provider is correct');\n        assert.equal(find((0, _dataElement.default)('preview-encounter-seen-on')).text(), 'Jan 05 2016', 'The seen on date is correct');\n        assert.equal(find((0, _dataElement.default)('preview-encounter-signed-by')).text(), 'George Bush M.D.', 'The snapshotted signed by provider is correct');\n        assert.equal(find((0, _dataElement.default)('preview-encounter-cc')).text(), 'Chiefly complaining', 'The cc is correct');\n        assert.equal(getVitalValue('Weight'), '45lb', 'The weight is correct');\n        assert.equal(getVitalValue('Height'), '36in', 'The height is correct');\n        assert.equal(getVitalValue('BMI'), '24.41', 'The bmi is correct');\n        assert.equal(getVitalValue('BP'), '12033', 'The blood pressure is correct');\n        assert.equal(getSection('subjective'), 'Some subjective', 'The subjective is correct');\n        assert.equal(getSection('objective'), '', 'The objective is correct');\n        assert.equal(getSection('assessment'), 'Some assessment', 'The assessment is correct');\n        assert.equal(getSection('plan'), 'Some plan', 'The plan is correct');\n\n        await click((0, _dataElement.default)('open-preview'));\n        assert.notOk(find(visiblePreviewPopover).length, 'The patient preview popover is no longer visible');\n        assert.equal(currentURL(), ENCOUNTER_URL, 'The encounter was opened');\n        click('.encounter-tab .icon-go-away-small');\n    });\n\n    (0, _qunit.test)('Open encounter from more vitals... link', async assert => {\n        visit(SUMMARY_URL);\n        await click(previewIcon);\n        assert.throws(findWithAssert(visiblePreviewPopover), 'The patient preview popover is visible after clicking the clock icon');\n        click(signedEncounterItem);\n        await click((0, _dataElement.default)('preview-encounter-more-vitals'));\n        assert.notOk(find(visiblePreviewPopover).length, 'The patient preview popover is no longer visible');\n        assert.equal(currentURL(), ENCOUNTER_URL, 'The encounter was opened');\n        click('.encounter-tab .icon-go-away-small');\n    });\n\n    (0, _qunit.test)('Close preview', async assert => {\n        visit(SUMMARY_URL);\n        await click(previewIcon);\n        assert.throws(findWithAssert(visiblePreviewPopover), 'The patient preview popover is visible after clicking the clock icon');\n        await click((0, _dataElement.default)('preview-footer-close'));\n        assert.notOk(find(visiblePreviewPopover).length, 'The patient preview popover is no longer visible');\n        await click(previewIcon);\n        assert.throws(findWithAssert(visiblePreviewPopover), 'The patient preview popover is visible again after clicking the clock icon');\n        await click((0, _dataElement.default)('preview-close'));\n        assert.notOk(find(visiblePreviewPopover).length, 'The patient preview popover is no longer visible');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/encounter-referral-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element'], function (_qunit, _moduleForAcceptanceAuth, _dataElement) {\n    'use strict';\n\n    const ENCOUNTER_GUID = '7022d94f-d70a-4722-a205-dac898cf9f69';\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const CONFIRM_RECEIPT_CHECKBOX_SELECTOR = `.referrals-in-encounter .referral-receipt-on .referral-row:first-child ${(0, _dataElement.default)('confirm-receipt-checkbox')} input`;\n    const CONFIRM_COMPLETE_CHECKBOX_SELECTOR = `.referrals-in-encounter .referral-receipt-on .referral-row:first-child ${(0, _dataElement.default)('confirm-complete-checkbox')} input`;\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Encounter referral compliance', {});\n\n    (0, _qunit.test)('Can utilize referral compliance checkboxes from encounter', async assert => {\n        assert.expect(4);\n        server.put('ReferralEndpoint/api/v2/referral/:referralGuid/status', ({ db }, request) => {\n            const requestBody = JSON.parse(request.requestBody);\n            assert.ok(requestBody, 'Checkbox endpoint called.');\n        });\n\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/encounter/' + ENCOUNTER_GUID);\n        assert.ok(find(CONFIRM_RECEIPT_CHECKBOX_SELECTOR).length === 1, 'There is one confirm receipt checkbox.');\n        assert.ok(find(CONFIRM_COMPLETE_CHECKBOX_SELECTOR).length === 1, 'There is one confirm complete checkbox.');\n\n        await click(CONFIRM_COMPLETE_CHECKBOX_SELECTOR);\n        click(CONFIRM_RECEIPT_CHECKBOX_SELECTOR);\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/encounter-refresh-test', ['qunit', 'boot/tests/helpers/data-element', 'boot/tests/helpers/module-for-acceptance-auth'], function (_qunit, _dataElement, _moduleForAcceptanceAuth) {\n    'use strict';\n\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const TRANSCRIPT_GUID = '82a597e5-b1b8-46e4-8a07-5c3a4f778e95';\n    const ENCOUNTER_URL = `/PF/charts/patients/${PATIENT_GUID}/encounter/${TRANSCRIPT_GUID}`;\n    const REFRESH_BTN = '.refresh-button';\n    const ACTIONS_MENU_REFRESH_CHART = `${(0, _dataElement.default)('actions-menu-options')} a:contains('Refresh patient chart')`;\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Encounter refresh');\n\n    (0, _qunit.test)('Can refresh encounter under actions and when clicking the refresh icon', async function (assert) {\n        await visit(ENCOUNTER_URL);\n        let hasCalledPatientAggregate = false;\n        let hasCalledGetEncounter = false;\n        let hasCalledGetTranscriptDocument = false;\n        let hasCalledGetAllergies = false;\n        let hasCalledGetPhrEnrollments = false;\n        let hasCalledGetPatientRibbonInfo = false;\n        let hasCalledGetPersonalMedicalHistory = false;\n        let hasCalledGetAdditionalVitals = false;\n        let hasCalledGetVitals = false;\n        let hasCalledGetSuperbills = false;\n        let hasCalledGetAmendments = false;\n        let hasCalledReferralEndpoint = false;\n        let hasCalledGetGoals = false;\n        let hasCalledGetHealthConcerns = false;\n\n        // Bust cache for various encounter models to make sure we make the appropriate service calls\n        const store = this.application.__container__.lookup('service:store');\n        Ember.run(() => {\n            store.unloadAll('encounter-addendum');\n            store.unloadAll('encounter-vital');\n            store.unloadAll('encounter-vital-set');\n        });\n\n        server.get('ClinicalEndpoint/api/v1/patients/:id/aggregate', ({ db }, request) => {\n            hasCalledPatientAggregate = true;\n            return db.patientAggregates.find(request.params.id);\n        });\n        server.get('ChartingEndpoint/api/v3/patients/:id/encounters/:chartid', ({ db }, request) => {\n            const transcriptGuid = request.params.chartid;\n            hasCalledGetEncounter = true;\n            return db.encounters.where({ transcriptGuid })[0];\n        });\n        server.get('ChartingEndpoint/api/v2/TranscriptDocument/:chartid', ({ db }, request) => {\n            const transcriptGuid = request.params.chartid;\n            hasCalledGetTranscriptDocument = true;\n            return db.transcriptDocuments.where({ transcriptGuid })[0].document;\n        });\n        server.get('ClinicalEndpoint/api/v3/patients/:id/allergies', () => {\n            hasCalledGetAllergies = true;\n            return { patientAllergies: [] };\n        });\n        server.get('PatientEndpoint/api/v1/patients/:id/phr_enrollments', ({ db }, request) => {\n            const patientPracticeGuid = request.params.id;\n            hasCalledGetPhrEnrollments = true;\n            return db.phrEnrollments.find(patientPracticeGuid);\n        });\n        server.get('PatientEndpoint/api/v1/patients/:id/patientRibbonInfo', ({ db }, request) => {\n            const patientPracticeGuid = request.params.id;\n            hasCalledGetPatientRibbonInfo = true;\n            return db.patientRibbonInfos.where({ patientPracticeGuid })[0];\n        });\n        server.get('ClinicalEndpoint/api/v2/PersonalMedicalHistory/:id', ({ db }, request) => {\n            const patientPracticeGuid = request.params.id;\n            hasCalledGetPersonalMedicalHistory = true;\n            return db.personalMedicalHistories.where({ patientPracticeGuid })[0];\n        });\n        server.get('FlowsheetEndpoint/api/v1/patients/:id/transcripts/:chartid/additionalVitals', ({ db }, request) => {\n            const transcriptGuid = request.params.chartid;\n            const flowsheetVitals = db.flowsheetAdditionalVitals.where({ transcriptGuid });\n\n            hasCalledGetAdditionalVitals = true;\n\n            if (flowsheetVitals.length > 0) {\n                return flowsheetVitals[0].vitals;\n            }\n        });\n        server.get('ChartingEndpoint/api/v3/patients/:id/encounters/:chartid/vitals', ({ db }) => {\n            hasCalledGetVitals = true;\n            return db.vitals;\n        });\n        server.get('BillingEndpoint/api/v3/Superbills', ({ db }, request) => {\n            hasCalledGetSuperbills = true;\n            return db.encounterSuperbills.where({ transcriptGuid: request.queryParams.transcriptGuid })[0];\n        });\n        server.get('ReferralEndpoint/api/v2/referral/transcript/:chartid', ({ db }, request) => {\n            const transcriptGuid = request.params.chartid;\n            hasCalledReferralEndpoint = true;\n            return db.referralTranscripts.where({ transcriptGuid })[0].transcript;\n        });\n        server.get('ChartingEndpoint/api/v3/patients/:id/encounters/:chartid/amendments', ({ db }, request) => {\n            const transcriptGuid = request.params.chartid;\n            hasCalledGetAmendments = true;\n            return db.encounterAmendments.where({ transcriptGuid })[0].amendments;\n        });\n        server.get('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/patientGoals', () => {\n            hasCalledGetGoals = true;\n            return { patientGoals: [] };\n        });\n        server.get('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/patientHealthConcerns', () => {\n            hasCalledGetHealthConcerns = true;\n            return {\n                patientHealthConcerns: [],\n                meta: { noKnownHealthConcerns: false }\n            };\n        });\n        await click(REFRESH_BTN);\n        assert.ok(hasCalledPatientAggregate, 'Refreshing encounter reloads patient aggregate information from clicking refresh icon.');\n        assert.ok(hasCalledGetEncounter, 'Refreshing encounter reloads encounter information from clicking refresh icon.');\n        assert.ok(hasCalledGetTranscriptDocument, 'Refreshing encounter reloads transcript document information from clicking refresh icon.');\n        assert.ok(hasCalledGetAllergies, 'Refreshing encounter reloads allergy information from clicking refresh icon.');\n        assert.ok(hasCalledGetPhrEnrollments, 'Refreshing encounter reloads phr enrollment information from clicking refresh icon.');\n        assert.ok(hasCalledGetPatientRibbonInfo, 'Refreshing encounter reloads patient ribbon information from clicking refresh icon.');\n        assert.ok(hasCalledGetPersonalMedicalHistory, 'Refreshing encounter reloads personal medical history from clicking refresh icon.');\n        assert.ok(hasCalledGetAdditionalVitals, 'Refreshing encounter reloads additional vitals from clicking refresh icon.');\n        assert.ok(hasCalledGetVitals, 'Refreshing encounter reloads vitals from clicking refresh icon.');\n        assert.ok(hasCalledGetSuperbills, 'Refreshing encounter reloads superbills from clicking refresh icon.');\n        assert.ok(hasCalledGetAmendments, 'Refreshing encounter reloads amendments from clicking refresh icon.');\n        assert.ok(hasCalledReferralEndpoint, 'Refreshing encounter reloads referrals from clicking refresh icon.');\n\n        // Reset refresh checks for actions -> refresh patient chart\n        hasCalledPatientAggregate = false;\n        hasCalledGetEncounter = false;\n        hasCalledGetTranscriptDocument = false;\n        hasCalledGetAllergies = false;\n        hasCalledGetPhrEnrollments = false;\n        hasCalledGetPatientRibbonInfo = false;\n        hasCalledGetPersonalMedicalHistory = false;\n        hasCalledGetAdditionalVitals = false;\n        hasCalledGetVitals = false;\n        hasCalledGetSuperbills = false;\n        hasCalledGetAmendments = false;\n        hasCalledReferralEndpoint = false;\n\n        // Bust cache again for various encounter models to make sure we make the appropriate service calls\n        Ember.run(() => {\n            store.unloadAll('encounter-addendum');\n            store.unloadAll('encounter-vital');\n            store.unloadAll('encounter-vital-set');\n        });\n        await click((0, _dataElement.default)('actions-menu'));\n        await click(ACTIONS_MENU_REFRESH_CHART);\n        assert.ok(hasCalledPatientAggregate, 'Refreshing encounter reloads patient aggregate information from refreshing patient chart under actions.');\n        assert.ok(hasCalledGetEncounter, 'Refreshing encounter reloads encounter information from refreshing patient chart under actions.');\n        assert.ok(hasCalledGetTranscriptDocument, 'Refreshing encounter reloads transcript document information from refreshing patient chart under actions.');\n        assert.ok(hasCalledGetAllergies, 'Refreshing encounter reloads allergy information from refreshing patient chart under actions.');\n        assert.ok(hasCalledGetPhrEnrollments, 'Refreshing encounter reloads phr enrollment information from refreshing patient chart under actions.');\n        assert.ok(hasCalledGetPatientRibbonInfo, 'Refreshing encounter reloads patient ribbon information from refreshing patient chart under actions.');\n        assert.ok(hasCalledGetPersonalMedicalHistory, 'Refreshing encounter reloads personal medical history from refreshing patient chart under actions.');\n        assert.ok(hasCalledGetAdditionalVitals, 'Refreshing encounter reloads additional vitals from refreshing patient chart under actions.');\n        assert.ok(hasCalledGetVitals, 'Refreshing encounter reloads vitals from refreshing patient chart under actions.');\n        assert.ok(hasCalledGetSuperbills, 'Refreshing encounter reloads superbills from refreshing patient chart under actions.');\n        assert.ok(hasCalledGetAmendments, 'Refreshing encounter reloads amendments from refreshing patient chart under actions.');\n        assert.ok(hasCalledReferralEndpoint, 'Refreshing encounter reloads referrals from refreshing patient chart under actions.');\n        assert.ok(hasCalledGetGoals, 'Refreshing encounter reloads patient goals from refreshing patient chart under actions.');\n        assert.ok(hasCalledGetHealthConcerns, 'Refreshing encounter reloads health concerns from refreshing patient chart under actions.');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/encounter-search-highlight-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth'], function (_qunit, _moduleForAcceptanceAuth) {\n    'use strict';\n\n    const ENCOUNTER_GUID = '7022d94f-d70a-4722-a205-dac898cf9f69';\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const SEARCH_BUTTON = '.input-group-addon';\n    const SEARCH_INPUT = '.section-search input';\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Encounter search highlight');\n\n    (0, _qunit.test)('Encounter search highlight', async assert => {\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/encounter/' + ENCOUNTER_GUID);\n        await fillIn(find('.section-search input')[0], 'encounter');\n        await click(find(SEARCH_BUTTON));\n\n        const searchResult = parseInt(find('.search-found')[0].innerText.split(' ')[0]);\n        assert.equal(searchResult, 11, 'Right number of search results for search term');\n        assert.equal(find('.highlight').length, searchResult, 'Number of highlighted items are equal to search result.');\n        await fillIn(find(SEARCH_INPUT)[0], 'testing');\n        await click(find(SEARCH_BUTTON));\n        assert.equal(find('.no-results')[0].innerText, 'no results found', '\\'no results\\' alert renders next to search box correctly');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/encounter-sia-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'ember-cli-mirage', 'boot/tests/helpers/data-element', 'boot/models/session', 'sinon'], function (_qunit, _moduleForAcceptanceAuth, _emberCliMirage, _dataElement, _session, _sinon) {\n    'use strict';\n\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const TRANSCRIPT_GUID = '7022d94f-d70a-4722-a205-dac898cf9f69';\n    const SIA_SECTION = 'section #dFinalizeEvents';\n    const TRANSCRIPT_BASE_URL = '/PF/charts/patients/' + PATIENT_GUID + '/encounter';\n    const TRANSCRIPT_URL = `${TRANSCRIPT_BASE_URL}/${TRANSCRIPT_GUID}`;\n\n    const SIA_SECTION_HEADER = `${SIA_SECTION} header:contains('Screenings/ Interventions/ Assessments')`;\n    const SIA_ADD_ITEM = `${SIA_SECTION} a:contains('Add item')`;\n    const SIA_SELECT_FIELD = `${SIA_SECTION} .sia-search-single-select`;\n    const SIA_TEXT_SEARCH = `${SIA_SELECT_FIELD} input`;\n    const MIGRAINE_SEARCH_ITEM = `${SIA_SECTION} .sia-search-single-select .ember-select-result-item a:contains(\"MIDAS\")`;\n    const MIDAS_EDITABLE_SELECT_INPUTS = '.days-selector .editable-select input.form-control';\n    const SCORE_15_GRADE_III_TEXT = '15 - Grade III, moderate disability';\n    const SCORE_30_GRADE_IV_TEXT = '30 - Grade IV, severe disability';\n    const LAST_RADIO_BUTTON = 'label[for=\"9b737802-5d8f-4a57-83e1-06ef41d61e3a-10\"]';\n    const OPTIONAL_NUMBER_INPUT = `${(0, _dataElement.default)('worksheet-question-10')} .editable-select input`;\n    const REQUIRED_NUMBER_INPUT = `${(0, _dataElement.default)('worksheet-question-0')} .editable-select input`;\n    const REQUIRED_NUMBER_INPUT_CONTAINER = `${(0, _dataElement.default)('worksheet-question-0')} .editable-select`;\n    const REQUIRED_NUMBER_INPUT_DROPDOWN_TOGGLE = `${REQUIRED_NUMBER_INPUT_CONTAINER} .dropdown-toggle`;\n    const REQUIRED_INPUT_ZERO = `${REQUIRED_NUMBER_INPUT_CONTAINER} .dropdown-menu > li:first-child a`;\n\n    let toastrStub;\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Encounter screenings, interventions and assessments', {\n        beforeEach() {\n            server.post('ChartingEndpoint/api/v3/patients/:patientPracticeGuid/transcriptEvents', ({ db }, request) => {\n                const data = JSON.parse(request.requestBody);\n                data.transcriptEventGuid = 'TEST_GUID';\n                return data;\n            });\n            toastrStub = _sinon.default.stub(window.toastr, 'error');\n        },\n        afterEach() {\n            window.toastr.error.restore();\n        }\n    });\n\n    (0, _qunit.test)('Encounter SIA - Can add, edit and delete SIA (adult depression sceening assessment)', async assert => {\n        server.put('ChartingEndpoint/api/v3/patients/:patientPracticeGuid/transcriptEvents/:transcriptEventGuid', () => new _emberCliMirage.default.Response(204, {}, null));\n\n        const dateFormat = 'MM/D/YYYY';\n        const startDate = moment(new Date()).format(dateFormat);\n        const endDate = moment(new Date()).add(5, 'days').format(dateFormat);\n\n        assert.expect(16);\n\n        await visit(TRANSCRIPT_URL);\n        assert.ok(find(`${SIA_SECTION} header:contains('Screenings/ Interventions/ Assessments')`).length > 0, 'Screenings/ Interventions/ Assessments is visible in encounter');\n\n        await click(`${SIA_SECTION} a:contains('Add item')`);\n        fillIn(`${SIA_SECTION} input`, 'Depression');\n        // Opening up the SIA right module\n        await keyEvent(`${SIA_SECTION} .sia-search-single-select`, 'keydown', 13);\n        await wait();\n        await click(`${SIA_SECTION} .sia-search-single-select .ember-select-result-item a:contains(\"Adult depression\")`);\n\n        // Confirm headers for the right module is correct\n        assert.equal(find('.right-module .right-module-top h15').text().trim(), 'Screenings, interventions, and assessments > Record', 'SIA Right module heading renders properly');\n        assert.equal(find('.right-module .detail-pane-body-wrapper .title').text(), 'Adult depression screening assessment', 'SIA Right module title renders properly');\n\n        // Update result to positive measurement finding\n        await click('.right-module .ember-select-container:eq(1)');\n        await keyEvent('.right-module .ember-select-container:eq(1)', 'keydown', 13);\n        await click('.right-module li.ember-select-result-item:eq(1)');\n\n        fillIn('.datetimepicker input:first', startDate);\n        fillIn('textarea', 'Test comment');\n\n        await click('.right-module .btn-primary');\n        assert.equal(find(`${SIA_SECTION} li .event-heading .event-name`).text(), 'Adult depression screening assessment', 'Confirm SIA was added successfully on encounter');\n        assert.equal(find(`${SIA_SECTION} li .event-heading .event-status`).text(), 'Performed', 'Confirm added SIA status renders on encounter');\n\n        // Edit the SIA\n        await click(`${SIA_SECTION} li .event-heading .event-name`);\n        // Confirm that the SIA fields are populated with the earlier options selected\n        assert.equal(find(`.right-module .ember-select-container:first span a`).text(), 'Performed', 'The added SIA status appears properly after opening SIA edit form');\n        assert.equal(find(`.right-module .ember-select-container:eq(1) span a`).text(), 'Depression Screening Positive', 'The added SIA result appears properly after opening SIA edit form');\n        assert.equal(moment(find(`.right-module .datetimepicker input:first`).val()).format(dateFormat), startDate, 'The added SIA start date appears properly after opening SIA edit form');\n        assert.equal(find(`.right-module textarea`).val(), 'Test comment', 'The added SIA comment appears properly after opening SIA edit form');\n\n        // Choose 'Not Performed' as status\n        await click('.right-module .ember-select-container:first');\n        await keyEvent('.right-module .ember-select-container:first', 'keydown', 13);\n        await click('.right-module li.ember-select-result-item:eq(1)');\n\n        // Update reason for not performing SIA\n        await click('.right-module .ember-select-container:eq(1)');\n        await keyEvent('.right-module .ember-select-container:eq(1)', 'keydown', 13);\n        await click('.right-module li.ember-select-result-item:first');\n\n        // Fill in end date as new date\n        fillIn('.datetimepicker input:eq(1)', endDate);\n        fillIn('textarea', 'Updated comment');\n\n        // Update the SIA\n        await click('.right-module .btn-primary');\n        // When the status is not performed, the status doesn't show up on the encounter for this SIA\n        assert.equal(find(`${SIA_SECTION} li .event-heading .event-name`).text(), 'Adult depression screening assessment', 'Confirm SIA was updated on encounter');\n        assert.equal(find(`${SIA_SECTION} li .event-heading .event-status`).text(), '', 'Confirm status for Not Performed SIA does not show up on encounter');\n\n        // Open up the SIA, confirm the updated fields and then delete it\n        await click(`${SIA_SECTION} li .event-heading .event-name`);\n        assert.equal(find(`.right-module .ember-select-container:first span a`).text(), 'Not Performed', 'The updated SIA status appears properly after opening SIA edit form');\n        assert.equal(find(`.right-module .ember-select-container:eq(1) span a`).text(), 'Refusal of treatment by patient', 'The updated SIA reason appears properly after opening SIA edit form');\n        assert.equal(moment(find(`.right-module .datetimepicker input:eq(1)`).val()).format(dateFormat), endDate, 'The updated SIA end date appears properly after opening SIA edit form');\n        assert.equal(find(`.right-module textarea`).val(), 'Updated comment', 'The updated SIA comment appears properly after opening SIA edit form');\n\n        // Delete the SIA\n        await click('.right-module .detail-pane-footer .btn:first');\n        assert.ok(find(`${SIA_SECTION} li`).length < 1, 'Confirm deleted SIA no longer exists on encounter');\n    });\n\n    (0, _qunit.test)('Encounter SIA - Can add SIA (diabetic foot exam - regime/therapy', async assert => {\n        await visit(TRANSCRIPT_URL);\n        await click(`${SIA_SECTION} a:contains('Add item')`);\n        fillIn(`${SIA_SECTION} input`, 'Diabetic foot exam');\n        // Opening up the SIA right module\n        await keyEvent(`${SIA_SECTION} .sia-search-single-select`, 'keydown', 13);\n        await wait();\n        await click(`${SIA_SECTION} .sia-search-single-select .ember-select-result-item a:contains(\"Diabetic foot exam\")`);\n\n        // Confirm headers for the right module is correct\n        assert.equal(find('.right-module .right-module-top h15').text().trim(), 'Screenings, interventions, and assessments > Record', 'SIA Right module heading renders properly for diabetic foot exam test');\n        assert.equal(find('.right-module .detail-pane-body-wrapper .title').text(), 'Diabetic foot examination (regime/therapy)', 'SIA Right module title renders properly for diabetic foot exam test');\n\n        // Unncessary to assert the fields since it uses the same component as the first SIA test.  Only assert that it was added to the SIA list properly.\n        await click('.right-module .ember-select-container:eq(1)');\n        await keyEvent('.right-module .ember-select-container:eq(1)', 'keydown', 13);\n        await click('.right-module li.ember-select-result-item:eq(1)');\n        await click('.right-module .btn-primary');\n        assert.equal(find(`${SIA_SECTION} li .event-heading .event-name`).text(), 'Diabetic foot examination (regime/therapy)', 'Confirm SIA was added successfully on encounter for diabetic foot exam test');\n        assert.equal(find(`${SIA_SECTION} li .event-heading .event-status`).text(), 'Performed', 'Confirm added SIA status renders on encounter for diabetic foot exam test');\n    });\n\n    (0, _qunit.test)('Encounter SIA - SIA Search indicates 100+ search results available', async assert => {\n        await visit(TRANSCRIPT_URL);\n        await click(`${SIA_SECTION} a:contains('Add item')`);\n        fillIn(`${SIA_SECTION} input`, 'morethanonehundred');\n        // test 100+ case\n        await keyEvent(`${SIA_SECTION} .sia-search-single-select`, 'keydown', 13);\n        await wait();\n\n        const canRefineSearchElement = find('.search-can-be-refined-message span');\n        const searchRefineText = canRefineSearchElement.text().trim();\n        const expectedText = '100+ results returned, only displaying first 100 results.';\n\n        assert.equal(canRefineSearchElement.length, 1, 'There is one extra component to the dropdown with that search refinement is possible.');\n        assert.equal(searchRefineText, expectedText, 'The proper text is displayed in the refine search box.');\n    });\n\n    (0, _qunit.test)('Encounter SIA - Can add SIA (Falls Risk)', async assert => {\n        await visit(TRANSCRIPT_URL);\n        await click(`${SIA_SECTION} a:contains('Add item')`);\n        fillIn(`${SIA_SECTION} input`, 'Falls risk');\n        // Opening up the SIA right module\n        await keyEvent(`${SIA_SECTION} .sia-search-single-select`, 'keydown', 13);\n        await wait();\n        await click(`${SIA_SECTION} .sia-search-single-select .ember-select-result-item a:contains(\"Falls risk\")`);\n        // Confirm headers for the right module is correct\n        assert.equal(find('.right-module .right-module-top h15').text().trim(), 'Screenings, interventions, and assessments > Record', 'SIA Right module heading renders properly for falls risk assessment test');\n        assert.equal(find('.right-module .detail-pane-body-wrapper .title').text(), 'Falls risk assessment', 'SIA Right module title renders properly for falls risk assessment test');\n\n        // Unncessary to assert the fields since it uses the same component as the first SIA test.  Only assert that it was added to the SIA list properly.\n        await click('.right-module .ember-select-container:eq(1)');\n        await keyEvent('.right-module .ember-select-container:eq(1)', 'keydown', 13);\n        await click('.right-module li.ember-select-result-item:eq(1)');\n        await click('.right-module .btn-primary');\n        assert.equal(find(`${SIA_SECTION} li .event-heading .event-name`).text(), 'Falls risk assessment', 'Confirm SIA was added successfully on encounter for falls risk assessment test');\n        assert.equal(find(`${SIA_SECTION} li .event-heading .event-status`).text(), 'Performed', 'Confirm added SIA status renders on encounter for falls risk assessment test');\n    });\n\n    (0, _qunit.test)('Encounter SIA - SIA with child events default reason code', async assert => {\n        await visit(TRANSCRIPT_URL);\n        await click(`${SIA_SECTION} a:contains('Add item')`);\n        await fillIn(`${SIA_SECTION} input`, 'Pain care plan');\n        await keyEvent(`${SIA_SECTION} .sia-search-single-select`, 'keydown', 13);\n        await wait();\n        await click(`${SIA_SECTION} .sia-search-single-select .ember-select-result-item a:contains(\"Pain care plan\")`);\n        assert.equal(find((0, _dataElement.default)('encounter-event-reason-code')).text().trim(), 'Pain (finding)', 'Reason code is defaulted when selecting a parent SIA.');\n    });\n\n    (0, _qunit.test)('Encounter SIA - Add SIA with child event', async assert => {\n        const doneBtn = '.right-module .btn-primary';\n\n        server.put('ChartingEndpoint/api/v3/patients/:patientPracticeGuid/transcriptEvents/:transcriptEventGuid', () => new _emberCliMirage.default.Response(204, {}, null));\n\n        server.delete('ChartingEndpoint/api/v3/patients/:patientPracticeGuid/transcriptEvents/:transcriptEventGuid', () => new _emberCliMirage.default.Response(204, {}, null));\n\n        await visit(TRANSCRIPT_URL);\n        await click(`${SIA_SECTION} a:contains('Add item')`);\n        await fillIn(`${SIA_SECTION} input`, 'Pain care plan');\n        await keyEvent(`${SIA_SECTION} .sia-search-single-select`, 'keydown', 13);\n        await wait();\n        await click(`${SIA_SECTION} .sia-search-single-select .ember-select-result-item a:contains(\"Pain care plan\")`);\n        assert.equal(find((0, _dataElement.default)('sia-follow-up-header')).text().trim(), 'Add follow-up items to your care plan', 'Follow up header renders properly if event is a parent event.');\n\n        const siaFollowUp = (0, _dataElement.default)('sia-follow-up');\n        await click(siaFollowUp + ' .ember-select-search');\n        await click(siaFollowUp + ' .ember-select-result-item:eq(0)');\n        await click(doneBtn);\n        const siaItems = '.event-info.event-name';\n        assert.equal(find(siaItems + ':eq(0)').text().trim(), 'Pain care plan documented', 'Parent SIA renders properly on SIA section.');\n        assert.equal(find(siaItems + ':eq(1)').text().trim(), 'Adjuvant pharmacotherapy (e.g. topical agents, antispasmodics)', 'Child SIA renders properly on SIA section.');\n        await click(doneBtn);\n        // Edit the parent and child SIA\n        await click(siaItems + ':eq(0)');\n        // Confirm that you can remove the child SIA\n        const siaChildItem = (0, _dataElement.default)('sia-follow-up-list') + ' a';\n        assert.equal(find(siaChildItem).attr('href'), '/PF/charts/patients/ecd212c3-5c99-499e-b3c6-b2645b8a4c98/encounter/7022d94f-d70a-4722-a205-dac898cf9f69/event/TEST_GUID', 'Link to child SIA renders properly.');\n        assert.equal(find(siaChildItem).text().trim(), 'Adjuvant pharmacotherapy (e.g. topical agents, antispasmodics)', 'Child SIA title renders properly.');\n\n        // Delete child SIA\n        await click((0, _dataElement.default)('sia-follow-up-list') + ' .icon-go-away.pull-right');\n        assert.equal(find(siaItems).length, 1, 'Parent SIA item still renders on SIA section when child is removed.');\n    });\n\n    (0, _qunit.test)('Encounter SIA - validate start/end dates', async assert => {\n        await visit(TRANSCRIPT_URL);\n        await click(`${SIA_SECTION} a:contains('Add item')`);\n        fillIn(`${SIA_SECTION} input`, 'Depression');\n        await keyEvent(`${SIA_SECTION} .sia-search-single-select`, 'keydown', 13);\n        await wait();\n        await click(`${SIA_SECTION} .sia-search-single-select .ember-select-result-item a:contains(\"Adult depression\")`);\n        fillIn('.datetimepicker input:eq(0)', '');\n        fillIn('.datetimepicker input:eq(1)', '4/2/2018');\n        await delayAsync(100);\n        assert.equal(find('.tooltip-inner').text(), 'All SIA data elements must have a start date', 'Start date error rendered correctly when only end date is added');\n        fillIn('.datetimepicker input:eq(0)', '4/4/2018');\n        await delayAsync(100);\n        assert.equal(find('.tooltip-inner:first').text(), 'Start date should be before or equal to the end date', 'End date error rendered correctly when start date is before end date');\n        await fillIn('.datetimepicker input:eq(1)', '4/6/2018');\n        await wait();\n        await delayAsync(100);\n        assert.notOk(find('.tooltip-inner').length, 'Tooltip errors disappear when both start and end dates are correct');\n    });\n\n    (0, _qunit.test)('Encounter SIA - validate no start date validation', async assert => {\n        await visit(`${TRANSCRIPT_BASE_URL}/5a3145c7-a2d2-4a52-92b9-ba7ec2323154`);\n        await click('.event-name:contains(Depression screening)');\n        const startDatePicker = '.event-details .datetimepicker input:first';\n        assert.dom('.tooltip-inner').hasText('All SIA data elements must have a start date', 'Start date error rendered correctly when existing SIA is not saved with a start date');\n        assert.dom(find(startDatePicker)[0]).hasClass('error');\n        await fillIn(startDatePicker, '01/01/2001');\n        assert.dom(find(startDatePicker)[0]).doesNotHaveClass('error', 'Error class is removed after adding a date');\n    });\n\n    (0, _qunit.test)('Encounter SIA - add/edit/delete SIA with edit level NP/PA', async assert => {\n        let postCallMade = false;\n        let putCallMade = false;\n        let deleteCallMade = false;\n\n        server.get('ChartingEndpoint/api/v3/patients/:patientGuid/encounters/:chartid', ({ db }, request) => {\n            const transcriptGuid = request.params.chartid;\n            return db.encounters.where({ transcriptGuid })[0];\n        });\n        server.delete('ChartingEndpoint/api/v3/patients/:patientGuid/transcriptEvents/:chartid', () => {\n            deleteCallMade = true;\n        });\n        server.put('ChartingEndpoint/api/v3/patients/:patientGuid/transcriptEvents/:chartid', ({ db }, request) => {\n            putCallMade = true;\n            return JSON.parse(request.requestBody);\n        });\n        server.post('ChartingEndpoint/api/v3/patients/:patientPracticeGuid/transcriptEvents', ({ db }, request) => {\n            postCallMade = true;\n            return JSON.parse(request.requestBody);\n        });\n\n        await visit(`${TRANSCRIPT_BASE_URL}/5a3145c7-a2d2-4a52-92b9-ba7ec2323154`);\n        _session.default.set('userEditLevel', 1);\n        await delayAsync(100);\n        assert.notOk(find(`${SIA_SECTION} a:contains('Add item')`).length, 'Edit level Nurse and below do not have edit access for SIA section');\n        _session.default.set('userEditLevel', 2);\n        await delayAsync(100);\n        // Adding a SIA\n        await click(`${SIA_SECTION} a:contains('Add item')`);\n        fillIn(`${SIA_SECTION} input`, 'Depression');\n        await keyEvent(`${SIA_SECTION} .sia-search-single-select`, 'keydown', 13);\n        await wait();\n        await click(`${SIA_SECTION} .sia-search-single-select .ember-select-result-item a:contains(\"Adult depression\")`);\n        // Assert start date is prepopulated with encounter date of service for a new SIA\n        assert.equal(find('.event-details .datetimepicker input:first')[0].value, '2/14/2018 12:00 AM', 'Start date is prepopulated with encounter date of service for a new SIA');\n        await click('.right-module .btn-primary');\n        assert.ok(postCallMade, 'POST call made to add SIA (edit level 3)');\n        assert.ok(find('.event-name:contains(Adult depression)').length, 'New SIA is added to the SIA section (edit level 3)');\n        // Editing an existing SIA\n        await click('.event-name:contains(Depression screening)');\n        fillIn('.event-details .datetimepicker input:first', '01/01/2001');\n        fillIn('.event-details textarea', 'Test comment');\n        await click('.right-module .btn-primary');\n        assert.ok(putCallMade, 'PUT call made to update SIA (edit level 3)');\n        await click('.event-name:contains(Depression screening)');\n        assert.equal(find('.event-details .datetimepicker input:first')[0].value, '1/1/2001 12:00 AM', 'SIA date change persisted on save (user edit level 3)');\n        assert.equal(find('.event-details textarea')[0].value, 'Test comment', 'SIA comment change persisted on save (user edit level 3)');\n        // Assert error on trying to save SIA without a start date\n        fillIn('.event-details .datetimepicker input:first', '');\n        await delayAsync(100);\n        assert.equal(find('.tooltip-inner').text(), 'All SIA data elements must have a start date', 'Start date error rendered correctly when trying to save SIA without a start date');\n        // Deleting a SIA\n        await click('.btn:contains(Delete)');\n        assert.ok(deleteCallMade, 'DELETE call made to delete SIA (edit level 3)');\n        assert.notOk(find('.event-name:contains(Depression screening)').length, 'Deleted SIA removed from SIA section (edit level 3)');\n    });\n\n    (0, _qunit.test)('Encounter SIA - validate start/end dates on signing an encounter', async assert => {\n        server.post(`ChartingEndpoint/api/v3/patients/${PATIENT_GUID}/encounters/${TRANSCRIPT_GUID}/sign`, () => {\n            const SIA_DATE_VALIDATION_FAILED = { message: 'Start date is missing or incorrect for one or more items in Screenings/ Interventions/ Assessments(SIA). Go to the SIA section to correct this before signing this chart.',\n                subcode: 'InvalidSiaStartDate' };\n            return new _emberCliMirage.default.Response(400, {}, SIA_DATE_VALIDATION_FAILED);\n        });\n\n        await visit(TRANSCRIPT_URL);\n        await click('.btn-sign');\n        await click('.btn-sign-confirm');\n        assert.equal(toastrStub.args[0][0], 'Start date is missing or incorrect for one or more items in Screenings/ Interventions/ Assessments(SIA). Go to the SIA section to correct this before signing this chart.', 'Error toaster renders correctly when sia date validation fails');\n    });\n\n    (0, _qunit.test)('Encounter SIA - Can add, edit and delete SIA (Assessment using PHQ-2 questionnaire)', async assert => {\n        const startDate = moment(new Date());\n        const endDate = moment(new Date()).add(5, 'days');\n\n        server.put('ChartingEndpoint/api/v3/patients/:patientPracticeGuid/transcriptEvents/:transcriptEventGuid', () => new _emberCliMirage.default.Response(204, {}, null));\n\n        server.post('ChartingEndpoint/api/v2/WorksheetResponses', ({ db }, request) => db.worksheetResponses.where({\n            worksheetGuid: JSON.parse(request.requestBody).worksheetGuid\n        })[0]);\n\n        await visit(TRANSCRIPT_URL);\n        await click(`${SIA_SECTION} a:contains('Add item')`);\n        fillIn(`${SIA_SECTION} input`, 'PHQ-2');\n\n        // Opening up the SIA right module\n        await keyEvent(`${SIA_SECTION} .sia-search-single-select`, 'keydown', 13);\n        await wait();\n        await click(`${SIA_SECTION} .sia-search-single-select .ember-select-result-item a:contains(\"Assessment using PHQ-2 questionnaire\")`);\n        // Confirm headers for the right module is correct\n        assert.dom('.right-module .right-module-top h15').hasText('Screenings/ Interventions/ Assessments > Record', 'SIA Right module heading renders properly');\n        assert.dom((0, _dataElement.default)('worksheet-header')).hasText('Assessment using PHQ-2 questionnaire', 'SIA Right module title renders properly');\n\n        click(`${(0, _dataElement.default)('select-status')} .composable-select__choice`);\n        click((0, _dataElement.default)('select-status-option-2'));\n\n        fillIn((0, _dataElement.default)('transcript-event-start'), startDate.format('MM/D/YYYY hh:mm A'));\n        fillIn((0, _dataElement.default)('transcript-event-end'), endDate.format('MM/D/YYYY hh:mm A'));\n        fillIn((0, _dataElement.default)('transcript-event-comment'), 'heyyooo');\n        click(`${(0, _dataElement.default)('question-1')} ${(0, _dataElement.default)('option-label-1')}`);\n        await click(`${(0, _dataElement.default)('question-2')} ${(0, _dataElement.default)('option-label-1')}`);\n        await click((0, _dataElement.default)('btn-worksheet-save'));\n        assert.dom(`${SIA_SECTION} li .event-heading .event-name`).hasText('Assessment using PHQ-2 questionnaire', 'Confirm SIA was added successfully on encounter');\n\n        // Edit the SIA\n        await click(`${SIA_SECTION} li .event-heading .event-name`);\n        // Confirm that the SIA fields are populated with the earlier options selected\n        assert.dom(`${(0, _dataElement.default)('select-status')} .composable-select__selection`).hasText('Performed', 'The added SIA status appears properly after opening SIA edit form');\n        assert.dom((0, _dataElement.default)('transcript-event-start')).hasValue(startDate.format('M/D/YYYY h:mm A'), 'The start date has the correct text');\n        assert.dom((0, _dataElement.default)('transcript-event-end')).hasValue(endDate.format('M/D/YYYY h:mm A'), 'The end date has the correct text');\n        assert.dom((0, _dataElement.default)('transcript-event-comment')).hasValue('heyyooo', 'The comment field has the correct text');\n        assert.dom(`${(0, _dataElement.default)('question-1')} ${(0, _dataElement.default)('option-radio-1')}`).isChecked('Correct option is checked for first question');\n        assert.dom(`${(0, _dataElement.default)('question-2')} ${(0, _dataElement.default)('option-radio-1')}`).isChecked('Correct option is checked for second question');\n    });\n\n    function focusOut(selector) {\n        const $input = find(selector);\n        if (window._phantom || $input.is(':focus')) {\n            Ember.run($input, 'trigger', $.Event('focusout'));\n        } else {\n            $input.blur();\n        }\n    }\n\n    (0, _qunit.test)('Can add, edit and delete adult asthma control worksheet', async assert => {\n        const startDate = moment(new Date());\n        const endDate = moment(new Date()).add(5, 'days');\n\n        server.put('ChartingEndpoint/api/v3/patients/:patientPracticeGuid/transcriptEvents/:transcriptEventGuid', () => new _emberCliMirage.default.Response(204, {}, null));\n\n        server.post('ChartingEndpoint/api/v2/WorksheetResponses', ({ db }, request) => db.worksheetResponses.where({\n            worksheetGuid: JSON.parse(request.requestBody).worksheetGuid\n        })[0]);\n\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/encounter/' + TRANSCRIPT_GUID);\n        assert.ok(find(SIA_SECTION_HEADER).length > 0, 'Screenings/ Interventions / Assessments is visible in encounter');\n        await click(SIA_ADD_ITEM);\n        await fillIn(SIA_TEXT_SEARCH, 'Asthma');\n        // Opening up the asthma control right module\n        await keyEvent(`${SIA_SECTION} .sia-search-single-select`, 'keydown', 13);\n        await wait();\n        await click(`${SIA_SECTION} .sia-search-single-select .ember-select-result-item > a:contains(\"Adult Asthma\")`);\n        // Confirm headers for the right module is correct\n        assert.dom('.right-module .right-module-top h15').hasText('Screenings/ Interventions/ Assessments > Record', 'Adult Asthma Control Right module heading renders properly');\n        assert.dom((0, _dataElement.default)('worksheet-display-name')).hasText('Asthma Control Test™', 'Adult Asthma Control Right module title renders properly');\n\n        // Confirm footer for the detail pane\n        assert.dom((0, _dataElement.default)('btn-worksheet-delete')).isNotVisible('New worksheet does not have delete button');\n        assert.dom((0, _dataElement.default)('btn-worksheet-save')).isDisabled('Save button is disabled when the worksheet is not complete');\n\n        // Confirm Asthma Control Status\n        assert.dom((0, _dataElement.default)('worksheet-status-label')).hasText('Status', 'Adult Asthma control status header renders properly');\n        assert.dom((0, _dataElement.default)('worksheet-status-selection')).hasText('Performed', 'Adult Asthma control status for performed renders properly');\n\n        // Confirm transcript event fields\n        assert.dom((0, _dataElement.default)('transcript-event-start')).exists('Transcript event start date exists');\n        assert.dom((0, _dataElement.default)('transcript-event-end')).exists('Transcript event end exists');\n        assert.dom((0, _dataElement.default)('transcript-event-comment')).exists('Transcript event comment exists');\n\n        // Ensure all the Asthma Control questions render properly\n        assert.dom((0, _dataElement.default)('worksheet-question-label-0')).hasText('In the past 4 weeks, how much of the time did your asthma keep you from getting as much done at work, school or at home?', 'First Adult Asthma Control question renders properly.');\n        assert.dom((0, _dataElement.default)('worksheet-question-label-1')).hasText('During the past 4 weeks, how often have you had shortness of breath?', 'Second Adult Asthma Control question renders properly.');\n        assert.dom((0, _dataElement.default)('worksheet-question-label-2')).hasText('During the past 4 weeks, how often did your asthma symptoms (wheezing, coughing, shortness of breath, chest tightness or pain) wake you up at night or earlier than usual in the morning?', 'Third Adult Asthma Control question renders properly.');\n        assert.dom((0, _dataElement.default)('worksheet-question-label-3')).hasText('During the past 4 weeks, how often have you used your rescue inhaler or nebulizer medication (such as albuterol)?', 'Fourth Adult Asthma Control question renders properly.');\n        assert.dom((0, _dataElement.default)('worksheet-question-label-4')).hasText('How would you rate your asthma control during the past 4 weeks?', 'Fifth Adult Asthma Control question renders properly.');\n\n        // Fill in transcript event fields\n        fillIn((0, _dataElement.default)('transcript-event-start'), startDate.format('MM/D/YYYY hh:mm A'));\n        fillIn((0, _dataElement.default)('transcript-event-end'), endDate.format('MM/D/YYYY hh:mm A'));\n        fillIn((0, _dataElement.default)('transcript-event-comment'), 'heyyooo');\n\n        // Select an answer for each asthma control question\n        await click(`${(0, _dataElement.default)('worksheet-question-0')} ${(0, _dataElement.default)('option-2')} label`);\n        await click(`${(0, _dataElement.default)('worksheet-question-1')} ${(0, _dataElement.default)('option-2')} label`);\n        await click(`${(0, _dataElement.default)('worksheet-question-2')} ${(0, _dataElement.default)('option-2')} label`);\n        await click(`${(0, _dataElement.default)('worksheet-question-3')} ${(0, _dataElement.default)('option-2')} label`);\n        await click(`${(0, _dataElement.default)('worksheet-question-4')} ${(0, _dataElement.default)('option-2')} label`);\n        assert.dom((0, _dataElement.default)('worksheet-score')).hasText('15', 'Confirm Adult Asthma Control scoring renders properly with the right number of points accumulated.');\n        assert.dom((0, _dataElement.default)('worksheet-summary')).hasText('If your score is 19 or less, your asthma may not be as well controlled as it could be.', 'Adult Asthma Control informational text on resulting score renders properly.');\n        assert.dom((0, _dataElement.default)('worksheet-copyright')).hasText('Copyright 2002, by QualityMetric Incorporated. Asthma Control Test is a trademark of QualityMetric Incorporated.', 'Adult Asthma Control copyright text renders properly.');\n\n        await click((0, _dataElement.default)('btn-worksheet-save'));\n        assert.dom(`${SIA_SECTION} li .event-heading .event-name`).hasText('Adult Asthma Control Test (ages 12 and up)', 'Confirm Adult Asthma Control was updated on encounter');\n        // Confirm Total Score\n        assert.equal(find(SIA_SECTION + ' li .event-heading .event-info:eq(1)').text(), 'Total score:', 'Confirm Total Score text renders properly for adult asthma control assessment.');\n        assert.equal(find(SIA_SECTION + ' li .event-heading .event-info:eq(2)').text(), '15', 'Confirm score renders properly for adult asthma control assessment.');\n        // Confirm Result\n        assert.equal(find(SIA_SECTION + ' li .event-heading .event-info:eq(3)').text(), 'Result:', 'Confirm Result text renders properly for adult asthma control assessment.');\n        assert.equal(find(SIA_SECTION + ' li .event-heading .event-info:eq(4)').text(), 'If your score is 19 or less, your asthma may not be as well controlled as it could be.', 'Confirm Result renders properly for adult asthma control assessment.');\n\n        // Edit the asthma control worksheet\n        await click(`${SIA_SECTION} li .event-heading .event-name`);\n        // Verify transcript event data\n        assert.dom((0, _dataElement.default)('transcript-event-start')).hasValue(startDate.format('M/D/YYYY h:mm A'), 'The start date has the correct text');\n        assert.dom((0, _dataElement.default)('transcript-event-end')).hasValue(endDate.format('M/D/YYYY h:mm A'), 'The start date has the correct text');\n        assert.dom((0, _dataElement.default)('transcript-event-comment')).hasValue('heyyooo', 'The comment field has the correct text');\n\n        assert.dom((0, _dataElement.default)('btn-worksheet-delete')).isVisible('Delete button exists');\n\n        await click(`${(0, _dataElement.default)('worksheet-question-0')} ${(0, _dataElement.default)('option-3')} label`);\n        // Change one of th answers and confirm the result\n        assert.dom((0, _dataElement.default)('worksheet-score')).hasText('16', 'Confirm updating Adult Asthma Control scoring renders properly with the right number of points accumulated.');\n        await click((0, _dataElement.default)('btn-worksheet-save'));\n        // Delete the asthma control worksheet\n        await click(`${SIA_SECTION} li .event-heading .event-name`);\n        await click((0, _dataElement.default)('btn-worksheet-delete'));\n        assert.dom(`${SIA_SECTION} li .event-heading .event-name`).doesNotExist('Confirm Adult Asthma Control was deleted on encounter.');\n    });\n\n    (0, _qunit.test)('Can add, edit and migraine assessment worksheet', async assert => {\n        const startDate = moment(new Date());\n        const endDate = moment(new Date()).add(5, 'days');\n\n        assert.expect(14);\n\n        server.post('ChartingEndpoint/api/v3/patients/:patientPracticeGuid/transcriptEvents', ({ db }) => db.midasTranscriptEvents[0]);\n\n        server.post('ChartingEndpoint/api/v2/WorksheetResponses', ({ db }, request) => {\n            const requestBody = JSON.parse(request.requestBody);\n            const { startDateTimeUtc, endDateTimeUtc, comments } = requestBody.transcriptEncounterEvents[0];\n            assert.equal(moment(startDateTimeUtc).format('M/D/YYYY h:mm A'), startDate.format('M/D/YYYY h:mm A'), 'Start date is correct');\n            assert.equal(moment(endDateTimeUtc).format('M/D/YYYY h:mm A'), endDate.format('M/D/YYYY h:mm A'), 'End date is correct');\n            assert.equal(comments, 'heyyooo', 'Comments is correct');\n\n            const { responses } = requestBody;\n            assert.equal(responses.length, 12, 'The proper number of responses are present in the response.');\n            return {};\n        });\n\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/encounter/' + TRANSCRIPT_GUID);\n        assert.ok(find(SIA_SECTION_HEADER).length > 0, 'Sia header section exists.');\n        await click(SIA_ADD_ITEM);\n        await fillIn(SIA_TEXT_SEARCH, 'Migraine');\n        await keyEvent(`${SIA_SECTION} .sia-search-single-select`, 'keydown', 13);\n        await wait();\n        await click(MIGRAINE_SEARCH_ITEM);\n        // Confirm transcript event fields\n        assert.dom((0, _dataElement.default)('transcript-event-start')).exists('Transcript event start date exists');\n        assert.dom((0, _dataElement.default)('transcript-event-end')).exists('Transcript event end exists');\n        assert.dom((0, _dataElement.default)('transcript-event-comment')).exists('Transcript event comment exists');\n        // Fill in transcript event fields\n        fillIn((0, _dataElement.default)('transcript-event-start'), startDate.format('MM/D/YYYY hh:mm A'));\n        fillIn((0, _dataElement.default)('transcript-event-end'), endDate.format('MM/D/YYYY hh:mm A'));\n        fillIn((0, _dataElement.default)('transcript-event-comment'), 'heyyooo');\n\n        const inputs = find(MIDAS_EDITABLE_SELECT_INPUTS).toArray();\n        await Ember.RSVP.all(inputs.map(input => fillIn(input, '3')));\n        assert.dom((0, _dataElement.default)('worksheet-score')).hasText(SCORE_15_GRADE_III_TEXT, 'The proper score and summary text is render based on the response values');\n\n        await fillIn(OPTIONAL_NUMBER_INPUT, '7');\n        assert.dom((0, _dataElement.default)('worksheet-score')).hasText(SCORE_15_GRADE_III_TEXT, 'Changing a non required numeric input field does not affect worksheet scoring.');\n        await fillIn(REQUIRED_NUMBER_INPUT, '18');\n        assert.dom((0, _dataElement.default)('worksheet-score')).hasText(SCORE_30_GRADE_IV_TEXT, 'Changing a required field affects worksheet scoring. And updates the summary text.');\n        await click(LAST_RADIO_BUTTON);\n        assert.dom((0, _dataElement.default)('worksheet-score')).hasText(SCORE_30_GRADE_IV_TEXT, 'Changing a non required radio button does not affect worksheet scoring.');\n        await fillIn(REQUIRED_NUMBER_INPUT, '96');\n        focusOut(REQUIRED_NUMBER_INPUT);\n        await click(REQUIRED_NUMBER_INPUT_DROPDOWN_TOGGLE);\n        assert.dom((0, _dataElement.default)('btn-worksheet-save')).isDisabled('The Done button is disabled when invalid range is present.');\n        assert.dom(REQUIRED_NUMBER_INPUT_CONTAINER).hasClass('error', 'The error class is present on the number input component.');\n        await click(REQUIRED_INPUT_ZERO);\n        click((0, _dataElement.default)('btn-worksheet-save'));\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/encounter-smoking-status-test', ['ember-cli-mirage', 'qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element'], function (_emberCliMirage, _qunit, _moduleForAcceptanceAuth, _dataElement) {\n    'use strict';\n\n    const ENCOUNTER_GUID = '7022d94f-d70a-4722-a205-dac898cf9f69';\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const NEW_SMOKING_STATUS_DATE = '05/01/2016';\n    const EDIT_SMOKING_STATUS_DATE = '05/09/2016';\n    const NEW_STATUS_ID = 'SMOKING_GUID';\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Encounter smoking status', {});\n\n    (0, _qunit.test)('Empty smoking status renders properly', async assert => {\n        server.get('ClinicalEndpoint/api/v2/patients/:id/smokingstatuses', () => ({ patientSmokingStatuses: [] }));\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/encounter/' + ENCOUNTER_GUID);\n        assert.ok(find('.smoking-status-container').text().toLowerCase().indexOf('no smoking status recorded') > -1, 'Empty smoking status renders properly');\n    });\n\n    (0, _qunit.test)('Can add, update and remove smoking status', async assert => {\n        // Use Mirage to stub calls\n        server.post('ClinicalEndpoint/api/v2/patients/:id/smokingstatuses', ({ db }, request) => {\n            const data = JSON.parse(request.requestBody);\n            assert.equal(data.description, 'Non-smoker', 'Smoking status was added with the selected status');\n            assert.equal(data.effectiveDate, NEW_SMOKING_STATUS_DATE, 'Smoking status was added with the chosen effective date');\n            assert.notOk(data.patientSmokingStatusGuid, 'The smoking status did not already have an id prior to adding');\n            data.patientSmokingStatusGuid = NEW_STATUS_ID;\n            return { patientSmokingStatus: data };\n        });\n        server.put('ClinicalEndpoint/api/v2/patients/:patientPracticeGuid/smokingstatuses/:id', ({ db }, request) => {\n            const data = JSON.parse(request.requestBody);\n            assert.equal(data.description, 'Ex-smoker', 'Smoking status was updated with the selected status');\n            assert.equal(data.effectiveDate, EDIT_SMOKING_STATUS_DATE, 'Smoking status effective date was updated');\n            assert.equal(request.params.id, NEW_STATUS_ID, 'Smoking status id matches existing status during edit');\n            return new _emberCliMirage.default.Response(204, {}, null);\n        });\n        server.del('ClinicalEndpoint/api/v2/patients/:patientPracticeGuid/smokingstatuses/:id', ({ db }, request) => {\n            assert.equal(request.params.id, NEW_STATUS_ID, 'Smoking status with the proper Id is deleted');\n            return new _emberCliMirage.default.Response(204, {}, null);\n        });\n        server.get('ClinicalEndpoint/api/v2/patients/:id/smokingstatuses', () => ({ patientSmokingStatuses: [] }));\n\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/encounter/' + ENCOUNTER_GUID);\n        const startingStatusCount = find(`${(0, _dataElement.default)('smoking-status-container')} ${(0, _dataElement.default)('smoking-status-item')}`).length;\n        const statusItemSelector = `${(0, _dataElement.default)('smoking-status-container')} ${(0, _dataElement.default)('smoking-status-item')}`;\n\n        assert.expect(14);\n        assert.equal(find((0, _dataElement.default)('smoking-status-header')).length, 1, 'The smoking status is rendered on the page');\n        await click(`${(0, _dataElement.default)('smoking-status-header')} .btn.heading-action:first`);\n        // validate recording a new smoking status\n        assert.dom('.right-module h15').hasText('Tobacco use > Record', 'Tobacco use detail panel appears when recording new status');\n        click(`${(0, _dataElement.default)('smoking-option-0')}`);\n        fillIn(`${(0, _dataElement.default)('effective-date')} input`, NEW_SMOKING_STATUS_DATE);\n        await click(`${(0, _dataElement.default)('save-button')}`);\n        // Save is validated by Mirage - check that new status shows up in list\n        assert.equal(find(statusItemSelector).length, startingStatusCount + 1, 'New smoking status was added to the list');\n        assert.equal(find(statusItemSelector + ':last .smoking-date').text(), NEW_SMOKING_STATUS_DATE, 'New smoking status was added to the list with correct date');\n\n        // validate editing new status\n        await click(`${(0, _dataElement.default)('smoking-status-container')} ${(0, _dataElement.default)('smoking-status-item')}:last`);\n        assert.dom('.right-module h15').hasText('Tobacco use > Record', 'Smoking status detail panel appears when editing status');\n        click(`${(0, _dataElement.default)('smoking-option-1')}`);\n        fillIn(`${(0, _dataElement.default)('effective-date')} input`, EDIT_SMOKING_STATUS_DATE);\n        await click(`${(0, _dataElement.default)('save-button')}`);\n        // Save is validated by Mirage - check that edited status is updated in list\n        assert.equal(find(statusItemSelector + ':last .smoking-date').text(), EDIT_SMOKING_STATUS_DATE, 'Smoking status date was updated in the list');\n\n        // validate deleting the status\n        click(`${(0, _dataElement.default)('smoking-status-container')} ${(0, _dataElement.default)('smoking-status-item')}:last`);\n        click('.detail-pane-footer .btn--default:eq(1)');\n        await click('.popover-btn-row .confirm-btn');\n        assert.equal(find(statusItemSelector).length, startingStatusCount, 'Smoking status was removed from the list');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/encounter-snapshots-error-test', ['qunit', 'ember-cli-mirage', 'sinon', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element', 'boot/tests/helpers/get-text'], function (_qunit, _emberCliMirage, _sinon, _moduleForAcceptanceAuth, _dataElement, _getText) {\n    'use strict';\n\n    const TRANSCRIPT_GUID = '82a597e5-b1b8-46e4-8a07-5c3a4f778e95';\n    const PATIENT_PRACTICE_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const TRANSCRIPT_LABEL = '01/05/16 (SOAP Note)';\n    const ENCOUNTER_URL = `/PF/charts/patients/${PATIENT_PRACTICE_GUID}/encounter/${TRANSCRIPT_GUID}`;\n    const PRINT_MODAL_BUTTON = '.print-chart .content-modal footer .btn-primary';\n    let emberError;\n    let toastrStub;\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Encounter snapshots errors - v2', {\n        // We don't want to fail the test when the 500 is returned from the snapshots endpoints\n        // https://github.com/emberjs/ember.js/issues/12791#issuecomment-218561153\n        beforeEach() {\n            emberError = Ember.onerror;\n            Ember.onerror = arg => {\n                if (arg && arg.errors && arg.errors[0] && arg.errors[0].status === '500') {\n                    return null;\n                }\n                throw arg;\n            };\n            toastrStub = _sinon.default.stub(window.toastr, 'error').returns(Ember.RSVP.resolve({ diagnoses: [], medications: [] }));\n        },\n        afterEach() {\n            Ember.onerror = emberError;\n            window.toastr.error.restore();\n        }\n    });\n\n    async function checkEncounter(label) {\n        const selector = `label:contains(\"${label}\")`;\n        if (find('.open.ember-tether .checkbox-dropdown-grouping.dropdown-menu').length) {\n            return click(selector);\n        }\n        await click(`${(0, _dataElement.default)('print-chart-notes-dropdown')} .dropdown-toggle`);\n        return click(selector);\n    }\n\n    (0, _qunit.test)('Encounter fails to load if practice snapshot endpoint fails', async assert => {\n        server.get('ChartingEndpoint/api/v1/snapshots', () => new _emberCliMirage.default.Response(500, {}, null));\n\n        await visit(ENCOUNTER_URL);\n        assert.equal(currentURL(), `/PF/charts/patients/${PATIENT_PRACTICE_GUID}/summary`, 'The encounter failed to load, so the summary was loaded');\n        assert.equal(toastrStub.args[0], 'Unable to load chart', 'The \"Unable to load chart\" toaster was displayed');\n        click((0, _dataElement.default)('quick-preview-icon'));\n        await click(`.patient-previews .preview-list-pane .slc-row[data-guid=\"${TRANSCRIPT_GUID}\"]`);\n        assert.equal((0, _getText.default)((0, _dataElement.default)('preview-error-message')), 'Error loading encounter preview', 'The encounter preview fails to load if the snapshot call fails');\n        click((0, _dataElement.default)('preview-footer-close'));\n        click((0, _dataElement.default)('btn-print-chart-control-bar'));\n        click((0, _dataElement.default)('print-modal-select-none'));\n        await checkEncounter('01/19/16 (SOAP Note)');\n        await checkEncounter(TRANSCRIPT_LABEL);\n        await click(PRINT_MODAL_BUTTON);\n        assert.equal(toastrStub.getCall(1).args[0], `Failed to load encounter: ${TRANSCRIPT_LABEL}`, 'The \"Failed to load encounter\" toaster was displayed');\n    });\n\n    (0, _qunit.test)('Encounter print fails if patient snapshot endpoint fails', async assert => {\n        server.get('ChartingEndpoint/api/v1/snapshots/patients/:patientPracticeGuid', () => new _emberCliMirage.default.Response(500, {}, null));\n\n        await visit(ENCOUNTER_URL);\n        click((0, _dataElement.default)('print-encounter-button'));\n        click((0, _dataElement.default)('print-modal-select-none'));\n        click('.checkbox-row:contains(\"Chief complaint\") input');\n        await click(PRINT_MODAL_BUTTON);\n        let toastrArg = toastrStub.args[0];\n        if (Ember.isArray(toastrArg) && toastrArg[0] === 'Unable to load cds alerts') {\n            toastrArg = toastrStub.getCall(1).args[0];\n        }\n        assert.equal(toastrArg, 'Error loading print preview', 'The \"Error loading print preview\" toaster was displayed');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/encounter-subjective-note-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element'], function (_qunit, _moduleForAcceptanceAuth, _dataElement) {\n    'use strict';\n\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const TRANSCRIPT_GUID = '7022d94f-d70a-4722-a205-dac898cf9f69';\n    const TRANSCRIPT_URL = '/PF/charts/patients/' + PATIENT_GUID + '/encounter/' + TRANSCRIPT_GUID;\n    const RECORD_SUBJECTIVE = (0, _dataElement.default)('edit-note-subjective');\n    const PMH_TAB = (0, _dataElement.default)('toolbox-tab-previous');\n    const PREVIOUS_ENCOUNTER_TAB = (0, _dataElement.default)('previous-encounters-tab');\n    const TEXT_EDITOR = (0, _dataElement.default)('rich-text-editor');\n    const CHECKMARKS = '.results-list .icon-checkmark';\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Visual - Core - Charting | Encounter subjective note tests');\n\n    (0, _qunit.test)('Encounter Subjective Note - Can add past medication history to subjective and no previous encounters test', async assert => {\n        server.get('ClinicalEndpoint/api/v2/PersonalMedicalHistory/:id', ({ db }, request) => ({\n            'patientPracticeGuid': request.params.id,\n            'events': 'Broken bone',\n            'allergies': null,\n            'allergiesPmhGuid': 'ad30d844-0338-42d0-9151-5d45428d83ab',\n            'ongoingMedicalProblems': 'Chronic fatigue',\n            'familyHealthHistory': null,\n            'preventativeCare': 'Eat protein based foods to avoid limits in diet',\n            'socialHistory': 'Likes to go out',\n            'nutritionHistory': 'Started on a vegan diet at age 10',\n            'developmentalHistory': 'Walking and talking normally'\n        }));\n        // To assert empty previous visits state\n        server.get('ChartingEndpoint/api/v2/PreviousVisits/:id', () => []);\n\n        await visit(TRANSCRIPT_URL);\n        await click(RECORD_SUBJECTIVE);\n        percySnapshot(assert);\n        await click(PMH_TAB);\n        const historyItem = '.template-item';\n        assert.equal(find(historyItem + ':eq(0)').text().trim(), 'Developmental history: Walking and talking normally', 'Developmental history renders properly on past medical history from subjective note.');\n        assert.equal(find(historyItem + ':eq(1)').text().trim(), 'Family health history: Not recorded', 'No Family health history recorded renders properly on past medical history from subjective note.');\n        assert.equal(find(historyItem + ':eq(2)').text().trim(), 'Major events: Broken bone', 'Major events renders properly on past medical history from subjective note.');\n        assert.equal(find(historyItem + ':eq(3)').text().trim(), 'Nutrition history: Started on a vegan diet at age 10', 'Nutrition history renders properly on past medical history from subjective note.');\n        assert.equal(find(historyItem + ':eq(4)').text().trim(), 'Ongoing medical problems: Chronic fatigue', 'Ongoing medical problems renders properly on past medical history from subjective note.');\n        assert.equal(find(historyItem + ':eq(5)').text().trim(), 'Preventive care: Eat protein based foods to avoid limits in diet', 'Preventative care renders properly on past medical history from subjective note.');\n        assert.equal(find(historyItem + ':eq(6)').text().trim(), 'Social history: Likes to go out', 'Social history renders properly on past medical history from subjective note.');\n\n        await click(historyItem + ':eq(0)');\n        assert.equal(find(TEXT_EDITOR).text().trim(), 'Developmental history: Walking and talking normally.', 'Choosing developmental history renders properly on note.');\n        assert.equal(find(CHECKMARKS).length, 1, 'There is one checkbox rendered for developmental history after being selected for the subjective note.');\n        find(TEXT_EDITOR).text('');\n        await click((0, _dataElement.default)('add-all-pmh-link'));\n        assert.equal(find(CHECKMARKS).length, 7, 'All the pmh is selected and checkboxes render after clicking add all for subjective note.');\n\n        // Split text by separator and you should get each item - 7 total\n        const textAdded = find(TEXT_EDITOR).text().trim().split('. ');\n        assert.equal(textAdded.length, 7, 'All the pmh is added to the text editor for the subjective note.');\n\n        // Assert empty state for previous encounter\n        await click(PREVIOUS_ENCOUNTER_TAB);\n        assert.equal(find('.results-list .results-error').text().trim(), 'No previous encounters', 'There are no previous encounters to add to subjective note.');\n    });\n\n    (0, _qunit.test)('Encounter Subjective Note - Can add previous encounter to subjective', async assert => {\n        server.get('ChartingEndpoint/api/v2/PreviousVisits/:id', ({ db }, request) => {\n            const params = request.queryParams;\n            assert.equal(params.xMostRecent, 200, 'Query param for most recent previous visits is correct.');\n            return [{\n                'subjective': '<div class=\\\"pf-rich-text\\\"><p>Developmental history: Not recorded. Family health history: Obesity.. Major events: Broken bone.. Nutrition history: Not recorded. Ongoing medical problems: Chronic fatigue.. Preventive care: Not recorded. Social history: Likes to drink . <br></p></div>',\n                'dateOfService': '2016-12-08T00:00:00Z',\n                'patientPracticeGuid': 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98',\n                'transcriptGuid': '562d5f03-61e5-46cc-a72c-32902c474be0'\n            }];\n        });\n        await visit(TRANSCRIPT_URL);\n        await click(RECORD_SUBJECTIVE);\n        click((0, _dataElement.default)('toolbox-tab-previous'));\n        await click(PREVIOUS_ENCOUNTER_TAB);\n        assert.equal(find('.encounter-title:eq(0)').text().trim(), '12/08/16: Office Visit, SOAP Note', 'Title renders properly for previous encounter.');\n        await click('.encounter-title');\n        // click one template item\n        await click('.template-item:eq(0)');\n        assert.equal(find(TEXT_EDITOR).text().trim(), 'Developmental history: Not recorded.', 'Choosing developmental history from previous encounter renders properly on note.');\n        assert.equal(find(CHECKMARKS).length, 1, 'There is one checkbox rendered for developmental history after being selected for the subjective note from previous encounter.');\n        find(TEXT_EDITOR).text('');\n        await click((0, _dataElement.default)('add-all-previous-encounters'));\n        // Add all pmh from previous encounter\n        assert.equal(find(CHECKMARKS).length, 7, 'All the pmh from previous encounter is selected and checkboxes render after clicking add all for subjective note.');\n\n        // Split text by separator and you should get each item - 7 total\n        const textAdded = find(TEXT_EDITOR).text().trim().split('. ');\n        assert.equal(textAdded.length, 7, 'All the pmh from previous encounter is added to the text editor for the subjective note.');\n\n        // Go back and assert that the encounter title renders\n        await click((0, _dataElement.default)('previous-enconter-tab-go-back'));\n        assert.equal(find('.encounter-title:eq(0)').text().trim(), '12/08/16: Office Visit, SOAP Note', 'Title renders properly for previous encounter after going back to previous encounter view.');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/encounter-tabs-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element'], function (_qunit, _moduleForAcceptanceAuth, _dataElement) {\n    'use strict';\n\n    const PATIENT_PRACTICE_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const SUMMARY_URL = `/PF/charts/patients/${PATIENT_PRACTICE_GUID}/summary`;\n    const SUMMARY_TAB = `[data-tracking='Summary']`;\n    const FIRST_SIGNED_ENCOUNTER_TAB = `[data-tracking='01/05/2016']:eq(0)`;\n    const SECOND_SIGNED_ENCOUNTER_TAB = `[data-tracking='01/05/2016']:eq(1)`;\n    const FIRST_ENCOUNTER_LINK = (0, _dataElement.default)('encounter-item-0');\n    const SECOND_ENCOUNTER_LINK = (0, _dataElement.default)('encounter-item-1');\n    const SEEN_BY_ELEMENT = `${(0, _dataElement.default)('encounter-details-seen-by')}:first`;\n    const FACILITY_ELEMENT = `${(0, _dataElement.default)('encounter-details-facility')}:first`;\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Encounter preview - v2');\n\n    (0, _qunit.test)('Tabbing different encounters renders the proper seen by name and facility name', async assert => {\n        server.get('ChartingEndpoint/api/v2/EncounterSummary', () => [{\n            'transcriptGuid': '82a597e5-b1b8-46e4-8a07-5c3a4f778e95',\n            'encounterType': 'Office Visit',\n            'dateOfService': '2016-01-05T00:00:00Z',\n            'seenByProvider': '',\n            'seenByProviderGuid': 'eaa90f53-9dfa-4c2a-93db-83f3b3243d5b',\n            'signed': true,\n            'noteType': 'SOAP Note',\n            'facilityGuid': 'cac98ae6-1add-4780-b923-1df79732add6',\n            'createdDateTime': '2016-01-05T21:36:27.400Z',\n            'lastModifiedDateTime': '2016-01-06T21:02:23.677Z'\n        }, {\n            'transcriptGuid': 'SIGNED_TRANSCRIPT_GUID',\n            'encounterType': 'Office Visit',\n            'dateOfService': '2016-01-05T00:00:00Z',\n            'seenByProvider': '',\n            'seenByProviderGuid': 'eaa90f53-9dfa-4c2a-93db-83f3b3243d5b',\n            'signed': true,\n            'noteType': 'SOAP Note',\n            'facilityGuid': 'cac98ae6-1add-4780-b923-1df79732add6',\n            'createdDateTime': '2016-01-05T21:36:27.397Z',\n            'lastModifiedDateTime': '2016-01-06T21:02:23.677Z'\n        }]);\n        await visit(SUMMARY_URL);\n        await click(FIRST_ENCOUNTER_LINK);\n        assert.equal(find(SEEN_BY_ELEMENT).text(), 'George Bush M.D.', 'First encounter seen by snapshot renders properly after loading from summary');\n        assert.equal(find(FACILITY_ELEMENT).text(), 'Snapshot Building', 'First encounter facility snapshot renders properly after loading from summary');\n        await click(SUMMARY_TAB);\n        await click(SECOND_ENCOUNTER_LINK);\n        assert.equal(find(SEEN_BY_ELEMENT).text(), 'William Clinton F.B.I.', 'Second encounter seen by snapshot renders properly after loading from summary');\n        assert.equal(find(FACILITY_ELEMENT).text(), 'Above the SuperDuper', 'Second encounter facility snapshot renders properly after loading from summary');\n        await click(FIRST_SIGNED_ENCOUNTER_TAB);\n        assert.equal(find(SEEN_BY_ELEMENT).text(), 'George Bush M.D.', 'First encounter seen by snapshot renders properly after tabbing');\n        assert.equal(find(FACILITY_ELEMENT).text(), 'Snapshot Building', 'First encounter facility snapshot renders properly after tabbing');\n        await click(SECOND_SIGNED_ENCOUNTER_TAB);\n        assert.equal(find(SEEN_BY_ELEMENT).text(), 'William Clinton F.B.I.', 'Second encounter seen by snapshot renders properly after tabbing');\n        assert.equal(find(FACILITY_ELEMENT).text(), 'Above the SuperDuper', 'Second encounter facility snapshot renders properly after tabbing');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/encounter-template-usage-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element'], function (_qunit, _moduleForAcceptanceAuth, _dataElement) {\n    'use strict';\n\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const TRANSCRIPT_GUID = '7022d94f-d70a-4722-a205-dac898cf9f69';\n    const ENCOUNTER_URL = '/PF/charts/patients/' + PATIENT_GUID + '/encounter/' + TRANSCRIPT_GUID;\n    const FIRST_TEMPLATE_TEXT = 'Patient name: Some L Baby \\nDate of birth: 02/01/2013 \\nAddress: 123 Who cares, No way, AL, 95835 \\nAge: 3 yrs \\nEmail: No email recorded ';\n    const SECOND_TEMPLATE_TEXT = 'Phone Number: (555) 555-5554 .';\n    const EXAMPLE_TEMPLATE = '.template-item-text.template-name:first';\n    const TEXT_EDITOR = (0, _dataElement.default)('rich-text-editor');\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Encounter using template tests');\n\n    (0, _qunit.test)('Encounter Template - User can record a note with an existing template', async assert => {\n        server.get('/PatientEndpoint/api/:v/patients/:id/contacts', ({ db }, request) => {\n            const patientPracticeGuid = request.params.id;\n            const patientContact = db.patientContacts.find(patientPracticeGuid);\n            delete patientContact.patient.emailAddress;\n            return patientContact;\n        });\n        server.get('/PatientEndpoint/api/v3/patients/:id', ({ db }, request) => {\n            const patientPracticeGuid = request.params.id;\n            const patientContact = db.patientV3S.find(patientPracticeGuid);\n            delete patientContact.patient.emailAddress;\n            return patientContact;\n        });\n        let templateText;\n        let templates;\n        await visit(ENCOUNTER_URL);\n        await click((0, _dataElement.default)('edit-note-subjective') + ':first');\n        await click((0, _dataElement.default)('toolbox-tab-my-templates'));\n        await click(EXAMPLE_TEMPLATE);\n        // Assert you're using the right template\n        assert.equal(find('.template-title').text(), 'Example Template', 'Template title renders properly.');\n        await click('.flex-template-item-container:first');\n        // Confirm adding one will render the proper text - separators are not added yet\n        const templateItems = find(TEXT_EDITOR).text().trim().split(' \\n');\n        assert.equal(templateItems[0], 'Patient name: Some L Baby', 'Selecting first template successfully renders patient name.');\n        assert.equal(templateItems[1], 'Date of birth: 02/01/2013', 'Selecting first template successfully renders patient dob.');\n        assert.equal(templateItems[2], 'Address: 123 Who cares, No way, AL, 95835', 'Selecting first template successfully renders patient address.');\n        assert.equal(templateItems[3], 'Age: 3 yrs', 'Selecting first template successfully renders patient age.');\n        // The last portion of the template will have the period separator which is expected\n        assert.equal(templateItems[4], 'Email: No email recorded .', 'Selecting first template successfully renders default text for empty item (email).');\n        await click('.flex-template-item-container:eq(1)');\n        templateText = find(TEXT_EDITOR).text().trim();\n        templates = templateText.split('. ');\n        assert.equal(templates[0], FIRST_TEMPLATE_TEXT, 'First template renders properly and is separated by period as specified in provider preference.');\n        assert.equal(templates[1], SECOND_TEMPLATE_TEXT, 'Second template renders properly and is separated by period as specified in provider preference.');\n        // Test back to templates works properly\n        await click((0, _dataElement.default)('back-to-templates'));\n        assert.ok(find((0, _dataElement.default)('charting-template-list')).length > 0, 'Template list renders properly after user goes back to choose template view.');\n        // Clear existing text before adding all\n        find(TEXT_EDITOR).text('');\n        await click(EXAMPLE_TEMPLATE);\n        // Add all\n        await click((0, _dataElement.default)('add-all-template-items'));\n        templateText = find(TEXT_EDITOR).text().trim();\n        templates = templateText.split('. ');\n        assert.equal(templates[0], FIRST_TEMPLATE_TEXT, 'First template renders properly after add all and is separated by period as specified in provider preference.');\n        assert.equal(templates[1], SECOND_TEMPLATE_TEXT, 'Second template renders properly after add all and is separated by period as specified in provider preference.');\n        // two icon checkmarks are visible to indicate the templates are being used\n        assert.equal(find('.icon.icon-checkmark').length, 2, 'There are two checkmarks to indicate that two templates are being used.');\n\n        // Empty out previous template text and add patient demographics from text area component\n        find(TEXT_EDITOR).text('');\n        await click((0, _dataElement.default)('patient-demographic-dropdown'));\n        await click(`.dropdown-menu span:contains('Address')`);\n        assert.equal(find(TEXT_EDITOR).text().trim(), '123 Who cares, No way, AL, 95835', 'Patient address renders after being chosen from in the text area');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/encounter-timeline-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element', 'boot/tests/helpers/get-text', 'boot/config', 'ember-mockdate-shim'], function (_qunit, _moduleForAcceptanceAuth, _dataElement, _getText, _config, _emberMockdateShim) {\n    'use strict';\n\n    const UNSIGNED_ENCOUNTER_GUID = '562d5f03-61e5-46cc-a72c-32902c474be0';\n    const SIGNED_ENCOUNTER_GUID = '82a597e5-b1b8-46e4-8a07-5c3a4f778e95';\n    const PATIENT_PRACTICE_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const TIMELINE_URL = `/PF/charts/patients/${PATIENT_PRACTICE_GUID}/timeline/encounter`;\n    const dg = guid => `[data-guid=${guid}]`;\n    const SIGNED_ENCOUNTER = dg(SIGNED_ENCOUNTER_GUID);\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Visual - Core - Charting | Encounter timeline', {\n        beforeEach() {\n            (0, _emberMockdateShim.freezeDateAt)(new Date(_config.default.visualDiffFrozenDate));\n        },\n        afterEach() {\n            (0, _emberMockdateShim.unfreezeDate)();\n        }\n    });\n\n    (0, _qunit.test)('Visit encounter timeline', async assert => {\n        let serviceCallCount = 0;\n        server.get('ChartingEndpoint/api/v2/EncounterSummary', ({ db }) => {\n            serviceCallCount++;\n            return db.encounterSummaries;\n        });\n        await visit(TIMELINE_URL);\n        const UNSIGNED_ENCOUNTER = dg(UNSIGNED_ENCOUNTER_GUID);\n        const TYPE_DROPDOWN = (0, _dataElement.default)('timeline-type-filter');\n        const TYPE_DROPDOWN_BUTTON = `${TYPE_DROPDOWN} .ember-select-choice`;\n        const encounterFilter = `${TYPE_DROPDOWN} .dropdown-menu li:contains(\"Encounters\")`;\n        percySnapshot(assert);\n        assert.equal(find(`${UNSIGNED_ENCOUNTER} ${(0, _dataElement.default)('encounter-type')}`).text(), 'Office Visit', 'The encounter type is rendered correctly');\n        assert.equal((0, _getText.default)(`${UNSIGNED_ENCOUNTER} ${(0, _dataElement.default)('encounter-seen-by')}`), 'Provider Bob MD', 'The seen by provider name is rendered correctly');\n        assert.equal((0, _getText.default)(`${UNSIGNED_ENCOUNTER} .encounter-cc`), 'CC: No chief complaint recorded', 'The chief complaint is rendered correctly');\n        assert.equal(find(`${UNSIGNED_ENCOUNTER} ${(0, _dataElement.default)('encounter-note-type')}`).text(), 'SOAP Note', 'The note type is rendered correctly');\n        assert.equal(find(`${UNSIGNED_ENCOUNTER} ${(0, _dataElement.default)('encounter-date')}`).text(), '01/19/2016', 'The encounter date of service is rendered correctly');\n        assert.equal(find(`${SIGNED_ENCOUNTER} .encounter-status`).text(), 'Signed', 'A signed encounter has a status of \"signed\"');\n        assert.equal((0, _getText.default)(`${SIGNED_ENCOUNTER} ${(0, _dataElement.default)('encounter-seen-by')}`), 'George Bush', 'The seen by provider name is rendered correctly for a snapshotted encounter');\n        assert.throws(findWithAssert((0, _dataElement.default)('timeline-timestamp')), 'The last refreshed time is present');\n\n        await click((0, _dataElement.default)('refresh-button'));\n        assert.equal(serviceCallCount, 2, 'The data was refreshed when the refresh button was clicked');\n        await click(TYPE_DROPDOWN_BUTTON);\n        assert.throws(findWithAssert(encounterFilter), 'The encounters type filter is present');\n        assert.throws(findWithAssert(`${TYPE_DROPDOWN} .dropdown-menu li:contains(\"Lab orders\")`), 'The lab orders type filter is present');\n        await click(`${TYPE_DROPDOWN} .dropdown-menu li:contains(\"Lab results\")`);\n        assert.ok(find('.row-event').length, 'Labs data is present when clicking the lab orders filter');\n    });\n\n    (0, _qunit.test)('Clicking an encounter item opens the encounter', async assert => {\n        await visit(TIMELINE_URL);\n        await click(SIGNED_ENCOUNTER);\n        assert.equal(currentURL(), `/PF/charts/patients/${PATIENT_PRACTICE_GUID}/encounter/${SIGNED_ENCOUNTER_GUID}`, 'Clicking on an encounter item opened the encounter');\n    });\n\n    (0, _qunit.test)('Create new encounter from timeline', async assert => {\n        let postCallCount = 0;\n        server.post('ChartingEndpoint/api/v3/patients/:patientPracticeGuid/encounters', ({ db }, request) => {\n            postCallCount++;\n            const data = JSON.parse(request.requestBody);\n            data.transcriptGuid = `UNSIGNED_TRANSCRIPT_GUID_${postCallCount}`;\n            data.seenByProviderGuid = 'eaa90f53-9dfa-4c2a-93db-83f3b3243d5b';\n            if (postCallCount === 1) {\n                assert.equal(data.chartNoteTypeId, 0, 'The encounter was created with the correct note type');\n            } else if (postCallCount === 2) {\n                assert.equal(data.chartNoteTypeId, 2, 'The encounter was created with the correct note type');\n            }\n            return data;\n        });\n        await visit(TIMELINE_URL);\n        const NEW_ENCOUNTER_BUTTON = '.btn-new-encounter';\n        const NEW_ENCOUNTER_URL = `/PF/charts/patients/${PATIENT_PRACTICE_GUID}/encounter/UNSIGNED_TRANSCRIPT_GUID`;\n        assert.throws(findWithAssert(NEW_ENCOUNTER_BUTTON), 'The new encounter button exists');\n        assert.throws(findWithAssert(`${NEW_ENCOUNTER_BUTTON} .dropdown-menu li:contains('SOAP Note')`), 'SOAP Note is found in the new encounter dropdown');\n        assert.throws(findWithAssert(`${NEW_ENCOUNTER_BUTTON} .dropdown-menu li:contains('Nutritionist Notes')`), 'Nutritionist Notes is found in the new encounter dropdown');\n        assert.throws(findWithAssert(`${NEW_ENCOUNTER_BUTTON} .dropdown-menu li:contains('Patient Phone Message')`), 'Patient Phone Message is found in the new encounter dropdown');\n\n        await click(`${NEW_ENCOUNTER_BUTTON} ${(0, _dataElement.default)('new-soap-note')}`);\n        assert.equal(currentURL(), `${NEW_ENCOUNTER_URL}_1`, 'Clicking on new soap note opened the new encounter');\n        await click('.left-nav ul.nav-tabs li a:contains(\"Timeline\")');\n        await click(`${NEW_ENCOUNTER_BUTTON} .dropdown-menu li a:contains('Patient Phone Message')`);\n        assert.equal(currentURL(), `${NEW_ENCOUNTER_URL}_2`, 'Clicking on Patient Phone Message opened the new encounter');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/flowsheet-encounter-range-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element', 'boot/tests/helpers/data-value', 'ember-cli-mirage'], function (_qunit, _moduleForAcceptanceAuth, _dataElement, _dataValue, _emberCliMirage) {\n    'use strict';\n\n    const PATIENT_PRACTICE_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const SUMMARY_URL = `/PF/charts/patients/${PATIENT_PRACTICE_GUID}/summary`;\n    const FLOWSHEET_LINK = 'summary-flowsheet-list-item';\n    const SELECT_RANGE_LINK = '.input-dropdown-button';\n    const CUSTOM_LINK = 'custom';\n    const SET_RANGE_BTN = '.pull-right .btn-primary';\n    const START_DATE_INPUT = 'flowsheet-modal-start-date';\n    const END_DATE_INPUT = 'flowsheet-modal-end-date';\n\n    // The following tests are based on user inputted ranges and asserting against what query params are sent to the service.\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Flowsheet range - v2');\n\n    (0, _qunit.test)('Flowsheet Encounter Range - Render last 5, 10 or most recent encounter(s) makes the proper service calls', async assert => {\n        let callCount = 0;\n        server.get('FlowsheetEndpoint/api/v1/patients/:patientPracticeGuid/flowsheetData/:flowsheetGuid', ({ db }, request) => {\n            const { mostRecentCount } = request.queryParams;\n            callCount++;\n            if (callCount === 1) {\n                assert.equal(mostRecentCount, '5', 'Flowsheets most recent call count default lists the last 5 encounters on load.');\n            } else if (callCount === 2) {\n                assert.equal(mostRecentCount, '10', 'Flowsheets most recent call count lists the last 10 encounters.');\n            } else if (callCount === 3) {\n                assert.equal(mostRecentCount, '1', 'Flowsheets most recent call count lists the last encounter.');\n            } else if (callCount === 4) {\n                assert.equal(mostRecentCount, '5', 'Flowsheets most recent call count lists the last 5 encounters.');\n            }\n            return db.flowsheetData.find(request.params.patientPracticeGuid);\n        });\n\n        await visit(SUMMARY_URL);\n        await click((0, _dataElement.default)(FLOWSHEET_LINK));\n        await click(SELECT_RANGE_LINK);\n        await click((0, _dataValue.default)('lastTen'));\n        await click('.input-dropdown-button');\n        await click((0, _dataValue.default)('mostRecent'));\n        await click('.input-dropdown-button');\n        click((0, _dataValue.default)('lastFive'));\n    });\n\n    (0, _qunit.test)('Flowsheet Encounter Range - Render encounters from a specified date range makes the proper service calls', async assert => {\n        const dateFormat = 'MM/DD/YYYY';\n        const startDate = moment('11/03/2016').format(dateFormat);\n        const endDate = moment('11/06/2016').format(dateFormat);\n        let callCount = 0;\n\n        server.get('FlowsheetEndpoint/api/v1/patients/:patientPracticeGuid/flowsheetData/:flowsheetGuid', ({ db }, request) => {\n            const { fromDate, toDate } = request.queryParams;\n            callCount++;\n            if (callCount === 1) {\n                assert.ok('Flowsheets are loaded from service.');\n            } else if (callCount === 2) {\n                // Dates need to be converted to utc for normalization during testing run time\n                assert.equal(moment(fromDate).utc().format(dateFormat), moment(startDate).utc().format(dateFormat), 'Correct start date range is sent to flowsheetData service.');\n                // End date is set to end of day, so we need to set the endDate to end of day to compare.\n                assert.equal(moment(toDate).utc().format(dateFormat), moment(endDate).endOf('day').utc().format(dateFormat), 'Correct end date range is sent to flowsheetData service.');\n            } else if (callCount === 3) {\n                assert.equal(fromDate, 'Invalid date', 'Empty start date sets the fromDate as invalid to the flowsheetData service.');\n                assert.equal(toDate, 'Invalid date', 'Empty end date sets the toDate as invalid to the flowsheetData service.');\n                return new _emberCliMirage.default.Response(400);\n            }\n\n            return db.flowsheetData.find(request.params.patientPracticeGuid);\n        });\n\n        await visit(SUMMARY_URL);\n        await click((0, _dataElement.default)(FLOWSHEET_LINK));\n        await click(SELECT_RANGE_LINK);\n        await click((0, _dataValue.default)(CUSTOM_LINK));\n        assert.ok(find('.content-modal').length > 0, 'The custom range of flowsheets modal pops up.');\n        await fillIn((0, _dataElement.default)(START_DATE_INPUT), startDate);\n        await fillIn((0, _dataElement.default)(END_DATE_INPUT), endDate);\n        await click(SET_RANGE_BTN);\n        await click('.input-dropdown-button');\n        await click((0, _dataValue.default)('custom'));\n        // Invalid dates sent to service returns 400\n        await fillIn((0, _dataElement.default)(START_DATE_INPUT), '');\n        await fillIn((0, _dataElement.default)(END_DATE_INPUT), '');\n        click(SET_RANGE_BTN);\n    });\n\n    (0, _qunit.test)('Flowsheet Encounter Range - Render encounters from a specified number of columns makes the proper service calls', async assert => {\n        let callCount = 0;\n        server.get('FlowsheetEndpoint/api/v1/patients/:patientPracticeGuid/flowsheetData/:flowsheetGuid', ({ db }, request) => {\n            const { mostRecentCount } = request.queryParams;\n            callCount++;\n            if (callCount === 1) {\n                assert.ok('Flowsheets are loaded from service.');\n            } else if (callCount === 2) {\n                assert.equal(mostRecentCount, '2', 'Setting custom column range to 2 sends the propery query parameter to flowsheetData service call.');\n            }\n            return db.flowsheetData.find(request.params.patientPracticeGuid);\n        });\n\n        await visit(SUMMARY_URL);\n        await click((0, _dataElement.default)(FLOWSHEET_LINK));\n        await click(SELECT_RANGE_LINK);\n        await click((0, _dataValue.default)(CUSTOM_LINK));\n        assert.ok(find('.content-modal').length > 0, 'The custom range of flowsheets modal pops up.');\n        await click((0, _dataElement.default)('flowsheet-modal-column-range'));\n        await fillIn((0, _dataElement.default)('flowsheet-modal-n-most-recent'), '2');\n        click(SET_RANGE_BTN);\n    });\n\n    (0, _qunit.test)('Flowsheet Encounter Range - Refresh renders last selected number of encounters to display', async assert => {\n        let callCount = 0;\n        server.get('FlowsheetEndpoint/api/v1/patients/:patientPracticeGuid/flowsheetData/:flowsheetGuid', ({ db }, request) => {\n            const { mostRecentCount } = request.queryParams;\n            callCount++;\n            if (callCount === 1) {\n                assert.equal(mostRecentCount, '5', 'Flowsheets most recent call count default lists the last 5 encounters on load.');\n            } else if (callCount === 2) {\n                assert.equal(mostRecentCount, '10', 'Flowsheets most recent call count lists the last 10 encounters.');\n            } else if (callCount === 3) {\n                assert.equal(mostRecentCount, '10', 'Flowsheets most recent call count retains user selected number of encounters (10) on refresh.');\n            }\n            return db.flowsheetData.find(request.params.patientPracticeGuid);\n        });\n\n        await visit(SUMMARY_URL);\n        await click((0, _dataElement.default)(FLOWSHEET_LINK));\n        await click(SELECT_RANGE_LINK);\n        await click((0, _dataValue.default)('lastTen'));\n        await click('.input-dropdown-button');\n        await click((0, _dataElement.default)('flowsheet-refresh-link'));\n        assert.equal(find(SELECT_RANGE_LINK).text().trim(), 'Last 10 encounters or labs', 'Refresh flowsheet retains user selected number of encounters to render.');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/medication-print-preview-encounter-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element'], function (_qunit, _moduleForAcceptanceAuth, _dataElement) {\n    'use strict';\n\n    const UNSIGNED_TRANSCRIPT_GUID = 'd2573d89-bb8b-494e-8a79-b94d02f282f2';\n    const PATIENT_PRACTICE_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const ENCOUNTER_URL = `/PF/charts/patients/${PATIENT_PRACTICE_GUID}/encounter/${UNSIGNED_TRANSCRIPT_GUID}`;\n    const MEDICATION_PRINT_PREVIEW_BUTTON = '.print-menu-group button';\n    const ALL_MEDICATIONS = (0, _dataElement.default)('medication-print-preview-dropdown') + ' a:eq(0)';\n    const ACTIVE_MEDICATIONS = (0, _dataElement.default)('medication-print-preview-dropdown') + ' a:eq(1)';\n    const HISTORICAL_MEDICATIONS = (0, _dataElement.default)('medication-print-preview-dropdown') + ' a:eq(2)';\n    const ACTIVE_MED_HEADER = '.header-row h2:contains(Active Medications)';\n    const HISTORICAL_MED_HEADER = '.header-row h2:contains(Historical Medications)';\n    const CLOSE_BUTTON = '.close-link';\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Print Medication Print Preview within an Encounter - All, Active, or Historical');\n\n    (0, _qunit.test)('Medication Print Preview - Encounter - all medications', async assert => {\n        await visit(ENCOUNTER_URL);\n        await click(MEDICATION_PRINT_PREVIEW_BUTTON);\n        await click(ALL_MEDICATIONS);\n        assert.equal(find(ACTIVE_MED_HEADER).length, 1, 'All: Active Medications header renders correctly.');\n        assert.equal(find(HISTORICAL_MED_HEADER).length, 1, 'All: Historical Medications header renders correctly.');\n        click(CLOSE_BUTTON);\n    });\n\n    (0, _qunit.test)('Medication Print Preview - Encounter - active medications', async assert => {\n        await visit(ENCOUNTER_URL);\n        await click(MEDICATION_PRINT_PREVIEW_BUTTON);\n        await click(ACTIVE_MEDICATIONS);\n        assert.equal(find(ACTIVE_MED_HEADER).length, 1, 'Active Only: Active Medications header renders correctly.');\n        assert.equal(find(HISTORICAL_MED_HEADER).length, 0, 'Active Only: Historical Medications header does not render.');\n        click(CLOSE_BUTTON);\n    });\n\n    (0, _qunit.test)('Medication Print Preview - Encounter - historical medications', async assert => {\n        await visit(ENCOUNTER_URL);\n        await click(MEDICATION_PRINT_PREVIEW_BUTTON);\n        await click(HISTORICAL_MEDICATIONS);\n        assert.equal(find(ACTIVE_MED_HEADER).length, 0, 'Historical Only: Active Medications header does not render.');\n        assert.equal(find(HISTORICAL_MED_HEADER).length, 1, 'Historical Only: Historical Medications header renders correctly.');\n        click(CLOSE_BUTTON);\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/medication-print-preview-summary-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element', 'boot/tests/helpers/get-text-in-print'], function (_qunit, _moduleForAcceptanceAuth, _dataElement, _getTextInPrint) {\n    'use strict';\n\n    const PATIENT_PRACTICE_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const SUMMARY_URL = '/PF/charts/patients/' + PATIENT_PRACTICE_GUID + '/summary';\n    const MEDICATION_PRINT_PREVIEW_BUTTON = 'button.print-icon-button';\n    const ALL_MEDICATIONS = (0, _dataElement.default)('print-medications-dropdown') + ' a:eq(0)';\n    const ACTIVE_MEDICATIONS = (0, _dataElement.default)('print-medications-dropdown') + ' a:eq(1)';\n    const HISTORICAL_MEDICATIONS = (0, _dataElement.default)('print-medications-dropdown') + ' a:eq(2)';\n    const ACTIVE_MED_HEADER = '.header-row h2:contains(Active Medications)';\n    const HISTORICAL_MED_HEADER = '.header-row h2:contains(Historical Medications)';\n    const CLOSE_BUTTON = '.close-link';\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Print Medication Print Preview within Summary - All, Active, or Historical - v2');\n\n    (0, _qunit.test)('Medication Print Preview - Summary - all medications', async assert => {\n        await visit(SUMMARY_URL);\n        await click(MEDICATION_PRINT_PREVIEW_BUTTON);\n        await click(ALL_MEDICATIONS);\n        assert.equal(find(ACTIVE_MED_HEADER).length, 1, 'All: Active Medications header renders correctly.');\n        assert.equal(find(HISTORICAL_MED_HEADER).length, 1, 'All: Historical Medications header renders correctly.');\n\n        assert.equal((0, _getTextInPrint.default)('head title'), 'Medications - Patient: Some L Baby DOB: 02/01/2013 PRN: BS186029', 'The print preview has the correct header');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-header-patient-name')), 'Some L Baby', 'The patient name renders correctly on the print preview');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-header-facility-name')), 'Rosalise Ron Practice', 'The facility name renders correctly on the print preview');\n\n        // Confirm headers for active/historical medications\n        assert.equal(find(`${(0, _dataElement.default)('print-medications')} h2:contains('Active Medications')`).text(), 'Active Medications', 'There is an Active Medications header');\n        assert.equal(find(`${(0, _dataElement.default)('print-medications')} h2:contains('Historical Medications')`).text(), 'Historical Medications', 'There is a Historical Medications header');\n\n        // Confirm column headers under active and historical medications\n        assert.equal(find('.row.header-row .col-xs-4:contains(\\'Medication\\')').length, 2, 'There are two medication rows under Active and Historical medications ');\n        assert.equal(find(`.row.header-row:contains('Sig')`).length, 2, 'There is a sig column under active and historical medications');\n        assert.equal(find(`.row.header-row:contains('Start/Stop')`).length, 2, 'There is a start/stop date column under active and historical medications');\n        assert.equal(find(`.row.header-row:contains('Associated Dx')`).length, 2, 'There is an associated diagnosis column under active and historical medications');\n        // Confirm active medications\n        assert.equal(find(`${(0, _dataElement.default)('medication-item-text')}:eq(0)`).text().trim(), 'methylTESTOSTERone (Methitest) 10 mg oral tablet', 'There is a medication present with generic name, product strength, route and dose form for active medication.');\n        assert.equal(find(`${(0, _dataElement.default)('medication-item-sig')}:eq(0)`).text().trim(), '4 times a day', 'There is a medication sig present for active medication.');\n        assert.equal(find(`${(0, _dataElement.default)('medication-item-dates')}:eq(0)`).text().trim().replace('\\n', ''), '02/10/15 -', 'Medication item dates start and have not stopped yet for active medication.');\n        assert.equal(find(`${(0, _dataElement.default)('medication-item-diagnosis')}:eq(0)`).text().trim(), '-', 'There is no diagnosis for this medication present for active medication.');\n\n        // Confirm historical medications\n        assert.equal(find(`${(0, _dataElement.default)('medication-item-text')}:eq(1)`).text().trim(), 'Alprazolam (Xanax) 0.25 MG Oral Tablet', 'There is a medication present with generic name, product strength, route and dose form for historical medication.');\n        assert.equal(find(`${(0, _dataElement.default)('medication-item-sig')}:eq(1)`).text().trim(), '4 times a day', 'There is a medication sig present for historical medication.');\n        assert.equal(find(`${(0, _dataElement.default)('medication-item-dates')}:eq(1)`).text().trim().replace('\\n', ''), '09/27/16 - 09/30/16', 'Medication item dates start / stop is present for historical medication.');\n        assert.equal(find(`${(0, _dataElement.default)('medication-item-diagnosis')}:eq(1)`).text().trim(), 'Fracture of femur', 'There is a diagnosis for this medication present for historical medication.');\n\n        click(CLOSE_BUTTON);\n    });\n\n    (0, _qunit.test)('Medication Print Preview - Summary - active medications', async assert => {\n        await visit(SUMMARY_URL);\n        await click(MEDICATION_PRINT_PREVIEW_BUTTON);\n        await click(ACTIVE_MEDICATIONS);\n        assert.equal(find(ACTIVE_MED_HEADER).length, 1, 'Active Only: Active Medications header renders correctly.');\n        assert.equal(find(HISTORICAL_MED_HEADER).length, 0, 'Active Only: Historical Medications header does not render.');\n        click(CLOSE_BUTTON);\n    });\n\n    (0, _qunit.test)('Medication Print Preview - Summary - historical medications', async assert => {\n        await visit(SUMMARY_URL);\n        await click(MEDICATION_PRINT_PREVIEW_BUTTON);\n        await click(HISTORICAL_MEDICATIONS);\n        assert.equal(find(ACTIVE_MED_HEADER).length, 0, 'Historical Only: Active Medications header does not render.');\n        assert.equal(find(HISTORICAL_MED_HEADER).length, 1, 'Historical Only: Historical Medications header renders correctly.');\n        click(CLOSE_BUTTON);\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/orders-attached-to-encounter-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element'], function (_qunit, _moduleForAcceptanceAuth, _dataElement) {\n    'use strict';\n\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const TRANSCRIPT_GUID = '7022d94f-d70a-4722-a205-dac898cf9f69';\n    const ENCOUNTER_URL = '/PF/charts/patients/' + PATIENT_GUID + '/encounter/' + TRANSCRIPT_GUID;\n    const GOTO_BTN = `[data-toggle='dropdown']:contains('Go to')`;\n    const ORDERS_BTN = `a:contains('Orders')`;\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Encounter renders orders attached');\n\n    (0, _qunit.test)('Orders attached to encounter renders properly', async assert => {\n        server.get('LabsEndpoint/api/v1/orders/patients/:patientPracticeGuid/encounters/:transcriptGuid', ({ db }) => db.ordersAttachedToEncounters);\n        await visit(ENCOUNTER_URL);\n        await click(GOTO_BTN);\n        await click(ORDERS_BTN);\n        // Assert headers\n        const ordersHeader = '.orders-attached-to-encounter h3';\n        const labOrdersSubheader = '.orders-attached-to-encounter .header3b:eq(0)';\n        const imagingOrdersSubheader = '.orders-attached-to-encounter .header3b:eq(1)';\n        assert.equal(find(ordersHeader).text().trim(), 'Orders', 'Orders header renders properly on encounter.');\n        assert.equal(find(labOrdersSubheader).text().trim(), 'Lab Orders', 'Lab Orders sub header renders properly on encounter.');\n        assert.equal(find(imagingOrdersSubheader).text().trim(), 'Imaging Orders', 'Imaging Orders sub header renders properly on encounter.');\n\n        // Status of the order renders properly\n        const submittedOrder = '.orders-attached-to-encounter .submitted';\n        const draftOrder = '.orders-attached-to-encounter .draft';\n        assert.equal(find(submittedOrder).length, 1, 'There is one submitted order.');\n        assert.equal(find(draftOrder).length, 2, 'There are two draft orders.');\n\n        // Assert lab data\n        const labOrder1 = (0, _dataElement.default)('show-order-link') + ':eq(0)';\n        const labOrder2 = (0, _dataElement.default)('show-order-link') + ':eq(1)';\n        const imagingOrder = (0, _dataElement.default)('show-order-link') + ':eq(2)';\n\n        // Assert that the link associated with the lab name has the correct route\n        assert.equal(find(labOrder1).attr('href'), '/PF/charts/patients/ecd212c3-5c99-499e-b3c6-b2645b8a4c98/orders/9d2f0b1c-2a22-4a8a-bac4-17f4a7d06eeb', 'First lab order contains appropriate link to open view/edit order tab.');\n        assert.equal(find(labOrder2).attr('href'), '/PF/charts/patients/ecd212c3-5c99-499e-b3c6-b2645b8a4c98/orders/d1359972-883d-aaaa-a080-8a95820293a0', 'Second lab order contains appropriate link to open view/edit order tab.');\n        assert.equal(find(imagingOrder).attr('href'), '/PF/charts/patients/ecd212c3-5c99-499e-b3c6-b2645b8a4c98/orders/d1359972-883d-4f76-a080-8a95820293a0', 'Imaging Order contains appropriate link to open view/edit order tab.');\n        // Assert that the lab name renders the lab type and order number properly\n        assert.equal(find(labOrder1).text().trim(), 'Vendor Order 1603REWV', 'First lab order lab type and order number renders properly.');\n        assert.equal(find(labOrder2).text().trim(), 'Vendor Order 1603RF29', 'First lab order lab type and order number renders properly.');\n        assert.equal(find(imagingOrder).text().trim(), 'Imaging Order 1603RF29', 'Imaging order lab type and order number renders properly.');\n\n        // Assert lab type for one order; the rest should render if one renders properly\n        assert.equal(find((0, _dataElement.default)('lab-test-from-order') + ' li:eq(0)').text().trim(), '2356 - Glia(IgA/G)+IgA', 'Lab test for first vendor order renders properly on encounter.');\n\n        // Assert that the add links for diagnostic and imaging render properly\n        assert.equal(find((0, _dataElement.default)('add-diagnostic-order-from-encounter')).attr('href'), '/PF/charts/patients/ecd212c3-5c99-499e-b3c6-b2645b8a4c98/orders/new/diagnostic?transcriptGuid=7022d94f-d70a-4722-a205-dac898cf9f69', 'Add diagnostic order from encounter route renders properly with transcriptGuid as the parameter.');\n        assert.equal(find((0, _dataElement.default)('add-imaging-order-from-encounter')).attr('href'), '/PF/charts/patients/ecd212c3-5c99-499e-b3c6-b2645b8a4c98/orders/new/imaging?transcriptGuid=7022d94f-d70a-4722-a205-dac898cf9f69', 'Add diagnostic order from encounter route renders properly with transcriptGuid as the parameter.');\n    });\n\n    (0, _qunit.test)('Orders attached to encounter can be printed from encounter', async assert => {\n        server.get('LabsEndpoint/api/v1/orders/patients/:patientPracticeGuid/encounters/:transcriptGuid', ({ db }) => db.ordersAttachedToEncounters);\n        await visit(ENCOUNTER_URL);\n        const PRINT_ORDERS_BTN = `.orders-attached-to-encounter a:Contains('Print')`;\n        await click(PRINT_ORDERS_BTN);\n        const labOrder1 = (0, _dataElement.default)('print-order-title') + ':eq(0)';\n        const labOrder2 = (0, _dataElement.default)('print-order-title') + ':eq(1)';\n        const imagingOrder = (0, _dataElement.default)('print-order-title') + ':eq(2)';\n\n        assert.equal(find(labOrder1).text().trim(), 'Vendor Order 1603REWV', 'First vendor order title renders properly on print.');\n        assert.equal(find(labOrder2).text().trim(), 'Vendor Order 1603RF29', 'Second vendor order title renders properly on print.');\n        assert.equal(find(imagingOrder).text().trim(), 'Imaging Order 1603RF29', 'Imaging order title renders properly on print.');\n\n        const labOrderVendorName1 = (0, _dataElement.default)('print-order-vendor-name') + ':eq(0)';\n        const labOrderVendorName2 = (0, _dataElement.default)('print-order-vendor-name') + ':eq(1)';\n        const imagingOrderVendorName = (0, _dataElement.default)('print-order-vendor-name') + ':eq(2)';\n        assert.equal(find(labOrderVendorName1).text().trim(), 'NIST Lab Facility', 'First lab order vendor name renders properly on print.');\n        assert.equal(find(labOrderVendorName2).text().trim(), 'This is a vendor name', 'Second lab order vendor name renders properly on print.');\n        assert.equal(find(imagingOrderVendorName).text().trim(), 'This is a vendor name', 'Imaging order vendor name renders properly on print.');\n\n        // We only have one lab order with an account number\n        const labOrderVendorAccountNumber = (0, _dataElement.default)('print-order-vendor-account-number');\n        assert.equal(find(labOrderVendorAccountNumber).text().trim(), 'NISTbetty', 'Lab order vendor account number renders properly on print.');\n\n        // Lab test for one order\n        const labOrder1Test = (0, _dataElement.default)('print-lab-test-from-order') + ':eq(0)';\n        assert.equal(find(labOrder1Test).text().trim(), '2356 - Glia(IgA/G)+IgA', 'Lab order test name renders properly on print.');\n\n        click('#print-modal-controls .close-link');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/past-medical-history-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element'], function (_qunit, _moduleForAcceptanceAuth, _dataElement) {\n    'use strict';\n\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const SUMMARY_URL = '/PF/charts/patients/' + PATIENT_GUID + '/summary';\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Past medical history on patient summary - v2');\n\n    (0, _qunit.test)('Can add, edit, clear out and print past medical history on patient summary', async assert => {\n        let callCount = 0;\n        server.put('/ClinicalEndpoint/api/v2/PersonalMedicalHistory/:id', ({ db }, request) => {\n            callCount++;\n            const history = JSON.parse(request.requestBody);\n            switch (callCount) {\n                case callCount === 1:\n                    assert.equal(history.patientPracticeGuid, PATIENT_GUID, 'The patient practice guid is correctly sent to the request.');\n                    assert.equal(history.events, 'This is a major event.', 'The major event text is correctly sent to the request.');\n                    break;\n                case callCount === 2:\n                    assert.equal(history.developmentalHistory, 'This is developmental history.', 'The developmental history text is correctly sent to the request.');\n                    break;\n                case callCount === 3:\n                    assert.equal(history.ongoingMedicalProblems, 'This is an ongoing medical problem.', 'The ongoing medical problem text is correctly sent to the request.');\n                    break;\n                case callCount === 4:\n                    assert.equal(history.preventativeCare, 'This is preventative care.', 'The preventative care text is correctly sent to the request.');\n                    break;\n                case callCount === 5:\n                    assert.equal(history.ongoingMedicalProblems, 'This is edited ongoing medical problem.', 'Edited ongoing medical problem gets sent properly to request.');\n                    break;\n                default:\n                    break;\n            }\n            return history;\n        });\n        server.post('/ChartingEndpoint/api/v2/PrintAudit', () => {\n            assert.ok('Print audit count was called properly.');\n            return {};\n        });\n        await visit(SUMMARY_URL);\n        // add button for empty sub-sections\n        assert.dom(`${(0, _dataElement.default)('events-section')} ${(0, _dataElement.default)('past-medical-history-field-add-button')}`).exists('Add button exists when major events is empty.');\n        assert.dom(`${(0, _dataElement.default)('ongoingMedicalProblems-section')} ${(0, _dataElement.default)('past-medical-history-field-add-button')}`).exists('Add button exists when ongoing medical problems is empty.');\n        assert.dom(`${(0, _dataElement.default)('preventativeCare-section')} ${(0, _dataElement.default)('past-medical-history-field-add-button')}`).exists('Add button exists when preventive care is empty.');\n        assert.dom(`${(0, _dataElement.default)('developmentalHistory-section')} ${(0, _dataElement.default)('past-medical-history-field-add-button')}`).exists('Add button exists when developmental history is empty.');\n        // placeholder text for sub-sections\n        assert.dom(`${(0, _dataElement.default)('events-section')} ${(0, _dataElement.default)('past-medical-history-placeholder-text')}`).hasText('No major events recorded', 'Empty state for major events renders properly.');\n        assert.dom(`${(0, _dataElement.default)('ongoingMedicalProblems-section')} ${(0, _dataElement.default)('past-medical-history-placeholder-text')}`).hasText('No ongoing medical problems recorded', 'Empty state for ongoing medical problems renders properly.');\n        assert.dom(`${(0, _dataElement.default)('preventativeCare-section')} ${(0, _dataElement.default)('past-medical-history-placeholder-text')}`).hasText('No preventive care recorded', 'Empty state for preventive care renders properly.');\n        assert.dom(`${(0, _dataElement.default)('developmentalHistory-section')} ${(0, _dataElement.default)('past-medical-history-placeholder-text')}`).hasText('No developmental history recorded', 'Empty state for developmental history renders properly.');\n        // changes in new design\n        assert.dom((0, _dataElement.default)('past-medical-history-placeholder-message')).hasClass('hidden', 'Empty state for past medical history renders properly.');\n        assert.dom((0, _dataElement.default)('pmh-pencil-button')).doesNotExist('pencil button does not exist');\n        // add major events\n        await click(`${(0, _dataElement.default)('events-section')} ${(0, _dataElement.default)('past-medical-history-field-add-button')}`);\n        assert.dom('h15.header15').hasText('Major events > Record', 'Major events detail pane header renders properly');\n        assert.dom(`${(0, _dataElement.default)('events-detail')} .field-label`).hasText('Major events', 'Major events detail pane label renders properly');\n        assert.dom((0, _dataElement.default)('btn-past-medical-history-delete')).hasClass('hidden', 'Delete button is invisible when there is no content in text area');\n        await fillIn(`${(0, _dataElement.default)('events-detail')} ${(0, _dataElement.default)('text-area-counter')}`, 'This is a major event.');\n        assert.dom((0, _dataElement.default)('btn-past-medical-history-delete')).doesNotHaveClass('hidden', 'Delete button is visible when there is some content in text area');\n        await click((0, _dataElement.default)('btn-past-medical-history-save'));\n        assert.dom(`${(0, _dataElement.default)('events-section')} ${(0, _dataElement.default)('past-medical-history-field-item-0')}`).hasText('This is a major event.', 'Major events renders properly on summary');\n        assert.dom(`${(0, _dataElement.default)('events-section')} ${(0, _dataElement.default)('past-medical-history-field-add-button')}`).doesNotExist('Add button does not exist when major events has record.');\n        await click(`${(0, _dataElement.default)('events-section')} ${(0, _dataElement.default)('past-medical-history-field-item-0')}`);\n        assert.dom(`${(0, _dataElement.default)('events-detail')} ${(0, _dataElement.default)('text-area-counter')}`).hasValue('This is a major event.', 'Record renders properly');\n        await fillIn(`${(0, _dataElement.default)('events-detail')} ${(0, _dataElement.default)('text-area-counter')}`, 'Some changes');\n        // cancel major events update\n        await click((0, _dataElement.default)('btn-past-medical-history-cancel'));\n        assert.dom(`${(0, _dataElement.default)('events-section')} ${(0, _dataElement.default)('past-medical-history-field-item-0')}`).hasText('This is a major event.', 'Cancel changes works properly');\n        // add ongoing medical problem\n        await click(`${(0, _dataElement.default)('ongoingMedicalProblems-section')} ${(0, _dataElement.default)('past-medical-history-field-add-button')}`);\n        await fillIn(`${(0, _dataElement.default)('ongoingMedicalProblems-detail')} ${(0, _dataElement.default)('text-area-counter')}`, 'This is an ongoing medical problem.');\n        await click((0, _dataElement.default)('btn-past-medical-history-save'));\n        // add preventative care\n        await click(`${(0, _dataElement.default)('preventativeCare-section')} ${(0, _dataElement.default)('past-medical-history-field-add-button')}`);\n        await fillIn(`${(0, _dataElement.default)('preventativeCare-detail')} ${(0, _dataElement.default)('text-area-counter')}`, 'This is preventative care.');\n        await click((0, _dataElement.default)('btn-past-medical-history-save'));\n        // add developmental history\n        await click(`${(0, _dataElement.default)('developmentalHistory-section')} ${(0, _dataElement.default)('past-medical-history-field-add-button')}`);\n        await fillIn(`${(0, _dataElement.default)('developmentalHistory-detail')} ${(0, _dataElement.default)('text-area-counter')}`, 'This is developmental history.');\n        await click((0, _dataElement.default)('btn-past-medical-history-save'));\n        // cancel works correct\n        await click(`${(0, _dataElement.default)('preventativeCare-section')} ${(0, _dataElement.default)('past-medical-history-field-item-0')}`);\n        await click('.close-box');\n        // update ongoing medical problems\n        await click(`${(0, _dataElement.default)('ongoingMedicalProblems-section')} ${(0, _dataElement.default)('past-medical-history-field-item-0')}`);\n        await fillIn(`${(0, _dataElement.default)('ongoingMedicalProblems-detail')} ${(0, _dataElement.default)('text-area-counter')}`, 'This is edited ongoing medical problem.');\n        await click((0, _dataElement.default)('btn-past-medical-history-save'));\n        // print pmh\n        await click((0, _dataElement.default)('print-pmh-button'));\n        assert.dom((0, _dataElement.default)('print-past-medical-history-field-value-0')).hasText('This is a major event.', 'Major event renders properly on print.');\n        click('#print-modal-controls .close-link');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/patient-access-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element', 'boot/tests/helpers/get-text', 'boot/tests/helpers/get-text-in-print', 'boot/tests/helpers/find-in-print'], function (_qunit, _moduleForAcceptanceAuth, _dataElement, _getText, _getTextInPrint, _findInPrint) {\n    'use strict';\n\n    const ENCOUNTER_GUID = '7022d94f-d70a-4722-a205-dac898cf9f69';\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const ACTIONS_MENU_ITEM = `${(0, _dataElement.default)('actions-menu-options')} a:contains('View access history')`;\n    const MODAL_ELEMENT = '.modal.info.access-history';\n    const PRINT_BUTTON = `${MODAL_ELEMENT} .btn:contains('Print')`;\n    const EXPECTED_FIRST_ITEM = {\n        providerName: 'Eric Marantette',\n        practiceName: 'Ryan\\'s Practice',\n        date: '08/17/16'\n    };\n    const EXPECTED_ITEMS = 3;\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Patient access');\n\n    (0, _qunit.test)('Patient access displays properly in encounter', async assert => {\n        assert.expect(14);\n        let expectedPatientName = '';\n\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/encounter/' + ENCOUNTER_GUID);\n\n        await click((0, _dataElement.default)('actions-menu'));\n        assert.ok(find(ACTIONS_MENU_ITEM).length > 0, 'View access history action is available in the actions menu');\n        await click(ACTIONS_MENU_ITEM);\n        await wait();\n        expectedPatientName = (0, _getText.default)('.patient-name');\n        assert.ok(find(`${MODAL_ELEMENT}:visible`).length > 0, 'Access history modal appears');\n        assert.ok(find(`${MODAL_ELEMENT} .header1:contains('Access history for ${expectedPatientName}')`).length > 0, 'Access history modal has correct title');\n        assert.equal(find(`${MODAL_ELEMENT} .access-history-content .ember-view.row`).length, EXPECTED_ITEMS, 'Access history shows correct number of rows');\n        assert.equal((0, _getText.default)(`${MODAL_ELEMENT} .access-history-content .ember-view.row:first > div:first`), EXPECTED_FIRST_ITEM.date, 'Access history shows correct dates');\n        assert.equal((0, _getText.default)(`${MODAL_ELEMENT} .access-history-content .ember-view.row:first > div:last`), EXPECTED_FIRST_ITEM.practiceName, 'Access history shows correct practice names');\n        assert.equal((0, _getText.default)(`${MODAL_ELEMENT} .access-history-content .ember-view.row:first > div:nth(1)`), EXPECTED_FIRST_ITEM.providerName, 'Access history shows correct provider names');\n\n        await click(PRINT_BUTTON);\n        assert.ok(find('#print-modal:visible').length > 0, 'Print modal displays properly');\n        // Validate print modal display information\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-header-patient-name')), expectedPatientName, 'Print modal has correct patient name');\n        assert.equal((0, _findInPrint.default)('.table-content .row').length, EXPECTED_ITEMS + 2, 'Print modal shows correct number of rows');\n        assert.equal((0, _getTextInPrint.default)('.table-content .row.even-stripe:first > div > time'), EXPECTED_FIRST_ITEM.date, 'Print modal displays correct first item date');\n        assert.equal((0, _getTextInPrint.default)('.table-content .row.even-stripe:first > div:last'), EXPECTED_FIRST_ITEM.practiceName, 'Print modal displays correct first item practice name');\n        assert.equal((0, _getTextInPrint.default)('.table-content .row.even-stripe:first > div:nth(1)'), EXPECTED_FIRST_ITEM.providerName, 'Print modal displays correct first item provider name');\n\n        await click('#print-modal-controls .close-link');\n        await click(`${MODAL_ELEMENT} .btn-warning`);\n        assert.ok(find(`${MODAL_ELEMENT}:visible`).length < 1, 'Access history modal closed properly');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/patient-list-limited-access-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element'], function (_qunit, _moduleForAcceptanceAuth, _dataElement) {\n    'use strict';\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Visual - Core - Charting | Patient list limited access', {\n        beforeLogin() {\n            server.get('AuthzEndpoint/api/v1/users/:id/rights', () => ({\n                entitledFeatures: ['ERX.Send', 'Chart.Sign', 'EPCS.Send']\n            }));\n        }\n    });\n\n    (0, _qunit.test)('Patient list in limited access', async assert => {\n        server.get('ChartingEndpoint/api/v2/Appointment', () => {\n            return [];\n        });\n        server.get('PracticeEndpoint/api/v1/preferences/provider', () => ({ preferences: {} }));\n        await visit('/PF/charts/list/all/recent');\n        assert.dom((0, _dataElement.default)('new-patient-button')).doesNotExist('add patient button is removed in recent patient list');\n        await click(`${(0, _dataElement.default)('patient-list-scheduled-recent-toggle-0')}`);\n        assert.dom((0, _dataElement.default)('new-patient-button')).doesNotExist('add patient button is removed in scheduled patient list');\n        assert.dom('.no-appointments a').doesNotExist('add patient link is removed scheduled patient list when list is empty');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/patient-list-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element', 'boot/tests/helpers/get-text', 'boot/config'], function (_qunit, _moduleForAcceptanceAuth, _dataElement, _getText, _config) {\n    'use strict';\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Visual - Core - Charting | Patient list - v2', {\n        beforeEach() {\n            if (window.localStorage && window.localStorage.clear) {\n                window.localStorage.clear();\n            }\n        }\n    });\n\n    const page = '.charts.outlet';\n    const buttonBar = `${page} .charts-list-toolbar`;\n    const providerDropdown = `${buttonBar} ${(0, _dataElement.default)('patient-list-provider-dropdown')}`;\n    const recentPatientList = `${page} .recent-patients-container`;\n    const firstRecentPatient = `${recentPatientList} .row-patient:first-of-type`;\n    const firstNameColumn = 'first-name-column';\n    const patientPracticeGuid = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const inactiveCheckbox = `${buttonBar} .show-inactive-checkbox`;\n    const inactiveCheckboxInput = `${inactiveCheckbox} input`;\n    const PREFERENCES = { preferences: {} };\n\n    function headerColumn(dataElement) {\n        return `${page} .header-row ${(0, _dataElement.default)(dataElement)}`;\n    }\n    function validateColumnSort(assert, dataElement, isAscending) {\n        const arrow = isAscending ? '.arrow-up' : '.arrow-down';\n        assert.throws(findWithAssert(`${headerColumn(dataElement)} ${arrow}`), 'The correct column sort is visible');\n    }\n    function validateFirstRecentPatientColumn(assert, column, expected) {\n        assert.equal((0, _getText.default)(`${firstRecentPatient} ${(0, _dataElement.default)(column)}`), expected, `The first patient's ${column} is correct`);\n    }\n    function validateFirstScheduledPatientColumn(assert, column, expected) {\n        assert.equal((0, _getText.default)($(`#appointments .row-patient ${(0, _dataElement.default)(column)}`).first()), expected, `The first patient's ${column} is correct`);\n    }\n    function validateFirstSearchPatientColumn(assert, column, expected) {\n        assert.equal((0, _getText.default)(`#search-results .row-patient:first-child ${(0, _dataElement.default)(column)}`), expected, `The first patient's ${column} is correct`);\n    }\n\n    (0, _qunit.test)('Recent patients list', async assert => {\n        _config.default.isNewPatientListChartOn = false;\n        server.get('PracticeEndpoint/api/v1/preferences/provider', () => PREFERENCES);\n        await visit('/PF/charts/list');\n        percySnapshot(assert);\n        assert.throws(findWithAssert(`${buttonBar} ${(0, _dataElement.default)('new-patient-button')}`), 'The new patient button exists');\n        assert.throws(findWithAssert(`${buttonBar} .patient-search2`), 'The patient search box exists');\n        assert.throws(findWithAssert(inactiveCheckbox), 'The show inactive checkbox exists');\n        click(`${(0, _dataElement.default)('patient-list-scheduled-recent-toggle-1')}`);\n        click(`${providerDropdown} .composable-select__choice`);\n        await click(`${providerDropdown} .composable-select__result-item:eq(1)`);\n        assert.equal((0, _getText.default)((0, _dataElement.default)('patient-list-number-of-patients')), '0 recent patients', 'The correct number of recent patients is displayed');\n        if (!find(inactiveCheckboxInput)[0].checked) {\n            click(inactiveCheckboxInput);\n        }\n        click(`${providerDropdown} .composable-select__choice`);\n        await click(`${providerDropdown} .composable-select__result-item:eq(0)`);\n        await wait();\n        assert.equal((0, _getText.default)((0, _dataElement.default)('patient-list-number-of-patients')), '55 recent patients', 'The correct number of recent patients is displayed');\n        validateColumnSort(assert, 'accessed-column', false);\n        validateFirstRecentPatientColumn(assert, 'patient-first-name', 'Testtest');\n        validateFirstRecentPatientColumn(assert, 'patient-last-name', 'PAtient');\n        validateFirstRecentPatientColumn(assert, 'patient-dob', '09/02/2015 Sep 02, 2015');\n        validateFirstRecentPatientColumn(assert, 'patient-gender', 'Male');\n        validateFirstRecentPatientColumn(assert, 'patient-address', '1 fake street, San Francisco, CA 94110');\n        validateFirstRecentPatientColumn(assert, 'patient-record-number', 'PRN PT169775');\n        validateFirstRecentPatientColumn(assert, 'patient-phone-numbers', 'M (123) 123-1234');\n        assert.throws(findWithAssert(`${recentPatientList} .row-patient ${(0, _dataElement.default)('patient-first-name')}:contains('(Inactive)')`), 'An inactive patient is visible after clicking the inactive checkbox');\n        await click(`${recentPatientList} [data-guid=\"${patientPracticeGuid}\"]`);\n        assert.equal(currentURL(), `/PF/charts/patients/${patientPracticeGuid}/summary`, 'The patient was opened after clicking on it');\n        await click('.pf.outlet .menu-list li a:contains(\"Patient lists\")');\n        await click(headerColumn(firstNameColumn));\n        validateColumnSort(assert, firstNameColumn, true);\n        await click(headerColumn(firstNameColumn));\n        validateColumnSort(assert, firstNameColumn, false);\n        // Disabling for now. This was causing failures after the ember 2.4\n        // upgrade. The test would only fail when run as part of the entire test suite\n        // validateFirstRecentPatientColumn(assert, 'patient-first-name', 'zxc');\n        // validateFirstRecentPatientColumn(assert, 'patient-last-name', 'zxc');\n        // click(headerColumn('dob-column')).then(() => {\n        //     validateColumnSort(assert, 'dob-column', true);\n        //     validateFirstRecentPatientColumn(assert, 'patient-first-name', 'new');\n        //     validateFirstRecentPatientColumn(assert, 'patient-last-name', 'patient');\n        // });\n    });\n\n    (0, _qunit.test)('Scheduled patients list', async assert => {\n        _config.default.isNewPatientListChartOn = false;\n        const dateFormat = 'YYYY-MM-DD';\n        const today = moment().format(dateFormat);\n        const tomorrow = moment().add(1, 'days').format(dateFormat);\n        let lastScheduleDate;\n        let lastProviderGuid;\n        server.get('ChartingEndpoint/api/v2/Appointment', ({ db }, request) => {\n            lastScheduleDate = request.queryParams.scheduleDate;\n            lastProviderGuid = request.queryParams.providerGuid;\n\n            if (Ember.isEmpty(lastProviderGuid) && lastScheduleDate === today) {\n                return db.chartsAppointments;\n            }\n            return [];\n        });\n        server.get('PracticeEndpoint/api/v1/preferences/provider', () => PREFERENCES);\n\n        await visit('/PF/charts/list/all/recent');\n        await click(`${(0, _dataElement.default)('patient-list-scheduled-recent-toggle-0')}`);\n        assert.equal((0, _getText.default)((0, _dataElement.default)('patient-list-number-of-patients')), '4 scheduled', 'The correct number of scheduled patients is displayed');\n        assert.equal((0, _getText.default)('.date-navigation-date'), moment().format('dddd, MMM Do'), 'Today\\'s date is displayed correctly');\n        assert.equal(lastScheduleDate, today, 'The appointments endpoint was called with the correct initial date');\n        validateColumnSort(assert, 'appointment-time-column', true);\n        validateFirstScheduledPatientColumn(assert, 'patient-first-name', 'Some L');\n        validateFirstScheduledPatientColumn(assert, 'patient-last-name', 'Baby');\n        validateFirstScheduledPatientColumn(assert, 'patient-dob', '02/01/2013 Feb 01, 2013');\n        validateFirstScheduledPatientColumn(assert, 'patient-gender', 'Male');\n        validateFirstScheduledPatientColumn(assert, 'patient-address', '123 Who cares, No way, AL 95835');\n        validateFirstScheduledPatientColumn(assert, 'patient-phone-numbers', 'M (555) 555-5554 H (555) 456-7890');\n        validateFirstScheduledPatientColumn(assert, 'patient-appointment-date', '10:00 AM');\n        validateFirstScheduledPatientColumn(assert, 'patient-appointment-status', 'Pending');\n        await click(headerColumn(firstNameColumn));\n        validateColumnSort(assert, firstNameColumn, true);\n        await click(headerColumn(firstNameColumn));\n        validateColumnSort(assert, firstNameColumn, false);\n        validateFirstScheduledPatientColumn(assert, 'patient-first-name', 'Testtest');\n        validateFirstScheduledPatientColumn(assert, 'patient-last-name', 'PAtient');\n        await click(headerColumn('dob-column'));\n        validateColumnSort(assert, 'dob-column', true);\n        validateFirstScheduledPatientColumn(assert, 'patient-first-name', 'Some L');\n        validateFirstScheduledPatientColumn(assert, 'patient-last-name', 'Baby');\n        click(`${providerDropdown} .composable-select__choice`);\n        await click(`${providerDropdown} .composable-select__result-item:eq(1)`);\n        assert.ok(lastProviderGuid, 'The appointments endpoint was called with a provider guid after changing providers');\n        assert.throws(findWithAssert(`${page} .no-appointments`), 'The empty state is visible when there are no scheduled patients');\n        assert.equal((0, _getText.default)((0, _dataElement.default)('patient-list-number-of-patients')), 'None Scheduled', 'The correct number of scheduled patients is displayed');\n        await click('.charts-list-header .date-navigation .date-navigation-next');\n        assert.equal(lastScheduleDate, tomorrow, 'The appointments endpoint was called with the correct date after clicking next');\n        click('.charts-list-header .date-navigation .date-navigation-previous');\n        click(`${providerDropdown} .composable-select__choice`);\n        click(`${providerDropdown} .composable-select__result-item:eq(0)`);\n        await click(`.row-patient[data-guid=\"${patientPracticeGuid}\"]`);\n        assert.equal(currentURL(), `/PF/charts/patients/${patientPracticeGuid}/summary`, 'The patient was opened after clicking on it');\n    });\n\n    (0, _qunit.test)('Patient search', async assert => {\n        _config.default.isNewPatientListChartOn = false;\n        let lastSearchQuery;\n        server.post('PatientEndpoint/api/v1/patients/search', ({ db }, request) => {\n            const data = JSON.parse(request.requestBody);\n            lastSearchQuery = data.firstOrLastName;\n            if (lastSearchQuery === 'empty') {\n                return { patients: [] };\n            }\n            return db.patientSearches[0];\n        });\n        server.get('PracticeEndpoint/api/v1/preferences/provider', () => PREFERENCES);\n\n        await visit('/PF/charts/list/all/recent');\n        const patientSearch = '.patient-search2';\n        const searchInput = `${patientSearch} input`;\n        const searchButton = `${patientSearch} .filtered-search-btn`;\n        fillIn(searchInput, 'empty');\n        await click(searchButton);\n        assert.equal(lastSearchQuery, 'empty', 'The search call was made with the correct firstOrLastName query');\n        assert.throws(findWithAssert('#search-results .no-patients-found'), 'The empty state is displayed when no patients are found');\n        click(`${patientSearch} .ember-select-search-choice-close`);\n        fillIn(searchInput, 'test');\n        await click(searchButton);\n        validateFirstSearchPatientColumn(assert, 'patient-first-name', 'JOHNATHAN');\n        validateFirstSearchPatientColumn(assert, 'patient-last-name', 'SWIFT');\n        validateFirstSearchPatientColumn(assert, 'patient-dob', '10/24/1979 Oct 24, 1979');\n        validateFirstSearchPatientColumn(assert, 'patient-address', '99238 VERTIGO LANE, MINNEAPOLIS, MN 55427');\n        validateFirstSearchPatientColumn(assert, 'patient-phone-numbers', 'M (415) 555-4444 H (307) 855-3055');\n        await click(headerColumn(firstNameColumn));\n        validateColumnSort(assert, firstNameColumn, false);\n        validateFirstSearchPatientColumn(assert, 'patient-first-name', 'Zart L');\n        validateFirstSearchPatientColumn(assert, 'patient-last-name', 'Simpson');\n        await click(headerColumn('dob-column'));\n        validateColumnSort(assert, 'dob-column', true);\n        validateFirstSearchPatientColumn(assert, 'patient-first-name', 'Test');\n        validateFirstSearchPatientColumn(assert, 'patient-last-name', 'ER');\n        await click(inactiveCheckboxInput);\n        assert.throws(findWithAssert(`#search-results .row-patient ${(0, _dataElement.default)('patient-first-name')}:contains('(Inactive)')`), 'An inactive patient is visible after clicking the inactive checkbox');\n        await click(`.row-patient[data-guid=\"${patientPracticeGuid}\"]`);\n        assert.equal(currentURL(), `/PF/charts/patients/${patientPracticeGuid}/summary`, 'The patient was opened after clicking on it');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/print-chart-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/get-text', 'boot/tests/helpers/data-element', 'boot/tests/helpers/get-text-in-print', 'boot/tests/helpers/find-in-print'], function (_qunit, _moduleForAcceptanceAuth, _getText, _dataElement, _getTextInPrint, _findInPrint) {\n    'use strict';\n\n    const SIGNED_ENCOUNTER_GUID = '82a597e5-b1b8-46e4-8a07-5c3a4f778e95';\n    const PATIENT_PRACTICE_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const SUMMARY_URL = `/PF/charts/patients/${PATIENT_PRACTICE_GUID}/summary`;\n    const ENCOUNTER_URL = `/PF/charts/patients/${PATIENT_PRACTICE_GUID}/encounter/${SIGNED_ENCOUNTER_GUID}`;\n    const PRINT_CHART_BUTTON = (0, _dataElement.default)('btn-print-chart-control-bar');\n    const NOTES_DROPDOWN = (0, _dataElement.default)('print-chart-notes-dropdown');\n    const PRINT_CHART_MODAL = '.print-chart .content-modal';\n    const CHECKBOXES = `${PRINT_CHART_MODAL} input[type=\"checkbox\"]`;\n    const CHECKED_CHECKBOXES = `${CHECKBOXES}:checked`;\n    const UNCHECKED_CHECKBOXES = `${CHECKBOXES}:not(:checked):not(:disabled)`;\n\n    function clickCheckBox(text) {\n        return click(`.checkbox-row:contains('${text}') input`);\n    }\n\n    function assertPrintSection(assert, headerText, message) {\n        assert.ok((0, _findInPrint.default)(`.chart-print-container .table h2:contains(\"${headerText}\")`).length, message);\n    }\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Print chart and encounter - v2');\n\n    (0, _qunit.test)('Print chart functions properly', async assert => {\n        let printAuditCalled = false;\n        server.post('ChartingEndpoint/api/v2/PrintAudit', ({ db }, request) => {\n            printAuditCalled = true;\n            const data = JSON.parse(request.requestBody);\n            assert.equal(data.patientPracticeGuid, PATIENT_PRACTICE_GUID, 'The patient practice guid is correct on the print audit call');\n            assert.equal(data.printEvent, 'EntireChart', 'The print event is correct on the print audit call');\n            return null;\n        });\n\n        await visit(SUMMARY_URL);\n        await click(PRINT_CHART_BUTTON);\n        assert.throws(findWithAssert(PRINT_CHART_MODAL), 'The print chart modal appears when clicking the print button');\n        assert.equal((0, _getText.default)('.content-modal-title'), 'Print patient chart for Some L Baby', 'The modal title contains the patient\\'s name');\n        await click(`${PRINT_CHART_MODAL} footer .btn-secondary`);\n        assert.notOk(find(PRINT_CHART_MODAL).length, 'The print chart modal closes when the cancel button is clicked');\n        click(PRINT_CHART_BUTTON);\n        await click(`${NOTES_DROPDOWN} .dropdown-toggle`);\n        assert.ok(find('.checkbox-dropdown-grouping.dropdown-menu li label:contains(\"01/19/16 (SOAP Note)\")').length, 'The notes dropdown contains valid notes');\n        assert.ok(find('.checkbox-dropdown-grouping.dropdown-menu li label:contains(\"01/05/16 (SOAP Note)\")').length, 'The notes dropdown contains valid notes');\n        await click((0, _dataElement.default)('print-modal-select-all'));\n        assert.throws(findWithAssert(CHECKED_CHECKBOXES), 'There are checked checkboxes after clicking select all');\n        assert.notOk(find(UNCHECKED_CHECKBOXES).length, 'There are no unchecked checkboxes after clicking select all');\n        await click((0, _dataElement.default)('print-modal-select-none'));\n        assert.throws(findWithAssert(UNCHECKED_CHECKBOXES), 'There are unchecked checkboxes after clicking select none');\n        assert.notOk(find(CHECKED_CHECKBOXES).length, 'There are no checked checkboxes after clicking select none');\n        clickCheckBox('Patient demographics');\n        clickCheckBox('Diagnoses');\n        clickCheckBox('Allergies');\n        clickCheckBox('Medications');\n        clickCheckBox('Health concerns');\n        clickCheckBox('Social history');\n        clickCheckBox('Screenings/ Interventions/ Assessments');\n        await click(`${(0, _dataElement.default)('print-health-concerns-options')} .dropdown-print-select button`);\n        await click('.ember-tether .input-dropdown-list .input-dropdown-list-item:contains(\"Active health concerns\")');\n        await click(`${PRINT_CHART_MODAL} footer .btn-primary`);\n        assert.ok(printAuditCalled, 'The print audit endpoint was called after the print button was clicked');\n        assert.equal((0, _getTextInPrint.default)('head title'), 'Patient chart - Patient: Some L Baby DOB: 02/01/2013 PRN: BS186029', 'The print preview has the correct header');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-header-patient-name')), 'Some L Baby', 'The patient name renders correctly on the print preview');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-header-facility-name')), 'Rosalise Ron Practice', 'The facility name renders correctly on the print preview');\n        assertPrintSection(assert, 'Patient identifying details and demographics', 'The demographics section is present in the print');\n        assertPrintSection(assert, 'Diagnoses', 'The diagnoses section is present in the print');\n        assertPrintSection(assert, 'Drug Allergies', 'The allergies section is present in the print');\n        assertPrintSection(assert, 'Active Medications', 'The medications section is present in the print');\n        assertPrintSection(assert, 'Active health concerns', 'The health concerns section is present in the print');\n        assertPrintSection(assert, 'Social history', 'The social history section is present in the print');\n        assertPrintSection(assert, 'Screenings/ Interventions/ Assessments', 'The sia section is present in the print');\n        assert.ok((0, _findInPrint.default)(`${(0, _dataElement.default)('print-diagnoses')} ${(0, _dataElement.default)('diagnosis-item-text')}:contains('(S72.90) Unspecified fracture of unspecified femur')`).length, 'There is a diagnosis present in the print preview');\n        assert.ok((0, _findInPrint.default)(`${(0, _dataElement.default)('print-medications')} ${(0, _dataElement.default)('medication-item-text')}:contains('methylTESTOSTERone (Methitest) 10 mg oral tablet')`).length, 'There is a medication present in the print preview');\n        click('#print-modal-controls .close-link');\n    });\n\n    async function checkEncounter(label) {\n        const selector = `label:contains(\"${label}\")`;\n        if (find('.open.ember-tether .checkbox-dropdown-grouping.dropdown-menu').length) {\n            return click(selector);\n        }\n        await click(`${NOTES_DROPDOWN} .dropdown-toggle`);\n        return click(selector);\n    }\n\n    (0, _qunit.test)('Print chart functions properly for encounter snapshot and unsigned encounter', async assert => {\n        server.post('ChartingEndpoint/api/v2/PrintAudit', ({ db }, request) => {\n            const data = JSON.parse(request.requestBody);\n            assert.equal(data.patientPracticeGuid, PATIENT_PRACTICE_GUID, 'The patient practice guid is correct on the print audit call');\n            assert.equal(data.printEvent, 'EntireChart', 'The print event is correct on the print audit call');\n            return null;\n        });\n\n        await visit(SUMMARY_URL);\n        await click(PRINT_CHART_BUTTON);\n        assert.throws(findWithAssert(PRINT_CHART_MODAL), 'The print chart modal appears when clicking the print button');\n        assert.equal((0, _getText.default)('.content-modal-title'), 'Print patient chart for Some L Baby', 'The modal title contains the patient\\'s name');\n        await click(`${PRINT_CHART_MODAL} footer .btn-secondary`);\n        assert.notOk(find(PRINT_CHART_MODAL).length, 'The print chart modal closes when the cancel button is clicked');\n        await click(PRINT_CHART_BUTTON);\n        await click((0, _dataElement.default)('print-modal-select-none'));\n        // 01/19 is unsigned and 01/05 is signed and has snapshots\n        await checkEncounter('01/19/16 (SOAP Note)');\n        await checkEncounter('01/05/16 (SOAP Note)');\n        await click(`${PRINT_CHART_MODAL} footer .btn-primary`);\n        const unsignedEncounter = '.chart-print-container .container-fluid:eq(0) ';\n        const signedEncounterSnapshot = '.chart-print-container .container-fluid:eq(1) ';\n        assert.equal((0, _getTextInPrint.default)('head title'), 'Patient chart - Patient: Some L Baby DOB: 02/01/2013 PRN: BS186029', 'The print preview has the correct header');\n\n        // Unsigned Encounter assertions\n        assert.equal((0, _getTextInPrint.default)(unsignedEncounter + (0, _dataElement.default)('print-header-patient-name')), 'Some L Baby', 'The patient name renders correctly on the print preview for unsigned encounter');\n        assert.equal((0, _getTextInPrint.default)(unsignedEncounter + (0, _dataElement.default)('print-header-facility-name')), 'this is a really long facility name', 'The facility name renders correctly on the print preview for unsigned encounter');\n        assert.equal((0, _getTextInPrint.default)(unsignedEncounter + (0, _dataElement.default)('print-header-seen-by-provider')), 'Provider Bob MD', 'The seen by provider name renders correctly on print preview for unsigned encounter');\n\n        // Signed encounter (snapshot) assertions\n        assert.equal((0, _getTextInPrint.default)(signedEncounterSnapshot + (0, _dataElement.default)('print-header-patient-name')), 'Finn Jakey', 'The patient name renders correctly on the print preview for patient snapshot');\n        assert.equal((0, _getTextInPrint.default)(signedEncounterSnapshot + (0, _dataElement.default)('print-header-facility-name')), 'Snapshot Building', 'The facility name renders correctly on the print preview for facility snapshot');\n        assert.equal((0, _getTextInPrint.default)(signedEncounterSnapshot + (0, _dataElement.default)('print-header-seen-by-provider')), 'George Bush M.D.', 'The seen by provider name renders correctly on print preview for snapshot');\n        assert.equal((0, _getTextInPrint.default)(signedEncounterSnapshot + (0, _dataElement.default)('print-header-signed-by-provider')), 'Electronically signed by George Bush M.D. at ' + moment.utc('2016-01-06T21:02:23.677Z').local().format('MM/DD/YYYY hh:mm a'), 'The signed by provider renders correctly on print prview for snapshot');\n        assert.equal((0, _getTextInPrint.default)(signedEncounterSnapshot + (0, _dataElement.default)('print-encounter-section-am-note')), 'This is a snapshotted amendment.', 'The snapshot addendum print prview addendum note renders properly');\n        assert.equal((0, _getTextInPrint.default)(signedEncounterSnapshot + (0, _dataElement.default)('print-encounter-section-am-status-name')), 'Accepted by George Bush M.D., M.F.A.', 'The snapshot addendum print prview addendum status and provider name renders properly');\n\n        // Get the second unsigned encounter and confirm it renders current data\n        click('#print-modal-controls .close-link');\n    });\n\n    (0, _qunit.test)('Print encounter functions properly', async assert => {\n        let printAuditCalled = false;\n        server.post('ChartingEndpoint/api/v2/PrintAudit', ({ db }, request) => {\n            printAuditCalled = true;\n            const data = JSON.parse(request.requestBody);\n            assert.equal(data.patientPracticeGuid, PATIENT_PRACTICE_GUID, 'The patient practice guid is correct on the print audit call');\n            assert.equal(data.printEvent, 'ChartNote', 'The print event is correct on the print audit call');\n            assert.equal(data.transcriptGuid, SIGNED_ENCOUNTER_GUID, 'The transcript guid is correct on the print audit call');\n            return null;\n        });\n        await visit(ENCOUNTER_URL);\n        await click((0, _dataElement.default)('print-encounter-button'));\n        assert.equal((0, _getText.default)(`${PRINT_CHART_MODAL} .content-modal-title`), 'Print encounter for Some L Baby', 'The modal title contains the patient\\'s name');\n        click((0, _dataElement.default)('print-modal-select-none'));\n        clickCheckBox('Vitals for this encounter');\n        clickCheckBox('Subjective');\n        clickCheckBox('Objective');\n        clickCheckBox('Assessment');\n        clickCheckBox('Plan');\n        clickCheckBox('Screening');\n        clickCheckBox('Care plan');\n        await click(`${PRINT_CHART_MODAL} footer .btn-primary`);\n        assert.ok(printAuditCalled, 'The print audit endpoint was called after the print button was clicked');\n        assert.equal((0, _getTextInPrint.default)('head title'), 'Encounter - Office Visit Date of service: 01/05/16 Patient: Finn Jakey DOB: 02/01/2013 PRN: BS186029', 'The print preview has the correct header');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-header-patient-name')), 'Finn Jakey', 'The snapshotted patient name renders correctly on the print preview');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-header-facility-name')), 'Snapshot Building', 'The snapshotted facility name renders correctly on the print preview');\n        assertPrintSection(assert, 'Vitals for this encounter', 'The vitals section is present in the print');\n        assertPrintSection(assert, 'Subjective', 'The subjective section is present in the print');\n        assertPrintSection(assert, 'Objective', 'The objective section is present in the print');\n        assertPrintSection(assert, 'Assessment', 'The assessment section is present in the print');\n        assertPrintSection(assert, 'Plan', 'The plan section is present in the print');\n        assertPrintSection(assert, 'Screenings/ Interventions/ Assessments', 'The SIA section is present in the print');\n        assertPrintSection(assert, 'Care plan', 'The care plan section is present in the print');\n        assert.ok((0, _findInPrint.default)('.flowsheet.table-content .stacked-cell:contains(\"36 in\")').length, 'The height value is present in the vitals print');\n        assert.ok((0, _findInPrint.default)('.flowsheet.table-content .stacked-cell:contains(\"45 lb\")').length, 'The weight value is present in the vitals print');\n        assert.ok((0, _findInPrint.default)('.formatted-text:contains(\"Some subjective\")').length, 'The subjective value is present in the print preview');\n        assert.ok((0, _findInPrint.default)('.formatted-text:contains(\"No care plan recorded\")').length, 'The care plan value is present in the print preview');\n        click('#print-modal-controls .close-link');\n    });\n\n    (0, _qunit.test)('Print encounter functions properly with snapshot', async assert => {\n        let printAuditCalled = false;\n        server.post('ChartingEndpoint/api/v2/PrintAudit', ({ db }, request) => {\n            printAuditCalled = true;\n            const data = JSON.parse(request.requestBody);\n            assert.equal(data.patientPracticeGuid, PATIENT_PRACTICE_GUID, 'The patient practice guid is correct on the print audit call');\n            assert.equal(data.printEvent, 'ChartNote', 'The print event is correct on the print audit call');\n            assert.equal(data.transcriptGuid, SIGNED_ENCOUNTER_GUID, 'The transcript guid is correct on the print audit call');\n            return null;\n        });\n        await visit(ENCOUNTER_URL);\n        await click((0, _dataElement.default)('print-encounter-button'));\n        assert.equal((0, _getText.default)(`${PRINT_CHART_MODAL} .content-modal-title`), 'Print encounter for Some L Baby', 'The modal title contains the patient\\'s name');\n        click((0, _dataElement.default)('print-modal-select-none'));\n        clickCheckBox('Addenda');\n        await click(`${PRINT_CHART_MODAL} footer .btn-primary`);\n        assert.ok(printAuditCalled, 'The print audit endpoint was called after the print button was clicked');\n        assert.equal((0, _getTextInPrint.default)('head title'), 'Encounter - Office Visit Date of service: 01/05/16 Patient: Finn Jakey DOB: 02/01/2013 PRN: BS186029', 'The print preview has the correct header');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-header-patient-name')), 'Finn Jakey', 'The patient name renders correctly on the print preview for patient snapshot');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-header-facility-name')), 'Snapshot Building', 'The facility name renders correctly on the print preview for facility snapshot');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-patient-am-note')), 'This is a snapshotted amendment.', 'The snapshot addendum print prview note renders properly');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-patient-am-status-name')), 'Accepted by George Bush M.D., M.F.A.', 'The snapshot addendum print prview status and provider name renders properly');\n        click('#print-modal-controls .close-link');\n    });\n\n    (0, _qunit.test)('Print chart allows filtering of active medications', async assert => {\n        await visit(SUMMARY_URL);\n        await click(PRINT_CHART_BUTTON);\n        assert.throws(findWithAssert(PRINT_CHART_MODAL), 'The print chart modal appears when clicking the print button');\n        await delayAsync(100);\n        assert.throws(findWithAssert(`${(0, _dataElement.default)('print-medications-options')} .dropdown-print-select`), 'The medications print checkbox includes a dropdown for options');\n        fillInCheckbox(`${(0, _dataElement.default)('print-medications-options')} .check-box__input`, false);\n        await click(`${(0, _dataElement.default)('print-medications-options')} .dropdown-print-select button`);\n        assert.equal(find(`.ember-tether .input-dropdown-list .input-dropdown-list-item`).length, 3, 'There are 3 medications print options');\n        await click(`.ember-tether .input-dropdown-list .input-dropdown-list-item:contains('Active medications')`);\n        assert.throws(findWithAssert(`${(0, _dataElement.default)('print-medications-options')} input.check-box__input:checked`), 'The medications option is checked when a selection is made');\n        await click(`${PRINT_CHART_MODAL} footer .btn-primary`);\n        assert.ok((0, _findInPrint.default)(`${(0, _dataElement.default)('print-medications')} h2:contains('Active Medications')`).length, 'Active medications display on print preview');\n        assert.notOk((0, _findInPrint.default)(`${(0, _dataElement.default)('print-medications')} h2:contains('Historical Medications')`).length, 'Historical medications are hidden on print preview');\n        click('#print-modal-controls .close-link');\n    });\n\n    (0, _qunit.test)('Print chart allows filtering of historical medications', async assert => {\n        await visit(SUMMARY_URL);\n        await click(PRINT_CHART_BUTTON);\n        assert.throws(findWithAssert(PRINT_CHART_MODAL), 'The print chart modal appears when clicking the print button');\n        await delayAsync(100);\n        assert.throws(findWithAssert(`${(0, _dataElement.default)('print-medications-options')} .dropdown-print-select`), 'The medications print checkbox includes a dropdown for options');\n        await click(`${(0, _dataElement.default)('print-medications-options')} .dropdown-print-select button`);\n        assert.equal(find(`.ember-tether .input-dropdown-list .input-dropdown-list-item`).length, 3, 'There are 3 medications print options');\n        await click(`.ember-tether .input-dropdown-list .input-dropdown-list-item:contains('Historical medications')`);\n        await click(`${PRINT_CHART_MODAL} footer .btn-primary`);\n        assert.ok((0, _findInPrint.default)(`${(0, _dataElement.default)('print-medications')} h2:contains('Historical Medications')`).length, 'Historical medications display on print preview');\n        assert.notOk((0, _findInPrint.default)(`${(0, _dataElement.default)('print-medications')} h2:contains('Active Medications')`).length, 'Active medications are hidden on print preview');\n        click('#print-modal-controls .close-link');\n    });\n\n    (0, _qunit.test)('Print chart allows filtering of all medications', async assert => {\n        await visit(SUMMARY_URL);\n        await click(PRINT_CHART_BUTTON);\n        assert.throws(findWithAssert(PRINT_CHART_MODAL), 'The print chart modal appears when clicking the print button');\n        await delayAsync(100);\n        assert.throws(findWithAssert(`${(0, _dataElement.default)('print-medications-options')} .dropdown-print-select`), 'The medications print checkbox includes a dropdown for options');\n        await click(`${(0, _dataElement.default)('print-medications-options')} .dropdown-print-select button`);\n        assert.equal(find(`.ember-tether .input-dropdown-list .input-dropdown-list-item`).length, 3, 'There are 3 medications print options');\n        await click(`.ember-tether .input-dropdown-list .input-dropdown-list-item:contains('All medications')`);\n        await click(`${PRINT_CHART_MODAL} footer .btn-primary`);\n        assert.ok((0, _findInPrint.default)(`${(0, _dataElement.default)('print-medications')} h2:contains('Historical Medications')`).length, 'Historical medications display on print preview');\n        assert.ok((0, _findInPrint.default)(`${(0, _dataElement.default)('print-medications')} h2:contains('Active Medications')`).length, 'Active medications display on print preview');\n        click('#print-modal-controls .close-link');\n    });\n\n    (0, _qunit.test)('Print chart modal - Encounter - all medications', async assert => {\n        await visit(ENCOUNTER_URL);\n        await click((0, _dataElement.default)('print-encounter-button'));\n        await clickCheckBox('Medications');\n        await click(`${PRINT_CHART_MODAL} footer .btn-primary`);\n        assertPrintSection(assert, 'Historical Medications', 'The medications section is present in the print');\n        assertPrintSection(assert, 'Active Medications', 'The medications section is present in the print');\n        click('#print-modal-controls .close-link');\n    });\n\n    (0, _qunit.test)('Print chart modal - Encounter - active medications', async assert => {\n        await visit(ENCOUNTER_URL);\n        await click((0, _dataElement.default)('print-encounter-button'));\n        await clickCheckBox('Medications');\n        await click(`${(0, _dataElement.default)('print-medications-options')} .dropdown-print-select button`);\n        await click(`.ember-tether .input-dropdown-list .input-dropdown-list-item:contains('Active medications')`);\n        await click(`${PRINT_CHART_MODAL} footer .btn-primary`);\n        assertPrintSection(assert, 'Active Medications', 'The medications section is present in the print');\n        click('#print-modal-controls .close-link');\n    });\n\n    (0, _qunit.test)('Print chart modal - Encounter - historical medications', async assert => {\n        await visit(ENCOUNTER_URL);\n        await click((0, _dataElement.default)('print-encounter-button'));\n        await clickCheckBox('Medications');\n        await click(`${(0, _dataElement.default)('print-medications-options')} .dropdown-print-select button`);\n        await click(`.ember-tether .input-dropdown-list .input-dropdown-list-item:contains('Historical medications')`);\n        await click(`${PRINT_CHART_MODAL} footer .btn-primary`);\n        assertPrintSection(assert, 'Historical Medications', 'The medications section is present in the print');\n        click('#print-modal-controls .close-link');\n    });\n\n    (0, _qunit.test)('Print chart all insurance plans', async assert => {\n        await visit(SUMMARY_URL);\n        await click(PRINT_CHART_BUTTON);\n        await delayAsync(100);\n        assert.dom(`${(0, _dataElement.default)('print-insurance-options')} .input-dropdown-button`).hasText('All', 'The default option is to print all insurance plans');\n        await click(`${(0, _dataElement.default)('print-insurance-options')} .dropdown-print-select button`);\n        assert.equal(find(`.ember-tether .input-dropdown-list .input-dropdown-list-item`).length, 3, 'There are 3 insurance print options');\n        await click(`${PRINT_CHART_MODAL} footer .btn-primary`);\n        // active insurance plans\n        assert.dom(`${(0, _dataElement.default)('print-active-insurance')} h2`).hasText('Active insurance', 'Active insurance has its own section');\n        assert.dom(`${(0, _dataElement.default)('print-active-insurance')} ${(0, _dataElement.default)('print-active-insurance-sequence-0')}`).hasText('Primary Payer');\n        assert.dom(`${(0, _dataElement.default)('print-active-insurance')} ${(0, _dataElement.default)('print-active-insurance-sequence-1')}`).hasText('Secondary Payer');\n        assert.dom(`${(0, _dataElement.default)('print-active-insurance')} ${(0, _dataElement.default)('print-active-insurance-sequence-2')}`).hasText('Tertiary Payer');\n        assert.dom(`${(0, _dataElement.default)('print-active-insurance')} ${(0, _dataElement.default)('print-active-insurance-sequence-3')}`).hasText('Unknown or None Payer');\n        assert.dom(`${(0, _dataElement.default)('print-active-insurance')} ${(0, _dataElement.default)('print-active-insurance-info-0')} ${(0, _dataElement.default)('print-patient-row-status')} .formatted-text`).hasText('Active');\n        assert.dom(`${(0, _dataElement.default)('print-active-insurance')} ${(0, _dataElement.default)('print-active-insurance-info-1')} ${(0, _dataElement.default)('print-patient-row-status')} .formatted-text`).hasText('Active');\n        assert.dom(`${(0, _dataElement.default)('print-active-insurance')} ${(0, _dataElement.default)('print-active-insurance-info-2')} ${(0, _dataElement.default)('print-patient-row-status')} .formatted-text`).hasText('Active');\n        assert.dom(`${(0, _dataElement.default)('print-active-insurance')} ${(0, _dataElement.default)('print-active-insurance-info-3')} ${(0, _dataElement.default)('print-patient-row-status')} .formatted-text`).hasText('Active');\n        // inactive insurance plans\n        assert.dom(`${(0, _dataElement.default)('print-inactive-insurance')} h2`).hasText('Inactive insurance', 'Inactive insurance has its own section');\n        assert.dom(`${(0, _dataElement.default)('print-inactive-insurance')} ${(0, _dataElement.default)('print-inactive-insurance-sequence-0')}`).hasText('Secondary Payer');\n        assert.dom(`${(0, _dataElement.default)('print-inactive-insurance')} ${(0, _dataElement.default)('print-inactive-insurance-info-0')} ${(0, _dataElement.default)('print-patient-row-status')} .formatted-text`).hasText('Inactive');\n        // payment Information\n        assert.dom(`${(0, _dataElement.default)('print-payment-information')}`).exists('Payment information exists');\n\n        click('#print-modal-controls .close-link');\n    });\n\n    (0, _qunit.test)('Print chart allows filtering of active insurance plans', async assert => {\n        await visit(SUMMARY_URL);\n        await click(PRINT_CHART_BUTTON);\n        await delayAsync(100);\n        await click(`${(0, _dataElement.default)('print-insurance-options')} .dropdown-print-select button`);\n        await click(`.ember-tether .input-dropdown-list .input-dropdown-list-item:contains('Active insurance')`);\n        await click(`${PRINT_CHART_MODAL} footer .btn-primary`);\n        // active insurance plans\n        assert.dom(`${(0, _dataElement.default)('print-active-insurance')} h2`).hasText('Active insurance', 'Active insurance has its own section');\n        assert.dom(`${(0, _dataElement.default)('print-active-insurance')} ${(0, _dataElement.default)('print-active-insurance-sequence-0')}`).hasText('Primary Payer');\n        assert.dom(`${(0, _dataElement.default)('print-active-insurance')} ${(0, _dataElement.default)('print-active-insurance-sequence-1')}`).hasText('Secondary Payer');\n        assert.dom(`${(0, _dataElement.default)('print-active-insurance')} ${(0, _dataElement.default)('print-active-insurance-sequence-2')}`).hasText('Tertiary Payer');\n        assert.dom(`${(0, _dataElement.default)('print-active-insurance')} ${(0, _dataElement.default)('print-active-insurance-sequence-3')}`).hasText('Unknown or None Payer');\n        assert.dom(`${(0, _dataElement.default)('print-active-insurance')} ${(0, _dataElement.default)('print-active-insurance-info-0')} ${(0, _dataElement.default)('print-patient-row-status')} .formatted-text`).hasText('Active');\n        assert.dom(`${(0, _dataElement.default)('print-active-insurance')} ${(0, _dataElement.default)('print-active-insurance-info-1')} ${(0, _dataElement.default)('print-patient-row-status')} .formatted-text`).hasText('Active');\n        assert.dom(`${(0, _dataElement.default)('print-active-insurance')} ${(0, _dataElement.default)('print-active-insurance-info-2')} ${(0, _dataElement.default)('print-patient-row-status')} .formatted-text`).hasText('Active');\n        assert.dom(`${(0, _dataElement.default)('print-active-insurance')} ${(0, _dataElement.default)('print-active-insurance-info-3')} ${(0, _dataElement.default)('print-patient-row-status')} .formatted-text`).hasText('Active');\n        // inactive insurance plans\n        assert.dom(`${(0, _dataElement.default)('print-inactive-insurance')}`).doesNotExist('Inactive insurance plans is not in print view');\n        // payment Information\n        assert.dom(`${(0, _dataElement.default)('print-payment-information')}`).exists('Payment information exists');\n\n        click('#print-modal-controls .close-link');\n    });\n\n    (0, _qunit.test)('Print chart allows filtering of inactive insurance plans', async assert => {\n        await visit(SUMMARY_URL);\n        await click(PRINT_CHART_BUTTON);\n        await delayAsync(100);\n        assert.dom(`${(0, _dataElement.default)('print-insurance-options')} .input-dropdown-button`).hasText('All', 'The default option is to print all insurance plans');\n        await click(`${(0, _dataElement.default)('print-insurance-options')} .dropdown-print-select button`);\n        assert.equal(find(`.ember-tether .input-dropdown-list .input-dropdown-list-item`).length, 3, 'There are 3 insurance print options');\n        await click(`.ember-tether .input-dropdown-list .input-dropdown-list-item:contains('Inactive insurance')`);\n        await click(`${PRINT_CHART_MODAL} footer .btn-primary`);\n        // active insurance plans\n        assert.dom(`${(0, _dataElement.default)('print-active-insurance')}`).doesNotExist('Active insurance plans is not in print view');\n        // inactive insurance plans\n        assert.dom(`${(0, _dataElement.default)('print-inactive-insurance')} h2`).hasText('Inactive insurance', 'Inactive insurance has its own section');\n        assert.dom(`${(0, _dataElement.default)('print-inactive-insurance')} ${(0, _dataElement.default)('print-inactive-insurance-sequence-0')}`).hasText('Secondary Payer');\n        assert.dom(`${(0, _dataElement.default)('print-inactive-insurance')} ${(0, _dataElement.default)('print-inactive-insurance-info-0')} ${(0, _dataElement.default)('print-patient-row-status')} .formatted-text`).hasText('Inactive');\n        // payment Information\n        assert.dom(`${(0, _dataElement.default)('print-payment-information')}`).exists('Payment information exists');\n\n        click('#print-modal-controls .close-link');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/print-diagnoses-test', ['qunit', 'boot/tests/helpers/data-element', 'boot/tests/helpers/module-for-acceptance-auth'], function (_qunit, _dataElement, _moduleForAcceptanceAuth) {\n    'use strict';\n\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Summary diagnoses print test - v2');\n\n    (0, _qunit.test)('Print diagnoses from encounter summary with term code and confirm print labels and headers', async assert => {\n        server.post('ChartingEndpoint/api/v2/PrintAudit', () => null);\n        visit('/PF/charts/patients/' + PATIENT_GUID + '/summary');\n        await click(`${(0, _dataElement.default)('diagnosis-display-select')} .composable-select__choice`);\n        await click((0, _dataElement.default)('diagnosis-display-select-option-0'));\n        await click((0, _dataElement.default)('print-diagnoses-button'));\n        assert.throws(findWithAssert(`${(0, _dataElement.default)('print-diagnoses')} .row.header-row > div:contains('Acuity')`), 'There is an Acuity header');\n\n        // Confirm there is an acute/historical diagnoses row for Chronic and Acute diagnoses\n        assert.equal($('.row.header-row').find(`div:contains('Historical Diagnoses')`).length, 1, 'There is a historical diagnosis section for diagnoses');\n        assert.equal($('.row.header-row').find(`div:contains('Current Diagnoses')`).length, 1, 'There is an active diagnosis section for diagnoses');\n\n        // Confirm start/stop row labels for one of the rows\n        assert.throws(findWithAssert(`.row.header-row:contains('Current Diagnoses') div:contains('Start')`), 'There is Start column under current diagnoses');\n        assert.throws(findWithAssert(`.row.header-row:contains('Current Diagnoses') div:contains('Stop')`), 'There is Stop column under current diagnoses');\n\n        // Confirm diagnoses code, start and stop dates for one diagnosis\n        assert.throws(findWithAssert(`${(0, _dataElement.default)('diagnosis-item-text')}:contains('Unspecified fracture')`), 'There is a diagnosis present in the print preview for Term Code');\n        assert.equal(find(`${(0, _dataElement.default)('print-diagnosis-start-date')}:eq(1)`).text(), '10/03/2016', 'There is a diagnosis start date present');\n        assert.equal(find(`${(0, _dataElement.default)('print-diagnosis-stop-date')}:eq(1)`).text(), '10/31/2016', 'There is a diagnosis stop date present');\n\n        click('.close-link');\n    });\n\n    (0, _qunit.test)('Print diagnoses from encounter summary with Term', async assert => {\n        server.post('ChartingEndpoint/api/v2/PrintAudit', () => null);\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/summary');\n        await click(`${(0, _dataElement.default)('diagnosis-display-select')} .composable-select__choice`);\n        await click((0, _dataElement.default)('diagnosis-display-select-option-1'));\n        await click((0, _dataElement.default)('print-diagnoses-button'));\n        assert.throws(findWithAssert(`${(0, _dataElement.default)('diagnosis-item-text')}:contains('Broken femur')`), 'There is a diagnosis present in the print preview for Term');\n        assert.equal(find(`${(0, _dataElement.default)('print-diagnosis-start-date')}:eq(0)`).text(), '11/03/2016', 'There is a diagnosis start date present');\n        click('.close-link');\n    });\n\n    (0, _qunit.test)('Print diagnoses - acute active and historical', async assert => {\n        server.post('ChartingEndpoint/api/v2/PrintAudit', () => null);\n        visit('/PF/charts/patients/' + PATIENT_GUID + '/summary');\n        await click(`${(0, _dataElement.default)('diagnosis-display-select')} .composable-select__choice`);\n        await click((0, _dataElement.default)('diagnosis-display-select-option-0'));\n        await click((0, _dataElement.default)('print-diagnoses-button'));\n        assert.throws(findWithAssert(`${(0, _dataElement.default)('diagnosis-item-text')}:contains('(S72.90) Unspecified fracture')`).text(), 'There is an acute active diagnosis present in the print preview');\n        assert.equal(find(`${(0, _dataElement.default)('print-diagnosis-start-date')}:eq(0)`).text(), '11/03/2016', 'There is a diagnosis start date present for acute active diagnosis.');\n        assert.equal(find(`${(0, _dataElement.default)('print-diagnosis-stop-date')}:eq(0)`).text(), '', 'There is no diagnosis stop date present for acute active diagnosis.');\n\n        assert.throws(findWithAssert(`${(0, _dataElement.default)('diagnosis-item-text')}:contains('(T14.8) Other injury')`).text(), 'There is an acute historical diagnosis present in the print preview');\n        assert.equal(find(`${(0, _dataElement.default)('print-diagnosis-start-date')}:eq(1)`).text(), '10/03/2016', 'There is a diagnosis start date present for acute historical diagnosis.');\n        assert.equal(find(`${(0, _dataElement.default)('print-diagnosis-stop-date')}:eq(1)`).text(), '10/31/2016', 'There is a diagnosis stop date present for acute historical diagnosis.');\n        click('.close-link');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/print-encounter-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/get-text', 'boot/tests/helpers/data-element', 'boot/tests/helpers/get-text-in-print', 'boot/tests/helpers/find-in-print', 'ember-cli-mirage'], function (_qunit, _moduleForAcceptanceAuth, _getText, _dataElement, _getTextInPrint, _findInPrint, _emberCliMirage) {\n    'use strict';\n\n    const UNSIGNED_TRANSCRIPT_GUID = 'd2573d89-bb8b-494e-8a79-b94d02f282f2';\n    const UNSIGNED_TRANSCRIPT_STRUCTURED_FUNCOG_OBSERVATIONS_GUID = 'ab352z11-45z1-bv21-9fg9-c3246c9f5d14';\n    const PATIENT_PRACTICE_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const ENCOUNTER_URL = `/PF/charts/patients/${PATIENT_PRACTICE_GUID}/encounter/${UNSIGNED_TRANSCRIPT_GUID}`;\n    const ENCOUNTER_STRUCTURED_FUNCOG_OBSERVATIONS_URL = `/PF/charts/patients/${PATIENT_PRACTICE_GUID}/encounter/${UNSIGNED_TRANSCRIPT_STRUCTURED_FUNCOG_OBSERVATIONS_GUID}`;\n    const PRINT_CHART_MODAL = '.print-chart .content-modal';\n\n    function clickCheckBox(text) {\n        return click(`.checkbox-row:contains('${text}') input`);\n    }\n    function assertPrintSection(assert, headerText, message) {\n        assert.ok((0, _findInPrint.default)(`.chart-print-container .table h2:contains(\"${headerText}\")`).length, message);\n    }\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Print encounter sections test', {});\n\n    (0, _qunit.test)('Print encounter (unsigned) for quality of care, allergies, smoking status, and observations functions properly', async assert => {\n        let printAuditCalled = false;\n        server.post('ChartingEndpoint/api/v2/PrintAudit', () => {\n            printAuditCalled = true;\n            return null;\n        });\n        await visit(ENCOUNTER_URL);\n        await click((0, _dataElement.default)('print-encounter-button'));\n        assert.equal((0, _getText.default)(`${PRINT_CHART_MODAL} .content-modal-title`), 'Print encounter for Some L Baby', 'The modal title contains the patient\\'s name');\n        click((0, _dataElement.default)('print-modal-select-none'));\n        clickCheckBox('Allergies');\n        clickCheckBox('Quality of care');\n        clickCheckBox('Social history');\n        clickCheckBox('Observations');\n        await click(`${PRINT_CHART_MODAL} footer .btn-primary`);\n        assert.ok(printAuditCalled, 'The print audit endpoint was called after the print button was clicked');\n        assert.equal((0, _getTextInPrint.default)('head title'), 'Encounter - Office Visit Date of service: 03/08/16 Patient: Some L Baby DOB: 02/01/2013 PRN: BS186029', 'The print preview has the correct header for unsigned encounter');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-header-patient-name')), 'Some L Baby', 'The patient name renders correctly on the print preview for unsigned encounter');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-header-facility-name')), 'this is a really long facility name', 'The facility name renders correctly on the print preview for unsigned encounter');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-header-seen-by-provider')), 'Provider Bob MD', 'The seen by provider name renders correctly on print preview for unsigned encounter');\n\n        assertPrintSection(assert, 'Quality of care', 'The quality of care section is present in the print preview for encounter');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-encounter-quality-of-care') + ':eq(0)'), 'Medication Reconciliation', 'The quality of care value Medication Reconciliation renders correctly on print preview for encounter');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-encounter-quality-of-care') + ':eq(1)'), 'Documentation of current medications', 'The quality of care value Documentation of current medications renders correctly on print preview for encounter');\n\n        // Allergy headers\n        assertPrintSection(assert, 'Drug Allergies', 'The drug allergies section is present in the print preview for encounter');\n        assertPrintSection(assert, 'Food Allergies', 'The food allergies section is present in the print preview for encounter');\n        assertPrintSection(assert, 'Environmental Allergies', 'The environmental allergies section is present in the print preview for encounter');\n        // Allergy names\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-allergen-text') + ':eq(0)'), 'Accu-Chek Compact Plus Care Kit W/CARRYING CASE, W/CONTROL SOLUTION(S), W/LANCET(S), W/METER, W/TEST DRUM', 'The first allergen renders correctly on print preview for encounter');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-allergen-text') + ':eq(1)'), 'AA&C', 'The second allergen renders correctly on print preview for encounter');\n        // Allergy severity\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-allergen-severity') + ':eq(0)'), 'Moderate', 'The first allergen severity renders properly on print preview');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-allergen-severity') + ':eq(1)'), 'Mild', 'The second allergen severity renders properly on print preview');\n        // Allergy reactions\n        assert.ok((0, _getTextInPrint.default)((0, _dataElement.default)('print-allergen-reaction') + ':eq(0)') === '', 'The first allergen reaction is empty on print preview for encounter');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-allergen-reaction') + ':eq(1)'), 'Anaphylaxis', 'The second allergen reaction renders correctly on print preview for encounter');\n        //Allergy onset dates\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-allergen-onset-date') + ':eq(0)'), 'Adulthood', 'The first allergen onset date renders correctly on print preview for encounter');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-allergen-onset-date') + ':eq(1)'), '-', 'The second allergen onset date is not set on print preview for encounter');\n\n        assert.ok((0, _findInPrint.default)('.print-behavioral-health-section h2:contains(\"Social history\")').length, 'The social history section is present in the print preview for encounter');\n        assert.ok((0, _findInPrint.default)('.print-behavioral-health-section h4:contains(\"Never smoker\")').length, 'The smoking history description renders correctly on print preview for encounter');\n        assert.ok((0, _findInPrint.default)('.print-behavioral-health-section .col-xs-2:contains(\"12/01/2014\")').length, 'The smoking history effective date renders correctly on print preview for encounter');\n\n        assertPrintSection(assert, 'Observations', 'The observations section is present in the print preview for encounter');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-observation-text') + ':eq(0)'), 'Patient had some trouble walking.', 'The functional status description renders correctly on print preview for encounter');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-observation-no-impairment-text') + ':eq(0)'), 'No impairment.', 'The No impairment text renders correctly on print preview for encounter');\n\n        click('#print-modal-controls .close-link');\n    });\n\n    (0, _qunit.test)('Print encounter (unsigned) for structured functional and cognitive status functions properly', async assert => {\n        let printAuditCalled = false;\n        server.post('ChartingEndpoint/api/v2/PrintAudit', () => {\n            printAuditCalled = true;\n            return null;\n        });\n        await visit(ENCOUNTER_STRUCTURED_FUNCOG_OBSERVATIONS_URL);\n        await click((0, _dataElement.default)('print-encounter-button'));\n        assert.equal((0, _getText.default)(`${PRINT_CHART_MODAL} .content-modal-title`), 'Print encounter for Some L Baby', 'The modal title contains the patient\\'s name');\n        click((0, _dataElement.default)('print-modal-select-none'));\n        clickCheckBox('Observations');\n        await click(`${PRINT_CHART_MODAL} footer .btn-primary`);\n        assert.ok(printAuditCalled, 'The print audit endpoint was called after the print button was clicked');\n        assert.equal((0, _getTextInPrint.default)('head title'), 'Encounter - Office Visit Date of service: 03/08/16 Patient: Some L Baby DOB: 02/01/2013 PRN: BS186029', 'The print preview has the correct header for unsigned encounter');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-header-patient-name')), 'Some L Baby', 'The patient name renders correctly on the print preview for unsigned encounter');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-header-facility-name')), 'this is a really long facility name', 'The facility name renders correctly on the print preview for unsigned encounter');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-header-seen-by-provider')), 'Provider Bob MD', 'The seen by provider name renders correctly on print preview for unsigned encounter');\n\n        assertPrintSection(assert, 'Observations', 'The observations section is present in the print preview for encounter');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-functional-status-text') + ':eq(0)'), 'Able to start and stop walking spontaneously', 'The structured functional status description renders correctly on print preview for encounter');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-functional-status-date') + ':eq(0)'), '08/02/2017', 'The structured functional status date renders correctly on print preview for encounter');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-cognitive-status-text') + ':eq(0)'), 'Difficulty in thinking independently', 'The structured cognitive status description renders correctly on print preview for encounter');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-cognitive-status-date') + ':eq(0)'), '08/21/2017', 'The structured cognitive status date renders correctly on print preview for encounter');\n\n        click('#print-modal-controls .close-link');\n    });\n\n    (0, _qunit.test)('Print encounter (unsigned) - allergies functions properly', async assert => {\n        let printAuditCalled = false;\n        server.post('ChartingEndpoint/api/v2/PrintAudit', () => {\n            printAuditCalled = true;\n            return null;\n        });\n        await visit(ENCOUNTER_URL);\n        await click(`.encounter-allergies-container .btn:contains('Print')`);\n        assert.ok(printAuditCalled, 'The print audit endpoint was called after the print button was clicked');\n\n        // Allergy headers\n        assertPrintSection(assert, 'Drug Allergies', 'The drug allergies section is present in the print preview for encounter');\n        assertPrintSection(assert, 'Food Allergies', 'The food allergies section is present in the print preview for encounter');\n        assertPrintSection(assert, 'Environmental Allergies', 'The environmental allergies section is present in the print preview for encounter');\n        // Allergy names\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-allergen-text') + ':eq(0)'), 'Accu-Chek Compact Plus Care Kit W/CARRYING CASE, W/CONTROL SOLUTION(S), W/LANCET(S), W/METER, W/TEST DRUM', 'The first allergen renders correctly on print preview for encounter');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-allergen-text') + ':eq(1)'), 'AA&C', 'The second allergen renders correctly on print preview for encounter');\n        // Allergy severity\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-allergen-severity') + ':eq(0)'), 'Moderate', 'The first allergen severity renders properly on print preview');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-allergen-severity') + ':eq(1)'), 'Mild', 'The second allergen severity renders properly on print preview');\n        // Allergy reactions\n        assert.ok((0, _getTextInPrint.default)((0, _dataElement.default)('print-allergen-reaction') + ':eq(0)') === '', 'The first allergen reaction is empty on print preview for encounter');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-allergen-reaction') + ':eq(1)'), 'Anaphylaxis', 'The second allergen reaction renders correctly on print preview for encounter');\n        // Allergy onset dates\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-allergen-onset-date') + ':eq(0)'), 'Adulthood', 'The first allergen onset date renders correctly on print preview for encounter');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-allergen-onset-date') + ':eq(1)'), '-', 'The second allergen onset date is not set on print preview for encounter');\n\n        click('#print-modal-controls .close-link');\n    });\n\n    (0, _qunit.test)('Print encounter (unsigned) - smoking status functions properly', async assert => {\n        let printAuditCalled = false;\n        server.post('ChartingEndpoint/api/v2/PrintAudit', () => {\n            printAuditCalled = true;\n            return null;\n        });\n        await visit(ENCOUNTER_URL);\n        await click(`#social-history .btn:contains('Print')`);\n        assert.ok(printAuditCalled, 'The print audit endpoint was called after the print button was clicked');\n\n        assertPrintSection(assert, 'Smoking History', 'The smoking history section is present in the print preview for encounter');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-smoking-history-description') + ':eq(0)'), 'Never smoker', 'The smoking history description renders correctly on print preview for encounter');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-smoking-history-effective-date') + ':eq(0)'), '12/01/2014', 'The smoking history effective date renders correctly on print preview for encounter');\n\n        click('#print-modal-controls .close-link');\n    });\n\n    (0, _qunit.test)('Print parent and child SIA added on encounter', async assert => {\n        const doneBtn = '.right-module .btn-primary';\n        const siaTranscriptGuid = '7022d94f-d70a-4722-a205-dac898cf9f69';\n        const siaSection = 'section #dFinalizeEvents';\n        const transcriptUrl = '/PF/charts/patients/' + PATIENT_PRACTICE_GUID + '/encounter/' + siaTranscriptGuid;\n\n        server.post('ChartingEndpoint/api/v3/patients/:patientPracticeGuid/transcriptEvents', ({ db }, request) => {\n            const data = JSON.parse(request.requestBody);\n            data.transcriptEventGuid = 'TEST_GUID';\n            return data;\n        });\n\n        server.put('ChartingEndpoint/api/v3/patients/:patientPracticeGuid/transcriptEvents/:transcriptEventGuid', () => new _emberCliMirage.default.Response(204, {}, null));\n\n        // Create SIA with child SIA\n        await visit(transcriptUrl);\n        await click(`${siaSection} a:contains('Add item')`);\n        await fillIn(`${siaSection} input`, 'Pain care plan');\n        await keyEvent(`${siaSection} .sia-search-single-select`, 'keydown', 13);\n        await wait();\n        await click(`${siaSection} .sia-search-single-select .ember-select-result-item a:contains(\"Pain care plan\")`);\n        const siaFollowUp = (0, _dataElement.default)('sia-follow-up');\n        await click(siaFollowUp + ' .ember-select-search');\n        await click(siaFollowUp + ' .ember-select-result-item:eq(0)');\n        await click(doneBtn);\n        // Print SIAs with child SIA\n        await click((0, _dataElement.default)('print-encounter-button'));\n        await click((0, _dataElement.default)('print-modal-select-none'));\n        await clickCheckBox('Screenings/ Interventions/ Assessments');\n        await click(`${PRINT_CHART_MODAL} footer .btn-primary`);\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-sia-header')), 'Screenings/ Interventions/ Assessments', 'Print SIA header renders properly.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-sia-display-name')), 'Pain care plan documented', 'Print SIA parent item renders properly.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-sia-child-item')), 'Adjuvant pharmacotherapy (e.g. topical agents, antispasmodics)', 'Print SIA child item renders properly.');\n        click('#print-modal-controls .close-link');\n    });\n\n    (0, _qunit.test)('Print encounter demographics renders properly', async assert => {\n        server.get('/PatientEndpoint/api/v3/patients/:id', ({ db }, request) => {\n            const patientPracticeGuid = request.params.id;\n            return db.patientV3S.find(patientPracticeGuid);\n        });\n        server.get('/PatientEndpoint/api/v1/patients/:id/patientRibbonInfo', ({ db }, request) => {\n            const patientPracticeGuid = request.params.id;\n            const patient = db.patientRibbonInfos.where({ patientPracticeGuid })[0];\n            patient.gender = '2';\n            patient.genderString = 'Unknown';\n            delete patient.raceOptions;\n            return patient;\n        });\n        await visit(ENCOUNTER_URL);\n        await click((0, _dataElement.default)('print-encounter-button'));\n        await click((0, _dataElement.default)('print-modal-select-none'));\n        await clickCheckBox('Patient demographics');\n        await click(`${PRINT_CHART_MODAL} footer .btn-primary`);\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-header-patient-gender')), 'Unknown', 'Unknown renders properly on the print patient header.');\n        click('#print-modal-controls .close-link');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/print-referral-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element', 'boot/tests/helpers/get-text-in-print'], function (_qunit, _moduleForAcceptanceAuth, _dataElement, _getTextInPrint) {\n    'use strict';\n\n    const SIGNED_ENCOUNTER_GUID = '82a597e5-b1b8-46e4-8a07-5c3a4f778e95';\n    const UNSIGNED_ENCOUNTER_GUID = 'UNSIGNED_TRANSCRIPT_GUID';\n    const PATIENT_PRACTICE_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const SIGNED_ENCOUNTER_URL = `/PF/charts/patients/${PATIENT_PRACTICE_GUID}/encounter/${SIGNED_ENCOUNTER_GUID}`;\n    const UNSIGNED_ENCOUNTER_URL = `/PF/charts/patients/${PATIENT_PRACTICE_GUID}/encounter/${UNSIGNED_ENCOUNTER_GUID}`;\n    const ADD_REFERRAL_ACTION_ITEM = `${(0, _dataElement.default)('actions-menu-options')} a:contains('Add referral')`;\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Encounter print referral preview');\n\n    (0, _qunit.test)('Print referral preview test - Attached signed encounter (snapshots for seen and signed by)', async assert => {\n        const currentDate = moment().format('MM/DD/YYYY');\n        visit(SIGNED_ENCOUNTER_URL);\n        click((0, _dataElement.default)('actions-menu'));\n        await click(ADD_REFERRAL_ACTION_ITEM);\n        assert.ok(find('.referral-detail').length > 0, 'Referral details modal appears');\n        assert.ok(find('.right-module-search-results').length > 0, 'Module search results appears');\n        click('.selected-recipients');\n        await click('.referral-list.contacts div:first');\n        assert.equal(find('.pill.contact').text().trim(), 'Claire Grimmett', 'Selected referral to name renders properly in modal');\n        await click('.selected-attachments');\n        assert.ok(find('.attachments-tab').length > 0, 'Attachments list renders');\n        await click('.referral-compliance-attachment-row:first');\n        assert.equal(find('.pill.attachment').text().trim(), 'SOAP Note 09/14/2016', 'Signed encounter attachment was added to the referral');\n        await click(`.btn:contains('Preview')`);\n        // Confirm currently signed by provider for the referral, which should not be snapshotted.\n\n        // Confirm patient information in the header\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('patient-name')), 'Some Baby', 'Patient name renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('patient-dob')), '07/07/1983', 'Patient date of birth renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('patient-sex')), 'Male', 'Patient sex renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('patient-homePhone')), '', 'Patient home phone renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('patient-mobilePhone')), '415-555-1212', 'Patient mobile phone renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('patient-officePhone')), '', 'Patient office phone renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('patient-email')), '', 'Patient email renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('patient-address')), '123 4th Street', 'Patient address(street) renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('patient-city-state-zip')), 'San Rafael, CA 94901', 'Patient address (city + state + zipcode) renders properly on print referral preview.');\n\n        // Confirm facility informtion in the header\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-header-facility-name')), 'Rosalise Ron Practice', 'Facility name renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-header-facility-phone')), '(555) 555-0000', 'Facility phone number renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-header-facility-fax')), '', 'Facility fax number renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-header-facility-address')), '123', 'Facility address (street) renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-header-facility-city-state-zip')), 'Schenectady, NY 12345', 'Facility address (city + state + zipcode) renders properly on print referral preview.');\n\n        // Confirm referral/response letter fields\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-recipient-name')), 'To: Claire Grimmett', 'Referral recipient name renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-sent-date')), 'Sent: ' + currentDate, 'Referral sent date renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-patient-name')), 'Regarding: Some Baby', 'Referral patient name renders properly on print referral preview.');\n\n        // Confirm patient vitals fields\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('patient-vital-height')), '36 in', 'Patient height renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('patient-vital-weight')), '45 lb', 'Patient weight renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('patient-vital-bmi')), '24.41', 'Patient BMI renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('patient-vital-blood-pressure')), '120 / 33 mmHg', 'Patient blood pressure renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('patient-vital-temp')), '', 'Patient temperature renders properly on print referral preview.'); //FIXME: possible bug: should temperature default to 'n/a' like all other vitals?\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('patient-vital-pulse')), 'n/a', 'Patient pulse renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('patient-vital-resp-rate')), 'n/a', 'Patient respiratory rate renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('patient-vital-head-circ')), 'n/a', 'Patient head circumference renders properly on print referral preview.');\n\n        // Confirm diagnosis fields\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('diagnosis-type') + ':eq(0)'), 'ICD-9', 'Diagnosis type renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('diagnosis-code') + ':eq(0)'), '784.0', 'Diagnosis code renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('diagnosis-description') + ':eq(0)'), 'Headache', 'Diagnosis description renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('diagnosis-start-stop-date') + ':eq(0)'), '-', 'Diagnosis start and stop date renders properly on print referral preview');\n\n        // Confirm SOAP fields\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('patient-subjective')), 'Some subjective', 'Subjective field renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('patient-objective')), '', 'Objective field renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('patient-assessment')), 'Some assessment', 'Assessment field renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('patient-plan')), 'Some plan', 'Plan field renders properly on print referral preview.');\n\n        // Confirm active medication information\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('active-medication-name') + ':eq(0)'), 'Trandate 200 MG Oral Tablet - Labetalol HCl Oral Tablet 200 MG', 'Medication information renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('active-medication-sig') + ':eq(0)'), 'take every 4 to 6 hours', 'Sig renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('active-medication-start-stop-date') + ':eq(0)'), 'n/a - n/a', 'Start and stop date renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('active-medication-associated-dx') + ':eq(0)'), '', 'Associated dx renders properly on print referral preview.'); //FIXME: possible bug: looks like 'associated dx' doesn't have a component to render into\n\n        // Confirm headers for encounter seen by provider\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-seen-by-header')), 'SEEN BY', 'Encounter seen by header renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-seen-on-header')), 'SEEN ON', 'Encounter seen on header renders properly on print referral preview.');\n\n        // Confirm content for encounter seen by.\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-seen-by-provider-name')), 'William Clinton F.B.I.', 'Print referral encounter seen by provider name (snapshot) renders properly.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-seen-by-provider-date')), '01/05/2016', 'Print referral encounter seen by provider date (snapshot) renders properly.');\n\n        // Confirm headers for encounter signed by\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-signed-by-header')), 'Signed By', 'Encounter signed by header renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-signed-on-header')), 'Signed On', 'Encounter signed on header renders properly on print referral preview.');\n\n        // Confirm content for encounter signed by provider.\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-signed-by-provider-name')), 'George Bush M.D., M.F.A.', 'Print referral encounter signed by provider name (snapshot) renders properly.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-signed-by-provider-date')), '01/06/2016', 'Print referral encounter signed by provider date (snapshot) renders properly.');\n\n        // Confirm encounter addendum headers\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-addendum-header')), 'Addendum', 'Encounter addendum header renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-addendum-provider-name-header')), 'Provider Name', 'Encounter addendum name header renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-addendum-modified-on-header')), 'Modified On', 'Encounter addendum modified on header renders properly on print referral preview.');\n\n        // Confirm encounter addendum content\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-addenda-note')), 'This is a snapshotted amendment.', 'Print referral encounter addendum note (snapshot) renders properly.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-addenda-provider-name')), 'George Bush M.D., M.F.A.', 'Print referral encounter addendum provider name (snapshot) renders properly.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-addenda-modified-on-date')), moment('2016-09-27T00:00:00Z').format('MM/DD/YYYY'), 'Print referral encounter addendum provider modified date (snapshot) renders properly.');\n\n        click('#print-modal-controls .close-link');\n        click('.order-referral-pane .close-box');\n    });\n\n    (0, _qunit.test)('Print referral preview test - Attached unsigned encounter without snapshots (seen by)', async assert => {\n        visit(UNSIGNED_ENCOUNTER_URL);\n        click((0, _dataElement.default)('actions-menu'));\n        await click(ADD_REFERRAL_ACTION_ITEM);\n        assert.ok(find('.referral-detail').length > 0, 'Referral details modal appears');\n        assert.ok(find('.right-module-search-results').length > 0, 'Module search results appears');\n        click('.selected-recipients');\n        click('.referral-list.contacts div:first');\n        await click('.selected-attachments');\n        assert.ok(find('.attachments-tab').length > 0, 'Attachments list renders');\n        await click('.referral-compliance-attachment-row:eq(1)');\n        assert.equal(find('.pill.attachment').text().trim(), 'SOAP Note 09/13/2016', 'Unsigned encounter attachment was added to the referral');\n        await click(`.btn:contains('Preview')`);\n        // Confirm headers for encounter seen by provider\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-seen-by-header')), 'SEEN BY', 'Encounter seen by header renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-seen-on-header')), 'SEEN ON', 'Encounter seen on header renders properly on print referral preview.');\n\n        // Confirm content for encounter seen by.\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-seen-by-provider-name')), 'Provider Bob MD', 'Print referral encounter seen by provider name (no snapshot) renders properly for attached unsigned encounter.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-seen-by-provider-date')), '03/08/2016', 'Print referral encounter seen by provider date (no snapshot) renders properly for attached unsigned encounter.');\n\n        // Confirm headers for encounter signed by\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-signed-by-header')), 'Signed By', 'Encounter signed by header renders properly on print referral preview for unsigned encounter.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-signed-on-header')), 'Signed On', 'Encounter signed on header renders properly on print referral preview for unsigned encounter.');\n\n        // Confirm content for encounter signed by provider.\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-signed-by-provider-name')), '', 'Print referral encounter signed by provider name is empty for unsigned encounter.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-signed-by-provider-date')), 'n/a', 'Print referral encounter seen by provider date is n/a for unsigned encounter.');\n        click('#print-modal-controls .close-link');\n        click('.order-referral-pane .close-box');\n    });\n\n    (0, _qunit.test)('Print referral preview test - Attached signed encounter without snapshots (seen by/signed by)', async assert => {\n        server.get('ChartingEndpoint/api/v3/patients/:id/encounters/:chartid', ({ db }, request) => {\n            const transcriptGuid = request.params.chartid;\n            const encounter = db.encounters.where({ transcriptGuid })[0];\n            delete encounter.seenByProviderSnapshotGuid;\n            delete encounter.signedByProviderSnapshotGuid;\n            return encounter;\n        });\n        visit(`/PF/charts/patients/${PATIENT_PRACTICE_GUID}`);\n        visit(SIGNED_ENCOUNTER_URL);\n        click((0, _dataElement.default)('actions-menu'));\n        await click(ADD_REFERRAL_ACTION_ITEM);\n        assert.ok(find('.referral-detail').length > 0, 'Referral details modal appears');\n        assert.ok(find('.right-module-search-results').length > 0, 'Module search results appears');\n        click('.selected-recipients');\n        click('.referral-list.contacts div:first');\n        await click('.selected-attachments');\n        assert.ok(find('.attachments-tab').length > 0, 'Attachments list renders');\n        await click('.referral-compliance-attachment-row:eq(0)');\n        assert.equal(find('.pill.attachment').text().trim(), 'SOAP Note 09/14/2016', 'Signed encounter (no snapshots) attachment was added to the referral');\n        await click(`.btn:contains('Preview')`);\n        // Confirm headers for encounter seen by provider\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-seen-by-header')), 'SEEN BY', 'Encounter seen by header renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-seen-on-header')), 'SEEN ON', 'Encounter seen on header renders properly on print referral preview.');\n\n        // Confirm content for encounter seen by.\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-seen-by-provider-name')), 'Provider Bob MD', 'Print referral encounter seen by provider name (no snapshot) renders properly for attached signed encounter.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-seen-by-provider-date')), '01/05/2016', 'Print referral encounter seen by provider date (no snapshot) renders properly for attached unsigned encounter.');\n\n        // Confirm headers for encounter signed by\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-signed-by-header')), 'Signed By', 'Encounter signed by header renders properly on print referral preview for signed encounter.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-signed-on-header')), 'Signed On', 'Encounter signed on header renders properly on print referral preview for signed encounter.');\n\n        // Confirm content for encounter signed by provider.\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-signed-by-provider-name')), 'Provider Bob MD', 'Print referral encounter signed by provider name (no snapshot) renders for signed encounter.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-signed-by-provider-date')), '01/06/2016', 'Print referral encounter signed by provider date (no snapshot) renders for signed encounter.');\n        click('#print-modal-controls .close-link');\n        click('.order-referral-pane .close-box');\n    });\n\n    (0, _qunit.test)('Print referral preview test - Attached signed encounter (snapshots for seen and signed by)', async assert => {\n        visit(SIGNED_ENCOUNTER_URL);\n        click((0, _dataElement.default)('actions-menu'));\n        await click(ADD_REFERRAL_ACTION_ITEM);\n        assert.ok(find('.referral-detail').length > 0, 'Referral details modal appears');\n        assert.ok(find('.right-module-search-results').length > 0, 'Module search results appears');\n        click('.selected-recipients');\n        await click('.referral-list.contacts div:first');\n        assert.equal(find('.pill.contact').text().trim(), 'Claire Grimmett', 'Selected referral to name renders properly in modal');\n        await click('.selected-attachments');\n        assert.ok(find('.attachments-tab').length > 0, 'Attachments list renders');\n        await click('.referral-compliance-attachment-row:first');\n        assert.equal(find('.pill.attachment').text().trim(), 'SOAP Note 09/14/2016', 'Signed encounter attachment was added to the referral');\n        await click(`.btn:contains('Preview')`);\n        // Confirm currently signed by provider for the referral, which should not be snapshotted.\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-signed-by-current-provider')), 'Electronically signed by Rosalise Ron', 'Print referral signed by current provider name renders properly.');\n\n        // Confirm headers for encounter seen by provider\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-seen-by-header')), 'SEEN BY', 'Encounter seen by header renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-seen-on-header')), 'SEEN ON', 'Encounter seen on header renders properly on print referral preview.');\n\n        // Confirm content for encounter seen by.\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-seen-by-provider-name')), 'William Clinton F.B.I.', 'Print referral encounter seen by provider name (snapshot) renders properly.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-seen-by-provider-date')), '01/05/2016', 'Print referral encounter seen by provider date (snapshot) renders properly.');\n\n        // Confirm headers for encounter signed by\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-signed-by-header')), 'Signed By', 'Encounter signed by header renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-signed-on-header')), 'Signed On', 'Encounter signed on header renders properly on print referral preview.');\n\n        // Confirm content for encounter signed by provider.\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-signed-by-provider-name')), 'George Bush M.D., M.F.A.', 'Print referral encounter signed by provider name (snapshot) renders properly.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-signed-by-provider-date')), '01/06/2016', 'Print referral encounter signed by provider date (snapshot) renders properly.');\n\n        // Confirm encounter addendum headers\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-addendum-header')), 'Addendum', 'Encounter addendum header renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-addendum-provider-name-header')), 'Provider Name', 'Encounter addendum name header renders properly on print referral preview.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-addendum-modified-on-header')), 'Modified On', 'Encounter addendum modified on header renders properly on print referral preview.');\n\n        // Confirm encounter addendum content\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-addenda-note')), 'This is a snapshotted amendment.', 'Print referral encounter addendum note (snapshot) renders properly.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-addenda-provider-name')), 'George Bush M.D., M.F.A.', 'Print referral encounter addendum provider name (snapshot) renders properly.');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-referral-addenda-modified-on-date')), moment('2016-09-27T00:00:00Z').format('MM/DD/YYYY'), 'Print referral encounter addendum provider modified date (snapshot) renders properly.');\n\n        click('#print-modal-controls .close-link');\n        click('.order-referral-pane .close-box');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/quality-of-care-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth'], function (_qunit, _moduleForAcceptanceAuth) {\n    'use strict';\n\n    const ENCOUNTER_GUID = '7022d94f-d70a-4722-a205-dac898cf9f69';\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const SELECTED_EVENT_TYPE_GUID = '4568b574-3bcc-4117-ba5a-ffe408c82ec2';\n    const TEST_EVENT_GUID = '12345';\n\n    function validateCheckbox(assert, selector, startsChecked) {\n        const checkbox = find(selector);\n        if (startsChecked) {\n            assert.notOk(checkbox.prop('checked'), 'QOC checkbox renders as unchecked');\n        } else {\n            assert.ok(checkbox.prop('checked'), 'QOC checkbox renders as checked');\n        }\n        return !startsChecked;\n    }\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Encounter quality of care', {});\n\n    (0, _qunit.test)('Can change Quality of Care settings', async assert => {\n        server.post('ChartingEndpoint/api/v3/patients/:patientPracticeGuid/transcriptEvents/', ({ db }, request) => {\n            const data = JSON.parse(request.requestBody);\n            assert.equal(data.eventType.eventTypeGuid, SELECTED_EVENT_TYPE_GUID, 'The correct item is saved when checkbox is checked');\n            data.transcriptEventGuid = TEST_EVENT_GUID;\n            return data;\n        });\n        server.del('ChartingEndpoint/api/v3/patients/:patientPracticeGuid/transcriptEvents/:eventTypeGuid', ({ db }, request) => {\n            assert.equal(request.params.eventTypeGuid, TEST_EVENT_GUID, 'The correct item is deleted when checkbox is unchecked');\n        });\n\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/encounter/' + ENCOUNTER_GUID);\n        // Confirm QOC present\n        assert.ok(find('#dFinalizeQOC input').length > 1, 'QOC checkboxes present');\n\n        // check the first QOC and confirm that it is added\n        const selector = '#dFinalizeQOC input:first';\n        let startsChecked = find(selector).prop('checked') || false;\n\n        await click(selector);\n        startsChecked = validateCheckbox(assert, selector, startsChecked);\n        await click(selector);\n        startsChecked = validateCheckbox(assert, selector, startsChecked);\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/sign-encounter-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/models/session', 'boot/tests/helpers/data-element', 'boot/tests/helpers/blur-auto-saving-text-area'], function (_qunit, _moduleForAcceptanceAuth, _session, _dataElement, _blurAutoSavingTextArea) {\n    'use strict';\n\n    const ENCOUNTER_GUID = '7022d94f-d70a-4722-a205-dac898cf9f69';\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const CARE_PLAN = '#dFinalizeCarePlan';\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Sign encounter');\n\n    (0, _qunit.test)('Sign requires confirmation and permissions before calling service', async function (assert) {\n        let callCount = 0;\n        server.post(`ChartingEndpoint/api/v3/patients/${PATIENT_GUID}/encounters/${ENCOUNTER_GUID}/sign`, () => {\n            callCount++;\n        });\n\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/encounter/' + ENCOUNTER_GUID);\n        // Load stubs that need the model to be ready\n\n        await click('.btn-sign');\n        // Confirm that confirm dialog pops up\n        assert.equal(find('.btn-sign-confirm').length, 1, 'Confirm button is visible');\n\n        // Attempt to sign with permissions\n        const controller = this.application.__container__.lookup('controller:encounter');\n        assert.notOk(controller.get('notAllowedToSign'), 'User has permissions to sign');\n        await click('.btn-sign-confirm');\n        assert.equal(callCount, 1, 'Sign has been called correctly');\n\n        // Attempt to sign without permissions\n        _session.default.set('userEditLevel', 1);\n        assert.ok(controller.get('notAllowedToSign'), 'User does not have permissions to sign');\n        await click('.btn-sign-confirm');\n        assert.equal(callCount, 1, 'Sign was not called for user without permissions');\n    });\n\n    (0, _qunit.test)('Sign forces user to review hidden sections before proceeding', async assert => {\n        // Load stubs that need the model to be ready\n        let callCount = 0;\n        server.post(`ChartingEndpoint/api/v3/patients/${PATIENT_GUID}/encounters/${ENCOUNTER_GUID}/sign`, () => {\n            callCount++;\n        });\n        server.post(`ChartingEndpoint/api/v3/patients/${PATIENT_GUID}/transcriptEvents/`, ({ db }, request) => JSON.parse(request.requestBody));\n\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/encounter/' + ENCOUNTER_GUID);\n        // Enter some data and hide sections\n        await toggleEncounterSections(['Care plan'], true);\n        // Confirm that sections are hidden in encounter\n        assert.equal(find(`${CARE_PLAN}:visible`).length, 1, 'Care Plan begins visible');\n        // add a care plan\n        await click(`${CARE_PLAN} .btn.heading-action:first`);\n        fillIn(`${CARE_PLAN} textarea`, 'Test care Plan');\n        await (0, _blurAutoSavingTextArea.default)(`${CARE_PLAN} .auto-saving-text-area`);\n\n        // Hide these sections in the encounter\n        await toggleEncounterSections(['Care plan'], false);\n\n        // Confirm that sections are hidden in encounter\n        assert.equal(find(`${CARE_PLAN}:visible`).length, 0, 'Care Plan is hidden');\n\n        // Attempt to sign with hidden sections\n        await click('.btn-sign');\n        // Confirm dialog pops up with hidden section messages\n        assert.ok(find(`.popover-confirm-warning:visible .popover-title:contains('Sign encounter')`).length > 0, 'Confirm pop-up is shown');\n        assert.ok(find((0, _dataElement.default)('hidden-sections-warning')).length > 0, 'Confirm pop-up shows the warning about hidden sections');\n        assert.equal(find(`${(0, _dataElement.default)('hidden-sections-list')} li`).length, 1, '1 hidden sections are shown on the warning');\n\n        // Confirm that sections are visible in encounter\n        assert.equal(find(`${CARE_PLAN}:visible`).length, 1, 'Care Plan is visible while confirming');\n\n        // Cancel sign\n        await click((0, _dataElement.default)('cancel-sign-encounter'));\n        assert.equal(callCount, 0, 'Sign has been cancelled');\n        // Confirm that sections are re-hidden in encounter\n        // assert.equal(find(`${OBSERVATIONS}:visible`).length, 0, 'Observations are hidden after cancelling');\n        assert.equal(find(`${CARE_PLAN}:visible`).length, 0, 'Care Plan is hidden after cancelling');\n\n        // Review Hidden Sections\n        await click('.btn-sign');\n        await click((0, _dataElement.default)('review-hidden-sections'));\n        assert.equal(callCount, 0, 'Sign has been delayed while reviewing hidden sections');\n        // confirm that sections are visible in encounter\n        assert.equal(find(`${CARE_PLAN}:visible`).length, 1, 'Care Plan remains visible after review is selected');\n\n        // Sign the encounter\n        await click('.btn-sign');\n        await click('.btn-sign-confirm');\n        assert.equal(callCount, 1, 'Sign was called successfully');\n\n        // restore hidden sections\n        toggleEncounterSections(['Care plan'], true);\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/signed-encounter-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element', 'boot/tests/helpers/get-text'], function (_qunit, _moduleForAcceptanceAuth, _dataElement, _getText) {\n    'use strict';\n\n    const ENCOUNTER_GUID = 'SIGNED_TRANSCRIPT_GUID';\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const ADDENDUM_TEXT = 'This is a test addendum';\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Signed encounter');\n\n    (0, _qunit.test)('Can only add addendum to signed encounter', async assert => {\n        server.post(`ChartingEndpoint/api/v3/patients/${PATIENT_GUID}/encounters/${ENCOUNTER_GUID}/amendments`, ({ db }, request) => {\n            const addendum = JSON.parse(request.requestBody);\n            assert.equal(addendum.note, ADDENDUM_TEXT, 'The addendum was added with the correct text');\n            addendum.id = 0;\n            return addendum;\n        });\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/encounter/' + ENCOUNTER_GUID);\n        // Confirm Add Addendum rather than sign or save buttons, and confirm certain sections disappear from signed encounter view\n        assert.equal(find('.btn-save-encounter').length, 0, 'No save button');\n        assert.equal(find('.btn-sign').length, 0, 'No sign button');\n        assert.equal(find('.btn-sign-confirm').length, 0, 'No sign confirmation button');\n        assert.equal(find('.btn-add-addendum').length, 1, 'Add addendum button visible');\n        assert.equal(find('.patient-health-concerns-list').length, 0, 'No Health Concerns section');\n        assert.equal(find('.encounter-diagnoses-list').length, 0, 'No Diagnoses section');\n        assert.equal(find('.encounter-allergies-container').length, 0, 'No Allergies section');\n        assert.equal(find('.medications').length, 0, 'No Medications section');\n        assert.equal(find('#social-history').length, 0, 'No Social history section');\n        assert.equal(find('#past-medical-history').length, 0, 'No Past medical history section');\n\n        // Confirm that data cannot be changed\n        assert.equal(find('#dFinalizeQOC input:enabled').length, 0, 'All QOC checkboxes disabled');\n\n        // Confirm the encounter details snapshot data\n        assert.equal((0, _getText.default)(`${(0, _dataElement.default)('encounter-details-seen-by')}:first`), 'William Clinton F.B.I.', 'The seen by provider is displayed with the correct snapshot');\n        assert.ok((0, _getText.default)((0, _dataElement.default)('encounter-details-signed-by')).indexOf('George Bush M.D., M.F.A.') !== -1, 'The signed by provider is displayed with the correct snapshot');\n        assert.equal((0, _getText.default)(`${(0, _dataElement.default)('encounter-details-facility')}:first`), 'Above the SuperDuper', 'The facility is displayed with the correct snapshot');\n\n        await click('.btn-add-addendum');\n        // Confirm that addendum dialog shows up, and enter information\n        assert.equal(find('.encounter-addendum:visible').length, 1, 'Addendum panel is visible');\n        fillIn('.encounter-addendum textarea', ADDENDUM_TEXT);\n        click('.encounter-addendum .btn-primary');\n    });\n\n    (0, _qunit.test)('Can load and add a snapshotted addendum to encounter', async assert => {\n        server.post(`ChartingEndpoint/api/v3/patients/${PATIENT_GUID}/encounters/${ENCOUNTER_GUID}/amendments`, () => ({\n            'id': 0,\n            'note': 'The. Greatest.',\n            'source': 'Doctor',\n            'status': 'Accepted',\n            'providerGuid': 'eaa90f53-9dfa-4c2a-93db-83f3b3243d5b',\n            'providerSnapshotGuid': '0fb30e40-e50d-4c50-b72f-0936faee00f4',\n            'lastModifiedDateTimeUtc': '2016-10-07T18:35:24.6367308Z'\n        }));\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/encounter/' + ENCOUNTER_GUID);\n        // Test loading addendum uses snapshotted provider\n        assert.equal(find('.btn-save-encounter').length, 0, 'No save button');\n        assert.equal(find('.btn-sign').length, 0, 'No sign button');\n        assert.equal((0, _getText.default)((0, _dataElement.default)('encounter-addendum-note')), 'This is a snapshotted amendment.', 'The encounter has the proper snapshotted addendum note.');\n        assert.equal((0, _getText.default)((0, _dataElement.default)('encounter-addendum-status-name')), 'Accepted by George Bush M.D., M.F.A.', 'The encounter has the proper snapshotted addendum status and provider name.');\n\n        // Test adding encounter renders snapshotted information\n        await click('.btn-add-addendum');\n        await fillIn('.encounter-addendum textarea', 'Adding an addenum should use snapshot.');\n        await click('.right-module .btn-primary');\n        assert.equal((0, _getText.default)((0, _dataElement.default)('encounter-addendum-status-name') + ':eq(1)'), 'Accepted by William Clinton F.B.I.', 'Added addendum uses snapshotted name.');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/signing-hidden-structured-observations-test', ['boot/tests/helpers/module-for-acceptance-auth', 'qunit', 'boot/tests/helpers/data-element'], function (_moduleForAcceptanceAuth, _qunit, _dataElement) {\n    'use strict';\n\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const NEW_TRANSCRIPT_GUID = 'ab352z11-45z1-bv21-9fg9-c3246c9f5d14';\n    const NEW_ENCOUNTER_URL = `/PF/charts/patients/${PATIENT_GUID}/encounter/${NEW_TRANSCRIPT_GUID}`;\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Signing hidden observations');\n\n    (0, _qunit.test)('Sign confirm modal - show hidden observation section when observation data is present', async assert => {\n        server.get('ChartingEndpoint/api/v2/EncounterEventType/', ({ db }) => db.structuredFunctionalObservations[0]);\n\n        visit(NEW_ENCOUNTER_URL);\n        await toggleEncounterSections(['Observations'], false);\n        assert.dom('#observations').doesNotExist('Observations section is originally hidden');\n        await click('.btn-sign');\n        assert.dom('#observations').exists('Observation section appears when observation data is present but hidden');\n        assert.dom(`${(0, _dataElement.default)('hidden-sections-list')} li`).hasText('Observations', '\\'Observations\\' listed under hidden sections in warning modal');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/structured-observations-limited-access-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element'], function (_qunit, _moduleForAcceptanceAuth, _dataElement) {\n    'use strict';\n\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const NEW_TRANSCRIPT_GUID = '9ccee99e-1396-474b-8fc7-bbaf84bec7c9';\n    const NEW_ENCOUNTER_URL = `/PF/charts/patients/${PATIENT_GUID}/encounter/${NEW_TRANSCRIPT_GUID}`;\n    const RECORD_BTN = '#observations .heading a';\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Structured Functional and Cognitive Observations limited access', {\n        beforeLogin() {\n            server.get('AuthzEndpoint/api/v1/users/:id/rights', () => ({\n                entitledFeatures: ['ERX.Send', 'Chart.Sign', 'EPCS.Send']\n            }));\n        }\n    });\n\n    (0, _qunit.test)('Observations in limited access', async assert => {\n        server.get('ChartingEndpoint/api/v2/EncounterEventType/', ({ db }) => db.structuredFunctionalObservations[0]);\n        await visit(NEW_ENCOUNTER_URL);\n        assert.dom(RECORD_BTN).doesNotExist('Record button is removed');\n        await click((0, _dataElement.default)('observation-description'));\n        assert.dom('.observation-date input').isDisabled('observation date picker is disabled');\n        assert.dom('.observation-detail' + (0, _dataElement.default)('btn-delete')).doesNotExist('delete button is removed');\n        assert.dom('.observation-detail' + (0, _dataElement.default)('btn-save')).doesNotExist('save button is removed');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/structured-observations-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element', 'ember-cli-mirage'], function (_qunit, _moduleForAcceptanceAuth, _dataElement, _emberCliMirage) {\n    'use strict';\n\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const OLD_TRANSCRIPT_GUID = '82a597e5-b1b8-46e4-8a07-5c3a4f778e95';\n    const NEW_TRANSCRIPT_GUID = '9ccee99e-1396-474b-8fc7-bbaf84bec7c9';\n    const OLD_ENCOUNTER_URL = `/PF/charts/patients/${PATIENT_GUID}/encounter/${OLD_TRANSCRIPT_GUID}`;\n    const NEW_ENCOUNTER_URL = `/PF/charts/patients/${PATIENT_GUID}/encounter/${NEW_TRANSCRIPT_GUID}`;\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Structured Functional and Cognitive Observations');\n\n    async function addObservation(searchTerm) {\n        const searchField = '.observation-select';\n\n        fillIn(`${searchField} input`, searchTerm);\n        await keyEvent(searchField, 'keydown', 13);\n        await wait();\n        const firstResult = '.observation-select .ember-select-result-item:first';\n        return click(firstResult);\n    }\n\n    (0, _qunit.test)('Users with old data will be shown the old observations UI', async assert => {\n        await visit(OLD_ENCOUNTER_URL);\n        const observationFreeTextFields = '#observations .auto-saving-text-area';\n        assert.ok(find(observationFreeTextFields).length, 2, 'Old UI (free text fields) are shown when encounters have old observation data');\n    });\n\n    (0, _qunit.test)('Users with no old observation data will be shown the new observations UI', async assert => {\n        await visit(NEW_ENCOUNTER_URL);\n        const record = '#observations .heading:eq(0) a:contains(Record)';\n        const close = '.observation-detail .close-box';\n\n        await click(record);\n        assert.throws(findWithAssert('.observation-detail'), 'New UI (observation detail pane) is shown when an encounter has no old observation data');\n        click(close);\n    });\n\n    (0, _qunit.test)('Save and add another observation', async assert => {\n        let postCalled = false;\n\n        server.get('ChartingEndpoint/api/v2/EncounterEventType/', ({ db }) => {\n            return db.structuredFunctionalObservations[0];\n        });\n        server.post('ChartingEndpoint/api/v3/patients/:patientPracticeGuid/transcriptEvents/', function ({ db }) {\n            postCalled = true;\n            return db.structuredFunctionalObservationResponses[0];\n        });\n\n        await visit(NEW_ENCOUNTER_URL);\n        const record = '#observations .heading:eq(0) a:contains(Record)';\n        await click(record);\n        await addObservation('Jump');\n        const edit = '.observation-detail a';\n\n        // Assert search bar appears when clicking edit\n        await click(edit);\n        await addObservation('Able to sit');\n        const observationName = (0, _dataElement.default)('observation-name');\n        const code = (0, _dataElement.default)('observation-code');\n        const date = '.observation-date input';\n        const saveAndAddAnother = (0, _dataElement.default)('btn-save-add-another');\n        const save = (0, _dataElement.default)('btn-save');\n\n        assert.equal(find(observationName).text().trim(), 'Able to sit with support, unable to sit unsupported', 'Observation title renders correctly');\n        assert.equal(find(code).text().trim(), 'SNOMED-CT - 423788005', 'SNOMED code renders correctly');\n        assert.equal(find(date)[0].value, '8/23/2016', 'Date field is prepopulated with encounter date of service');\n\n        await click(saveAndAddAnother);\n        const observationDescription = (0, _dataElement.default)('observation-description') + ':eq(0)';\n        const observationDate = (0, _dataElement.default)('observation-date') + ':eq(0)';\n        const searchField = '.observation-select';\n\n        // Assert encounter section is updated and POST call to save was made\n        assert.ok(postCalled, 'POST call was made to save observation');\n        assert.equal(find(observationDescription).text().trim(), 'Able to sit with support, unable to sit unsupported', 'Observation description was rendered on the encounter');\n        assert.equal(find(observationDate).text().trim(), '08/14/2017', 'Observation date was rendered on the encounter');\n\n        // Assert detail pane was reset\n        assert.throws(findWithAssert(searchField), 'Search field appears when trying to add another observation');\n        assert.notOk(find(save).length, 'Save button disappears when adding another observation');\n        assert.notOk(find(saveAndAddAnother).length, 'Save & add another button disappears when adding another observation');\n        assert.notOk(find(observationName).length, 'Observation name disappears when adding another observation');\n        assert.notOk(find(code).length, 'Code field disappears when adding another observation');\n        assert.notOk(find(date).length, 'Date field disappears when adding another observation');\n    });\n\n    (0, _qunit.test)('Edit and delete an observation', async assert => {\n        let putCalled = false;\n        let deleteCalled = false;\n\n        server.get('ChartingEndpoint/api/v2/EncounterEventType/', ({ db }) => db.structuredFunctionalObservations[0]);\n\n        server.put('ChartingEndpoint/api/v3/patients/:patientPracticeGuid/transcriptEvents/:transcriptGuid', () => {\n            putCalled = true;\n            return new _emberCliMirage.default.Response(204, {}, null);\n        });\n        server.delete('ChartingEndpoint/api/v3/patients/:patientPracticeGuid/transcriptEvents/:transcriptGuid', () => {\n            deleteCalled = true;\n            return new _emberCliMirage.default.Response(204, {}, null);\n        });\n\n        await visit(NEW_ENCOUNTER_URL);\n        const observationDescription = (0, _dataElement.default)('observation-description');\n        let observationDate = (0, _dataElement.default)('observation-date');\n        await click(observationDescription);\n        fillIn('.observation-date input', '01/01/2017');\n        await keyEvent('.observation-date', 'keydown', 13);\n        const saveButton = (0, _dataElement.default)('btn-save');\n        await click(saveButton);\n        observationDate = (0, _dataElement.default)('observation-date');\n\n        // Assert PUT call to update observation was made and new date was rendered on UI\n        assert.ok(putCalled, 'PUT call was made to update observation');\n        assert.equal(find(observationDate).text().trim(), '01/01/2017', 'Edited observation date was rendered on the encounter');\n        await click(observationDescription);\n        const deleteButton = (0, _dataElement.default)('btn-delete');\n        await click(deleteButton);\n        const observationSection = (0, _dataElement.default)('observation-section') + ':eq(1)';\n\n        // Assert DELETE call to delete observation was made and removed from UI\n        assert.ok(deleteCalled, 'DELETE call was made to delete observation');\n        assert.equal(find(observationSection).text().trim(), 'No cognitive status recorded.', 'Observation was deleted and removed from the observation section');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/syndromic-surveillance-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element'], function (_qunit, _moduleForAcceptanceAuth, _dataElement) {\n    'use strict';\n\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const ENCOUNTER_GUID = '82a597e5-b1b8-46e4-8a07-5c3a4f778e95';\n    const ENCOUNTER_URL = `/PF/charts/patients/${PATIENT_GUID}/encounter/${ENCOUNTER_GUID}`;\n    const ACTIONS_MENU_ITEM = `${(0, _dataElement.default)('actions-menu-options')} a:contains('Syndromic surveillance')`;\n    const MODAL_ELEMENT = '.charting-modal';\n    const SYNDROMIC_SURVEILLANCE_TEXT = 'The following is your syndromic surveillance text. You may view and copy this information';\n    const DOWNLOAD_INSTRUCTIONS = `, or click 'Save to file' to save a text file version of this information to your file system.`;\n    const TEST_RESPONSE_TEXT = 'MSH|^~\\&|PracticeFusion|Yulias medical facility wootn^1d30f3e5-0e93-4968-90d2-e97b043dd902^UUID|||20160927194626||ADT^A01^ADT_A01|ae4966d1-aa0c-4eca-86df-e3b64689d30d|P|2.5.1|||||||||PH_SS-NoAck^SS Sender^2.16.840.1.114222.4.10.3^ISO' + 'EVN||20160920000000|||||Yulias medical facility wootn^1d30f3e5-0e93-4968-90d2-e97b043dd902^UUID' + 'PID|1||WS900842^^^^PI||Whatupyoyyy^Suhdude whatt^Jakui^^^^L||19950101|F|||1110 Yoyo Street^^San Francisco^CA^94107|||||||||||' + 'PV1|1||||||||||||||||||14333294^^^^VN|||||||||||||||||||||||||20160920000000' + 'OBX|1|NM|21612-7^^LN||21|a^YEAR^UCUM|||||F';\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Syndromic surveillance');\n\n    (0, _qunit.test)('Syndromic surveillance renders properly on encounter', async assert => {\n        let calledSyndromicSurveillance = false;\n        server.get('ChartingEndpoint/api/v1/SyndromicSurveillance/:facilityGuid/:patientPracticeGuid/:transcriptGuid', () => {\n            calledSyndromicSurveillance = true;\n            return {\n                responseText: TEST_RESPONSE_TEXT\n            };\n        });\n        await visit(ENCOUNTER_URL);\n        await click((0, _dataElement.default)('actions-menu'));\n        await click(ACTIONS_MENU_ITEM);\n        assert.ok(calledSyndromicSurveillance, 'Syndromic Surveillance service was called');\n\n        assert.ok(find(`${MODAL_ELEMENT} h3:contains('Syndromic surveillance')`).length > 0, 'Syndromic surveillance modal has correct title');\n        assert.ok(find(`.charting-modal .message:contains(${SYNDROMIC_SURVEILLANCE_TEXT})`).length > 0, 'Syndromic surveillance modal contains default text');\n        assert.ok(find(`.charting-modal .message:contains(${DOWNLOAD_INSTRUCTIONS})`).length > 0, 'Syndromic surveillance modal contains text instructions to download');\n        assert.equal(find('.charting-modal .content-ss').text(), TEST_RESPONSE_TEXT, 'Syndromic surveillance modal renders syndromic surveillance text from service');\n        assert.ok(find('.charting-modal .content-ss').scrollLeft(300).length > 0, 'Syndromic surveillance text area scrolls based on large text');\n        assert.ok(find(`${MODAL_ELEMENT} #modalButtonSave`).length > 0, 'Syndromic surveillance save to file button renders properly');\n\n        await click(`${MODAL_ELEMENT} #modalButtonDone`);\n        assert.ok(find(`${MODAL_ELEMENT}:visible`).length < 1, 'Syndromic Surveillance modal closed properly');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/templates-encounter-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element', 'ember-cli-mirage'], function (_qunit, _moduleForAcceptanceAuth, _dataElement, _emberCliMirage) {\n    'use strict';\n\n    let store;\n    const ENCOUNTER_GUID = 'UNSIGNED_TRANSCRIPT_GUID';\n    const TEMPLATE_NAME = 'My new template';\n    const TEMPLATE_SHORTCUT = '..T1';\n    const NEW_TEMPLATE_GUID = 'NEW_TEMPLATE_GUID';\n    const TEMPLATE_ITEM = '<p>First <b>subjective</b> template item</p>';\n    const TEMPLATE_ITEM_SHORTCUT = '.TE1';\n    function dataId(id) {\n        return `[data-id='${id}']`;\n    }\n    async function editTemplateItem(text, shortcut) {\n        await delayAsync(100);\n        find(`.carbon-content-modal-component ${(0, _dataElement.default)('rich-text-editor')}`).html(text);\n        // We are clicking the clear formatting button just to force the editor to update it's value. The blur events don't get triggered properly during testing.\n        click('.carbon-content-modal-component [title=\"Clear formatting\"].btn-tool');\n        if (Ember.isPresent(shortcut)) {\n            fillIn(`.carbon-content-modal-component ${(0, _dataElement.default)('template-shortcut')}`, shortcut);\n        }\n        return click('.carbon-content-modal-component footer .btn-primary');\n    }\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Charting templates encounter', {\n        beforeEach() {\n            store = this.application.__container__.lookup('service:store');\n        }\n    });\n\n    (0, _qunit.test)('Add a template via encounter', async assert => {\n        assert.expect(11);\n        server.post('ChartingEndpoint/api/v1/templates', ({ db }, request) => {\n            const data = JSON.parse(request.requestBody);\n            assert.equal(data.name, TEMPLATE_NAME, 'The template has the correct name');\n            assert.notOk(data.templateGuid, 'The template did not have a template guid');\n            data.templateGuid = NEW_TEMPLATE_GUID;\n            return data;\n        });\n        server.put(`ChartingEndpoint/api/v1/templates/${NEW_TEMPLATE_GUID}`, ({ db }, request) => {\n            const data = JSON.parse(request.requestBody);\n            assert.equal(data.name, TEMPLATE_NAME, 'The template has the correct name');\n            assert.equal(data.templateGuid, NEW_TEMPLATE_GUID, 'The template has the correct template guid');\n            const subjective = data.templateSections.find(section => section.sectionFilters[0] === 'S');\n            assert.ok(subjective, 'The subjective section is present');\n            assert.equal(subjective.values.length, 1, 'The subjective has 1 template item');\n            assert.equal(subjective.values[0].text, TEMPLATE_ITEM, 'The template item has the correct text');\n            assert.equal(subjective.values[0].shortcut, TEMPLATE_ITEM_SHORTCUT, 'The template item has the correct shortcut');\n            return data;\n        });\n        visit(`/PF/charts/patients/ecd212c3-5c99-499e-b3c6-b2645b8a4c98/encounter/${ENCOUNTER_GUID}`);\n        click((0, _dataElement.default)('edit-note-subjective'));\n        click((0, _dataElement.default)('add-template'));\n        fillIn('.template-item-edit input', TEMPLATE_NAME);\n        await click((0, _dataElement.default)('save-add-template'));\n        const templateSelector = `.editable-chart-template${dataId(NEW_TEMPLATE_GUID)}`;\n        assert.throws(findWithAssert(templateSelector), 'New template was added to the template list');\n        assert.ok(store.peekRecord('charting-template', NEW_TEMPLATE_GUID), 'The new template exists in the store');\n        click(`${templateSelector} .p-link`);\n        click((0, _dataElement.default)('add-template-item'));\n        await editTemplateItem(TEMPLATE_ITEM, TEMPLATE_ITEM_SHORTCUT);\n        const template = store.peekRecord('charting-template', NEW_TEMPLATE_GUID);\n        assert.equal(template.get('subjective.length'), 1, 'The model has the correct number of template items');\n    });\n\n    (0, _qunit.test)('Edit existing template via encounter', async assert => {\n        assert.expect(9);\n        const templateGuid = 'e468fd14-795e-4c24-a0b2-6304ca79ceca';\n        const templateItemToEditGuid = '5e1a242e-e046-4e5b-9e8d-55430e4351e7';\n        const templateItemToDeleteGuid = 'af9f1cd4-9fb2-470b-bb1d-ade60030c32a';\n        let putCallCount = 0;\n        server.put(`ChartingEndpoint/api/v1/templates/${templateGuid}`, ({ db }, request) => {\n            putCallCount++;\n            let data = JSON.parse(request.requestBody);\n            if (putCallCount === 1) {\n                assert.equal(data.name, TEMPLATE_NAME, 'The template has the correct name');\n                assert.equal(data.shortcut, TEMPLATE_SHORTCUT, 'The template has the correct shortcut');\n                assert.equal(data.templateGuid, templateGuid, 'The template has the correct template guid');\n            } else {\n                const subjective = data.templateSections.find(section => section.sectionFilters[0] === 'S');\n                if (putCallCount === 2) {\n                    const templateItem = subjective.values.findBy('valueGuid', templateItemToEditGuid);\n                    assert.equal(templateItem.text, TEMPLATE_ITEM, 'The edited template item has the correct value');\n                    assert.equal(templateItem.shortcut, TEMPLATE_ITEM_SHORTCUT, 'The edited template item has the correct shortcut');\n                } else if (putCallCount === 3) {\n                    const templateItem = subjective.values.findBy('valueGuid', templateItemToDeleteGuid);\n                    assert.notOk(templateItem, 'The deleted template item was not present');\n                }\n            }\n            return data;\n        });\n        visit(`/PF/charts/patients/ecd212c3-5c99-499e-b3c6-b2645b8a4c98/encounter/${ENCOUNTER_GUID}`);\n        click((0, _dataElement.default)('edit-note-subjective'));\n        click((0, _dataElement.default)('toggle-edit-templates'));\n        const templateSelector = `.editable-chart-template${dataId(templateGuid)}`;\n        await click(`${templateSelector} .template-name`);\n        assert.equal(find(`${templateSelector} input`)[0].value, 'Abscess', 'The initial template name was correct in the textbox');\n        fillIn(find(`${templateSelector} input`).first(), TEMPLATE_NAME);\n        fillIn(`${templateSelector} ${(0, _dataElement.default)('template-shortcut')}`, TEMPLATE_SHORTCUT);\n        click(`${templateSelector} ${(0, _dataElement.default)('save-edit-template')}`);\n        click((0, _dataElement.default)('toggle-edit-templates'));\n        click(`${templateSelector} .p-link`);\n        click((0, _dataElement.default)('toggle-edit-template-items'));\n\n        let templateItemSelector = `.editable-template-item${dataId(templateItemToEditGuid)}`;\n        click(`${templateItemSelector} .template-item-text`);\n        await editTemplateItem(TEMPLATE_ITEM, TEMPLATE_ITEM_SHORTCUT);\n        assert.equal(find(`${templateItemSelector} .item-shortcut`).text(), TEMPLATE_ITEM_SHORTCUT, 'The template item is rendered with the correct shortcut');\n        templateItemSelector = `.editable-template-item${dataId(templateItemToDeleteGuid)}`;\n        click(`${templateItemSelector} .template-item-text`);\n        delayAsync(100);\n        await click('.carbon-content-modal-component footer .pull-left button');\n        assert.notOk(find(templateItemSelector).length, 'The deleted template item was removed from the DOM');\n    });\n\n    (0, _qunit.test)('Delete existing template via encounter', async assert => {\n        assert.expect(6);\n        server.delete('ChartingEndpoint/api/v1/templates/:templateGuid', () => {\n            assert.ok(true, 'The delete service call was made');\n            return new _emberCliMirage.default.Response(204, {}, null);\n        });\n\n        const templateGuid1 = 'ac2c62b4-387c-4f9f-b75d-ac24b503163b';\n        const templateGuid2 = 'fcf723ee-a7c6-49d3-a548-ad822ac2ca31';\n\n        visit(`/PF/charts/patients/ecd212c3-5c99-499e-b3c6-b2645b8a4c98/encounter/${ENCOUNTER_GUID}`);\n        click((0, _dataElement.default)('edit-note-subjective'));\n        click((0, _dataElement.default)('toggle-edit-templates'));\n        let templateSelector = `.editable-chart-template${dataId(templateGuid1)}`;\n        click(`${templateSelector} .icon-go-away-small`);\n        await click('.popover-confirm-warning .confirm-btn');\n        assert.notOk(find(templateSelector).length, 'Then template has been removed from the DOM');\n        let template = store.peekRecord('charting-template', templateGuid1);\n        assert.ok(!template || template.get('isDeleted'), 'The template was removed from the store');\n\n        templateSelector = `.editable-chart-template${dataId(templateGuid2)}`;\n        click(`${templateSelector} .template-name`);\n        click(`${templateSelector} a:contains('Delete')`);\n        await click('.popover-confirm-warning .confirm-btn');\n        assert.notOk(find(templateSelector).length, 'Then template has been removed from the DOM');\n        template = store.peekRecord('charting-template', templateGuid2);\n        assert.ok(!template || template.get('isDeleted'), 'The template was removed from the store');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/templates-settings-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-entitled', 'boot/tests/helpers/data-element', 'ember-cli-mirage', 'boot/models/session'], function (_qunit, _moduleForAcceptanceEntitled, _dataElement, _emberCliMirage, _session) {\n    'use strict';\n\n    let store;\n    const SHORTCUT = '..TS1';\n    const TEMPLATE_NAME = 'My new template';\n    const DESCRIPTION = 'My template description';\n    const S1 = '<p>First subjective template item</p>';\n    const S2 = '<p><b>Second</b> subjective template item</p>';\n    const S2_SHORTCUT = '.TWO';\n    const O1 = '<p>First <i>objective</i> template item</p>';\n    const A1 = '<p>First assessment template item</p>';\n    const P1 = '<p>First plan template item</p>';\n    const NEW_TEMPLATE_GUID = 'NEW_TEMPLATE_GUID';\n    const CUSTOM_PUNCTUATION = 'SUCH_CUSTOM';\n    const CUSTOM_SEPARATOR = `${CUSTOM_PUNCTUATION}\\n\\n`;\n    const PREDEFINED_ID = 'punctuation-predefined';\n    const CUSTOM_ID = 'punctuation-custom';\n    const DOUBLE_ID = 'newline-double';\n    const NONE_ID = 'newline-none';\n    const COMMA_SPACE = ', ';\n\n    function clickAddTemplateItem(sectionName) {\n        const section = (0, _dataElement.default)(`${sectionName}-section`);\n        click(`${section} ${(0, _dataElement.default)('add-template-item')}`);\n        return delayAsync(100);\n    }\n    async function addTemplateItem(sectionName, text, shortcut) {\n        await clickAddTemplateItem(sectionName);\n        const section = (0, _dataElement.default)(`${sectionName}-section`);\n        find(`${section} ${(0, _dataElement.default)('rich-text-editor')}`).html(text);\n        // We are clicking the bold button just to force the editor to update it's value. The blur events don't get triggered properly during testing.\n        click(`${section} [title=\"Clear formatting\"].btn-tool`);\n        if (Ember.isPresent(shortcut)) {\n            fillIn(`${section} ${(0, _dataElement.default)('template-shortcut')}`, shortcut);\n        }\n        return click(`${section} .inline-rich-text-editor-button-row .btn-primary`);\n    }\n    function findDemographicItem(dropdown, text) {\n        return findWithAssert(`${dropdown} .dropdown-menu li a span:not('.pull-right'):contains('${text}')`);\n    }\n    async function addTemplateItemWithPatientInfo(sectionName) {\n        await clickAddTemplateItem(sectionName);\n        const section = (0, _dataElement.default)(`${sectionName}-section`);\n        const dropdown = `${section} ${(0, _dataElement.default)('patient-demographic-dropdown')}`;\n        await click(`${dropdown} .dropdown-toggle`);\n        const addressItem = findDemographicItem(dropdown, 'Address');\n        findDemographicItem(dropdown, 'Age');\n        findDemographicItem(dropdown, 'Date of birth');\n        findDemographicItem(dropdown, 'Email');\n        findDemographicItem(dropdown, 'Patient name');\n        findDemographicItem(dropdown, 'Phone');\n        return click(addressItem);\n    }\n    async function addDescription() {\n        click((0, _dataElement.default)('add-description-link'));\n        const selector = '.description-container .inline-text-area textarea';\n        await fillIn(selector, DESCRIPTION);\n        if (window._phantom || find(`${selector}:focus`).length) {\n            triggerEvent(selector, 'focusout');\n        } else {\n            Ember.run(find(selector), 'trigger', $.Event('focusout'));\n        }\n    }\n    async function addShortcut() {\n        const inputSelector = (0, _dataElement.default)('template-shortcut');\n        await fillIn(inputSelector, SHORTCUT);\n        if (find(`${inputSelector}:focus`).length) {\n            triggerEvent(inputSelector, 'focusout');\n        } else {\n            Ember.run(find('.template-shortcut'), 'trigger', $.Event('focusout'));\n        }\n    }\n    function exampleText(separator) {\n        return `This is template item one${separator}This is template item two`;\n    }\n\n    (0, _moduleForAcceptanceEntitled.default)('Acceptance - Core - Charting | Charting templates settings', {\n        beforeEach() {\n            store = this.application.__container__.lookup('service:store');\n        }\n    });\n\n    (0, _qunit.test)('Add a template via settings', async assert => {\n        server.post('ChartingEndpoint/api/v1/templates', (schema, request) => {\n            const data = JSON.parse(request.requestBody);\n\n            assert.equal(data.name, TEMPLATE_NAME, 'The template has the correct name');\n            assert.equal(data.shortcut, SHORTCUT, 'The template has the correct shortcut');\n            assert.equal(data.description, DESCRIPTION, 'The template has the correct description');\n            assert.deepEqual(data.specializations, [260], 'The template has the correct specialties');\n            assert.notOk(data.templateGuid, 'The template did not have a template guid');\n            assert.equal(data.templateSections.length, 4, 'The template has the correct number of sections');\n            data.templateSections.forEach(section => {\n                const sectionFilter = section.sectionFilters[0];\n                if (sectionFilter === 'S') {\n                    assert.equal(section.values.length, 2, 'The \"S\" section has the correct number of items');\n                    const s1 = section.values.findBy('text', S1);\n                    const s2 = section.values.findBy('text', S2);\n                    assert.ok(s1, 'The first \"S\" item is present');\n                    assert.ok(s2, 'The second \"S\" item is present');\n                    assert.notOk(s1.shortcut, 'The first \"S\" item does not have a shortcut');\n                    assert.equal(s2.shortcut, S2_SHORTCUT, 'The second \"S\" item\\'s shortcut is correct');\n                } else if (sectionFilter === 'O') {\n                    assert.equal(section.values.length, 2, 'The \"O\" section only has 2 items');\n                    assert.equal(section.values[0].text, O1, 'The \"O\" item has the correct value');\n                    assert.notOk(section.values[0].shortcut, 'The \"O\" item does not have a shortcut');\n                    assert.ok(section.values[1].text.indexOf('{address}') > 0, 'The second \"O\" item has the patient demographic variable in it');\n                } else if (sectionFilter === 'A') {\n                    assert.equal(section.values.length, 1, 'The \"A\" section only has 1 item');\n                    assert.equal(section.values[0].text, A1, 'The \"A\" item has the correct value');\n                    assert.notOk(section.values[0].shortcut, 'The \"A\" item does not have a shortcut');\n                } else if (sectionFilter === 'P') {\n                    assert.equal(section.values.length, 1, 'The \"P\" section only has 1 item');\n                    assert.equal(section.values[0].text, P1, 'The \"P\" item has the correct value');\n                    assert.notOk(section.values[0].shortcut, 'The \"P\" item does not have a shortcut');\n                }\n            });\n\n            data.templateGuid = NEW_TEMPLATE_GUID;\n            return data;\n        });\n\n        await visit('/PF/settings/templates/provider');\n        click((0, _dataElement.default)('create-template'));\n        addShortcut();\n        fillIn((0, _dataElement.default)('template-name'), TEMPLATE_NAME);\n        click(`${(0, _dataElement.default)('specialties-select')} .ember-select-search-choice-close`);\n        click(`${(0, _dataElement.default)('specialties-select')} .dropdown-toggle`);\n        click((0, _dataElement.default)('specialties-select-0'));\n\n        await addDescription();\n        await addTemplateItem('subjective', S1);\n        await addTemplateItem('subjective', S2, S2_SHORTCUT);\n        await addTemplateItem('objective', O1);\n        await addTemplateItem('assessment', A1);\n        await addTemplateItem('plan', P1);\n\n        await addTemplateItemWithPatientInfo('objective');\n\n        await click((0, _dataElement.default)('template-save'));\n\n        const template = store.peekRecord('charting-template', NEW_TEMPLATE_GUID);\n        assert.ok(template, 'The new template is present in the store');\n    });\n\n    (0, _qunit.test)('Edit an existing template via settings', async assert => {\n        const templateGuid = 'e468fd14-795e-4c24-a0b2-6304ca79ceca';\n        server.put(`ChartingEndpoint/api/v1/templates/${templateGuid}`, (schema, request) => {\n            const data = JSON.parse(request.requestBody);\n\n            assert.equal(data.name, TEMPLATE_NAME, 'The template has the correct name');\n            assert.equal(data.shortcut, SHORTCUT, 'The template has the correct shortcut');\n            assert.equal(data.description, DESCRIPTION, 'The template has the correct description');\n            assert.equal(data.templateGuid, templateGuid, 'The template has the correct template guid');\n            data.templateSections.forEach(section => {\n                const sectionFilter = section.sectionFilters[0];\n                if (sectionFilter === 'S') {\n                    const s2 = section.values.findBy('text', S2);\n                    assert.ok(s2, 'The new \"S\" item is present');\n                    assert.equal(s2.shortcut, S2_SHORTCUT, 'The new \"S\" item\\'s shortcut is correct');\n                } else if (sectionFilter === 'O') {\n                    const o1 = section.values.findBy('text', O1);\n                    assert.ok(o1, 'The new \"O\" item is present');\n                    assert.notOk(o1.shortcut, 'The new \"O\" item does not have a shortcut');\n                } else if (sectionFilter === 'A') {\n                    assert.ok(false, 'The \"A\" section is not present');\n                } else if (sectionFilter === 'P') {\n                    const p1 = section.values.findBy('text', P1);\n                    assert.ok(p1, 'The new \"P\" item is present');\n                    assert.notOk(p1.shortcut, 'The new \"P\" item does not have a shortcut');\n                }\n            });\n            return data;\n        });\n        visit('/PF/settings/templates/provider');\n        await click(`.flex-table [data-id=\"${templateGuid}\"] ${(0, _dataElement.default)('template-name')}`);\n        assert.equal(find((0, _dataElement.default)('template-name'))[0].value, 'Abscess', 'The template has the correct name');\n        await addDescription();\n        fillIn((0, _dataElement.default)('template-name'), TEMPLATE_NAME);\n        await addShortcut();\n        await addTemplateItem('subjective', S2, S2_SHORTCUT);\n        await addTemplateItem('objective', O1);\n        await addTemplateItem('plan', P1);\n\n        click(`${(0, _dataElement.default)('assessment-section')} .icon-go-away-small`);\n\n        await click((0, _dataElement.default)('template-save'));\n        const template = store.peekRecord('charting-template', templateGuid);\n        assert.ok(template, 'The template is still present in the store');\n        assert.ok(Ember.isEmpty(template.get('assessment')), 'The assessment section has no template items');\n    });\n\n    (0, _qunit.test)('Delete an existing template via settings using checkbox', async assert => {\n        const templateGuid = 'ac2c62b4-387c-4f9f-b75d-ac24b503163b';\n        assert.expect(3);\n        server.delete(`ChartingEndpoint/api/v1/templates/${templateGuid}`, () => {\n            assert.ok(true, 'The delete service call was made');\n            return new _emberCliMirage.default.Response(204, {}, null);\n        });\n\n        visit('/PF/settings/templates/provider');\n        click(`.flex-table [data-id=\"${templateGuid}\"] input[type=\"checkbox\"]`);\n        click('.composable-header__tool-bar .split-button__arrow-button--primary');\n        click((0, _dataElement.default)('templates-delete'));\n        await click('.carbon-content-modal-component .btn-primary');\n        assert.dom(`.flex-table [data-id=\"${templateGuid}\"]`).doesNotExist('The template was removed from the screen');\n        const template = store.peekRecord('charting-template', templateGuid);\n        assert.ok(!template || template.get('isDeleted'), 'The template was removed from the store');\n    });\n\n    (0, _qunit.test)('Delete an existing template via settings from edit tab', async assert => {\n        const templateGuid = 'fcf723ee-a7c6-49d3-a548-ad822ac2ca31';\n        assert.expect(3);\n        server.delete(`ChartingEndpoint/api/v1/templates/${templateGuid}`, ({ db }) => {\n            assert.ok(true, 'The delete template service call was made');\n            db.chartingTemplates.remove({ templateGuid });\n            return new _emberCliMirage.default.Response(204, {}, null);\n        });\n\n        visit('/PF/settings/templates/provider');\n        click(`.flex-table [data-id=\"${templateGuid}\"] ${(0, _dataElement.default)('template-name')}`);\n        click((0, _dataElement.default)('template-more-actions'));\n        click((0, _dataElement.default)('template-delete'));\n        await click(`.confirm-dialog.in ${(0, _dataElement.default)('confirm-dialog-confirm')}`);\n        assert.notOk(find(`.nav-tabs [href=\"/PF/settings/templates/edit/${templateGuid}\"]`).length, 'The template tab was removed from the screen');\n        const template = store.peekRecord('charting-template', templateGuid);\n        assert.ok(!template || template.get('isDeleted'), 'The template was removed from the store');\n    });\n\n    (0, _qunit.test)('Changing from custom template separator to predefined', async assert => {\n        const commaSpaceNewlines = `${COMMA_SPACE}\\n\\n`;\n        server.get('PracticeEndpoint/api/v1/preferences/provider', {\n            preferences: {\n                'charting.Templates.ItemSeparator': CUSTOM_SEPARATOR\n            }\n        });\n        server.post('PracticeEndpoint/api/v1/preferences/provider/:providerGuid', (schema, request) => {\n            const data = JSON.parse(request.requestBody);\n            const separator = data.preferences['charting.Templates.ItemSeparator'];\n            assert.equal(separator, commaSpaceNewlines, 'The comma space separator value was saved correctly');\n            return {};\n        });\n        await visit('PF/settings/templates/settings');\n        const $customRadio = findWithAssert(`${(0, _dataElement.default)(CUSTOM_ID)} input[type=\"radio\"]`);\n        const $customInput = findWithAssert(`${(0, _dataElement.default)(CUSTOM_ID)} input.ember-text-field`);\n        const $doubleRadio = findWithAssert(`${(0, _dataElement.default)(DOUBLE_ID)} input[type=\"radio\"]`);\n        assert.ok($customRadio[0].checked, 'The custom radio button is checked');\n        assert.equal($customInput[0].value, CUSTOM_PUNCTUATION, 'The custom separator punctuation value was correct on load');\n        assert.ok($doubleRadio[0].checked, 'The double newline radio button is checked');\n        assert.equal(find((0, _dataElement.default)('templates-separator-example')).text(), exampleText(CUSTOM_SEPARATOR), 'The example text renders correctly');\n        click(`${(0, _dataElement.default)(PREDEFINED_ID)} label`);\n\n        await click(`${(0, _dataElement.default)('templates-separator-predefined-dropdown')} .composable-select__choice`);\n        await click((0, _dataElement.default)('templates-separator-predefined-dropdown-option-0'));\n        assert.equal(find((0, _dataElement.default)('templates-separator-example')).text(), exampleText(commaSpaceNewlines), 'The example text renders correctly after changing the separator');\n        await click((0, _dataElement.default)('templates-separator-save'));\n        const model = store.peekRecord('provider-preference', `${_session.default.get('providerGuid')}charting.Templates.ItemSeparator`);\n        assert.equal(model.get('value'), commaSpaceNewlines, 'The store\\'s model was updated with the correct value');\n    });\n\n    (0, _qunit.test)('Changing from predefined template separator to custom', async assert => {\n        server.get('PracticeEndpoint/api/v1/preferences/provider', {\n            preferences: {\n                'charting.Templates.ItemSeparator': COMMA_SPACE\n            }\n        });\n        server.post('PracticeEndpoint/api/v1/preferences/provider/:providerGuid', (schema, request) => {\n            const data = JSON.parse(request.requestBody);\n            const separator = data.preferences['charting.Templates.ItemSeparator'];\n            assert.equal(separator, CUSTOM_PUNCTUATION, 'The custom separator value was saved correctly');\n            return {};\n        });\n        await visit('PF/settings/templates/settings');\n        const $predefinedRadio = findWithAssert(`${(0, _dataElement.default)(PREDEFINED_ID)} input[type=\"radio\"]`);\n        const $noneRadio = findWithAssert(`${(0, _dataElement.default)(NONE_ID)} input[type=\"radio\"]`);\n        assert.ok($predefinedRadio[0].checked, 'The predefined radio button is checked');\n        assert.ok($noneRadio[0].checked, 'The no newlines radio button is checked');\n        assert.equal(find(`${(0, _dataElement.default)('templates-separator-predefined-dropdown')} .composable-select__choice`).text().trim(), 'Comma and space', 'The correct predefined dropdown item is selected');\n        assert.equal(find((0, _dataElement.default)('templates-separator-example')).text(), exampleText(COMMA_SPACE), 'The example text renders correctly');\n        click(`${(0, _dataElement.default)(CUSTOM_ID)} input[type=\"radio\"]`);\n        await fillIn(`${(0, _dataElement.default)(CUSTOM_ID)} input.ember-text-field`, CUSTOM_PUNCTUATION);\n        assert.equal(find((0, _dataElement.default)('templates-separator-example')).text(), exampleText(CUSTOM_PUNCTUATION), 'The example text renders correctly after changing the separator');\n        await click((0, _dataElement.default)('templates-separator-save'));\n        const model = store.peekRecord('provider-preference', `${_session.default.get('providerGuid')}charting.Templates.ItemSeparator`);\n        assert.equal(model.get('value'), CUSTOM_PUNCTUATION, 'The store\\'s model was updated with the correct value');\n    });\n\n    function clickProviderCheckBox(text) {\n        return click(`.practice-share-content .provider-row:contains('${text}') input`);\n    }\n\n    (0, _qunit.test)('Share templates with practice', async assert => {\n        const TEMPLATE_GUID_1 = 'ac2c62b4-387c-4f9f-b75d-ac24b503163b';\n        const TEMPLATE_GUID_2 = 'fcf723ee-a7c6-49d3-a548-ad822ac2ca31';\n        const PROVIDER_GUID_1 = 'bbdd6e15-2eac-4e0f-96b6-6583e3e15cd7';\n        const PROVIDER_GUID_2 = 'eaa90f53-9dfa-4c2a-93db-83f3b3243d5b';\n        const PROVIDER_GUID_3 = '5cb51be9-3688-4ae3-b67b-a7c72914488d';\n        const MODAL = '.practice-share .modal';\n        const SHARE_MODAL_BUTTON = '.practice-share .modal .btn--brand';\n        let postCallCount = 0;\n\n        server.post('ChartingEndpoint/api/v1/templates/practice', (schema, request) => {\n            const data = JSON.parse(request.requestBody);\n            postCallCount += 1;\n            if (postCallCount === 1) {\n                assert.equal(data.providerGuids.length, 2, 'The endpoint was called with the correct number of providerGuids');\n                assert.equal(data.templateGuids.length, 2, 'The endpoint was called with the correct number of templateGuids');\n                assert.ok(data.providerGuids.includes(PROVIDER_GUID_1), 'The endpoint was called with the correct providerGuids');\n                assert.ok(data.providerGuids.includes(PROVIDER_GUID_2), 'The endpoint was called with the correct providerGuids');\n                assert.ok(data.templateGuids.includes(TEMPLATE_GUID_1), 'The endpoint was called with the correct templateGuids');\n                assert.ok(data.templateGuids.includes(TEMPLATE_GUID_2), 'The endpoint was called with the correct templateGuids');\n            } else if (postCallCount === 2) {\n                assert.equal(data.templateGuids.length, 1, 'The endpoint was called with the correct number of templateGuids');\n                assert.equal(data.templateGuids[0], TEMPLATE_GUID_1, 'The endpoint was called with the correct templateGuid');\n                assert.equal(data.providerGuids.length, 5, 'The endpoint was called with the correct number of providerGuids');\n                assert.ok(data.providerGuids.includes(PROVIDER_GUID_1), 'The endpoint was called with the correct providerGuids');\n                assert.ok(data.providerGuids.includes(PROVIDER_GUID_2), 'The endpoint was called with the correct providerGuids');\n                assert.ok(data.providerGuids.includes(PROVIDER_GUID_3), 'The endpoint was called with the correct providerGuids');\n            } else {\n                assert.ok(false, 'The POST practice template endpoint was called too many times');\n            }\n            return true;\n        });\n\n        visit('PF/settings/templates/provider');\n        click(`.flex-table [data-id=\"${TEMPLATE_GUID_1}\"] input[type=\"checkbox\"]`);\n        click(`.flex-table [data-id=\"${TEMPLATE_GUID_2}\"] input[type=\"checkbox\"]`);\n        click('.composable-header__tool-bar .split-button__arrow-button--primary');\n        await click((0, _dataElement.default)('templates-share'));\n        assert.throws(findWithAssert(MODAL), 'The share with practice modal appears after clicking the button');\n        assert.notOk(find('.practice-share-content .provider-row:contains(\"Mad Hatter PhD\")').length, 'The share modal does not contain a checkbox for the current provider');\n        assert.ok(find(SHARE_MODAL_BUTTON).attr('disabled'), 'The share button is disabled when no providers are selected');\n        clickProviderCheckBox('new user MD');\n        clickProviderCheckBox('Provider Bob MD');\n        await click(SHARE_MODAL_BUTTON);\n        assert.equal(postCallCount, 1, 'The endpoint was called when the share button was clicked');\n        assert.notOk(find(MODAL).length, 'The modal was hidden after the share button was clicked');\n        await click(`.flex-table [data-id=\"${TEMPLATE_GUID_1}\"] ${(0, _dataElement.default)('template-name')}`);\n        click((0, _dataElement.default)('template-more-actions'));\n        click((0, _dataElement.default)('template-share'));\n        click((0, _dataElement.default)('templates-share-select-all'));\n        await click(SHARE_MODAL_BUTTON);\n        assert.equal(postCallCount, 2, 'The endpoint was called when the share button was clicked');\n        assert.notOk(find(MODAL).length, 'The modal was hidden after the share button was clicked');\n    });\n});","define('cute-cats-tanisha/templates/components/acceptance/templates-timeout-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-entitled', 'ember-cli-mirage', 'boot/tests/helpers/data-element'], function (_qunit, _moduleForAcceptanceEntitled, _emberCliMirage, _dataElement) {\n    'use strict';\n\n    (0, _moduleForAcceptanceEntitled.default)('Acceptance - Core - Charting | Templates timeout fallback', {\n        beforeEach() {\n            const providerTemplatesUrl = 'ChartingEndpoint/api/v1/templates/provider';\n            server.get(providerTemplatesUrl, () => new _emberCliMirage.default.Response(504, {}, null));\n            server.get(`${providerTemplatesUrl}/paged`, ({ db }) => ({\n                totalRecords: 504,\n                resultList: db.chartingTemplates\n            }));\n        }\n    });\n\n    const TEMPLATES_SETTINGS_URL = '/PF/settings/templates/provider';\n    const PAGINATED_URL = `${TEMPLATES_SETTINGS_URL}/paginated`;\n\n    (0, _qunit.test)('Navigating to templates settings redirects to fallback page', async assert => {\n        const templateRow = (0, _dataElement.default)('template-row-7836905b-9aeb-41ca-8138-dfc103d3b7ea');\n        let deleteCalled = false;\n        server.delete('ChartingEndpoint/api/v1/templates/:templateGuid', () => {\n            deleteCalled = true;\n            return new _emberCliMirage.default.Response(204, {}, null);\n        });\n        await visit(TEMPLATES_SETTINGS_URL);\n        assert.equal(currentURL(), PAGINATED_URL, 'Redirect occurred');\n        assert.dom((0, _dataElement.default)('create-template-button')).exists();\n        assert.dom('.option-ribbon .persistent-error').hasText('You have too many templates');\n        assert.dom(`${templateRow} .col-name`).hasText('Example Template');\n        assert.dom(`${templateRow} .col-created-by`).hasText('XiuLi supdude Shen');\n        await click(`${templateRow} .check-box input`);\n        await click('.option-ribbon .split-button__arrow-button--primary');\n        click('.option-ribbon .split-button__dropdown-menu li:contains(\"Delete\")');\n        await click('.carbon-content-modal-component .btn-primary');\n        assert.ok(deleteCalled, 'Delete endpoint was called');\n    });\n\n    (0, _qunit.test)('Timeout in encounter displays error', async assert => {\n        const errorMessage = '.template-search-flyout .results-error';\n        const patientPracticeGuid = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n        const transcriptGuid = 'UNSIGNED_TRANSCRIPT_GUID';\n        server.put(`/ChartingEndpoint/api/v3/patients/${patientPracticeGuid}/encounters/${transcriptGuid}`, ({ db }) => db.encounters.where({ transcriptGuid })[0]);\n        visit(`/PF/charts/patients/${patientPracticeGuid}/encounter/${transcriptGuid}`);\n        await click((0, _dataElement.default)('edit-note-subjective'));\n        assert.dom(errorMessage).containsText('You have too many templates');\n        await click(`${errorMessage} a`);\n        assert.equal(currentURL(), PAGINATED_URL, 'Clicking error message routed to fallback templates page');\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/allergies-v3-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element', 'ember-cli-mirage'], function (_qunit, _moduleForAcceptanceAuth, _dataElement, _emberCliMirage) {\n    'use strict';\n\n    const ENCOUNTER_GUID = '7022d94f-d70a-4722-a205-dac898cf9f69';\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const DRUG_ALLERGEN_SEARCH_TERM = 'amoxicillin';\n    const DRUG_ALLERGEN_TITLE = 'Amoxicillin';\n    const FOOD_ALLERGEN_SEARCH_TERM = 'peanut';\n    const FOOD_ALLERGEN_TITLE = 'Peanuts';\n    const FOOD_ALLERGEN_CUSTOM_SEARCH_TERM = 'Tomato paste';\n    const ENV_ALLERGEN_SEARCH_TERM = 'wool';\n    const ENV_ALLERGEN_TITLE = 'Wool';\n    const ALLERGY_ONSET_DATE = '05/01/2016';\n    const ALLERGY_ONSET_DATE_EDIT = '05/15/2016';\n    const ALLERGY_COMMENT_NEW = 'This is a newly created allergy';\n    const ALLERGY_COMMENT_EDIT = 'This is an updated allergy';\n    const DRUG_ALLERGY_ID = 'GUID1';\n    const FOOD_ALLERGY_ID = 'GUID2';\n    const ENV_ALLERGY_ID = 'GUID3';\n    const DRUG_ALLERGY_ITEM_SELECTOR = '.allergies-list-section.drug ul.list-selectable li';\n    const FOOD_ALLERGY_ITEM_SELECTOR = '.allergies-list-section.food ul.list-selectable li';\n    const ENV_ALLERGY_ITEM_SELECTOR = '.allergies-list-section.environmental ul.list-selectable li';\n\n    function validateListUpdate(assert, listSelector, initial, change) {\n        const successMessage = change > 0 ? 'Allergy was added to the correct list' : 'Allergy was removed from the list';\n\n        assert.equal(find(listSelector).length, initial + change, successMessage);\n        return initial + change;\n    }\n    function validateAllergyPost(assert, request, expectedTitle, id) {\n        const data = JSON.parse(request.requestBody);\n        const title = id === DRUG_ALLERGY_ID ? data.medication.name : data.substance.title;\n        assert.equal(title, expectedTitle, 'Allergy was added with the chosen allergen');\n        assert.equal(data.onsetDate, new Date(ALLERGY_ONSET_DATE).toISOString(), 'Allergy onset date is correct');\n        assert.equal(data.comments, ALLERGY_COMMENT_NEW, 'Allergy comment is correct');\n        data.patientAllergyGuid = id;\n        data.drugInteractionAlert = false;\n        return { patientAllergy: data };\n    }\n    function validateAllergyPut(assert, request, expectedId) {\n        const data = JSON.parse(request.requestBody);\n        assert.equal(data.patientAllergyGuid, expectedId, 'Selected allergy is updated');\n        assert.equal(data.onsetDate, new Date(ALLERGY_ONSET_DATE_EDIT).toISOString(), 'Allergy onset date is correct');\n        assert.equal(data.comments, ALLERGY_COMMENT_EDIT, 'Allergy comment is correctly updated');\n        data.patientAllergyGuid = expectedId;\n        data.drugInteractionAlert = false;\n        return new _emberCliMirage.default.Response(204, null);\n    }\n    function validateAllergyDelete(assert, request, expectedId) {\n        assert.equal(request.params.id, expectedId, 'The correct allergy is deleted');\n    }\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Clinical | Encounter allergies v3');\n\n    (0, _qunit.test)('Empty allergies section renders properly', async assert => {\n        server.get('ClinicalEndpoint/api/v3/patients/:patientPracticeGuid/allergies', () => ({ noKnownAllergies: false, patientAllergies: [] }));\n\n        await visit(`/PF/charts/patients/${PATIENT_GUID}/encounter/${ENCOUNTER_GUID}`);\n        assert.ok(find('.allergies-list-section.drug .pf-input--checkbox-label').text().toLowerCase().indexOf('no known drug allergies') > -1, 'Empty drug allergy section renders properly');\n        assert.ok(find('.allergies-list-section.food').text().toLowerCase().indexOf('no food allergies recorded') > -1, 'Empty food allergy section renders properly');\n        assert.ok(find('.allergies-list-section.environmental').text().toLowerCase().indexOf('no environmental allergies recorded') > -1, 'Empty environmental allergy section renders properly');\n    });\n\n    (0, _qunit.test)('Can add, update and remove drug allergies', async assert => {\n        assert.expect(16);\n        server.post('ClinicalEndpoint/api/v3/patients/:patientPracticeGuid/allergies', ({ db }, request) => validateAllergyPost(assert, request, DRUG_ALLERGEN_TITLE, DRUG_ALLERGY_ID));\n        server.put('ClinicalEndpoint/api/v3/patients/:patientPracticeGuid/allergies/:id', ({ db }, request) => validateAllergyPut(assert, request, DRUG_ALLERGY_ID));\n        server.del('ClinicalEndpoint/api/v3/patients/:patientPracticeGuid/allergies/:id', ({ db }, request) => validateAllergyDelete(assert, request, DRUG_ALLERGY_ID));\n\n        await visit(`/PF/charts/patients/${PATIENT_GUID}/encounter/${ENCOUNTER_GUID}`);\n        let startingAllergyCount = find(DRUG_ALLERGY_ITEM_SELECTOR).length;\n        assert.equal(find('.encounter-allergies-container').length, 1, 'Allergies section is rendered on the page');\n\n        // Add a new allergy\n        await click('.encounter-allergies-container .heading .btn.heading-action:first');\n        assert.ok(find('.allergy-details:visible').length, 'Allergy detail panel appears when recording new allergy');\n        assert.ok(find('.allergy-details .right-module-top .header15').text().indexOf('Record allergy') > -1, 'Allergy detail panel shows the recording new allergy header');\n        click('.allergy-details .ember-button-group .group-option:first button');\n        fillIn(`.allergy-details ${(0, _dataElement.default)('drug-allergen-search')} input`, DRUG_ALLERGEN_SEARCH_TERM);\n        await keyEvent(`.allergy-details ${(0, _dataElement.default)('drug-allergen-search')} input`, 'keydown', 13);\n        await wait();\n        assert.ok(find(`.allergy-details ${(0, _dataElement.default)('drug-allergen-search')} .ember-select-result-item:last`).text().indexOf(DRUG_ALLERGEN_TITLE) > -1, 'Drug allergen search shows expected results');\n        click(`.allergy-details ${(0, _dataElement.default)('drug-allergen-search')} .ember-select-result-item:last`);\n        fillIn('.allergy-details .onset-section .ember-text-field input', ALLERGY_ONSET_DATE);\n        fillIn(`.allergy-details ${(0, _dataElement.default)('text-area')}`, ALLERGY_COMMENT_NEW);\n        click('.allergy-details .ember-button-group .group-option.yellow:first button');\n        await click('.allergy-details .pull-right .btn:first');\n        // Save is validated by Mirage - check that new allergy shows up in list\n        startingAllergyCount = validateListUpdate(assert, DRUG_ALLERGY_ITEM_SELECTOR, startingAllergyCount, 1);\n\n        // Edit the allergy\n        await click(`${DRUG_ALLERGY_ITEM_SELECTOR} [data-guid='${DRUG_ALLERGY_ID.toString()}']`);\n        assert.ok(find('.allergy-details:visible').length, 'Allergy detail panel appears when editing allergy');\n        assert.ok(find('.allergy-details .right-module-top .header15').text().indexOf('Review drug allergy') > -1, 'Allergy detail panel shows the editing header');\n        fillIn('.allergy-details .onset-section .ember-text-field input', ALLERGY_ONSET_DATE_EDIT);\n        fillIn(`.allergy-details ${(0, _dataElement.default)('text-area')}`, ALLERGY_COMMENT_EDIT);\n        await click('.allergy-details .pull-right > .btn-primary:last');\n        // Save is validated by Mirage\n        // Delete the allergy\n        await click(`${DRUG_ALLERGY_ITEM_SELECTOR} [data-guid='${DRUG_ALLERGY_ID.toString()}']`);\n        await click(`.allergy-details ${(0, _dataElement.default)('btn-delete')}`);\n        assert.ok(find('.allergy-details .confirm-dialog-content:visible').length, 'User must confirm to delete the allergy');\n        await click(`.allergy-details .confirm-dialog-content ${(0, _dataElement.default)('confirm-dialog-confirm')}`);\n        // Delete validated by Mirage\n        startingAllergyCount = validateListUpdate(assert, DRUG_ALLERGY_ITEM_SELECTOR, startingAllergyCount, -1);\n    });\n\n    (0, _qunit.test)('Can add, update and remove food allergies', async assert => {\n        assert.expect(16);\n\n        server.post('ClinicalEndpoint/api/v3/patients/:patientPracticeGuid/allergies', ({ db }, request) => validateAllergyPost(assert, request, FOOD_ALLERGEN_TITLE, FOOD_ALLERGY_ID));\n        server.put('ClinicalEndpoint/api/v3/patients/:patientPracticeGuid/allergies/:id', ({ db }, request) => validateAllergyPut(assert, request, FOOD_ALLERGY_ID));\n        server.del('ClinicalEndpoint/api/v3/patients/:patientPracticeGuid/allergies/:id', ({ db }, request) => validateAllergyDelete(assert, request, FOOD_ALLERGY_ID));\n\n        await visit(`/PF/charts/patients/${PATIENT_GUID}/encounter/${ENCOUNTER_GUID}`);\n        let startingAllergyCount = find(FOOD_ALLERGY_ITEM_SELECTOR).length;\n        assert.equal(find('.encounter-allergies-container').length, 1, 'Allergies section is rendered on the page');\n\n        // Add a new allergy\n        await click('.encounter-allergies-container .heading .btn.heading-action:first');\n        assert.ok(find('.allergy-details:visible').length, 'Allergy detail panel appears when recording new allergy');\n        assert.ok(find('.allergy-details .right-module-top .header15').text().indexOf('Record allergy') > -1, 'Allergy detail panel shows the recording new allergy header');\n        await click('.allergy-details .ember-button-group .group-option:nth(1) button');\n        fillIn(`.allergy-details ${(0, _dataElement.default)('other-allergen-search')} input`, FOOD_ALLERGEN_SEARCH_TERM);\n        await click(`.allergy-details ${(0, _dataElement.default)('other-allergen-search')} input`);\n        assert.ok(find(`.allergy-details ${(0, _dataElement.default)('other-allergen-search')} .ember-select-result-item:first`).text().indexOf(FOOD_ALLERGEN_TITLE) > -1, 'Food allergen search shows expected results');\n        click(`.allergy-details ${(0, _dataElement.default)('other-allergen-search')} .ember-select-result-item:first`);\n        fillIn('.allergy-details .onset-section .ember-text-field input', ALLERGY_ONSET_DATE);\n        fillIn(`.allergy-details ${(0, _dataElement.default)('text-area')}`, ALLERGY_COMMENT_NEW);\n        click('.allergy-details .ember-button-group .group-option.yellow:first button');\n        await click('.allergy-details .pull-right .btn:first');\n        // Save is validated by Mirage - check that new allergy shows up in list\n        startingAllergyCount = validateListUpdate(assert, FOOD_ALLERGY_ITEM_SELECTOR, startingAllergyCount, 1);\n\n        // Edit the allergy\n        await click(`${FOOD_ALLERGY_ITEM_SELECTOR} [data-guid='${FOOD_ALLERGY_ID.toString()}']`);\n        assert.ok(find('.allergy-details:visible').length, 'Allergy detail panel appears when editing allergy');\n        assert.ok(find('.allergy-details .right-module-top .header15').text().indexOf('Review food allergy') > -1, 'Allergy detail panel shows the editing header');\n        fillIn('.allergy-details .onset-section .ember-text-field input', ALLERGY_ONSET_DATE_EDIT);\n        fillIn(`.allergy-details ${(0, _dataElement.default)('text-area')}`, ALLERGY_COMMENT_EDIT);\n        await click('.allergy-details .pull-right > .btn-primary:last');\n        // Save is validated by Mirage\n        // Delete the allergy\n        await click(`${FOOD_ALLERGY_ITEM_SELECTOR} [data-guid='${FOOD_ALLERGY_ID.toString()}']`);\n        await click(`.allergy-details ${(0, _dataElement.default)('btn-delete')}`);\n        assert.ok(find('.allergy-details .confirm-dialog-content:visible').length, 'User must confirm to delete the allergy');\n        await click(`.allergy-details .confirm-dialog-content ${(0, _dataElement.default)('confirm-dialog-confirm')}`);\n        // Delete validated by Mirage\n        startingAllergyCount = validateListUpdate(assert, FOOD_ALLERGY_ITEM_SELECTOR, startingAllergyCount, -1);\n    });\n\n    (0, _qunit.test)('Can add, update and remove environmental allergies', async assert => {\n        assert.expect(16);\n\n        server.post('ClinicalEndpoint/api/v3/patients/:patientPracticeGuid/allergies', ({ db }, request) => validateAllergyPost(assert, request, ENV_ALLERGEN_TITLE, ENV_ALLERGY_ID));\n        server.put('ClinicalEndpoint/api/v3/patients/:patientPracticeGuid/allergies/:id', ({ db }, request) => validateAllergyPut(assert, request, ENV_ALLERGY_ID));\n        server.del('ClinicalEndpoint/api/v3/patients/:patientPracticeGuid/allergies/:id', ({ db }, request) => validateAllergyDelete(assert, request, ENV_ALLERGY_ID));\n\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/encounter/' + ENCOUNTER_GUID);\n        let startingAllergyCount = find(ENV_ALLERGY_ITEM_SELECTOR).length;\n        assert.equal(find('.encounter-allergies-container').length, 1, 'Allergies section is rendered on the page');\n\n        // Add a new allergy\n        await click('.encounter-allergies-container .heading .btn.heading-action:first');\n        assert.ok(find('.allergy-details:visible').length, 'Allergy detail panel appears when recording new allergy');\n        assert.ok(find('.allergy-details .right-module-top .header15').text().indexOf('Record allergy') > -1, 'Allergy detail panel shows the recording new allergy header');\n        await click('.allergy-details .ember-button-group .group-option:nth(2) button');\n        fillIn(`.allergy-details ${(0, _dataElement.default)('other-allergen-search')} input`, ENV_ALLERGEN_SEARCH_TERM);\n        await click(`.allergy-details ${(0, _dataElement.default)('other-allergen-search')} input`);\n        assert.ok(find(`.allergy-details ${(0, _dataElement.default)('other-allergen-search')} .ember-select-result-item:first`).text().indexOf(ENV_ALLERGEN_TITLE) > -1, 'Environmental allergen search shows expected results');\n        click(`.allergy-details ${(0, _dataElement.default)('other-allergen-search')} .ember-select-result-item:first`);\n        fillIn('.allergy-details .onset-section .ember-text-field input', ALLERGY_ONSET_DATE);\n        fillIn(`.allergy-details ${(0, _dataElement.default)('text-area')}`, ALLERGY_COMMENT_NEW);\n        click('.allergy-details .ember-button-group .group-option.yellow:first button');\n        await click('.allergy-details .pull-right .btn:first');\n        // Save is validated by Mirage - check that new allergy shows up in list\n        startingAllergyCount = validateListUpdate(assert, ENV_ALLERGY_ITEM_SELECTOR, startingAllergyCount, 1);\n\n        // Edit the allergy\n        await click(`${ENV_ALLERGY_ITEM_SELECTOR} [data-guid='${ENV_ALLERGY_ID.toString()}']`);\n        assert.ok(find('.allergy-details:visible').length, 'Allergy detail panel appears when editing allergy');\n        assert.ok(find('.allergy-details .right-module-top .header15').text().indexOf('Review environmental allergy') > -1, 'Allergy detail panel shows the editing header');\n        fillIn('.allergy-details .onset-section .ember-text-field input', ALLERGY_ONSET_DATE_EDIT);\n        fillIn(`.allergy-details ${(0, _dataElement.default)('text-area')}`, ALLERGY_COMMENT_EDIT);\n        await click('.allergy-details .pull-right > .btn-primary:last');\n        // Save is validated by Mirage\n        // Delete the allergy\n        await click(`${ENV_ALLERGY_ITEM_SELECTOR} [data-guid='${ENV_ALLERGY_ID.toString()}']`);\n        await click(`.allergy-details ${(0, _dataElement.default)('btn-delete')}`);\n        assert.ok(find('.allergy-details .confirm-dialog-content:visible').length, 'User must confirm to delete the allergy');\n        await click(`.allergy-details .confirm-dialog-content ${(0, _dataElement.default)('confirm-dialog-confirm')}`);\n        // Delete validated by Mirage\n        startingAllergyCount = validateListUpdate(assert, ENV_ALLERGY_ITEM_SELECTOR, startingAllergyCount, -1);\n    });\n\n    (0, _qunit.test)('Can add custom food allergies', async assert => {\n        assert.expect(10);\n\n        server.post('ClinicalEndpoint/api/v3/patients/:patientPracticeGuid/allergies', ({ db }, request) => validateAllergyPost(assert, request, FOOD_ALLERGEN_CUSTOM_SEARCH_TERM, FOOD_ALLERGY_ID));\n\n        await visit(`/PF/charts/patients/${PATIENT_GUID}/encounter/${ENCOUNTER_GUID}`);\n        let startingAllergyCount = find(FOOD_ALLERGY_ITEM_SELECTOR).length;\n        assert.equal(find('.encounter-allergies-container').length, 1, 'Allergies section is rendered on the page');\n\n        // Add a new allergy\n        await click('.encounter-allergies-container .heading .btn.heading-action:first');\n        assert.ok(find('.allergy-details:visible').length, 'Allergy detail panel appears when recording new allergy');\n        assert.ok(find('.allergy-details .right-module-top .header15').text().indexOf('Record allergy') > -1, 'Allergy detail panel shows the recording new allergy header');\n        await click('.allergy-details .ember-button-group .group-option:nth(1) button');\n        fillIn(`.allergy-details ${(0, _dataElement.default)('other-allergen-search')} input`, FOOD_ALLERGEN_TITLE);\n        assert.ok(find(`.allergy-details ${(0, _dataElement.default)('other-allergen-search')} .ember-select-result-item:first`));\n        await click(`.allergy-details ${(0, _dataElement.default)('other-allergen-search')} input`);\n        assert.equal(find('.allergy-details .no-custom-results').length, 1, 'Add custom link is not clickable');\n        await fillIn(`.allergy-details ${(0, _dataElement.default)('other-allergen-search')} input`, FOOD_ALLERGEN_CUSTOM_SEARCH_TERM);\n        assert.equal(find('.allergy-details .no-custom-results').length, 0, 'Add custom link is clickable');\n        await click(`.allergy-details ${(0, _dataElement.default)('other-allergen-search')} .ember-select-add-item`);\n        fillIn('.allergy-details .onset-section .ember-text-field input', ALLERGY_ONSET_DATE);\n        fillIn(`.allergy-details ${(0, _dataElement.default)('text-area')}`, ALLERGY_COMMENT_NEW);\n        click('.allergy-details .ember-button-group .group-option.yellow:first button');\n        await click('.allergy-details .pull-right .btn:first');\n        // Save is validated by Mirage - check that new allergy shows up in list\n        startingAllergyCount = validateListUpdate(assert, FOOD_ALLERGY_ITEM_SELECTOR, startingAllergyCount, 1);\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/assessment-modal-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element', 'boot/tests/helpers/get-text', 'sinon'], function (_qunit, _moduleForAcceptanceAuth, _dataElement, _getText, _sinon) {\n    'use strict';\n\n    let toastrSuccessStub;\n    const SEARCH_INPUT = `${(0, _dataElement.default)('medications-search')} input`;\n    const ASSESSMENT_MODAL = '.assessment-modal-control';\n    const ASSESSMENT_SAVE_BUTTON = (0, _dataElement.default)('save-prolia-modal');\n    const ASSESSMENT_CANCEL_BUTTON = '.assessment-modal-control .pull-left button:first';\n    const COMPLETE_TOAST = 'assessment-complete-message';\n    const INCOMPLETE_TOAST = '.assessment-incomplete-message';\n    const PROLIA_PERMANENT_PLACE_LINK = (0, _dataElement.default)('prolia-permanent-link');\n    const SEARCH_RESULT_PROLIA = [{\n        ndc: '55513071001',\n        tradeName: 'Prolia',\n        drugName: 'Prolia 60 MG/ML Subcutaneous Solution',\n        genericName: 'Denosumab',\n        productStrength: '60 MG/ML',\n        route: 'Subcutaneous',\n        doseForm: 'Solution',\n        isGeneric: false,\n        isOverTheCounter: false,\n        controlledSubstanceSchedule: '',\n        isMedicalSupply: false,\n        isObsolete: false,\n        rxNormCui: '993458',\n        searchScore: 10.932226,\n        strengthScore: 60.0,\n        marketEndDate: '9999-12-31T16:00:00Z'\n    }];\n    const PATIENT_GUID = 'c5faffde-78e2-4924-acaf-2115bc686d5e';\n    const MED_GUID = 'myMedicationGuid';\n    const WORKSHEET_GUID = 'myWorksheetGuid';\n    const SOURCE_MEDICATION_FORM = 'Medication Form';\n    const PROLIA_ADVERSE_EFFECT_SELECTOR = '.prolia-with-description:first-child > input';\n    const CUSTOM_PATIENT_AGGREGATE = {\n        id: 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98',\n        diagnoses: {\n            patientDiagnoses: [{\n                diagnosisGuid: 'd3c5451b-ccb5-4770-b98e-054750b369a5',\n                patientPracticeGuid: 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98',\n                name: 'Diabetes mellitus without mention of complication, type II or unspecified type, not stated as uncontrolled',\n                code: '',\n                isAcute: false,\n                isTerminal: false,\n                startDate: '2014-10-05T07:00:00Z',\n                stopDate: '2014-10-06T07:00:00Z',\n                diagnosisCodes: [],\n                isActive: true,\n                transcriptDiagnoses: [{\n                    transcriptGuid: '980e0fb7-1e36-432a-ac8a-9969f38aad92',\n                    comment: '',\n                    isActive: true,\n                    lastModifiedByProviderGuid: '00000000-0000-0000-0000-000000000000',\n                    lastModifiedAt: '2014-12-16T16:46:31.227Z',\n                    sortOrder: -10\n                }, {\n                    transcriptGuid: '8c7c7202-f2be-45a0-a528-68eef6722d60',\n                    comment: '',\n                    isActive: true,\n                    lastModifiedByProviderGuid: '00000000-0000-0000-0000-000000000000',\n                    lastModifiedAt: '2014-10-29T18:36:02.347Z',\n                    sortOrder: 4\n                }]\n            }],\n            noKnownDiagnoses: false\n        },\n        medications: {\n            patientMedications: [{\n                medicationGuid: 'd548134c-278f-4b68-840b-06793b4ea2b8',\n                patientPracticeGuid: 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98',\n                tradeName: 'Prolia',\n                genericName: 'Denosumab',\n                rxNormCui: '993458',\n                ndc: '55513071001',\n                controlledSubstanceSchedule: '',\n                sig: {\n                    dose: null,\n                    route: 'Subcutaneous',\n                    frequency: null,\n                    duration: null,\n                    professionalDescription: '',\n                    patientDescription: '',\n                    searchTerm: null\n                },\n                doseForm: 'Solution',\n                route: 'Subcutaneous',\n                productStrength: '60 MG/ML',\n                startDateTime: '2017-07-04T07:00:00Z',\n                medicationDiscontinuedReason: {\n                    id: 0,\n                    description: null\n                },\n                transcriptMedications: [{\n                    transcriptGuid: null,\n                    transcriptDateOfService: null,\n                    comment: null,\n                    lastModifiedDateTimeUtc: '2017-07-30T23:22:38.703Z',\n                    lastModifiedProviderGuid: '85821ab8-ac27-4eca-a7bd-bc4c0b6cc980',\n                    providerFirstName: 'Mad',\n                    providerLastName: 'Hatter',\n                    providerMiddleName: null,\n                    providerSuffix: 'PhD',\n                    providerTitle: 'Dr'\n                }, {\n                    transcriptGuid: '1e2c5401-6ff2-4e9f-9cfa-49a1779c5f0d',\n                    transcriptDateOfService: null,\n                    comment: null,\n                    lastModifiedDateTimeUtc: '2017-07-30T23:22:38.703Z',\n                    lastModifiedProviderGuid: '85821ab8-ac27-4eca-a7bd-bc4c0b6cc980',\n                    providerFirstName: 'Mad',\n                    providerLastName: 'Hatter',\n                    providerMiddleName: null,\n                    providerSuffix: 'PhD',\n                    providerTitle: 'Dr'\n                }],\n                lastModifiedDateTimeUtc: '2017-07-30T23:22:38.703Z',\n                drugName: 'Prolia 60 MG/ML Subcutaneous Solution',\n                prescriptions: [],\n                isGeneric: false,\n                isMedicalSupply: false\n            }],\n            noKnownMedications: false\n        }\n    };\n\n    function medicationPost(request) {\n        request.medicationGuid = MED_GUID;\n        request.lastModifiedDateTimeUtc = moment().toISOString();\n        return request;\n    }\n    function worksheetPost(assert, request, expected) {\n        if (request.assessmentToken.name === expected.tokenName) {\n            assert.equal(request.status, expected.status, 'The modal is saved with the correct status');\n            assert.equal(request.patientPracticeGuid, expected.patientPracticeGuid, 'The modal is saved with the correct patient practice guid');\n            assert.equal(request.medicationGuid, expected.medicationGuid, 'The modal is saved with the correct medication guid');\n            assert.equal(request.source, expected.source, 'The modal is saved with the correct source');\n            request.worksheetInstanceGuid = WORKSHEET_GUID;\n            expected.responses.forEach(response => {\n                const sent = $.grep(request.responses, item => {\n                    return item.questionToken === response.questionToken && JSON.stringify(item.answerToken) === JSON.stringify(response.answerToken);\n                });\n                assert.equal(sent.length, 1, `The property ${response.questionToken} is saved with the correct value of ${JSON.stringify(response.answerToken)}`);\n            });\n        }\n        return request;\n    }\n    function validateCompletionMessage(assert, expectCompleted) {\n        if (expectCompleted) {\n            assert.equal(toastrSuccessStub.args[1][2]['toastClass'], COMPLETE_TOAST, 'The completion toast message displayed correctly');\n        } else {\n            assert.ok(find(INCOMPLETE_TOAST).length >= 1, 'The incomplete dialog displayed correctly');\n            click(`${INCOMPLETE_TOAST} .btn-primary`);\n        }\n    }\n    function findDropdownItem(dropdownElement, textValue) {\n        return `${dropdownElement} .dropdown-menu li:contains(\"${textValue}\")`;\n    }\n\n    async function addProliaFromSummary() {\n        await visit(`/PF/charts/patients/${PATIENT_GUID}/summary`);\n        click((0, _dataElement.default)('record-medication'));\n        click(SEARCH_INPUT);\n        await fillIn(SEARCH_INPUT, 'prolia');\n        await wait();\n        return click((0, _dataElement.default)('medications-search-0'));\n    }\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Clinical | Assessment modal - v2', {\n        beforeEach() {\n            toastrSuccessStub = _sinon.default.stub(window.toastr, 'success');\n        },\n        afterEach() {\n            window.toastr.success.restore();\n        }\n    });\n\n    (0, _qunit.test)('Prolia modal works from dismissed medication card and no events', async assert => {\n        const expectedSettings = {\n            tokenName: 'proliaAesiModal',\n            status: 'Completed',\n            source: SOURCE_MEDICATION_FORM,\n            defaultHistory: 'Select patient\\'s Prolia history...',\n            responses: [{ answerToken: ['PreviousHistory'], questionToken: 'proliaMedicationHistory' }, { answerToken: ['no'], questionToken: 'proliaAnyAesi' }],\n            patientPracticeGuid: PATIENT_GUID,\n            medicationGuid: MED_GUID\n        };\n        const proliaHistorySelect = (0, _dataElement.default)('prolia-assessment-modal-history');\n        const proliaHistorySelectButton = `${proliaHistorySelect} .ember-select-choice`;\n\n        server.get('ClinicalEndpoint/api/v2/Drugs/Search', () => SEARCH_RESULT_PROLIA);\n        server.post('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/medications', ({ db }, request) => medicationPost(JSON.parse(request.requestBody)));\n        server.post('ClinicalEndpoint/api/v1/Worksheet', ({ db }, request) => worksheetPost(assert, JSON.parse(request.requestBody), expectedSettings));\n\n        assert.expect(15);\n        await addProliaFromSummary();\n        await click((0, _dataElement.default)('prolia-assessment-card-dismiss'));\n        await click('.detail-pane-footer .btn-primary');\n        assert.equal(find(ASSESSMENT_MODAL).length, 1, 'The assessment modal is shown');\n        assert.equal(find(`${ASSESSMENT_MODAL} ${proliaHistorySelectButton} span`).text(), expectedSettings.defaultHistory, 'The medication history is defaulted correctly');\n        await click(ASSESSMENT_SAVE_BUTTON);\n        // Expect validation to stop the save if not medication history is selected\n        assert.equal(find('.prolia-history-section .tooltip:visible').length, 1, 'Validation prevented saving without medication history');\n\n        click(proliaHistorySelectButton);\n        await click(findDropdownItem(proliaHistorySelect, 'Past and/or current medication'));\n        assert.equal(find(`${ASSESSMENT_MODAL} .pf-input--radio`).length, 2, 'Radio buttons are shown when history is past or current');\n        assert.ok(find(`${ASSESSMENT_MODAL} .pf-input--checkbox`).length > 0, 'Adverse Event choices are shown when history is past or current');\n\n        click(`${ASSESSMENT_MODAL} .pf-input--radio:last`);\n        await click(ASSESSMENT_SAVE_BUTTON);\n        // Expect validation to stop the save if events are expected but not selected\n        assert.equal(find('.validation-adverse-events').length, 1, 'Validation prevented saving event selection without events');\n\n        // Clicking on a checkbox should change the radio button selection\n        click(`${ASSESSMENT_MODAL} .pf-input--radio:first`);\n        await click(`${ASSESSMENT_MODAL} .pf-input--checkbox:first`);\n        assert.equal(find(`${ASSESSMENT_MODAL} #adverse:checked`).length, 1, 'Adverse event radio button is selected when event is added');\n\n        await click(`${ASSESSMENT_MODAL} .pf-input--radio:first`);\n        assert.equal(find(`${ASSESSMENT_MODAL} .pf-input--checkbox:checked`).length, 0, 'Adverse event checkboxes are cleared when radio changes to no events');\n\n        await click(ASSESSMENT_SAVE_BUTTON);\n        validateCompletionMessage(assert, true);\n    });\n\n    (0, _qunit.test)('Prolia modal works from medication card with past/current history', async assert => {\n        const expectedSettings = {\n            tokenName: 'proliaAesiModal',\n            status: 'Completed',\n            source: SOURCE_MEDICATION_FORM,\n            defaultHistory: 'Past and/or current medication',\n            responses: [{ answerToken: ['PreviousHistory'], questionToken: 'proliaMedicationHistory' }, { answerToken: ['yes'], questionToken: 'proliaAnyAesi' }, { answerToken: ['yes'], questionToken: 'proliaAesiHypocalcemia' }, { answerToken: ['yes'], questionToken: 'proliaAesiDermatologicReactions' }, { answerToken: ['no'], questionToken: 'proliaLinkClicked' }],\n            patientPracticeGuid: PATIENT_GUID,\n            medicationGuid: MED_GUID\n        };\n        const proliaCardSelect = (0, _dataElement.default)('prolia-assessment-card-history');\n        const proliaCardSelectButton = `${proliaCardSelect} .ember-select-choice`;\n\n        server.get('ClinicalEndpoint/api/v2/Drugs/Search', () => SEARCH_RESULT_PROLIA);\n        server.post('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/medications', ({ db }, request) => medicationPost(JSON.parse(request.requestBody)));\n        server.post('ClinicalEndpoint/api/v1/Worksheet', ({ db }, request) => worksheetPost(assert, JSON.parse(request.requestBody), expectedSettings));\n\n        assert.expect(16);\n        await addProliaFromSummary();\n        click(proliaCardSelectButton);\n        await click(findDropdownItem(proliaCardSelect, 'Past and/or current medication'));\n        await click('.detail-pane-footer .btn-primary');\n        assert.equal(find(ASSESSMENT_MODAL).length, 1, 'The assessment modal is shown');\n        assert.ok(find(`${ASSESSMENT_MODAL} ${(0, _dataElement.default)('prolia-assessment-modal-history')} .ember-select-choice span`).text().indexOf(expectedSettings.defaultHistory) > -1, 'The medication history is defaulted correctly');\n        assert.equal(find(`${ASSESSMENT_MODAL} .pf-input--radio`).length, 2, 'Radio buttons are shown by default');\n        assert.ok(find(`${ASSESSMENT_MODAL} .pf-input--checkbox`).length > 0, 'Adverse Event choices are shown by default');\n\n        click(`${ASSESSMENT_MODAL} .pf-input--radio:last`);\n        await click(ASSESSMENT_SAVE_BUTTON);\n        // Expect validation to stop the save if events are expected but not selected\n        assert.equal(find('.validation-adverse-events:visible').length, 1, 'Validation prevented saving event selection without events');\n        await click(`${ASSESSMENT_MODAL} .pf-input--radio:first`);\n        await click(`${ASSESSMENT_MODAL} .pf-input--checkbox:first`);\n        assert.equal(find(`${ASSESSMENT_MODAL} #adverse:checked`).length, 1, 'Adverse event radio button is selected when event is added');\n        click(`${ASSESSMENT_MODAL} .pf-input--checkbox:last`);\n        await click(ASSESSMENT_SAVE_BUTTON);\n        validateCompletionMessage(assert, false);\n    });\n\n    (0, _qunit.test)('Prolia modal from medication card saves reporting link clicked state', async assert => {\n        const expectedSettings = {\n            tokenName: 'proliaAesiModal',\n            status: 'Completed',\n            source: SOURCE_MEDICATION_FORM,\n            defaultHistory: 'Past and/or current medication',\n            responses: [{ answerToken: ['PreviousHistory'], questionToken: 'proliaMedicationHistory' }, { answerToken: ['yes'], questionToken: 'proliaAnyAesi' }, { answerToken: ['yes'], questionToken: 'proliaAesiHypocalcemia' }, { answerToken: ['yes'], questionToken: 'proliaLinkClicked' }],\n            patientPracticeGuid: PATIENT_GUID,\n            medicationGuid: MED_GUID\n        };\n        const proliaCardSelect = (0, _dataElement.default)('prolia-assessment-card-history');\n        const proliaCardSelectButton = `${proliaCardSelect} .ember-select-choice`;\n        const proliaReportingLink = (0, _dataElement.default)('prolia-reporting-link');\n\n        server.get('ClinicalEndpoint/api/v2/Drugs/Search', () => SEARCH_RESULT_PROLIA);\n        server.post('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/medications', ({ db }, request) => medicationPost(JSON.parse(request.requestBody)));\n        server.post('ClinicalEndpoint/api/v1/Worksheet', ({ db }, request) => worksheetPost(assert, JSON.parse(request.requestBody), expectedSettings));\n\n        assert.expect(13);\n        await addProliaFromSummary();\n        click(proliaCardSelectButton);\n        await click(findDropdownItem(proliaCardSelect, 'Past and/or current medication'));\n        await click('.detail-pane-footer .btn-primary');\n        assert.equal(find(ASSESSMENT_MODAL).length, 1, 'The assessment modal is shown');\n        assert.ok(find(`${ASSESSMENT_MODAL} ${(0, _dataElement.default)('prolia-assessment-modal-history')} .ember-select-choice span`).text().indexOf(expectedSettings.defaultHistory) > -1, 'The medication history is defaulted correctly');\n        assert.equal(find(`${ASSESSMENT_MODAL} .pf-input--radio`).length, 2, 'Radio buttons are shown by default');\n        assert.ok(find(`${ASSESSMENT_MODAL} .pf-input--checkbox`).length > 0, 'Adverse Event choices are shown by default');\n\n        await click(`${ASSESSMENT_MODAL} .pf-input--checkbox:first`);\n        await click(proliaReportingLink);\n        await click(ASSESSMENT_SAVE_BUTTON);\n        validateCompletionMessage(assert, true);\n    });\n\n    (0, _qunit.test)('Prolia modal from medication card saves when dismissed', async assert => {\n        const expectedSettings = {\n            tokenName: 'proliaAesiModal',\n            status: 'Dismissed',\n            source: SOURCE_MEDICATION_FORM,\n            defaultHistory: 'Past and/or current medication',\n            responses: [{ answerToken: ['HistoryNotAsked'], questionToken: 'proliaMedicationHistory' }],\n            patientPracticeGuid: PATIENT_GUID,\n            medicationGuid: MED_GUID\n        };\n        const proliaHistorySelect = (0, _dataElement.default)('prolia-assessment-modal-history');\n        const proliaHistorySelectButton = `${proliaHistorySelect} .ember-select-choice`;\n\n        server.get('ClinicalEndpoint/api/v2/Drugs/Search', () => SEARCH_RESULT_PROLIA);\n        server.post('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/medications', ({ db }, request) => medicationPost(JSON.parse(request.requestBody)));\n        server.post('ClinicalEndpoint/api/v1/Worksheet', ({ db }, request) => worksheetPost(assert, JSON.parse(request.requestBody), expectedSettings));\n\n        assert.expect(8);\n        await addProliaFromSummary();\n        await click((0, _dataElement.default)('prolia-assessment-card-dismiss'));\n        await click('.detail-pane-footer .btn-primary');\n        assert.equal(find(ASSESSMENT_MODAL).length, 1, 'The assessment modal is shown');\n        click(proliaHistorySelectButton);\n        await click(findDropdownItem(proliaHistorySelect, 'Provider declined to ask'));\n        assert.equal(find(`${ASSESSMENT_MODAL} .adverse-options`).length, 0, 'Adverse events are hidden when declined to ask');\n        assert.ok(find(`${ASSESSMENT_MODAL} ${(0, _dataElement.default)('prolia-assessment-card-status')}`).length > 0, 'Correct status message is displayed');\n\n        click(ASSESSMENT_CANCEL_BUTTON);\n    });\n\n    (0, _qunit.test)('Prolia modal from CDS alert saves correctly', async assert => {\n        const patientPracticeGuid = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n        const transcriptGuid = '7022d94f-d70a-4722-a205-dac898cf9f69';\n        const alertText = 'Patient Safety: Monitor and record adverse events of special interest that may be experienced in patients receiving Prolia.';\n        const expectedSettings = {\n            tokenName: 'proliaAesiModal',\n            status: 'Completed',\n            source: 'CDS Alert',\n            defaultHistory: 'Past and/or current medication',\n            responses: [{ answerToken: ['PreviousHistory'], questionToken: 'proliaMedicationHistory' }, { answerToken: ['no'], questionToken: 'proliaAnyAesi' }],\n            patientPracticeGuid\n        };\n        let worksheetPostCalled = false;\n\n        server.get('AlertEndpoint/api/v1/CdsAlerts/:patientPracticeGuid/:transcriptGuid', () => [{\n            alertIdentifier: 'Surveillance.Prolia',\n            ruleId: 34,\n            alertText: alertText,\n            citations: [],\n            developer: 'Practice Fusion, Inc.',\n            sponsor: 'Amgen Inc.',\n            link: 'http://www.proliahcp.com/risk-evaluation-mitigation-strategy/',\n            source: 'Practice Fusion, Inc.',\n            actionLinkType: 'addClinicalAssessment',\n            actionLinkData: 'name=proliaAesiModal',\n            actionLinkText: 'Record',\n            error: false\n        }]);\n\n        server.post('ClinicalEndpoint/api/v1/Worksheet', ({ db }, request) => {\n            worksheetPostCalled = true;\n            return worksheetPost(assert, JSON.parse(request.requestBody), expectedSettings);\n        });\n\n        await visit(`/PF/charts/patients/${patientPracticeGuid}/encounter/${transcriptGuid}`);\n        assert.equal(find('.ember-accordion-container').length, 1, 'There are 1 CDS alert container');\n        assert.equal((0, _getText.default)('.ember-accordion-header .cds-alert-text'), alertText, 'The CDS alert text renders correctly');\n        assert.equal((0, _getText.default)('.ember-accordion-header .custom-action'), 'Record', 'The custom action text is correct');\n        await click('.ember-accordion-header .custom-action a');\n        assert.equal(find(ASSESSMENT_MODAL).length, 1, 'The assessment modal is shown');\n        assert.ok(find(`${ASSESSMENT_MODAL} ${(0, _dataElement.default)('prolia-assessment-modal-history')} .ember-select-choice span`).text().indexOf(expectedSettings.defaultHistory) > -1, 'The medication history is defaulted correctly');\n        await click(ASSESSMENT_SAVE_BUTTON);\n        assert.ok(worksheetPostCalled, 'The assessment was POSTed to the worksheet endpoint');\n    });\n\n    (0, _qunit.test)('Prolia modal pops up upon visiting encounter if Prolia CDS Alert os present, new prolia markup is present', async assert => {\n        const patientPracticeGuid = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n        const transcriptGuid = '7022d94f-d70a-4722-a205-dac898cf9f69';\n        const alertText = 'Patient Safety: Monitor and record adverse events of special interest that may be experienced in patients receiving Prolia.';\n        let worksheetPostCalled = false;\n\n        server.get('AlertEndpoint/api/v1/CdsAlerts/:patientPracticeGuid/:transcriptGuid', () => [{\n            alertIdentifier: 'Surveillance.Prolia',\n            ruleId: 34,\n            alertText: alertText,\n            citations: [],\n            developer: 'Practice Fusion, Inc.',\n            sponsor: 'Amgen Inc.',\n            link: 'http://www.proliahcp.com/risk-evaluation-mitigation-strategy/',\n            source: 'Practice Fusion, Inc.',\n            actionLinkType: 'addClinicalAssessment',\n            actionLinkData: 'name=proliaAesiModal',\n            actionLinkText: 'Record',\n            error: false\n        }]);\n\n        server.post('ClinicalEndpoint/api/v1/Worksheet', () => {\n            worksheetPostCalled = true;\n            return {};\n        });\n\n        await visit(`/PF/charts/patients/${patientPracticeGuid}/encounter/${transcriptGuid}`);\n        const adverseEffectDescriptions = find(`${(0, _dataElement.default)('prolia-aesi-modal')} .disease-description`);\n        assert.equal(adverseEffectDescriptions.length, 5, 'The updated adverse effect descriptions are present.');\n\n        await click(PROLIA_ADVERSE_EFFECT_SELECTOR);\n        await click(ASSESSMENT_SAVE_BUTTON);\n        assert.ok(worksheetPostCalled, 'The assessment was POSTed to the worksheet endpoint');\n    });\n\n    (0, _qunit.test)('Prolia permanent place link displays and works from encounter', async assert => {\n        const patientPracticeGuid = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n        const transcriptGuid = '7022d94f-d70a-4722-a205-dac898cf9f69';\n        let worksheetPostCalled = false;\n        const expectedSettings = {\n            tokenName: 'proliaAesiModal',\n            status: 'Completed',\n            source: 'Prolia Permanent Link',\n            defaultHistory: 'Past and/or current medication',\n            responses: [{ answerToken: ['PreviousHistory'], questionToken: 'proliaMedicationHistory' }, { answerToken: ['yes'], questionToken: 'proliaAnyAesi' }],\n            patientPracticeGuid\n        };\n\n        server.get('ClinicalEndpoint/api/v1/patients/:id/aggregate', () => CUSTOM_PATIENT_AGGREGATE);\n\n        server.post('ClinicalEndpoint/api/v1/Worksheet', ({ db }, request) => {\n            worksheetPostCalled = true;\n            return worksheetPost(assert, JSON.parse(request.requestBody), expectedSettings);\n        });\n\n        await visit(`/PF/charts/patients/${patientPracticeGuid}/encounter/${transcriptGuid}`);\n        assert.ok(find(PROLIA_PERMANENT_PLACE_LINK).length > 0, 'A prolia permanent place link is present.');\n        await click(PROLIA_PERMANENT_PLACE_LINK);\n        await click(PROLIA_ADVERSE_EFFECT_SELECTOR);\n        await click(ASSESSMENT_SAVE_BUTTON);\n        assert.ok(worksheetPostCalled, 'The assessment was POSTed to the worksheet endpoint');\n    });\n\n    (0, _qunit.test)('Prolia permanent place link displays and works from patient summary', async assert => {\n        const patientPracticeGuid = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n        let worksheetPostCalled = false;\n        const expectedSettings = {\n            tokenName: 'proliaAesiModal',\n            status: 'Completed',\n            source: 'Prolia Permanent Link',\n            defaultHistory: 'Past and/or current medication',\n            responses: [{ answerToken: ['PreviousHistory'], questionToken: 'proliaMedicationHistory' }, { answerToken: ['yes'], questionToken: 'proliaAnyAesi' }],\n            patientPracticeGuid\n        };\n\n        server.get('ClinicalEndpoint/api/v1/patients/:id/aggregate', () => CUSTOM_PATIENT_AGGREGATE);\n\n        server.post('ClinicalEndpoint/api/v1/Worksheet', ({ db }, request) => {\n            worksheetPostCalled = true;\n            return worksheetPost(assert, JSON.parse(request.requestBody), expectedSettings);\n        });\n\n        await visit(`/PF/charts/patients/${patientPracticeGuid}/summary`);\n        assert.ok(find(PROLIA_PERMANENT_PLACE_LINK).length > 0, 'A prolia permanent place link is present.');\n        await click(PROLIA_PERMANENT_PLACE_LINK);\n        await click(PROLIA_ADVERSE_EFFECT_SELECTOR);\n        await click(ASSESSMENT_SAVE_BUTTON);\n        assert.ok(worksheetPostCalled, 'The assessment was POSTed to the worksheet endpoint');\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/behavioral-health-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element'], function (_qunit, _moduleForAcceptanceAuth, _dataElement) {\n    'use strict';\n\n    const PATIENT_PRACTICE_GUID = 'c5faffde-78e2-4924-acaf-2115bc686d5e';\n    const summaryURL = `/PF/charts/patients/${PATIENT_PRACTICE_GUID}/summary`;\n    const smokingStatus = {\n        'patientSmokingStatuses': [{\n            'patientSmokingStatusGuid': 'd2798899-b429-4376-aee1-5d146f992070',\n            'patientPracticeGuid': 'c5faffde-78e2-4924-acaf-2115bc686d5e',\n            'practiceGuid': '2e64dfab-a18f-4e44-8d93-ca09e6473fcc',\n            'smokingStatusGuid': '15a7fb5b-6087-471e-80ca-b100f69ae2a8',\n            'description': 'Never smoker',\n            'effectiveDate': '2018-08-07T07:00:00Z'\n        }, {\n            'patientSmokingStatusGuid': 'a883866c-6af1-4dfb-b49f-63531cb82112',\n            'patientPracticeGuid': 'c5faffde-78e2-4924-acaf-2115bc686d5e',\n            'practiceGuid': '2e64dfab-a18f-4e44-8d93-ca09e6473fcc',\n            'smokingStatusGuid': 'f86c4dfb-344d-438a-889c-08fd78bc54e0',\n            'description': 'Cigar smoker',\n            'effectiveDate': '2018-08-09T07:00:00Z'\n        }]\n    };\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Clinical | Behavioral health');\n\n    (0, _qunit.test)('Summary behavioral health card', async assert => {\n        server.get('ClinicalEndpoint/api/v3/patients/:patientPracticeGuid/behavioralhealth/', ({ db }) => db.behavioralHealths[0]);\n        server.get('ClinicalEndpoint/api/v2/patients/:patientPracticeGuid/smokingstatuses', () => smokingStatus);\n        server.put('PracticeEndpoint/api/v1/preferenceDoc/user/:id/patientSummaryDisplay', ({ db }, request) => JSON.parse(request.requestBody));\n\n        await visit(summaryURL);\n        await click((0, _dataElement.default)('link-display-settings'));\n        const uncheckedSwitches = find(`${(0, _dataElement.default)('social-history')} .d-checkbox-switch:has(input:not(:checked))`);\n        uncheckedSwitches.toArray().forEach(uncheckedSwitch => {\n            click(uncheckedSwitch);\n        });\n        await click((0, _dataElement.default)('btn-save-control-bar'));\n        assert.dom(`${(0, _dataElement.default)('alcoholUse-section')} ${(0, _dataElement.default)('behavioral-health-field-item-0')}`).hasText('0 08/15/2018', 'Alcohol use score, description and date rendered');\n        assert.dom(`${(0, _dataElement.default)('physicalActivity-section')} ${(0, _dataElement.default)('behavioral-health-field-item-0')}`).hasText('Recorded 08/15/2018', 'Physical activity description and date rendered');\n        assert.dom(`${(0, _dataElement.default)('stress-section')} ${(0, _dataElement.default)('behavioral-health-field-item-0')}`).hasText('Only a little 08/07/2018', 'Stress description and date rendered');\n        assert.dom(`${(0, _dataElement.default)('socialIsolation-section')} ${(0, _dataElement.default)('behavioral-health-field-item-0')}`).hasText('4 08/15/2018', 'Social isolation and connection score and date rendered');\n        assert.dom(`${(0, _dataElement.default)('exposureToViolence-section')} ${(0, _dataElement.default)('behavioral-health-field-item-0')}`).hasText('0 08/15/2018', 'Exposure to violence score and date rendered');\n        assert.dom(`${(0, _dataElement.default)('nutritionHistory-section')} ${(0, _dataElement.default)('behavioral-health-field-item-0')}`).hasText('Proin diam velit, sodales at mi id, consectetur consectetur tortor', 'Nutrition history description renders');\n        assert.dom((0, _dataElement.default)('tobaccoUse-section')).exists('Tobacco use exists');\n        assert.equal(find(`${(0, _dataElement.default)('tobaccoUse-section')} ul li`).length, 1, 'Tobacco use only shows the latest record by default.');\n        assert.dom(`${(0, _dataElement.default)('tobaccoUse-section')} ${(0, _dataElement.default)('behavioral-health-field-show-all-toggle')}`).hasText('Show past entries (1)', 'Tobacco use show all toggle text is correct.');\n\n        await click(`${(0, _dataElement.default)('tobaccoUse-section')} ${(0, _dataElement.default)('behavioral-health-field-show-all-toggle')}`);\n        assert.equal(find(`${(0, _dataElement.default)('tobaccoUse-section')} ul li`).length, 2, 'Tobacco use shows all records.');\n    });\n\n    (0, _qunit.test)('Alcohol use detail pane', async assert => {\n        server.get('ClinicalEndpoint/api/v3/patients/:patientPracticeGuid/behavioralhealth/', ({ db }) => db.behavioralHealths[0]);\n        server.get('ClinicalEndpoint/api/v2/patients/:patientPracticeGuid/smokingstatuses', () => smokingStatus);\n        server.put('PracticeEndpoint/api/v1/preferenceDoc/user/:id/patientSummaryDisplay', ({ db }, request) => JSON.parse(request.requestBody));\n        server.get('ChartingEndpoint/api/v2/WorksheetResponses/:worksheetResponseGuid', ({ db }, request) => {\n            const { worksheetResponseGuid } = request.params;\n            return db.behavioralHealthWorksheets.where({\n                responsesGuid: worksheetResponseGuid\n            })[0];\n        });\n        server.put('ChartingEndpoint/api/v2/WorksheetResponses/:worksheetResponseGuid', ({ db }, request) => {\n            const worksheetResponse = JSON.parse(request.requestBody);\n            assert.equal(worksheetResponse.resultSummary, 'Patient declined to specify');\n            assert.notOk(worksheetResponse.calculatedScore, 'Checking patient declined to specify checkbox removes calculatedScore proptery in payload');\n            delete worksheetResponse.calculatedScore;\n            return worksheetResponse;\n        });\n        await visit(summaryURL);\n        await click((0, _dataElement.default)('link-display-settings'));\n        const uncheckedSwitches = find(`${(0, _dataElement.default)('social-history')} .d-checkbox-switch:has(input:not(:checked))`);\n        uncheckedSwitches.toArray().forEach(uncheckedSwitch => {\n            click(uncheckedSwitch);\n        });\n        await click((0, _dataElement.default)('btn-save-control-bar'));\n        await click(`${(0, _dataElement.default)('alcoholUse-section')} ${(0, _dataElement.default)('behavioral-health-field-item-0')}`);\n        assert.dom('h15.header15').hasText('Alcohol use > Record', 'Detail pane header is correct');\n        assert.dom((0, _dataElement.default)('decline-checkbox')).exists('Patient declined to specify on all question checkbox exists');\n        assert.dom((0, _dataElement.default)('save-button')).hasText('Mark as reviewed');\n        await click(`${(0, _dataElement.default)('worksheet-question-1')} ${(0, _dataElement.default)('option-2')} input`);\n        assert.dom((0, _dataElement.default)('undo-question-1')).exists('Undo links shows only when user changed the input');\n        assert.dom((0, _dataElement.default)('save-button')).hasText('Save', 'button text changed to save if change is made');\n        await click(`${(0, _dataElement.default)('decline-checkbox')} input`);\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-1')} ${(0, _dataElement.default)('option-0')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-1')} ${(0, _dataElement.default)('option-1')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-1')} ${(0, _dataElement.default)('option-2')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-1')} ${(0, _dataElement.default)('option-3')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-1')} ${(0, _dataElement.default)('option-4')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-2')} ${(0, _dataElement.default)('option-0')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-2')} ${(0, _dataElement.default)('option-1')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-2')} ${(0, _dataElement.default)('option-2')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-2')} ${(0, _dataElement.default)('option-3')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-2')} ${(0, _dataElement.default)('option-4')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-3')} ${(0, _dataElement.default)('option-0')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-3')} ${(0, _dataElement.default)('option-1')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-3')} ${(0, _dataElement.default)('option-2')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-3')} ${(0, _dataElement.default)('option-3')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-3')} ${(0, _dataElement.default)('option-4')} input`).isDisabled();\n        assert.dom((0, _dataElement.default)('worksheet-score')).hasText('No score');\n        click((0, _dataElement.default)('save-button'));\n    });\n\n    (0, _qunit.test)('Physical activity detail pane', async assert => {\n        server.get('ClinicalEndpoint/api/v3/patients/:patientPracticeGuid/behavioralhealth/', ({ db }) => db.behavioralHealths[0]);\n        server.get('ClinicalEndpoint/api/v2/patients/:patientPracticeGuid/smokingstatuses', () => smokingStatus);\n        server.put('PracticeEndpoint/api/v1/preferenceDoc/user/:id/patientSummaryDisplay', ({ db }, request) => JSON.parse(request.requestBody));\n        server.get('ChartingEndpoint/api/v2/WorksheetResponses/:worksheetResponseGuid', ({ db }, request) => {\n            const { worksheetResponseGuid } = request.params;\n            return db.behavioralHealthWorksheets.where({\n                responsesGuid: worksheetResponseGuid\n            })[0];\n        });\n        server.put('ChartingEndpoint/api/v2/WorksheetResponses/:worksheetResponseGuid', ({ db }, request) => {\n            const worksheetResponse = JSON.parse(request.requestBody);\n            assert.equal(worksheetResponse.resultSummary, 'Recorded');\n            assert.equal(worksheetResponse.responses[1].value, '4');\n            return worksheetResponse;\n        });\n        await visit(summaryURL);\n        await click((0, _dataElement.default)('link-display-settings'));\n        const uncheckedSwitches = find(`${(0, _dataElement.default)('social-history')} .d-checkbox-switch:has(input:not(:checked))`);\n        uncheckedSwitches.toArray().forEach(uncheckedSwitch => {\n            click(uncheckedSwitch);\n        });\n        await click((0, _dataElement.default)('btn-save-control-bar'));\n        await click(`${(0, _dataElement.default)('physicalActivity-section')} ${(0, _dataElement.default)('behavioral-health-field-item-0')}`);\n        assert.dom('h15.header15').hasText('Physical activity > Record', 'Detail pane header is correct');\n        assert.dom((0, _dataElement.default)('save-button')).hasText('Mark as reviewed');\n        assert.dom((0, _dataElement.default)('decline-checkbox')).exists('Patient declined to specify on all question checkbox exists');\n        await fillIn(`${(0, _dataElement.default)('worksheet-question-1')} input`, '4');\n        assert.dom((0, _dataElement.default)('save-button')).hasText('Save', 'button text changed to save if change is made');\n        assert.dom((0, _dataElement.default)('undo-question-1')).doesNotExist('Updating numeric input will not show Undo link');\n        await click(`${(0, _dataElement.default)('decline-checkbox')} input`);\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-1')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-2')} input`).isDisabled();\n        await click(`${(0, _dataElement.default)('decline-checkbox')} input`);\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-1')} input`).hasNoValue('check decline cleans all answers');\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-2')} input`).hasNoValue('check decline cleans all answers');\n        fillIn(`${(0, _dataElement.default)('worksheet-question-1')} input`, '4');\n        fillIn(`${(0, _dataElement.default)('worksheet-question-2')} input`, '7');\n        click((0, _dataElement.default)('save-button'));\n    });\n\n    (0, _qunit.test)('Stress detail pane', async assert => {\n        server.get('ClinicalEndpoint/api/v3/patients/:patientPracticeGuid/behavioralhealth/', ({ db }) => db.behavioralHealths[0]);\n        server.get('ClinicalEndpoint/api/v2/patients/:patientPracticeGuid/smokingstatuses', () => smokingStatus);\n        server.put('PracticeEndpoint/api/v1/preferenceDoc/user/:id/patientSummaryDisplay', ({ db }, request) => JSON.parse(request.requestBody));\n        server.get('ChartingEndpoint/api/v2/WorksheetResponses/:worksheetResponseGuid', ({ db }, request) => {\n            const { worksheetResponseGuid } = request.params;\n            return db.behavioralHealthWorksheets.where({\n                responsesGuid: worksheetResponseGuid\n            })[0];\n        });\n        server.put('ChartingEndpoint/api/v2/WorksheetResponses/:worksheetResponseGuid', ({ db }, request) => {\n            const worksheetResponse = JSON.parse(request.requestBody);\n            assert.equal(worksheetResponse.resultSummary, 'To some extent');\n            return worksheetResponse;\n        });\n        await visit(summaryURL);\n        await click((0, _dataElement.default)('link-display-settings'));\n        const uncheckedSwitches = find(`${(0, _dataElement.default)('social-history')} .d-checkbox-switch:has(input:not(:checked))`);\n        uncheckedSwitches.toArray().forEach(uncheckedSwitch => {\n            click(uncheckedSwitch);\n        });\n        await click((0, _dataElement.default)('btn-save-control-bar'));\n        await click(`${(0, _dataElement.default)('stress-section')} ${(0, _dataElement.default)('behavioral-health-field-item-0')}`);\n        assert.dom('h15.header15').hasText('Stress > Record', 'Detail pane header is correct');\n        assert.dom((0, _dataElement.default)('save-button')).hasText('Mark as reviewed');\n        await click(`${(0, _dataElement.default)('worksheet-question-0')} ${(0, _dataElement.default)('option-2')} input`);\n        assert.dom((0, _dataElement.default)('undo-question-0')).exists('Undo links shows only when user changed the input');\n        assert.dom((0, _dataElement.default)('save-button')).hasText('Save', 'button text changed to save if change is made');\n        click((0, _dataElement.default)('save-button'));\n    });\n\n    (0, _qunit.test)('Social isolation and connection detail pane', async assert => {\n        server.get('ClinicalEndpoint/api/v3/patients/:patientPracticeGuid/behavioralhealth/', ({ db }) => db.behavioralHealths[0]);\n        server.get('ClinicalEndpoint/api/v2/patients/:patientPracticeGuid/smokingstatuses', () => smokingStatus);\n        server.put('PracticeEndpoint/api/v1/preferenceDoc/user/:id/patientSummaryDisplay', ({ db }, request) => JSON.parse(request.requestBody));\n        server.get('ChartingEndpoint/api/v2/WorksheetResponses/:worksheetResponseGuid', ({ db }, request) => {\n            const { worksheetResponseGuid } = request.params;\n            return db.behavioralHealthWorksheets.where({\n                responsesGuid: worksheetResponseGuid\n            })[0];\n        });\n        server.put('ChartingEndpoint/api/v2/WorksheetResponses/:worksheetResponseGuid', ({ db }, request) => {\n            const worksheetResponse = JSON.parse(request.requestBody);\n            return worksheetResponse;\n        });\n        server.del('ChartingEndpoint/api/v2/WorksheetResponses/:worksheetResponseGuid', () => {});\n        await visit(summaryURL);\n        await click((0, _dataElement.default)('link-display-settings'));\n        const uncheckedSwitches = find(`${(0, _dataElement.default)('social-history')} .d-checkbox-switch:has(input:not(:checked))`);\n        uncheckedSwitches.toArray().forEach(uncheckedSwitch => {\n            click(uncheckedSwitch);\n        });\n        await click((0, _dataElement.default)('btn-save-control-bar'));\n        await click(`${(0, _dataElement.default)('socialIsolation-section')} ${(0, _dataElement.default)('behavioral-health-field-item-0')}`);\n        assert.dom('h15.header15').hasText('Social isolation and connection > Record', 'Detail pane header is correct');\n        assert.dom((0, _dataElement.default)('save-button')).hasText('Mark as reviewed');\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-2')} input`).hasValue('7', 'response renders correct');\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-3')} input`).hasValue('2', 'response renders correct');\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-4')} input`).hasValue('7', 'response renders correct');\n        assert.dom((0, _dataElement.default)('decline-checkbox')).exists('Patient declined to specify on all question checkbox exists');\n        await click(`${(0, _dataElement.default)('worksheet-question-1')} ${(0, _dataElement.default)('option-2')} input`);\n        assert.dom((0, _dataElement.default)('undo-question-1')).exists('Undo links shows only when user changed the input');\n        assert.dom((0, _dataElement.default)('save-button')).hasText('Save', 'button text changed to save if change is made');\n        await click(`${(0, _dataElement.default)('decline-checkbox')} input`);\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-1')} ${(0, _dataElement.default)('option-0')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-1')} ${(0, _dataElement.default)('option-1')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-1')} ${(0, _dataElement.default)('option-2')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-1')} ${(0, _dataElement.default)('option-3')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-1')} ${(0, _dataElement.default)('option-4')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-1')} ${(0, _dataElement.default)('option-5')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-1')} ${(0, _dataElement.default)('option-6')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-1')} ${(0, _dataElement.default)('option-7')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-2')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-3')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-4')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-5')} ${(0, _dataElement.default)('option-0')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-5')} ${(0, _dataElement.default)('option-1')} input`).isDisabled();\n        assert.dom((0, _dataElement.default)('worksheet-score')).hasText('No score');\n        await click(`${(0, _dataElement.default)('decline-checkbox')} input`);\n        await fillIn(`${(0, _dataElement.default)('worksheet-question-2')} input`, '3');\n        assert.dom((0, _dataElement.default)('worksheet-score')).hasText('No score', 'score is correct');\n        click((0, _dataElement.default)('cancel-button'));\n    });\n\n    (0, _qunit.test)('Exposure to violence detail pane', async assert => {\n        server.get('ClinicalEndpoint/api/v3/patients/:patientPracticeGuid/behavioralhealth/', ({ db }) => db.behavioralHealths[0]);\n        server.get('ClinicalEndpoint/api/v2/patients/:patientPracticeGuid/smokingstatuses', () => smokingStatus);\n        server.put('PracticeEndpoint/api/v1/preferenceDoc/user/:id/patientSummaryDisplay', ({ db }, request) => JSON.parse(request.requestBody));\n        server.get('ChartingEndpoint/api/v2/WorksheetResponses/:worksheetResponseGuid', ({ db }, request) => {\n            const { worksheetResponseGuid } = request.params;\n            return db.behavioralHealthWorksheets.where({\n                responsesGuid: worksheetResponseGuid\n            })[0];\n        });\n        server.put('ChartingEndpoint/api/v2/WorksheetResponses/:worksheetResponseGuid', ({ db }, request) => {\n            const worksheetResponse = JSON.parse(request.requestBody);\n            assert.equal(worksheetResponse.resultSummary, 'Patient declined to specify');\n            assert.notOk(worksheetResponse.calculatedScore, 'Checking patient declined to specify checkbox removes calculatedScore proptery in payload');\n            delete worksheetResponse.calculatedScore;\n            return worksheetResponse;\n        });\n        await visit(summaryURL);\n        await click((0, _dataElement.default)('link-display-settings'));\n        const uncheckedSwitches = find(`${(0, _dataElement.default)('social-history')} .d-checkbox-switch:has(input:not(:checked))`);\n        uncheckedSwitches.toArray().forEach(uncheckedSwitch => {\n            click(uncheckedSwitch);\n        });\n        await click((0, _dataElement.default)('btn-save-control-bar'));\n        await click(`${(0, _dataElement.default)('exposureToViolence-section')} ${(0, _dataElement.default)('behavioral-health-field-item-0')}`);\n        assert.dom('h15.header15').hasText('Exposure to violence > Record', 'Detail pane header is correct');\n        assert.dom((0, _dataElement.default)('save-button')).hasText('Mark as reviewed');\n        assert.dom((0, _dataElement.default)('decline-checkbox')).exists('Patient declined to specify on all question checkbox exists');\n        await click(`${(0, _dataElement.default)('worksheet-question-1')} ${(0, _dataElement.default)('option-0')} input`);\n        assert.dom((0, _dataElement.default)('undo-question-1')).exists('Undo links shows only when user changed the input');\n        assert.dom((0, _dataElement.default)('save-button')).hasText('Save', 'button text changed to save if change is made');\n        await click(`${(0, _dataElement.default)('decline-checkbox')} input`);\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-1')} ${(0, _dataElement.default)('option-0')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-1')} ${(0, _dataElement.default)('option-1')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-2')} ${(0, _dataElement.default)('option-0')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-2')} ${(0, _dataElement.default)('option-1')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-3')} ${(0, _dataElement.default)('option-0')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-3')} ${(0, _dataElement.default)('option-1')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-4')} ${(0, _dataElement.default)('option-0')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('worksheet-question-4')} ${(0, _dataElement.default)('option-1')} input`).isDisabled();\n        assert.dom((0, _dataElement.default)('worksheet-score')).hasText('No score');\n        click((0, _dataElement.default)('save-button'));\n    });\n\n    (0, _qunit.test)('Nutrition history detail pane', async assert => {\n        server.get('ClinicalEndpoint/api/v3/patients/:patientPracticeGuid/behavioralhealth/', ({ db }) => db.behavioralHealths[0]);\n        server.get('ClinicalEndpoint/api/v2/patients/:patientPracticeGuid/smokingstatuses', () => smokingStatus);\n        server.put('PracticeEndpoint/api/v1/preferenceDoc/user/:id/patientSummaryDisplay', ({ db }, request) => JSON.parse(request.requestBody));\n        server.put('ClinicalEndpoint/api/v2/PersonalMedicalHistory/:patientPracticeGuid', ({ db }, request) => {\n            const personalMedicalHistory = JSON.parse(request.requestBody);\n            assert.equal(personalMedicalHistory.nutritionHistory, 'test content', 'nutrition history content has been changed');\n            return personalMedicalHistory;\n        });\n        await visit(summaryURL);\n        await click((0, _dataElement.default)('link-display-settings'));\n        const uncheckedSwitches = find(`${(0, _dataElement.default)('social-history')} .d-checkbox-switch:has(input:not(:checked))`);\n        uncheckedSwitches.toArray().forEach(uncheckedSwitch => {\n            click(uncheckedSwitch);\n        });\n        await click((0, _dataElement.default)('btn-save-control-bar'));\n        await click(`${(0, _dataElement.default)('nutritionHistory-section')} ${(0, _dataElement.default)('behavioral-health-field-item-0')}`);\n        assert.dom('h15.header15').hasText('Nutrition history > Record', 'Detail pane header is correct');\n        assert.dom((0, _dataElement.default)('text-area-counter')).hasValue('Proin diam velit, sodales at mi id, consectetur consectetur tortor');\n        await fillIn((0, _dataElement.default)('text-area-counter'), '');\n        assert.dom((0, _dataElement.default)('save-button')).isDisabled('Save button is disabled when there is no content');\n        await fillIn((0, _dataElement.default)('text-area-counter'), 'test content');\n        click((0, _dataElement.default)('save-button'));\n    });\n\n    (0, _qunit.test)('Tobacco use detail pane', async assert => {\n        server.get('ClinicalEndpoint/api/v3/patients/:patientPracticeGuid/behavioralhealth/', ({ db }) => db.behavioralHealths[0]);\n        server.get('ClinicalEndpoint/api/v2/patients/:patientPracticeGuid/smokingstatuses', () => smokingStatus);\n        server.put('PracticeEndpoint/api/v1/preferenceDoc/user/:id/patientSummaryDisplay', ({ db }, request) => JSON.parse(request.requestBody));\n        server.get('ClinicalEndpoint/api/v3/smokingstatuses', ({ db }, request) => {\n            const { version } = request.queryParams;\n            return db.smokingStatusTypes.where({\n                version\n            })[0].content;\n        });\n        await visit(summaryURL);\n        await click((0, _dataElement.default)('link-display-settings'));\n        const uncheckedSwitches = find(`${(0, _dataElement.default)('social-history')} .d-checkbox-switch:has(input:not(:checked))`);\n        uncheckedSwitches.toArray().forEach(uncheckedSwitch => {\n            click(uncheckedSwitch);\n        });\n        await click((0, _dataElement.default)('btn-save-control-bar'));\n        await click(`${(0, _dataElement.default)('tobaccoUse-section')} ${(0, _dataElement.default)('behavioral-health-field-show-all-toggle')}`);\n        await click(`${(0, _dataElement.default)('tobaccoUse-section')} ${(0, _dataElement.default)('behavioral-health-field-item-1')}`);\n        assert.dom('h15.header15').hasText('Tobacco use > Record', 'Detail pane header is correct');\n        assert.dom((0, _dataElement.default)('save-button')).hasText('Mark as reviewed');\n        assert.dom((0, _dataElement.default)('smoking-option-old-label')).hasText('Never smoker', 'Selection of old options is preserved');\n        assert.dom((0, _dataElement.default)('info-popover-target')).exists('An info icon exists next to old option');\n        await click((0, _dataElement.default)('smoking-option-3-label'));\n        assert.dom((0, _dataElement.default)('undo-link')).doesNotExist('Undo links does not show when user replace a old option with new option');\n        assert.dom('input#smoking-option-old').isDisabled('Old option is disabled when user select a new option');\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/care-team-test', ['qunit', 'sinon', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element', 'boot/tests/helpers/get-text'], function (_qunit, _sinon, _moduleForAcceptanceAuth, _dataElement, _getText) {\n    'use strict';\n\n    let toastrStub;\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Clinical | Care team', {\n        beforeEach() {\n            toastrStub = _sinon.default.stub(window.toastr, 'error');\n        },\n        afterEach() {\n            window.toastr.error.restore();\n        }\n    });\n\n    const PATIENT_GUID = 'fd198d85-b2e4-435b-854a-b924b3261d75';\n    const CARE_TEAM_SEARCH = (0, _dataElement.default)('care-team-search');\n    const FIRST_NAME = 'Careful';\n    const LAST_NAME = 'Teammate';\n    const FAX_NUMBER = '5555555555';\n    const TABLE = '.care-team-list-table tbody';\n    const FIRST_MEMBER = `${TABLE} tr:first`;\n    const SECOND_MEMBER = `${TABLE} tr:nth-child(2)`;\n    const SAVE_BUTTON = (0, _dataElement.default)('care-team-save');\n    const PROVIDER_PROFILE_GUID = '7526db72-eff7-4d2d-9517-6404916a3b4f';\n\n    function findInSearch(assert, name, isProvider) {\n        assert.throws(findWithAssert(`${CARE_TEAM_SEARCH} .ember-select-results li:contains(\"${name}\")`), `The ${isProvider ? 'provider' : 'contact'} exists in the search results`);\n    }\n\n    (0, _qunit.test)('Add, edit, and delete care team members', async assert => {\n        const careTeamArray = [];\n        let providerAddCount = 0;\n        let providerEditCount = 0;\n        let providerDeleteCount = 0;\n        server.get('PatientEndpoint/api/v1/patient/:id/careTeam/members', () => careTeamArray);\n        server.post('CollaborationEndpoint/contacts', ({ db }, request) => {\n            const data = JSON.parse(request.requestBody);\n            const { profile } = data;\n            assert.equal(profile.firstName, FIRST_NAME, 'The first name is correct on the POSTed contact');\n            assert.equal(profile.lastName, LAST_NAME, 'The last name is correct on the POSTed contact');\n            assert.equal(profile.officeFax, FAX_NUMBER, 'The fax number is correct on the POSTed contact');\n            profile.profileGuid = 'SOME_GUID';\n            return data;\n        });\n        server.get('PatientEndpoint/api/v1/phr_patients/:id/demographics', () => {\n            // Ethnicity: Central American: Costa Rican ; Race: Asian: Filipino\n            return { 'languageOptionId': 3, 'ethnicityOptionGuids': ['d6a37b7c-c763-4695-90e7-097cdb8c2ec7'], 'raceOptionGuids': ['9f94fa9e-18f5-4ba7-90d4-18ffb0d918a4'] };\n        });\n        server.put('PatientEndpoint/api/v1/patient/:patientPracticeGuid/careTeam/provider', ({ db }, request) => {\n            const data = JSON.parse(request.requestBody);\n            const profileOrContactGuid = data.providerProfileGuid;\n            const existing = careTeamArray.findBy('providerUserProfileGuid', profileOrContactGuid);\n            const relationship = data.relationships[0];\n            const careTeamMemberType = relationship ? relationship.careTeamMemberType : null;\n            if (existing) {\n                if (relationship) {\n                    providerEditCount++;\n                    assert.equal(profileOrContactGuid, PROVIDER_PROFILE_GUID, 'The provider profile guid is correct when editing the provider');\n                    assert.equal(careTeamMemberType, 'BackupProvider', 'The careTeamMemberType is correct when editing the provider');\n                    existing.careTeamMemberType = careTeamMemberType;\n                } else {\n                    providerDeleteCount++;\n                    assert.equal(profileOrContactGuid, PROVIDER_PROFILE_GUID, 'The provider profile guid is correct when deleting the provider');\n                    careTeamArray.removeAt(careTeamArray.indexOf(existing));\n                }\n            } else {\n                providerAddCount++;\n                if (providerAddCount === 1) {\n                    assert.equal(profileOrContactGuid, 'SOME_GUID', 'The contact guid is correct for the new contact');\n                    assert.equal(careTeamMemberType, 'PrimaryCareProvider', 'The careTeamMemberType is correct for the new contact');\n                } else if (providerAddCount === 2) {\n                    assert.equal(profileOrContactGuid, PROVIDER_PROFILE_GUID, 'The provider profile guid is correct for the existing provider');\n                    assert.equal(careTeamMemberType, 'PreferredProvider', 'The careTeamMemberType is correct for the existing provider');\n                }\n                careTeamArray.pushObject({\n                    providerUserProfileGuid: profileOrContactGuid,\n                    careTeamMemberType: careTeamMemberType,\n                    patientPracticeGuid: request.params.patientPracticeGuid\n                });\n            }\n            return [];\n        });\n        await visit(`/PF/charts/patients/${PATIENT_GUID}/profile`);\n        assert.equal(findWithAssert((0, _dataElement.default)('care-team-empty-message')).text(), 'No care team for this patient. Add care team member.', 'The empty care team state exists');\n        click((0, _dataElement.default)('care-team-add-button'));\n        await click(`${CARE_TEAM_SEARCH} input`);\n        findInSearch(assert, 'Another User', true);\n        findInSearch(assert, 'Cannot Save', true);\n        findInSearch(assert, 'Marsh Mallow', false);\n        findInSearch(assert, 'Tomato Jimenez', false);\n        click(`${CARE_TEAM_SEARCH} .ember-select-add-item`);\n        fillIn((0, _dataElement.default)('care-team-form-first-name'), FIRST_NAME);\n        fillIn((0, _dataElement.default)('care-team-form-last-name'), LAST_NAME);\n        fillIn((0, _dataElement.default)('care-team-form-fax'), FAX_NUMBER);\n        click(`${(0, _dataElement.default)('care-team-relationship-pcp')} input`);\n        await click(SAVE_BUTTON);\n        assert.ok(providerAddCount, 'The provider add endpoint was called');\n        assert.equal((0, _getText.default)(`${FIRST_MEMBER} .provider-name`), `${FIRST_NAME} ${LAST_NAME}`, 'The new contact was added to the care team list');\n        assert.equal(find(`${FIRST_MEMBER} ${(0, _dataElement.default)('care-team-member-relationship')}`).text(), 'Primary care provider (PCP)', 'The new contact\\'s relationship is correct');\n        assert.equal((0, _getText.default)(`${FIRST_MEMBER} ${(0, _dataElement.default)('care-team-member-contact')}`), 'F: 5555555555', 'The new contact\\'s contact information is correct');\n        click((0, _dataElement.default)('care-team-add-button'));\n        click(`${CARE_TEAM_SEARCH} input`);\n        await click((0, _dataElement.default)('care-team-search-1'));\n        assert.equal(find((0, _dataElement.default)('care-team-form-first-name'))[0].value, 'Another', 'The first name was autopopulated from the clicked provider');\n        assert.equal(find((0, _dataElement.default)('care-team-form-last-name'))[0].value, 'User', 'The last name was autopopulated from the clicked provider');\n        await click(SAVE_BUTTON);\n        assert.equal(toastrStub.args[0], 'You need to select at least one relationship', 'The \"You need to select at least one relationship\" toaster was displayed');\n        click(`${(0, _dataElement.default)('care-team-relationship-preferred')} input`);\n        await click(SAVE_BUTTON);\n        assert.equal(providerAddCount, 2, 'The provider add endpoint was called again');\n        assert.equal((0, _getText.default)(`${SECOND_MEMBER} .provider-name`), 'Another User', 'The provider was added to the care team list');\n        assert.equal(find(`${SECOND_MEMBER} ${(0, _dataElement.default)('care-team-member-relationship')}`).text(), 'Preferred provider in practice', 'The provider\\'s relationship is correct');\n        click(`${SECOND_MEMBER} .provider-name`);\n        click(`${(0, _dataElement.default)('care-team-relationship-preferred')} input`);\n        click(`${(0, _dataElement.default)('care-team-relationship-backup')} input`);\n        await click(SAVE_BUTTON);\n        assert.ok(providerEditCount, 'The provider edit endpoint was called');\n        assert.equal(find(`${SECOND_MEMBER} ${(0, _dataElement.default)('care-team-member-relationship')}`).text(), 'Backup provider in practice', 'The provider\\'s relationship was updated');\n        await click(`${SECOND_MEMBER} ${(0, _dataElement.default)('care-team-member-delete')}`);\n        assert.ok(providerDeleteCount, 'The provider deleted endpoint was called');\n        assert.notOk(find(SECOND_MEMBER).length, 'The provider was removed from the care team when the delete button was clicked');\n    });\n\n    (0, _qunit.test)('Load care team providers', async assert => {\n        server.get('PatientEndpoint/api/v1/patient/:id/careTeam/members', ({ db }) => db.careTeamPatientProfiles);\n        await visit(`/PF/charts/patients/${PATIENT_GUID}/profile`);\n        // In practice provider\n        assert.equal(find('.care-team-list-table .provider-name:eq(0)').text().trim(), 'Belinda Nambooze', 'Provider name is rendered correctly');\n        assert.equal(find(`${(0, _dataElement.default)('care-team-member-relationship')}:eq(0)`).text().trim(), 'Preferred provider in practice', 'Provider relationship is rendered correctly');\n        assert.equal(find(`${(0, _dataElement.default)('care-team-member-contact')}:eq(0) div:eq(0)`).text().trim(), 'P: (415) 333-3333', 'Provider phone number is rendered correctly');\n        assert.equal(find(`${(0, _dataElement.default)('care-team-member-contact')}:eq(0) div:eq(1)`).text().trim(), 'bnambooze@practicefusion.com', 'Provider email is rendered correctly');\n        assert.equal(find(`${(0, _dataElement.default)('provider-type')}:eq(0)`).text().trim(), 'In practice', 'Provider type is rendered correctly');\n        assert.equal(find(`${(0, _dataElement.default)('provider-specialty')}:eq(0)`).text().trim(), 'Allergy and Immunology', 'Provider specialty is rendered correctly');\n\n        // In directory provider\n        assert.equal(find('.care-team-list-table .provider-name:eq(1)').text().trim(), 'Marsh Mallow', 'Provider name is rendered correctly');\n        assert.equal(find(`${(0, _dataElement.default)('care-team-member-relationship')}:eq(1)`).text().trim(), 'Other provider', 'Provider relationship is rendered correctly');\n        assert.equal(find(`${(0, _dataElement.default)('care-team-member-contact')}:eq(1) div:eq(0)`).text().trim(), 'F: (555)512-3455', 'Provider fax number is rendered correctly');\n        assert.equal(find(`${(0, _dataElement.default)('care-team-member-contact')}:eq(1) div:eq(1)`).text().trim(), '', 'Provider email is rendered correctly');\n        assert.equal(find(`${(0, _dataElement.default)('provider-type')}:eq(1)`).text().trim(), 'My connections', 'Provider type is rendered correctly');\n        assert.equal(find(`${(0, _dataElement.default)('provider-specialty')}:eq(1)`).text().trim(), '', 'Provider specialty is rendered correctly');\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/clinical-documents-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element'], function (_qunit, _moduleForAcceptanceAuth, _dataElement) {\n    'use strict';\n\n    const PATIENT_PRACTICE_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const TIMELINE_FILTER = (0, _dataElement.default)('timeline-type-filter');\n    const ACTIONS_MENU = (0, _dataElement.default)('actions-menu');\n    const CREATE_BUTTON = (0, _dataElement.default)('create-clinical-document');\n    const actionsMenuItem = function (text) {\n        return `${(0, _dataElement.default)('actions-menu-options')} a:contains('${text}')`;\n    };\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Clinical | Clinical documents - v2');\n\n    (0, _qunit.test)('Create clinical document from actions menu', async assert => {\n        server.post('ClinicalDocumentEndpoint/api/v1/ccda/patient', ({ db }, request) => {\n            const data = JSON.parse(request.requestBody);\n            const sections = data.requestedCcdaSections;\n            assert.equal(data.ccdaGenerationType, 'Clinical', 'The service call was made with the correct ccdaGenerationType');\n            assert.equal(data.patientPracticeGuid, PATIENT_PRACTICE_GUID, 'The service call was made with the correct patientPracticeGuid');\n            assert.equal(sections.length, 3, 'The service call was made with the correct number of ccda sections');\n            assert.ok(sections.includes('Medications'), 'The medications section was included');\n            assert.ok(sections.includes('Encounters'), 'The encounters section was included');\n            assert.ok(sections.includes('ChiefComplaintandReasonforVisit'), 'The chief complaint section was included');\n            return {};\n        });\n        await visit(`/PF/charts/patients/${PATIENT_PRACTICE_GUID}/summary`);\n        click(ACTIONS_MENU);\n        await click(actionsMenuItem('View exported patient records'));\n        assert.equal(currentURL(), `/PF/charts/patients/${PATIENT_PRACTICE_GUID}/timeline/clinicaldocuments`, 'The clinical documents timeline was opened');\n        click(ACTIONS_MENU);\n        await click(actionsMenuItem('Create clinical document'));\n\n        const ccdaModal = '.create-clinical-document-modal .content-modal';\n        assert.throws(findWithAssert(ccdaModal), 'The create CCDA modal is visible');\n        await click((0, _dataElement.default)('create-ccda-select-none'));\n        click(`${(0, _dataElement.default)('Medications')} input`);\n        click(`${(0, _dataElement.default)('Encounters')} input`);\n        click(`${(0, _dataElement.default)('ChiefComplaintandReasonforVisit')} input`);\n        await click((0, _dataElement.default)('create-ccda-create'));\n        assert.notOk(find(ccdaModal).length, 'The create CCDA modal is no longer visible');\n    });\n\n    (0, _qunit.test)('View clinical documents from timeline', async assert => {\n        await visit(`/PF/charts/patients/${PATIENT_PRACTICE_GUID}/timeline/encounter`);\n        assert.notOk(find(CREATE_BUTTON).length, 'The create clinical document button does not exist on the encounters timeline');\n        click(`${TIMELINE_FILTER} .ember-select-choice`);\n        await click(`${TIMELINE_FILTER} li:contains('Exported patient records')`);\n        const item = `${(0, _dataElement.default)('clinical-document-event')}[data-guid='7912c0d4-d9b1-4f41-9dfd-61852905063f']`;\n        assert.equal(find(`${item} ${(0, _dataElement.default)('document-type')}`).text().trim(), 'Clinical Summary', 'The document type is rendered correctly');\n        assert.equal(find(`${item} ${(0, _dataElement.default)('document-requester')}`).text().trim(), 'Provider Bob MD', 'The requester is rendered correctly');\n        await click(`${item} ${(0, _dataElement.default)('clinical-document-preview')}`);\n        assert.ok(find('.ccda-preview-modal .content-modal-title').text().trim().indexOf('Clinical Summary') > -1, 'The modal contains the correct title');\n        assert.equal(find('.ccda-preview-modal #ChiefComplaint_1').text().trim(), '2016-06-01: Such chiefing', 'The modal renders the cc section');\n        assert.throws(findWithAssert('.ccda-preview-modal .right-panel-v2 a:contains(\"Allergies\")'), 'The allergies link exists in the right pane');\n        assert.throws(findWithAssert('.ccda-preview-modal .right-panel-v2 a:contains(\"Vital Signs\")'), 'The Vital Signs link exists in the right pane');\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/configurable-ccda-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element'], function (_qunit, _moduleForAcceptanceAuth, _dataElement) {\n    'use strict';\n\n    const validateThreadDetailHasAttachments = assert => {\n        assert.ok(find('.inbox-thread-view .thread-container').length, 'A message thread is selected and rendered in the right pane');\n        assert.ok(find('.inbox-thread-view .thread-container .attachments a').length, 'Attachments shown');\n    };\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Clinical | Configurable CCDA preview');\n\n    (0, _qunit.test)('View configurable CCDA from messages', async assert => {\n        await visitWaitForAfterRender('/PF/messaging/inbox');\n        await delayAsync(100);\n        await click('.inbox-thread:contains(Referral for Norace OrEth) .preview-main');\n        validateThreadDetailHasAttachments(assert);\n\n        await click('.inbox-thread-view .thread-container .attachments a:first');\n        await delayAsync(100);\n        assert.throws(findWithAssert('.ccda-preview-modal'), 'CCDA Preview modal displays');\n        assert.throws(findWithAssert((0, _dataElement.default)('link-ccda-settings')), 'Settings link displays');\n        assert.equal(find('.ccda-preview-modal footer .pull-right button').length, 2, 'Download buttons are displayed separately');\n        assert.equal(find('.ccda-preview-modal .content-modal-title').text().trim(), 'Clinical Summary for Norace OrEth', 'The modal contains the correct title');\n        assert.throws(findWithAssert(`${(0, _dataElement.default)('ccda-toc-component-Encounters')} a`), 'The encounters link exists in the right pane');\n        assert.notOk(find((0, _dataElement.default)('ccda-component-Encounters')).length, 'Encounters section not shown when turned off in settings');\n        await click(`${(0, _dataElement.default)('ccda-toc-component-Encounters')} .d-checkbox-switch`);\n        assert.throws(findWithAssert((0, _dataElement.default)('ccda-component-Encounters')), 'Encounters section now shown after toggled on');\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/diagnoses-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element'], function (_qunit, _moduleForAcceptanceAuth, _dataElement) {\n    'use strict';\n\n    const PATIENT_PRACTICE_GUID = 'c5faffde-78e2-4924-acaf-2115bc686d5e';\n    const COMMENT = 'Some Dx Comment';\n    const START_DATE = '03/08/2016';\n    const ICD10_CODE = 'V95.43xS';\n    const ICD10_DESCRIPTION = 'Spacecraft collision injuring occupant, sequela';\n    const ICD9_CODE = 'E929.1';\n    const ICD9_DESCRIPTION = 'Late effects of other transport accident';\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Clinical | Diagnoses - v2');\n\n    (0, _qunit.test)('Empty diagnoses section renders properly', async assert => {\n        server.get('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/aggregate', () => ({ 'diagnoses': { 'patientDiagnoses': [], 'noKnownDiagnoses': false },\n            'medications': { 'patientMedications': null, 'noKnownMedications': false } }));\n\n        await visit('/PF/charts/patients/c5faffde-78e2-4924-acaf-2115bc686d5e/summary');\n        assert.ok(find((0, _dataElement.default)('no-active-diagnoses-label')).text().toLowerCase().indexOf('no active diagnoses') > -1, 'Empty diagnoses section renders properly');\n    });\n\n    (0, _qunit.test)('Add a diagnosis', async assert => {\n        server.post(`ClinicalEndpoint/api/v1/patients/${PATIENT_PRACTICE_GUID}/diagnoses`, ({ db }, request) => {\n            const diagnosis = JSON.parse(request.requestBody);\n            assert.equal(diagnosis.isAcute, true, 'The isAcute flag is correct on the diagnosis');\n            assert.equal(diagnosis.name, ICD10_DESCRIPTION, 'The description is correct on the diagnosis');\n            assert.equal(diagnosis.patientPracticeGuid, PATIENT_PRACTICE_GUID, 'The patientPracticeGuid is correct on the diagnosis');\n            assert.equal(diagnosis.startDate, '2016-03-08T00:00:00.000Z', 'The startDate is correct on the diagnosis');\n\n            assert.equal(diagnosis.diagnosisCodes.length, 2, 'The diagnosis has 2 codes');\n            const icd9Code = diagnosis.diagnosisCodes.findBy('codeSystem', 'ICD9');\n            const icd10Code = diagnosis.diagnosisCodes.findBy('codeSystem', 'ICD10');\n            assert.ok(icd10Code, 'The ICD-10 code is present on the diagnosis');\n            assert.equal(icd10Code.code, ICD10_CODE, 'The ICD-10 code is correct');\n            assert.equal(icd10Code.description, ICD10_DESCRIPTION, 'The ICD-10 description is correct');\n            assert.equal(icd10Code.attributes.length, 1, 'The ICD-10 code has 1 attribute');\n            assert.equal(icd10Code.attributes[0].name, 'Encounter Type', 'The ICD-10 attribute has the correct name');\n            assert.equal(icd10Code.attributes[0].value, 'Sequela', 'The ICD-10 attribute has the correct value');\n\n            assert.ok(icd9Code, 'The ICD-9 code is present on the diagnosis');\n            assert.equal(icd9Code.code, ICD9_CODE, 'The ICD-9 code is correct');\n            assert.equal(icd9Code.description, ICD9_DESCRIPTION, 'The ICD-9 description is correct');\n            assert.equal(icd9Code.attributes.length, 0, 'The ICD-9 code has 0 attributes');\n\n            assert.equal(diagnosis.transcriptDiagnoses.length, 1, 'The diagnosis has 1 transcriptDiagnosis');\n            assert.equal(diagnosis.transcriptDiagnoses[0].comment, COMMENT, 'The diagnosis has the correct comment');\n            assert.ok(!diagnosis.transcriptDiagnoses[0].transcriptGuid, 'The diagnosis does not have a transcriptGuid');\n\n            diagnosis.diagnosisGuid = 'DX_GUID_0';\n            return diagnosis;\n        });\n        await visit(`/PF/charts/patients/${PATIENT_PRACTICE_GUID}/summary`);\n        await click(`${(0, _dataElement.default)('diagnosis-display-select')} .composable-select__choice`);\n        await click((0, _dataElement.default)('diagnosis-display-select-option-0'));\n        await click((0, _dataElement.default)('add-diagnosis-button'));\n        assert.throws(findWithAssert('.diagnosis-detail'), 'Diagnosis detail pane shown');\n        const searchInput = `${(0, _dataElement.default)('diagnosis-result-search')} input`;\n        click(searchInput);\n        await fillIn(searchInput, 'spacecraft');\n        await click(`${(0, _dataElement.default)('diagnosis-result-search-1')} > div`);\n        fillIn((0, _dataElement.default)('diagnosis-start-date-picker'), START_DATE);\n        await click((0, _dataElement.default)('dx-add-medication-link'));\n        click((0, _dataElement.default)('diagnosis-panel-medication-input'));\n        await fillIn((0, _dataElement.default)('diagnosis-panel-medication-input'), 's');\n        await click((0, _dataElement.default)('dx-show-comment-link'));\n        fillIn('.diagnosis-detail--diagnosis-comment textarea', COMMENT);\n        click((0, _dataElement.default)('acute-label'));\n        await click((0, _dataElement.default)('save-diagnosis-button'));\n        assert.equal(find((0, _dataElement.default)('diagnosis-item-start-date')).text().trim(), '03/08/16', 'Start date appears under added dx');\n        assert.dom(`${(0, _dataElement.default)('acute-dx-list-0')} ${(0, _dataElement.default)('diagnosis-item-text')}`).hasAnyText(ICD10_DESCRIPTION, 'The diagnosis was added to the summary');\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/encounter-assessment-diagnoses-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element', 'boot/tests/helpers/get-text'], function (_qunit, _moduleForAcceptanceAuth, _dataElement, _getText) {\n    'use strict';\n\n    const TRANSCRIPT_GUID = '7022d94f-d70a-4722-a205-dac898cf9f69';\n    const PATIENT_PRACTICE_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const ENCOUNTER_URL = `/PF/charts/patients/${PATIENT_PRACTICE_GUID}/encounter/${TRANSCRIPT_GUID}`;\n    const ASSESSMENT_URL = `${ENCOUNTER_URL}/note/assessment`;\n    const MY_DX_NAME = 'Acute delta-(super) infection of hepatitis B carrier';\n    const MY_DX_GUID = 'MY_DX_GUID';\n    const NEW_DX_GUID = 'NEW_DX_GUID';\n    const NOW = moment(new Date()).toISOString();\n    const PREVIOUS_DX_GUID = '76799831-f630-4f71-bb7e-4ae0f801dcc4';\n    const DX_LIST = '.diagnoses-assessment-list';\n    const PREVIOUS_DX_FULL_NAME = 'Unspecified fracture of unspecified femur Acute Start: 11/03/16';\n    const SEARCH_INPUT = (0, _dataElement.default)('diagnosis-search-input');\n\n    function dg(guid) {\n        return `[data-guid=\"${guid}\"]`;\n    }\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Clinical | Encounter assessment diagnoses');\n\n    (0, _qunit.test)('Add diagnoses from the encounter assessment section', async assert => {\n        let postDiagnosisCount = 0;\n        let postTranscriptDxCount = 0;\n\n        server.post('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/diagnoses', ({ db }, request) => {\n            postDiagnosisCount++;\n            const diagnosis = JSON.parse(request.requestBody);\n            const transcriptDx = diagnosis.transcriptDiagnoses[0];\n            const icd10Code = diagnosis.diagnosisCodes.findBy('codeSystem', 'ICD10');\n\n            if (postDiagnosisCount === 1) {\n                assert.equal(diagnosis.name, MY_DX_NAME, 'The name is correct on the POSTed diagnosis');\n                assert.ok(icd10Code);\n                assert.equal(icd10Code.code, 'B17.0', 'The icd10 code is correct on the POSTed diagnosis');\n                assert.equal(transcriptDx.transcriptGuid, TRANSCRIPT_GUID, 'The transcriptGuid is correct on the POSTed diagnosis');\n                diagnosis.diagnosisGuid = MY_DX_GUID;\n            } else {\n                diagnosis.diagnosisGuid = NEW_DX_GUID;\n            }\n            assert.equal(diagnosis.patientPracticeGuid, PATIENT_PRACTICE_GUID, 'The patient guid is correct on the POSTed diagnosis');\n\n            transcriptDx.lastModifiedAt = NOW;\n            transcriptDx.sortOrder = postDiagnosisCount + postTranscriptDxCount - 1;\n            diagnosis.acuity = 'Unspecified';\n            return diagnosis;\n        });\n\n        server.post('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/diagnoses/:diagnosisGuid/transcriptDiagnoses', ({ db }, request) => {\n            postTranscriptDxCount++;\n            const transcriptDx = JSON.parse(request.requestBody);\n            if (postTranscriptDxCount === 1) {\n                assert.equal(request.params.diagnosisGuid, PREVIOUS_DX_GUID, 'The diagnosisGuid is correct on the POSTed transcript diagnosis');\n            }\n            assert.equal(transcriptDx.transcriptGuid, TRANSCRIPT_GUID, 'The transcriptGuid is correct on the POSTed transcript diagnosis');\n            transcriptDx.lastModifiedAt = NOW;\n            transcriptDx.sortOrder = postDiagnosisCount + postTranscriptDxCount - 1;\n            return transcriptDx;\n        });\n\n        server.delete('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/diagnoses/:diagnosisGuid/transcriptDiagnoses/:transcriptGuid', ({ db }, request) => {\n            assert.equal(request.params.transcriptGuid, TRANSCRIPT_GUID, 'The transcriptGuid is correct on the deleted transcript diagnosis');\n            assert.equal(request.params.diagnosisGuid, PREVIOUS_DX_GUID, 'The diagnosisGuid is correct on the deleted transcript diagnosis');\n        });\n\n        server.delete('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/diagnoses/:diagnosisGuid', ({ db }, request) => {\n            assert.equal(request.queryParams.transcriptGuid, TRANSCRIPT_GUID, 'The transcriptGuid is correct on the deleted diagnosis');\n            assert.equal(request.params.diagnosisGuid, NEW_DX_GUID, 'The diagnosisGuid is correct on the deleted diagnosis');\n        });\n\n        await visit(ENCOUNTER_URL);\n        click((0, _dataElement.default)('edit-note-assessment'));\n        click((0, _dataElement.default)('toolbox-tab-diagnoses'));\n        click((0, _dataElement.default)('diagnoses-tab-my-dx'));\n        await click('.favorite-diagnoses--item:first');\n        const myDxInList = `${DX_LIST} ${dg(MY_DX_GUID)}`;\n        const previousDx = `${(0, _dataElement.default)('previous-diagnosis-item')}${dg(PREVIOUS_DX_GUID)}`;\n        assert.equal((0, _getText.default)(myDxInList), MY_DX_NAME, 'The my dx appeared in the assessment after clicking it');\n        click((0, _dataElement.default)('diagnoses-tab-previous'));\n        await click(previousDx);\n        const previousDxInList = `${DX_LIST} ${dg(PREVIOUS_DX_GUID)}`;\n        const previousDxCheckmark = `${previousDx} .icon-checkmark`;\n        assert.equal((0, _getText.default)(`${previousDxInList} .medication-display`), PREVIOUS_DX_FULL_NAME, 'The previous diagnosis appeared in the assessment after clicking it');\n        assert.throws(findWithAssert(previousDxCheckmark), 'A checkmark is displayed on the previous diagnosis after clicking it');\n        await click(previousDx);\n        assert.notOk(find(previousDxCheckmark).length, 'The checkmark disappears after clicking the previous diagnosis again');\n        assert.notOk(find(previousDxInList).length, 'The previous diagnosis disappears from the assessment after clicking it again');\n        await click((0, _dataElement.default)('add-all-active-dx'));\n        assert.equal(find('.previous-diagnoses-results-list .icon-checkmark').length, 2, 'All the active diagnoses get checkmarks after clicking add all active');\n        assert.equal(find(`${DX_LIST} .medication-list-item`).length, 2, 'All the active diagnoses are added to the assessment after clicking add all active');\n        await click((0, _dataElement.default)('diagnoses-tab-record'));\n        assert.throws(findWithAssert('.diagnosis-detail'), 'The add diagnosis details pane was opened when clicking the record button');\n        click(SEARCH_INPUT);\n        fillIn(SEARCH_INPUT, 'spacecraft');\n        await click(`${(0, _dataElement.default)('diagnosis-result-search-1')} > div`);\n        await click((0, _dataElement.default)('save-diagnosis-button'));\n        const newDxInList = `${DX_LIST} ${dg(NEW_DX_GUID)}`;\n        assert.equal(currentURL(), ASSESSMENT_URL, 'The assessment details pane is opened again after adding the diagnosis');\n        assert.equal((0, _getText.default)(`${newDxInList} .medication-display`), 'Spacecraft collision injuring occupant, sequela', 'The new diagnosis appeared in the assessment');\n        await click(`${newDxInList} .close-box-small`);\n        assert.notOk(find(newDxInList).length, 'The diagnosis was removed from the assessment after clicking the x');\n        await click(`${myDxInList} .medication-display a`);\n        assert.equal(currentURL(), `${ENCOUNTER_URL}/diagnosis/${MY_DX_GUID}`, 'The diagnosis details pane was opened after clicking the diagnosis name');\n        await click((0, _dataElement.default)('cancel-diagnosis-button'));\n        assert.equal(currentURL(), ASSESSMENT_URL, 'The assessment details pane is opened again after clicking cancel');\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/encounter-plan-medications-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element', 'boot/tests/helpers/get-text'], function (_qunit, _moduleForAcceptanceAuth, _dataElement, _getText) {\n    'use strict';\n\n    const TRANSCRIPT_GUID = '7022d94f-d70a-4722-a205-dac898cf9f69';\n    const PATIENT_PRACTICE_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const ENCOUNTER_URL = `/PF/charts/patients/${PATIENT_PRACTICE_GUID}/encounter/${TRANSCRIPT_GUID}`;\n    const PLAN_URL = `${ENCOUNTER_URL}/note/plan`;\n    const FREQUENT_MED_NAME = 'Vicks Air Purifier/HEPA (Device) Miscellaneous';\n    const FREQUENT_MED_NDC = '28785099130';\n    const FREQUENT_MED_GUID = 'FREQUENT_MED_GUID';\n    const MEDICATION_LIST = '.medications-plan-list';\n    const PREVIOUS_MED_GUID = '2c02a498-dccd-4cf2-8091-bff6cf6e23c1';\n    const PREVIOUS_MED_NAME = 'Xanax 0.25 MG Oral Tablet';\n    const PREVIOUS_MED_FULL_NAME = 'Alprazolam (Xanax) 0.25 MG Oral Tablet Start: 09/27/16 Stop: 09/30/16 Sig: 4 times a day';\n    const NOW = moment(new Date()).toISOString();\n    const SEARCH_INPUT = `${(0, _dataElement.default)('medications-search')} input`;\n    const NEW_MED_GUID = 'NEW_MED_GUID';\n\n    function dg(guid) {\n        return `[data-guid=\"${guid}\"]`;\n    }\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Clinical | Encounter plan medications');\n\n    (0, _qunit.test)('Add medications from the encounter plan section', async assert => {\n        const frequentMed = `${(0, _dataElement.default)('frequent-medications')} ${dg('a9682900-ecc1-4c3b-ba9f-aa3bd2b216c7')}`;\n        const frequentMedInList = `${MEDICATION_LIST} ${dg(FREQUENT_MED_GUID)}`;\n        const previousMed = `${(0, _dataElement.default)('encounter-medication-item')}${dg(PREVIOUS_MED_GUID)}`;\n        const previousMedInList = `${MEDICATION_LIST} ${dg(PREVIOUS_MED_GUID)}`;\n        const previousMedCheckmark = `${previousMed} .icon-checkmark`;\n        const newMedInList = `${MEDICATION_LIST} ${dg(NEW_MED_GUID)}`;\n        let postTranscriptMedCount = 0;\n        let postMedicationCount = 0;\n        let deletedTranscriptMedCount = 0;\n\n        server.post('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/medications', ({ db }, request) => {\n            postMedicationCount++;\n            const medication = JSON.parse(request.requestBody);\n            const transcriptMed = medication.transcriptMedications[0];\n\n            if (postMedicationCount === 1) {\n                assert.equal(medication.drugName, FREQUENT_MED_NAME, 'The drug name is correct on the POSTed medication');\n                assert.equal(medication.ndc, FREQUENT_MED_NDC, 'The drug ndc is correct on the POSTed medication');\n                assert.equal(transcriptMed.transcriptGuid, TRANSCRIPT_GUID, 'The transcriptGuid is correct on the POSTed medication');\n                medication.medicationGuid = FREQUENT_MED_GUID;\n            } else {\n                medication.medicationGuid = NEW_MED_GUID;\n            }\n            assert.equal(medication.patientPracticeGuid, PATIENT_PRACTICE_GUID, 'The patient guid is correct on the POSTed medication');\n\n            transcriptMed.lastModifiedDateTimeUtc = NOW;\n            return medication;\n        });\n\n        server.post('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/medications/:medicationGuid/transcriptMedications', ({ db }, request) => {\n            postTranscriptMedCount++;\n            const transcriptMed = JSON.parse(request.requestBody);\n            assert.equal(request.params.patientPracticeGuid, PATIENT_PRACTICE_GUID, 'The patientPracticeGuid is correct on the POSTed transcript medication');\n            if (postTranscriptMedCount === 1) {\n                assert.equal(request.params.medicationGuid, PREVIOUS_MED_GUID, 'The medicationGuid is correct on the POSTed transcript medication');\n            }\n            assert.equal(transcriptMed.transcriptGuid, TRANSCRIPT_GUID, 'The transcriptGuid is correct on the POSTed transcript medication');\n            transcriptMed.lastModifiedDateTimeUtc = NOW;\n            return transcriptMed;\n        });\n\n        server.delete('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/medications/:medicationGuid/transcriptMedications/:transcriptGuid', ({ db }, request) => {\n            deletedTranscriptMedCount++;\n            const expectedMedGuid = deletedTranscriptMedCount === 1 ? PREVIOUS_MED_GUID : NEW_MED_GUID;\n            assert.equal(request.params.patientPracticeGuid, PATIENT_PRACTICE_GUID, 'The patientPracticeGuid is correct on the deleted transcript medication');\n            assert.equal(request.params.transcriptGuid, TRANSCRIPT_GUID, 'The transcriptGuid is correct on the deleted transcript medication');\n            assert.equal(request.params.medicationGuid, expectedMedGuid, 'The medicationGuid is correct on the deleted transcript medication');\n        });\n\n        await visit(ENCOUNTER_URL);\n        click((0, _dataElement.default)('edit-note-plan'));\n        click((0, _dataElement.default)('toolbox-tab-medications'));\n        await click((0, _dataElement.default)('medications-tab-frequent'));\n        assert.equal(find(frequentMed).text(), FREQUENT_MED_NAME, 'The frequent medication is in the frequent meds list');\n        await click(frequentMed);\n        assert.equal((0, _getText.default)(frequentMedInList), FREQUENT_MED_NAME, 'The frequent medication appeared in the plan after clicking it');\n        await click((0, _dataElement.default)('medications-tab-previous'));\n        assert.equal((0, _getText.default)(previousMed), PREVIOUS_MED_NAME, 'The previous medication is in the previous meds list');\n        await click(previousMed);\n        assert.equal((0, _getText.default)(`${previousMedInList} .medication-display`), PREVIOUS_MED_FULL_NAME, 'The previous medication appeared in the plan after clicking it');\n        assert.throws(findWithAssert(previousMedCheckmark), 'A checkmark is displayed on the previous medication after clicking it');\n        await click(previousMed);\n        assert.notOk(find(previousMedCheckmark).length, 'The checkmark disappears after clicking the previous medication again');\n        assert.notOk(find(previousMedInList).length, 'The previous medication disappears from the plan after clicking it again');\n        await click((0, _dataElement.default)('add-all-active-meds'));\n        assert.equal(find('.previous-medications-results-list .icon-checkmark').length, 2, 'All the active medications get checkmarks after clicking add all active');\n        assert.equal(find(`${MEDICATION_LIST} .medication-list-item`).length, 2, 'All the active medications are added to the plan after clicking add all active');\n        await click((0, _dataElement.default)('medications-tab-record'));\n        assert.throws(findWithAssert('.medication-detail'), 'The add medication details pane was opened when clicking the record button');\n        click(SEARCH_INPUT);\n        await fillIn(SEARCH_INPUT, 'vicodin');\n        await wait();\n        click((0, _dataElement.default)('medications-search-0'));\n        await click('.detail-pane-footer .btn-primary');\n        assert.equal(currentURL(), PLAN_URL, 'The plan details pane is opened again after adding the medication');\n        assert.equal((0, _getText.default)(`${newMedInList} .medication-display`), 'Hydrocodone-Acetaminophen (Vicodin) 5-300 MG Oral Tablet', 'The new medication appeared in the plan');\n        await click(`${newMedInList} .close-box-small`);\n        assert.notOk(find(newMedInList).length, 'The medication was removed from the plan after clicking the x');\n        await click(`${frequentMedInList} a`);\n        assert.equal(currentURL(), `${ENCOUNTER_URL}/medication/${FREQUENT_MED_GUID}`, 'The medication details pane was opened after clicking the medication name');\n        await click(`.detail-pane-footer ${(0, _dataElement.default)('cancel-btn')}`);\n        assert.equal(currentURL(), PLAN_URL, 'The plan details pane is opened again after clicking cancel');\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/family-history-limited-access-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element', 'boot/models/session'], function (_qunit, _moduleForAcceptanceAuth, _dataElement, _session) {\n    'use strict';\n\n    function dg(guid) {\n        return `[data-guid='${guid}']`;\n    }\n\n    const PATIENT_PRACTICE_GUID = 'c5faffde-78e2-4924-acaf-2115bc686d5e';\n    const FAMILY_HISTORY_ROUTE = `/PF/charts/patients/${PATIENT_PRACTICE_GUID}/familyhistory`;\n    const RELATIVE_GUID = 'ca13d90a-7c0e-4437-99fd-576f55aaa1c0';\n    const OBSERVATION_GUID = 'd8858c94-4118-417e-8e0d-5ce135a9ca58';\n    const RELATIVE_CARD = `${dg(RELATIVE_GUID)}${(0, _dataElement.default)('relative-card')}`;\n    const EDIT_DX = `${dg(OBSERVATION_GUID)}${(0, _dataElement.default)('edit-diagnosis')}`;\n    const EDIT_RELATIVE = `${RELATIVE_CARD} ${(0, _dataElement.default)('edit-relative')}`;\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Clinical | Family health history limited access', {\n        beforeEach() {\n            Ember.run(() => {\n                _session.default.set('isAdmin', true);\n            });\n        },\n        beforeLogin() {\n            server.get('AuthzEndpoint/api/v1/users/:id/rights', () => ({\n                entitledFeatures: ['ERX.Send', 'Chart.Sign', 'EPCS.Send']\n            }));\n        }\n    });\n\n    (0, _qunit.test)('Adding relative is disabled', async assert => {\n        server.get('ClinicalEndpoint/api/v1/FamilyHealthHistory/:patientPracticeGuid/conditions', ({ db }) => db.familyHealthConditions[0].noName);\n        server.get('ClinicalEndpoint/api/v1/FamilyHealthHistory/:patientPracticeGuid', ({ db }) => db.familyHealthInformation[0].original);\n\n        await visit(FAMILY_HISTORY_ROUTE);\n        assert.dom((0, _dataElement.default)('record-new-relative')).hasClass('invisible');\n    });\n\n    (0, _qunit.test)('Editing or deleting a relative is disabled', async assert => {\n        server.get('ClinicalEndpoint/api/v1/FamilyHealthHistory/:patientPracticeGuid', ({ db }) => db.familyHealthInformation[0].original);\n\n        server.get('ClinicalEndpoint/api/v3/diagnosis/typeSearch/', ({ db }) => db.familyHistoryDiagnosisSearch);\n\n        await visit(FAMILY_HISTORY_ROUTE);\n        assert.dom(EDIT_RELATIVE).hasText('View');\n        await click(EDIT_RELATIVE);\n        assert.dom(`input${(0, _dataElement.default)('relative-first-name')}`).doesNotExist();\n        assert.dom(`input${(0, _dataElement.default)('relative-last-name')}`).doesNotExist();\n        assert.dom(`${(0, _dataElement.default)('relative-birthdate')} input`).doesNotExist();\n        assert.dom(`${(0, _dataElement.default)('relative-deceased-checkbox')} input`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('relative-comments')} textarea`).doesNotExist();\n        assert.dom((0, _dataElement.default)('relative-delete')).doesNotExist();\n        assert.dom((0, _dataElement.default)('relative-save')).doesNotExist();\n    });\n\n    (0, _qunit.test)('Editing and deleting diagnosis for a relative is disabled', async assert => {\n        server.put(`ClinicalEndpoint/api/v1/FamilyHealthHistory/${PATIENT_PRACTICE_GUID}/observations/:observationGuid`, () => true);\n\n        server.get('ClinicalEndpoint/api/v1/FamilyHealthHistory/:patientPracticeGuid', ({ db }) => db.familyHealthInformation[0].original);\n\n        await visit(FAMILY_HISTORY_ROUTE);\n        await click(EDIT_DX);\n        assert.dom(`${(0, _dataElement.default)('diagnosis-comments')} textarea`).doesNotExist();\n        assert.dom(`${(0, _dataElement.default)('diagnosis-onset-date')} input`).doesNotExist();\n        assert.dom((0, _dataElement.default)('diagnosis-delete')).doesNotExist();\n        assert.dom((0, _dataElement.default)('diagnosis-save')).doesNotExist();\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/family-history-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element'], function (_qunit, _moduleForAcceptanceAuth, _dataElement) {\n    'use strict';\n\n    function dg(guid) {\n        return `[data-guid='${guid}']`;\n    }\n\n    const PATIENT_PRACTICE_GUID = 'c5faffde-78e2-4924-acaf-2115bc686d5e';\n    const FAMILY_HISTORY_ROUTE = `/PF/charts/patients/${PATIENT_PRACTICE_GUID}/familyhistory`;\n    const RELATIVE_GUID = 'ca13d90a-7c0e-4437-99fd-576f55aaa1c0';\n    const OBSERVATION_GUID = 'd8858c94-4118-417e-8e0d-5ce135a9ca58';\n    const RELATIVE_CARD = `${dg(RELATIVE_GUID)}${(0, _dataElement.default)('relative-card')}`;\n    const EDIT_RELATIVE = `${RELATIVE_CARD} ${(0, _dataElement.default)('edit-relative')}`;\n    const EDIT_DX = `${dg(OBSERVATION_GUID)}${(0, _dataElement.default)('edit-diagnosis')}`;\n    const ADD_DIAGNOSIS = `${RELATIVE_CARD} ${(0, _dataElement.default)('add-diagnosis')}`;\n    const RELATIVE_COMMENTS = `${(0, _dataElement.default)('relative-comments')} textarea`;\n    const DX_SEARCH = `${(0, _dataElement.default)('diagnosis-search')} input`;\n    const DX_COMMENTS = `${(0, _dataElement.default)('diagnosis-comments')} textarea`;\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Visual - Core - Clinical | Family health history');\n\n    (0, _qunit.test)('Adding a relative', async assert => {\n        let callCountHistory = 0;\n\n        server.get('ClinicalEndpoint/api/v1/FamilyHealthHistory/:patientPracticeGuid/conditions', ({ db }) => db.familyHealthConditions[0].noName);\n        server.get('ClinicalEndpoint/api/v1/FamilyHealthHistory/:patientPracticeGuid', ({ db }) => {\n            callCountHistory += 1;\n            if (callCountHistory === 1) {\n                return db.familyHealthInformation[0].original;\n            }\n            return db.familyHealthInformation[0].addedRelative;\n        });\n\n        await visit(FAMILY_HISTORY_ROUTE);\n        await click((0, _dataElement.default)('record-new-relative'));\n        await click((0, _dataElement.default)('relative-relationship-option-2'));\n        fillIn((0, _dataElement.default)('relative-first-name'), 'Charles');\n        fillIn((0, _dataElement.default)('relative-last-name'), 'Doe');\n        fillIn(`${(0, _dataElement.default)('relative-birthdate')} input`, '1/2/1924');\n        await fillIn(RELATIVE_COMMENTS, 'Most Awesome Dad Evaa!');\n        percySnapshot(assert);\n        await click((0, _dataElement.default)('relative-save'));\n        assert.dom(`${dg('d0b6917f-243f-4059-ac28-e6a329d50d77')}${(0, _dataElement.default)('relative-card')} .card__title`).hasText('Parent - Charles Doe');\n    });\n\n    (0, _qunit.test)('Editing and deleting a relative', async assert => {\n        let callCountHistory = 0;\n\n        server.put(`ClinicalEndpoint/api/v1/FamilyHealthHistory/${PATIENT_PRACTICE_GUID}/relatives`, () => true);\n        server.get('ClinicalEndpoint/api/v1/FamilyHealthHistory/:patientPracticeGuid', ({ db }) => {\n            callCountHistory += 1;\n            if (callCountHistory === 1) {\n                return db.familyHealthInformation[0].original;\n            } else if (callCountHistory === 2) {\n                return db.familyHealthInformation[0].editRelative;\n            }\n            return db.familyHealthInformation[0].noRelative;\n        });\n\n        await visit(FAMILY_HISTORY_ROUTE);\n        await click(EDIT_RELATIVE);\n        fillIn(RELATIVE_COMMENTS, 'Some comment');\n        await click((0, _dataElement.default)('relative-save'));\n        await click(EDIT_RELATIVE);\n        assert.dom(RELATIVE_COMMENTS).hasValue('Some comment');\n        await click((0, _dataElement.default)('relative-delete'));\n        assert.dom(RELATIVE_CARD).doesNotExist();\n    });\n\n    (0, _qunit.test)('Add a diagnosis for a relative', async assert => {\n        const dxDescription = 'Disorder of lung';\n        let callCountHistory = 0;\n\n        server.get('ClinicalEndpoint/api/v1/FamilyHealthHistory/:patientPracticeGuid', ({ db }) => {\n            callCountHistory += 1;\n            if (callCountHistory === 1) {\n                return db.familyHealthInformation[0].original;\n            }\n            return db.familyHealthInformation[0].addDx;\n        });\n        server.get('ClinicalEndpoint/api/v3/diagnosis/typeSearch/', ({ db }) => db.familyHistoryDiagnosisSearches);\n\n        await visit(FAMILY_HISTORY_ROUTE);\n        await click(ADD_DIAGNOSIS);\n        await click('.family-history-detail__pane');\n        fillIn(DX_SEARCH, 'Lung');\n        await click(DX_SEARCH);\n        await keyEvent(DX_SEARCH, 'keyup', 32);\n        await click((0, _dataElement.default)('diagnosis-search-option-2'));\n        fillIn(`${(0, _dataElement.default)('diagnosis-onset-date')} input`, '11/8/2016');\n        await fillIn(DX_COMMENTS, 'Comment');\n        percySnapshot(assert);\n        await click((0, _dataElement.default)('diagnosis-save'));\n        assert.dom(`${dg('27a695ce-048e-4dc7-abcd-ba4b87fc5190')}${(0, _dataElement.default)('edit-diagnosis')}`).hasText(dxDescription);\n    });\n\n    (0, _qunit.test)('Edit and delete diagnosis for a relative', async assert => {\n        let callCountHistory = 0;\n\n        server.put(`ClinicalEndpoint/api/v1/FamilyHealthHistory/${PATIENT_PRACTICE_GUID}/observations/:observationGuid`, () => true);\n        server.get('ClinicalEndpoint/api/v1/FamilyHealthHistory/:patientPracticeGuid', ({ db }) => {\n            callCountHistory += 1;\n            if (callCountHistory === 1) {\n                return db.familyHealthInformation[0].original;\n            } else if (callCountHistory === 2) {\n                return db.familyHealthInformation[0].editDx;\n            }\n            return db.familyHealthInformation[0].deletedDx;\n        });\n\n        await visit(FAMILY_HISTORY_ROUTE);\n        await click(EDIT_DX);\n        fillIn(DX_COMMENTS, 'Some comment');\n        await click((0, _dataElement.default)('diagnosis-save'));\n        await click(EDIT_DX);\n        assert.dom(DX_COMMENTS).hasValue('Some comment');\n        await click((0, _dataElement.default)('diagnosis-delete'));\n        assert.dom(EDIT_DX).doesNotExist();\n    });\n\n    (0, _qunit.test)('Family Health History Print Preview', async assert => {\n        server.post('ChartingEndpoint/api/v2/PrintAudit', () => true);\n\n        await visit(FAMILY_HISTORY_ROUTE);\n        await click((0, _dataElement.default)('actions-menu'));\n        await click(`${(0, _dataElement.default)('action-menu-item-1')} a`);\n        assert.dom((0, _dataElement.default)('print-header-patient-name')).hasText('Cade Baby', 'Patient name renders correctly');\n        assert.dom((0, _dataElement.default)('print-header-patient-dob')).hasText('02/05/2013', 'Patient date of birth renders correctly');\n        assert.dom((0, _dataElement.default)('print-header-patient-age')).hasText('3 yrs', 'Patient age renders correctly');\n        assert.dom((0, _dataElement.default)('print-header-patient-gender')).hasText('Male', 'Patient genders renders correctly');\n        assert.dom((0, _dataElement.default)('print-header-patient-prn')).hasText('BC251057', 'Patient prn renders correctly');\n\n        assert.dom((0, _dataElement.default)('print-header-facility-name')).hasText('Rosalise Ron Practice', 'Facility name renders correctly');\n        assert.dom((0, _dataElement.default)('print-header-facility-address')).hasText('123', 'Facility address renders correctly');\n        assert.dom((0, _dataElement.default)('print-header-facility-phone')).hasText('(555) 555-0000', 'Facility phone number renders correctly');\n        assert.dom((0, _dataElement.default)('print-header-facility-city-state-zip')).hasText('Schenectady, NY 12345', 'Facility city-state-zip renders correctly');\n\n        assert.dom((0, _dataElement.default)('relative')).hasText('Grandparent - Joe', 'Relative renders correctly');\n        assert.dom((0, _dataElement.default)('dx')).hasText('Heart disease', 'Relative diagnosis renders correctly');\n        assert.dom((0, _dataElement.default)('dx-onset-date')).hasText('11/01/2016', 'Relative\\'s diagnosis onset date renders correctly');\n        assert.dom((0, _dataElement.default)('observation-comment')).hasText('Comments: Comment', 'Comments renders correctly');\n        await click('.glyphicon-remove');\n    });\n\n    (0, _qunit.test)('Add, edit, clear family health history on patient summary', async assert => {\n        const patientWithHistory = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n        const patientWithoutHistory = 'c5faffde-78e2-4924-acaf-2115bc686d5e';\n        const patientWithHistoryToClear = 'fd198d85-b2e4-435b-854a-b924b3261d75';\n\n        server.get('/ClinicalEndpoint/api/v2/PersonalMedicalHistory/:id', ({ db }, request) => db.personalMedicalHistories.where({\n            patientPracticeGuid: request.params.id\n        })[0]);\n\n        server.put('/ClinicalEndpoint/api/v2/PersonalMedicalHistory/:id', (schema, request) => {\n            const history = JSON.parse(request.requestBody);\n            switch (request.params.id) {\n                case patientWithHistory:\n                    assert.equal(history.familyHealthHistory, 'Min farfar är gammal', 'Edited family health history is sent correctly');\n                    break;\n                case patientWithoutHistory:\n                    assert.equal(history.familyHealthHistory, 'Min familj har en gula halsduk', 'New family health history is sent correctly');\n                    break;\n                case patientWithHistoryToClear:\n                    assert.equal(history.familyHealthHistory, '', 'Cleared family health history is sent correctly');\n                    break;\n                default:\n            }\n            return history;\n        });\n\n        await visit(`/PF/charts/patients/${patientWithoutHistory}/summary`);\n        assert.dom((0, _dataElement.default)('family-history-section-message')).hasText('No family health history recorded', 'The family health history placeholder text is correct');\n        assert.dom((0, _dataElement.default)('family-health-history-card-list-item')).hasClass('hidden', 'Item that displays family health history text is hidden');\n        await click((0, _dataElement.default)('add-family-history-button'));\n        assert.dom((0, _dataElement.default)('family-health-history-card-list-record-item')).doesNotHaveClass('hidden', 'Record placeholder appears while adding new history');\n        assert.dom((0, _dataElement.default)('add-family-history-button')).doesNotExist('Add icon is hidden while editing');\n        fillIn(`${(0, _dataElement.default)('family-health-history-text-area-container')} ${(0, _dataElement.default)('text-area-counter')}`, 'Min familj har en gula halsduk');\n        await click((0, _dataElement.default)('btn-save-family-health-history'));\n        assert.dom((0, _dataElement.default)('family-history-text')).hasText('Min familj har en gula halsduk', 'The family health history card updated');\n\n        await visit(`/PF/charts/patients/${patientWithHistory}/summary`);\n        assert.dom((0, _dataElement.default)('family-history-section-message')).hasClass('hidden', 'The family health history placeholder is not displayed');\n        assert.dom((0, _dataElement.default)('family-history-text')).hasText('Such a family', 'The family health history card displays correct text');\n        assert.dom((0, _dataElement.default)('add-family-history-button')).doesNotExist('Add icon is hidden when has history');\n        await click((0, _dataElement.default)('family-health-history-card-list-item'));\n        assert.dom((0, _dataElement.default)('family-health-history-card-list-record-item')).hasClass('hidden', 'Record placeholder hidden while editing saved history');\n        assert.dom((0, _dataElement.default)('family-health-history-card-list-item')).hasClass('is-active', 'History item is active');\n        assert.dom((0, _dataElement.default)('add-family-history-button')).doesNotExist('Add icon is hidden while editing');\n        fillIn(`${(0, _dataElement.default)('family-health-history-text-area-container')} ${(0, _dataElement.default)('text-area-counter')}`, 'Min farfar är gammal');\n        await click((0, _dataElement.default)('btn-save-family-health-history'));\n        assert.dom((0, _dataElement.default)('family-history-text')).hasText('Min farfar är gammal', 'The family health history card updated');\n\n        await visit(`/PF/charts/patients/${patientWithHistoryToClear}/summary`);\n        assert.dom((0, _dataElement.default)('family-history-text')).hasText('Family dinner night', 'The family health history card displays correct text');\n        await click((0, _dataElement.default)('family-health-history-card-list-item'));\n        fillIn(`${(0, _dataElement.default)('family-health-history-text-area-container')} ${(0, _dataElement.default)('text-area-counter')}`, '');\n        await click((0, _dataElement.default)('btn-save-family-health-history'));\n        assert.dom((0, _dataElement.default)('family-history-text')).hasText('', 'The family health history card updated');\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/health-concerns-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element', 'boot/tests/helpers/get-text', 'boot/repositories/view-preferences', 'boot/tests/helpers/get-text-in-print'], function (_qunit, _moduleForAcceptanceAuth, _dataElement, _getText, _viewPreferences, _getTextInPrint) {\n    'use strict';\n\n    const PATIENT_PRACTICE_GUID = 'c5faffde-78e2-4924-acaf-2115bc686d5e';\n    const DETAIL_PANE = '.health-concern-detail';\n    const HEALTH_CONCERN_GUID = 'HEALTH_CONCERN_GUID';\n    const DIAGNOSIS_GUID = 'b3da2472-d894-4b29-967e-c4aadade0841';\n    const SINGLE_HEALTH_CONCERN = {\n        patientHealthConcerns: [{\n            patientHealthConcernGuid: HEALTH_CONCERN_GUID,\n            patientPracticeGuid: PATIENT_PRACTICE_GUID,\n            healthConcernReferenceGuid: DIAGNOSIS_GUID,\n            effectiveDate: '2017-06-12T00:00:00.000Z',\n            isActive: true\n        }]\n    };\n    const MULTIPLE_HEALTH_CONCERNS = {\n        patientHealthConcerns: [{\n            patientHealthConcernGuid: HEALTH_CONCERN_GUID,\n            patientPracticeGuid: PATIENT_PRACTICE_GUID,\n            healthConcernReferenceGuid: DIAGNOSIS_GUID,\n            healthConcernType: 'Diagnosis',\n            effectiveDate: '2017-06-12T00:00:00.000Z',\n            isActive: true\n        }, {\n            patientHealthConcernGuid: 'HEALTH_CONCERN_GUID_2',\n            patientPracticeGuid: PATIENT_PRACTICE_GUID,\n            healthConcernReferenceGuid: '3d26806e-aaa8-4092-87ba-944da229a299',\n            effectiveDate: '2015-06-12T00:00:00.000Z',\n            healthConcernType: 'Allergy',\n            isActive: true\n        }, {\n            patientHealthConcernGuid: 'HEALTH_CONCERN_GUID_3',\n            patientPracticeGuid: PATIENT_PRACTICE_GUID,\n            healthConcernReferenceGuid: '437e31e2-dca5-4563-a74d-247b33433558',\n            effectiveDate: '2015-06-12T00:00:00.000Z',\n            healthConcernType: 'Allergy',\n            isActive: false\n        }]\n    };\n    const SEARCH_RESULT = `${DETAIL_PANE} ${(0, _dataElement.default)('selected-source-results')} li`;\n    const DETAIL_PANE_TITLE = (0, _dataElement.default)('health-concern-reference-title');\n    const DETAIL_PANE_EFFECTIVE_DATE = `${DETAIL_PANE} ${(0, _dataElement.default)('health-concern-effective-date')}`;\n    const EFFECTIVE_DATE = '07/24/2017';\n    const EFFECTIVE_DATE_UTC = '2017-07-24T00:00:00.000Z';\n\n    function isHidden($item) {\n        return $item.is('.hidden') || !!$item.parents('.hidden').length;\n    }\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Clinical | Health concerns - v2', {\n        beforeEach() {\n            _viewPreferences.default.set('_preferences', {\n                'patient-summary-page': {\n                    hideHealthConcerns: false\n                }\n            });\n        }\n    });\n\n    (0, _qunit.test)('Save and add another health concern', async assert => {\n        let postCalled = false;\n        server.post('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/patientHealthConcerns', ({ db }, request) => {\n            postCalled = true;\n            const data = JSON.parse(request.requestBody);\n            data.patientHealthConcernGuid = HEALTH_CONCERN_GUID;\n            assert.equal(data.healthConcernReferenceGuid, DIAGNOSIS_GUID, 'The reference guid is correct on POST');\n            assert.equal(data.healthConcernType, 'Diagnosis', 'The health concern type is correct on POST');\n            assert.equal(data.effectiveDate, EFFECTIVE_DATE_UTC, 'The effective date is correct on POST');\n            return {\n                patientHealthConcern: data\n            };\n        });\n        await visit(`/PF/charts/patients/${PATIENT_PRACTICE_GUID}/summary/healthConcern/new`);\n        const $saveButton = find(`${DETAIL_PANE} ${(0, _dataElement.default)('btn-save')}`);\n        const $saveAnotherButton = find(`${DETAIL_PANE} ${(0, _dataElement.default)('btn-save-add-another')}`);\n        const $deleteButton = find(`${DETAIL_PANE} ${(0, _dataElement.default)('btn-delete')}`);\n        const $typeahead = find(`${DETAIL_PANE} .checkbox-multi-select`);\n        assert.notOk(find(DETAIL_PANE_TITLE).length, 'The health concern reference title does not appear until a clinical item has been selected');\n        assert.ok(isHidden($saveButton), 'The save button is hidden');\n        assert.ok(isHidden($saveAnotherButton), 'The save & add another button is hidden');\n        assert.ok(isHidden($deleteButton), 'The delete button is hidden');\n        assert.ok($typeahead.length, 'The typeahead clinical item select is visible');\n        click($typeahead.find('input'));\n        await click(`${SEARCH_RESULT}:first-of-type .option-container`);\n        assert.notOk(isHidden($saveButton), 'The save button is visible');\n        assert.notOk(isHidden($saveAnotherButton), 'The save & add another button is visible');\n        assert.equal((0, _getText.default)(DETAIL_PANE_TITLE), '(E845.9) Accident involving spacecraft injuring other person', 'The title is correct after selecting a clinical item');\n        fillIn(DETAIL_PANE_EFFECTIVE_DATE, EFFECTIVE_DATE);\n        await click($saveAnotherButton);\n        assert.ok(postCalled);\n        assert.notOk(find(DETAIL_PANE_TITLE).length, 'The detail pane was reset');\n        await click(find(`${DETAIL_PANE} .checkbox-multi-select`).find('input'));\n        assert.notOk(find(SEARCH_RESULT).length, 'The diagnoses list does not contain the previous item since it is now a health concern');\n        await click(`${DETAIL_PANE} ${(0, _dataElement.default)('btn-cancel')}`);\n        assert.notOk(find(DETAIL_PANE).length, 'The detail pane disappears after clicking cancel');\n    });\n\n    (0, _qunit.test)('Edit existing health concern', async assert => {\n        let putCalled = false;\n        server.get('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/patientHealthConcerns', () => SINGLE_HEALTH_CONCERN);\n        server.put('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/patientHealthConcerns/:guid', ({ db }, request) => {\n            putCalled = true;\n            const data = JSON.parse(request.requestBody);\n            assert.equal(data.effectiveDate, EFFECTIVE_DATE_UTC, 'The effective date is correct on PUT');\n            return {\n                patientHealthConcern: data\n            };\n        });\n\n        await visit(`/PF/charts/patients/${PATIENT_PRACTICE_GUID}/summary/healthConcern/${HEALTH_CONCERN_GUID}`);\n        const $saveButton = find(`${DETAIL_PANE} ${(0, _dataElement.default)('btn-save')}`);\n        const $effectiveDate = find(DETAIL_PANE_EFFECTIVE_DATE);\n        assert.equal((0, _getText.default)(DETAIL_PANE_TITLE), '(E845.9) Accident involving spacecraft injuring other person', 'The title is correct when editing a health concern');\n        assert.ok(isHidden(find(`${DETAIL_PANE} ${(0, _dataElement.default)('btn-save-add-another')}`)), 'The save & add another button is hidden');\n        assert.notOk(isHidden($saveButton), 'The save button is visible');\n        assert.notOk(isHidden(find(`${DETAIL_PANE} ${(0, _dataElement.default)('btn-delete')}`)), 'The delete button is visible');\n        assert.equal($effectiveDate.val(), '6/12/2017', 'The effective date is rendered correctly on edit');\n        fillIn($effectiveDate, EFFECTIVE_DATE);\n        await click($saveButton);\n        assert.ok(putCalled, 'PUT was called on save');\n        assert.notOk(find(DETAIL_PANE).length, 'The detail pane disappears after clicking save');\n    });\n\n    (0, _qunit.test)('Delete allergy & diagnosis removes health concern', async assert => {\n        server.get('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/patientHealthConcerns', () => MULTIPLE_HEALTH_CONCERNS);\n        server.get('ClinicalEndpoint/api/v3/patients/:id/allergies', ({ db }) => {\n            const [allergies] = db.patientAllergies;\n            allergies.patientAllergies.setEach('patientPracticeGuid', PATIENT_PRACTICE_GUID);\n            return allergies;\n        });\n        server.delete('ClinicalEndpoint/api/v3/patients/:patientPracticeGuid/allergies/:id', () => {});\n        server.delete('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/diagnoses/:guid', () => {});\n        server.get('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/diagnoses/:diagnosisGuid', ({ db }, request) => {\n            return {\n                diagnosisGuid: request.params.diagnosisGuid\n            };\n        });\n        await visit(`/PF/charts/patients/${PATIENT_PRACTICE_GUID}/summary`);\n        const list = '.patient-health-concerns-list';\n        const item = `${list} ul.list li`;\n        const itemTitle = `${item} ${(0, _dataElement.default)('health-concern-title')}`;\n        const allergyItem = `${itemTitle}:contains('AA&C')`;\n        const diagnosisItem = `${itemTitle}:contains('(E845.9) Accident involving spacecraft injuring other person')`;\n        assert.throws(findWithAssert(allergyItem), 'The allergy health concern is present before deleting the allergy');\n        assert.throws(findWithAssert(diagnosisItem), 'The diagnosis health concern is present before deleting the diagnosis');\n        click((0, _dataElement.default)('active-allergy-1'));\n        click(`.allergy-details ${(0, _dataElement.default)('btn-delete')}`);\n        await click(`.allergy-details .confirm-dialog-content ${(0, _dataElement.default)('confirm-dialog-confirm')}`);\n        assert.notOk(find(allergyItem).length, 'The allergy health concern is no longer present after deleting the allergy');\n        click(`${(0, _dataElement.default)('diagnosis-item-text')}:contains('Victim of spacecraft accident')`);\n        click('.diagnosis-detail--footer button:contains(\"Delete\")');\n        await click('.ember-tether.popover .btn-primary');\n        assert.notOk(find(diagnosisItem).length, 'The diagnosis health concern is no longer present after deleting the diagnosis');\n    });\n\n    (0, _qunit.test)('Print health concerns', async assert => {\n        let printAuditCalled = false;\n        server.get('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/patientHealthConcerns', () => MULTIPLE_HEALTH_CONCERNS);\n        server.get('ClinicalEndpoint/api/v3/patients/:id/allergies', ({ db }) => {\n            const [allergies] = db.patientAllergies;\n            allergies.patientAllergies.setEach('patientPracticeGuid', PATIENT_PRACTICE_GUID);\n            return allergies;\n        });\n        server.post('ChartingEndpoint/api/v2/PrintAudit', () => {\n            printAuditCalled = true;\n            return null;\n        });\n        await visit(`/PF/charts/patients/${PATIENT_PRACTICE_GUID}/summary`);\n        click((0, _dataElement.default)('print-health-concerns-button'));\n        await click(`${(0, _dataElement.default)('print-health-concerns')} .dropdown-menu li:eq(0) a`);\n        const PRINT_CONTENT = (0, _dataElement.default)('print-health-concerns-content');\n        assert.ok(printAuditCalled, 'The print audit endpoint was called');\n        assert.equal((0, _getTextInPrint.default)('head title'), 'Health concerns - Patient: Cade Baby DOB: 02/05/2013 PRN: BC251057', 'The print preview has the correct header');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-header-patient-name')), 'Cade Baby', 'The patient name renders correctly on the print preview');\n        assert.equal((0, _getTextInPrint.default)((0, _dataElement.default)('print-header-facility-name')), 'Rosalise Ron Practice', 'The facility name renders correctly on the print preview');\n\n        assert.ok(find(`${PRINT_CONTENT} h2:contains('Active health concerns')`).length, 'There is an Active health concerns header');\n        assert.ok(find(`${PRINT_CONTENT} h2:contains('Inactive health concerns')`).length, 'There is a Inactive health concerns header');\n\n        assert.equal(find(`${PRINT_CONTENT} .row.header-row:contains('Description')`).length, 2, 'There is a sig column under active and inactive health concerns');\n        assert.equal(find(`${PRINT_CONTENT} .row.header-row:contains('Effective Date')`).length, 2, 'There is a start/stop date column under active and inactive health concerns');\n\n        assert.equal(find(`${(0, _dataElement.default)('health-concern-item-title')}:eq(0)`).text().trim(), '(E845.9) Accident involving spacecraft injuring other person', 'The active health concern title renders correctly');\n        assert.equal(find(`${(0, _dataElement.default)('health-concern-item-date')}:eq(0)`).text().trim(), '06/12/2017', 'The active health concern date renders correctly');\n\n        assert.equal(find(`${(0, _dataElement.default)('health-concern-item-title')}:eq(2)`).text().trim(), 'Accu-Chek Compact Plus Care Kit W/CARRYING CASE, W/CONTROL SOLUTION(S), W/LANCET(S), W/METER, W/TEST DRUM', 'The inactive health concern title renders correctly');\n        assert.equal(find(`${(0, _dataElement.default)('health-concern-item-date')}:eq(2)`).text().trim(), '06/12/2015', 'The inactive health concern date renders correctly.');\n\n        click('.close-link');\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/healthcare-devices-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element', 'boot/tests/helpers/get-text', 'boot/tests/helpers/get-text-in-print', 'boot/tests/helpers/find-in-print', 'ember-cli-mirage', 'sinon'], function (_qunit, _moduleForAcceptanceAuth, _dataElement, _getText, _getTextInPrint, _findInPrint, _emberCliMirage, _sinon) {\n    'use strict';\n\n    const PATIENT_PRACTICE_GUID = 'c5faffde-78e2-4924-acaf-2115bc686d5e';\n    const NEW_DEVICE = {\n        deviceType: 'iHeartbeat',\n        isActive: true,\n        implantDate: '01/01/2017',\n        notes: 'DRM is enabled - must contact support to restart after not beating for 45 seconds.',\n        udi: 'testudi'\n    };\n    const EXISTING_UDI = '=/08717648200274=,000025=A99971312345600=>014032=}013032&,1000000000000XYZ123';\n    const INVALID_UDI = 'InvalidUDI';\n    const NEW_UDI = {\n        uniqueDeviceIdentifier: 'ValidUDI',\n        deviceIdentifier: 'IH-1234',\n        uniqueDeviceIdentifierIssuingAgency: 'MyTest',\n        deviceDescription: 'This is a test device',\n        companyName: 'Acme Test Devices, Inc.',\n        brandName: 'iHeartbeat',\n        versionModelNumber: '1234',\n        lotNumber: '56',\n        deviceSerialNumber: 'A123456',\n        expirationDate: '01/01/2030',\n        manufacturingDate: '01/01/2010',\n        gmdnPtName: 'PartName',\n        gmdnPtDefinition: 'PartDefinition',\n        mriSafetyStatusDescription: 'Yup, it is safe',\n        customerContactPhoneNumber: '555-555-0001',\n        customerContactPhoneNumberExtension: null,\n        customerContactEmailAddress: 'me@you.com',\n        isNaturalRubberLatexInformationOnLabel: 'yup',\n        isDeviceLabeledNoNaturalRubberLatex: 'nope',\n        snomed: []\n    };\n    const DELETE_DEVICE_GUID = 'b3239e39-9144-4293-bfa6-e5651f3703e6';\n    const EXPECTED_PRINT_SECTIONS = 4;\n    let toastrSuccessStub;\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Clinical | Healthcare devices - v2', {\n        beforeEach() {\n            toastrSuccessStub = _sinon.default.stub(window.toastr, 'success');\n        },\n        afterEach() {\n            window.toastr.success.restore();\n        }\n    });\n\n    (0, _qunit.test)('View and edit implantable devices on patient summary', async assert => {\n        server.put('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/healthcaredevices/:heathcaredeviceguid', ({ db }, request) => {\n            const device = JSON.parse(request.requestBody);\n            assert.equal(device.userEnteredInfo.userEnteredNotes, NEW_DEVICE.notes, 'The edited information was saved');\n            return device;\n        });\n\n        assert.expect(9);\n        await visit(`/PF/charts/patients/${PATIENT_PRACTICE_GUID}/summary`);\n        assert.throws(findWithAssert('.ember-view.devices'), 'Implantable devices section shows up on patient summary');\n        await delayAsync(100);\n        assert.equal((0, _getText.default)('.summary-devices-list-inactive-toggle').indexOf('Show inactive'), 0, 'Inactive toggle shows collapsed');\n        await click('.summary-devices-list-inactive-toggle');\n        assert.dom((0, _dataElement.default)('inactive-devices-header')).exists('Inactive items display after toggle is clicked');\n        await click('.ember-view.devices .active-device:first');\n        assert.throws(findWithAssert('.device-detail'), 'The device detail pane appears when an item is clicked');\n        assert.equal((0, _getText.default)((0, _dataElement.default)('device-udi-display')), EXISTING_UDI, 'The device detail pane shows the correct information');\n        assert.throws(findWithAssert('.device-detail-info'), 'The device UDI information is shown');\n        // Make a change and save the device\n        fillIn((0, _dataElement.default)('device-notes'), NEW_DEVICE.notes);\n        await click('.device-detail .detail-pane-footer .btn-primary');\n        assert.equal(toastrSuccessStub.args[0][0], 'Implantable device saved', 'Confirmation toast displays after saving');\n        assert.equal(find('.device-detail').length, 0, 'Device detail pane closed upon saving');\n    });\n\n    (0, _qunit.test)('Add implantable device with validation', async assert => {\n        server.post('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/healthcaredevices/populateUdiInfo', ({ db }, request) => {\n            const udiRequest = JSON.parse(request.requestBody);\n            if (udiRequest.uniqueDeviceIdentifier === INVALID_UDI) {\n                return new _emberCliMirage.default.Response(400);\n            }\n            assert.equal(udiRequest.uniqueDeviceIdentifier, NEW_UDI.uniqueDeviceIdentifier, 'A valid UDI was requested');\n            return NEW_UDI;\n        });\n        server.post('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/healthcaredevices/', ({ db }, request) => {\n            const device = JSON.parse(request.requestBody);\n            assert.equal(device.udiInfo.uniqueDeviceIdentifier, NEW_UDI.uniqueDeviceIdentifier, 'The device was saved with the correct UDI information');\n            return device;\n        });\n\n        assert.expect(12);\n        await visit(`/PF/charts/patients/${PATIENT_PRACTICE_GUID}/summary`);\n        await click(`.ember-view.devices ${(0, _dataElement.default)('record-device')}`);\n        assert.throws(findWithAssert('.device-detail'), 'The device detail pane appears to edit a device');\n        fillIn((0, _dataElement.default)('implant-date-txt'), 'invalid');\n        fillIn((0, _dataElement.default)('device-notes'), NEW_DEVICE.notes);\n        click(`${(0, _dataElement.default)('device-active')} input`);\n        assert.throws(findWithAssert('.device-detail .detail-pane-footer .btn-primary:disabled'), 'Save button is disabled until UDI is added');\n        fillIn((0, _dataElement.default)('device-udi'), INVALID_UDI);\n        await click((0, _dataElement.default)('get-udi-button'));\n        // expect an error since an invalid UDI was entered\n        assert.throws(findWithAssert((0, _dataElement.default)('udi-failure-message')), 'Failure dialog for invalid UDI is shown');\n        await click(`${(0, _dataElement.default)('udi-failure-action')} .btn-primary`);\n        fillIn((0, _dataElement.default)('device-udi'), NEW_UDI.uniqueDeviceIdentifier);\n        await click((0, _dataElement.default)('get-udi-button'));\n        assert.dom('.content-modal header h4').hasText('Unique Device Identifier confirmation', 'Success dialog contains the correct title');\n        assert.dom((0, _dataElement.default)('udi-success-message')).exists('Success dialog for UDI is shown');\n        assert.equal(find(`${(0, _dataElement.default)('udi-success-message')}:contains('${NEW_UDI.uniqueDeviceIdentifier}')`).length, 1, 'Success dialog displays correct UDI information');\n        await click(`${(0, _dataElement.default)('udi-success-action')} .btn-primary`);\n        // Validate that UDI information is shown as read-only\n        assert.throws(findWithAssert((0, _dataElement.default)('remove-udi-button')), 'UDI is shown read-only with remove button');\n        assert.equal((0, _getText.default)((0, _dataElement.default)('device-gmdn-pt-name-display')), NEW_UDI.gmdnPtName, 'Device GMDN-PT name displays correctly');\n        await click('.device-detail .detail-pane-footer .btn-primary');\n        // Validation should display for bad inputs\n        assert.throws(findWithAssert(`.device-detail .tooltip-inner:contains('Please enter a valid date')`), 'Date validation displayed for invalid date');\n        fillIn((0, _dataElement.default)('implant-date-txt'), NEW_DEVICE.implantDate);\n        await click('.device-detail .detail-pane-footer .btn-primary');\n        assert.equal(toastrSuccessStub.args[0][0], 'Implantable device added', 'Confirmation toast displays after saving');\n    });\n\n    (0, _qunit.test)('Delete implantable device', async assert => {\n        server.del('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/healthcaredevices/:deviceGuid', ({ db }, request) => {\n            const device = request.params.deviceGuid;\n            assert.equal(device, DELETE_DEVICE_GUID, 'A delete call was made for the correct device');\n        });\n\n        assert.expect(4);\n        await visit(`/PF/charts/patients/${PATIENT_PRACTICE_GUID}/summary`);\n        await click('.ember-view.devices .active-device:first');\n        assert.throws(findWithAssert('.device-detail'), 'The device detail pane appears to edit a device');\n        await click((0, _dataElement.default)('delete-device-button'));\n        assert.throws(findWithAssert((0, _dataElement.default)('delete-confirm')), 'Confirmation dialog appears to finalize delete');\n        await click(`.content-modal .btn-primary:contains('Delete')`);\n        assert.equal(toastrSuccessStub.args[0][0], 'Implantable device deleted', 'Confirmation toast displays after deleting');\n    });\n\n    (0, _qunit.test)('Print preview implantable device list', async assert => {\n        assert.expect(4);\n        await visit(`/PF/charts/patients/${PATIENT_PRACTICE_GUID}/summary`);\n        assert.throws(findWithAssert(`.ember-view.devices ${(0, _dataElement.default)('print-devices-button')}`), 'Print devices button is available');\n        await click(`.ember-view.devices ${(0, _dataElement.default)('print-devices-button')}`);\n        assert.ok((0, _findInPrint.default)('.print-device-section').length >= EXPECTED_PRINT_SECTIONS, 'Expected devices show up in the print modal');\n        assert.equal((0, _getTextInPrint.default)(`.print-device-section:first ${(0, _dataElement.default)('print-device-isactive')}`), 'Active', 'Active devices show up first in the print modal');\n        assert.equal((0, _getTextInPrint.default)(`.print-device-section:last ${(0, _dataElement.default)('print-device-isactive')}`), 'Inactive', 'Inactive devices show up last in the print modal');\n        click('#print-modal-controls .close-link');\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/limited-access-patient-header-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element'], function (_qunit, _moduleForAcceptanceAuth, _dataElement) {\n    'use strict';\n\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n\n    const INVITE_PATIENT_PORTAL = '.phr-status-ribbon.ellipses';\n    const PATIENT_PHOTO = '.patient-photo';\n    const ADD_PATIENT_PHOTO_MODAL = '.add-photo-modal';\n    const PIN_ICON = '.patient-pinned-note .icon-pushpin';\n    const PIN_NOTE_DELETE_BTN = '.popover.pinned-patient-popover button:contains(Delete)';\n    const PIN_NOTE_EDIT_BTN = '.popover.pinned-patient-popover button:contains(Edit)';\n    const PIN_NOTE_BTN = '.popover.pinned-patient-popover button:contains(Pin note)';\n\n    const RESEND_INVITE = (0, _dataElement.default)('resend-invite');\n    const CANCEL_INVITE = (0, _dataElement.default)('cancel-invite');\n    const REVOKE_ACCESS = (0, _dataElement.default)('revoke-access');\n\n    const ADD_USER = 'add-user a.add-users';\n    const PRINT_ACCESS_INSTRUCTIONS = (0, _dataElement.default)('print-access-instructions');\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Clinical | Limited Access Patient Header - v2', {\n        beforeLogin() {\n            server.get('AuthzEndpoint/api/v1/users/:id/rights', () => ({\n                entitledFeatures: ['ERX.Send', 'Chart.Sign', 'EPCS.Send']\n            }));\n        }\n    });\n\n    (0, _qunit.test)('Visit a patient without patient portal access while in limited access mode', async assert => {\n        server.get('/PatientEndpoint/api/v1/patients/:id/phr_enrollments', () => ({\n            id: 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98',\n            'correlationId': '7709fb32-1b69-45f1-b390-ea6b075649e7',\n            'enrollments': [],\n            'patientFirstName': 'Some',\n            'patientLastName': 'Baby',\n            'patientEmail': 'babyadfdsfsdfsdf@baby.com',\n            'patientPhone': '(555) 555-5554',\n            'isFakePatient': false,\n            'dateOfBirth': '2013-02-01T00:00:00',\n            'phrAutomaticEnrollmentEnabled': true,\n            'patientPracticeGuid': 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98'\n        }));\n\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/summary/');\n        assert.notOk(find(INVITE_PATIENT_PORTAL).length > 0, 'invite to patient portal link is removed');\n        await click(find(PATIENT_PHOTO));\n        assert.ok(find(ADD_PATIENT_PHOTO_MODAL).css('display', 'hidden'), 'clicking patient photo does nothing');\n        await click(find(PIN_ICON));\n        const MISSING_BTNS = find(PIN_NOTE_DELETE_BTN).length > 0 || find(PIN_NOTE_EDIT_BTN).length > 0 || find(PIN_NOTE_BTN).length > 0;\n        assert.notOk(MISSING_BTNS, 'add/edit/delete buttons are missing from the pinned note popover');\n    });\n\n    (0, _qunit.test)('Visit a patient with patient portal access pending while in limited access mode', async assert => {\n        server.get('/PatientEndpoint/api/v1/patients/:id/phr_enrollments', () => ({\n            'enrollments': [{\n                'type': 'Request',\n                'status': 'Pending',\n                'relationshipToPatient': 'Parent',\n                'emailAddress': 'sdfj@sdf.com',\n                'phoneNumber': '4151231312',\n                'username': null,\n                'phrUserProfileGuid': null,\n                'createdDateTimeUtc': '2015-11-12T03:01:37',\n                'createdByProfileTypeName': 'Provider',\n                'createdByProfileGuid': '84a5277e-8d30-4de2-bac7-fe4f3c6232c8',\n                'lastModifiedDateTimeUtc': '2015-11-12T03:01:37',\n                'lastModifiedByProfileTypeName': 'Provider',\n                'lastModifiedByProfileGuid': '84a5277e-8d30-4de2-bac7-fe4f3c6232c8',\n                'enrollmentPin': 'IOMGMWJB',\n                'isAutoInvited': false,\n                'phrEnrollmentRequestGuid': 'ef8acaac-f3cb-449c-8f17-ea796cf7c528'\n            }, {\n                'type': 'Request',\n                'status': 'Pending',\n                'relationshipToPatient': 'Self',\n                'emailAddress': 'bye@bye.com',\n                'phoneNumber': '4151231231',\n                'username': null,\n                'phrUserProfileGuid': null,\n                'createdDateTimeUtc': '2015-11-23T22:46:18',\n                'createdByProfileTypeName': 'Provider',\n                'createdByProfileGuid': '84a5277e-8d30-4de2-bac7-fe4f3c6232c8',\n                'lastModifiedDateTimeUtc': '2015-11-23T22:46:18',\n                'lastModifiedByProfileTypeName': 'Provider',\n                'lastModifiedByProfileGuid': '84a5277e-8d30-4de2-bac7-fe4f3c6232c8',\n                'enrollmentPin': 'PYBCPTDN',\n                'isAutoInvited': false,\n                'phrEnrollmentRequestGuid': '17271a74-088a-4558-8c85-376724364f0c'\n            }],\n            id: 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98',\n            'correlationId': '7709fb32-1b69-45f1-b390-ea6b075649e7',\n            'patientFirstName': 'Some',\n            'patientLastName': 'Baby',\n            'patientEmail': 'babyadfdsfsdfsdf@baby.com',\n            'patientPhone': '(555) 555-5554',\n            'isFakePatient': false,\n            'dateOfBirth': '2013-02-01T00:00:00',\n            'phrAutomaticEnrollmentEnabled': true,\n            'patientPracticeGuid': 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98'\n        }));\n\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/summary/');\n        assert.ok(find(INVITE_PATIENT_PORTAL + ' .icon-pending'), 'patient portal status link renders.');\n        await click(INVITE_PATIENT_PORTAL + ' a');\n        assert.notOk(find(RESEND_INVITE).length > 0, 'resend invite link is missing');\n        assert.notOk(find(CANCEL_INVITE).length > 0, 'cancel invite link is missing');\n        assert.notOk(find(PRINT_ACCESS_INSTRUCTIONS).length > 0, 'print access instructions is missing');\n    });\n\n    (0, _qunit.test)('Visit a patient with patient portal access while in limited access mode', async assert => {\n        server.get('/PatientEndpoint/api/v1/patients/:id/phr_enrollments', () => ({\n            'enrollments': [{\n                'type': 'Authorization',\n                'status': 'Active',\n                'relationshipToPatient': 'Self',\n                'emailAddress': 'redacted@gmail.com',\n                'phoneNumber': '7753455146',\n                'username': 'redacted@gmail.com',\n                'phrUserProfileGuid': '2dd0a467-9fb7-42fe-a103-fbe1e0a28164',\n                'createdDateTimeUtc': '2017-01-25T19:09:17.257Z',\n                'createdByProfileTypeName': 'Provider',\n                'createdByProfileGuid': '8b233660-6bc7-4fe5-b81d-224fa3a7acfc',\n                'lastModifiedDateTimeUtc': '2017-01-25T19:09:17.257Z',\n                'lastModifiedByProfileTypeName': 'Provider',\n                'lastModifiedByProfileGuid': '8b233660-6bc7-4fe5-b81d-224fa3a7acfc',\n                'isAutoInvited': false\n            }],\n            id: 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98',\n            'correlationId': '7709fb32-1b69-45f1-b390-ea6b075649e7',\n            'patientFirstName': 'Some',\n            'patientLastName': 'Baby',\n            'patientEmail': 'babyadfdsfsdfsdf@baby.com',\n            'patientPhone': '(555) 555-5554',\n            'isFakePatient': false,\n            'dateOfBirth': '2013-02-01T00:00:00',\n            'phrAutomaticEnrollmentEnabled': true,\n            'patientPracticeGuid': 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98'\n        }));\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/summary/');\n        assert.ok(find(INVITE_PATIENT_PORTAL + ' .icon-checkmark'), 'patient portal status link renders.');\n        await click(INVITE_PATIENT_PORTAL + ' a');\n        assert.notOk(find(REVOKE_ACCESS).length > 0, 'revoke access link is missing');\n        assert.notOk(find(ADD_USER).length > 0, 'add users link is missing');\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/medications-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element', 'boot/tests/helpers/get-text'], function (_qunit, _moduleForAcceptanceAuth, _dataElement, _getText) {\n    'use strict';\n\n    const sig = '1 tablet orally one time';\n    const comment = 'Some medication comment';\n    const today = moment().startOf('day').toISOString();\n    const searchInput = `${(0, _dataElement.default)('medications-search')} input`;\n    const proliaSearchResult = [{\n        ndc: '55513071001',\n        tradeName: 'Prolia',\n        drugName: 'Prolia 60 MG/ML Subcutaneous Solution',\n        genericName: 'Denosumab',\n        productStrength: '60 MG/ML',\n        route: 'Subcutaneous',\n        doseForm: 'Solution',\n        isGeneric: false,\n        isOverTheCounter: false,\n        controlledSubstanceSchedule: '',\n        isMedicalSupply: false,\n        isObsolete: false,\n        rxNormCui: '993458',\n        searchScore: 10.932226,\n        strengthScore: 60.0,\n        marketEndDate: '9999-12-31T16:00:00Z'\n    }];\n    const SEARCH_RESULT_KEFLEX = [{\n        ndc: \"58463001101\",\n        tradeName: \"Keflex\",\n        drugName: \"Keflex 250 MG Oral Capsule\",\n        genericName: \"Cephalexin\",\n        productStrength: \"250 MG\",\n        route: \"Oral\",\n        doseForm: \"Capsule\",\n        isGeneric: false,\n        isOverTheCounter: false,\n        controlledSubstanceSchedule: \"\",\n        isMedicalSupply: false,\n        isObsolete: false,\n        drugSubsystemId: 0,\n        rxNormCui: \"309112\",\n        genericProductId: 0,\n        searchScore: 10.266459,\n        strengthScore: 250.0,\n        marketEndDate: \"9999-12-31T08:00:00Z\",\n        patientMedicationGuid: null,\n        brandedRxNormCui: \"212306\",\n        routedDrugId: null\n    }];\n    const MED_DETAIL_NAME = (0, _dataElement.default)('medication-detail-drug-name');\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Clinical | Medications - v2');\n\n    (0, _qunit.test)('Empty medications section renders properly', async assert => {\n        server.get('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/aggregate', () => ({ 'diagnoses': { 'patientDiagnoses': [], 'noKnownDiagnoses': false },\n            'medications': { 'patientMedications': null, 'noKnownMedications': false } }));\n\n        await visit('/PF/charts/patients/c5faffde-78e2-4924-acaf-2115bc686d5e/summary');\n        assert.ok(find((0, _dataElement.default)('no-active-medications-label')).text().toLowerCase().indexOf('no active medications') > -1, 'Empty medications section renders properly');\n    });\n\n    (0, _qunit.test)('Add a medication', async assert => {\n        server.get('ClinicalEndpoint/api/v2/frequentMedications/', () => []);\n\n        server.post('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/medications', ({ db }, request) => {\n            const medication = JSON.parse(request.requestBody);\n            assert.ok(!medication.medicationGuid, 'There is no medication guid on the new medication');\n            assert.equal(medication.tradeName, 'Vicodin', 'The medication\\'s trade name is correct');\n            assert.equal(medication.rxNormCui, '856987', 'The medication\\'s rxNormCui is correct');\n            assert.equal(medication.ndc, '00074304113', 'The medication\\'s ndc is correct');\n            assert.equal(medication.controlledSubstanceSchedule, '2', 'The medication\\'s controlledSubstanceSchedule is correct');\n            assert.equal(medication.drugName, 'Vicodin 5-300 MG Oral Tablet', 'The medication\\'s drugName is correct');\n            assert.equal(medication.rxNormCui, '856987', 'The medication\\'s rxNormCui is correct');\n            assert.equal(medication.sig.patientDescription, sig, 'The sig\\'s patient description is correct');\n            assert.equal(medication.sig.professionalDescription, sig, 'The sig\\'s professional description is correct');\n            assert.equal(moment(medication.startDateTime).toISOString(), today, 'The medication\\'s start date is correct');\n            assert.equal(medication.transcriptMedications[0].comment, comment, 'The medication\\'s comment is correct');\n\n            medication.medicationGuid = 'MED_GUID';\n            medication.lastModifiedDateTimeUtc = moment().toISOString();\n            return medication;\n        });\n\n        await visit('/PF/charts/patients/c5faffde-78e2-4924-acaf-2115bc686d5e/summary');\n        await click((0, _dataElement.default)('record-medication'));\n        assert.throws(findWithAssert('.medication-detail'));\n        assert.equal((0, _getText.default)((0, _dataElement.default)('frequent-medications')), 'There are no frequent medications.', 'The empty state for frequent medications is correct');\n        click(searchInput);\n        await fillIn(searchInput, 'vicodin');\n        await wait();\n        await click((0, _dataElement.default)('medications-search-0'));\n        click((0, _dataElement.default)('start-date-btn'));\n        fillIn((0, _dataElement.default)('medication-comment-txt'), comment);\n        fillIn('.sigSearch .sig-text textarea', sig);\n        await click('.detail-pane-footer .btn-primary');\n        assert.dom((0, _dataElement.default)('medication-summary-list-item-MED_GUID')).exists('The medication appears in the med list');\n    });\n\n    (0, _qunit.test)('Add a medication from the frequent medications toolbox', async assert => {\n        let frequentMedsCallCount = 0;\n        server.get('ClinicalEndpoint/api/v2/frequentMedications/', ({ db }) => {\n            frequentMedsCallCount++;\n            return db.frequentMedications;\n        });\n        server.post('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/medications', ({ db }, request) => {\n            const medication = JSON.parse(request.requestBody);\n            medication.medicationGuid = 'MED_GUID2';\n            medication.lastModifiedDateTimeUtc = moment().toISOString();\n            return medication;\n        });\n        await visit('/PF/charts/patients/c5faffde-78e2-4924-acaf-2115bc686d5e/summary');\n        await click((0, _dataElement.default)('record-medication'));\n        assert.equal(frequentMedsCallCount, 1, 'The frequentMedications endpoint was called when the add medication details pane was opened');\n        const frequentMedSelector = `${(0, _dataElement.default)('frequent-medications')} [data-guid='a9682900-ecc1-4c3b-ba9f-aa3bd2b216c7']`;\n        const frequentMed = findWithAssert(frequentMedSelector);\n        const frequentMedName = 'Vicks Air Purifier/HEPA (Device) Miscellaneous';\n        assert.equal(frequentMed.text(), frequentMedName, 'The frequent medications list is populated');\n        await click(frequentMed);\n        assert.equal((0, _getText.default)(MED_DETAIL_NAME), frequentMedName, 'Clicking on a frequent medication populates the details pane with the info');\n        await click('.detail-pane-footer .btn-primary');\n        assert.dom((0, _dataElement.default)('medication-summary-list-item-MED_GUID2')).exists('The medication appears in the med list');\n        await click((0, _dataElement.default)('record-medication'));\n        assert.equal(frequentMedsCallCount, 1, 'The frequentMedications endpoint was not called a second time');\n        await fillIn(`${(0, _dataElement.default)('frequent-medications')} .search-container input`, 'cks');\n        assert.throws(findWithAssert(frequentMedSelector), 'Searching for a substring finds the corresponding medication');\n        click((0, _dataElement.default)('cancel-btn'));\n    });\n\n    (0, _qunit.test)('Edit and delete existing medication', async assert => {\n        assert.expect(12);\n        server.put('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/medications/:id', ({ db }, request) => {\n            const medication = JSON.parse(request.requestBody);\n            assert.equal(medication.medicationGuid, 'c7b3f21b-bf7a-4850-8690-99840b7e5bf5', 'The medication guid is correct');\n            assert.equal(moment(medication.stopDateTime).toISOString(), today, 'The medication stop date is correct');\n            assert.equal(medication.sig.patientDescription, '1 to 2 times a day', 'The sig\\'s patient description is correct');\n            assert.equal(medication.sig.professionalDescription, '1-2X/D', 'The sig\\'s professional description is correct');\n            assert.equal(medication.transcriptMedications[0].comment, comment, 'The medication\\'s comment is correct');\n            medication.lastModifiedDateTimeUtc = moment().toISOString();\n            return medication;\n        });\n        server.delete('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/medications', ({ db }, request) => {\n            const medication = JSON.parse(request.requestBody);\n            assert.equal(medication.medicationGuid, 'c7b3f21b-bf7a-4850-8690-99840b7e5bf5', 'The medication guid is correct');\n        });\n\n        visit('/PF/charts/patients/ecd212c3-5c99-499e-b3c6-b2645b8a4c98/summary');\n        await click((0, _dataElement.default)('medication-summary-list-item-c7b3f21b-bf7a-4850-8690-99840b7e5bf5'));\n        assert.throws(findWithAssert('.medication-detail'), 'The medication detail pane appears');\n        assert.equal(find(MED_DETAIL_NAME).text().trim(), 'Methitest 10 mg oral tablet', 'The drug name is rendered correctly');\n        await click(`${(0, _dataElement.default)('sig-search')} input`);\n        await click((0, _dataElement.default)('sig-search-0'));\n        assert.equal(find((0, _dataElement.default)('sig-txt'))[0].value, '1 to 2 times a day', 'The sig value is populated with the selected sig');\n        await click((0, _dataElement.default)('restart-btn'));\n        assert.ok(find((0, _dataElement.default)('discontinue-warning')), 'Discontinue warning renders');\n        fillIn((0, _dataElement.default)('medication-comment-txt'), comment);\n        await click('.detail-pane-footer a:contains(\"Record\")');\n        click((0, _dataElement.default)('historical-medications'));\n        await click(`.historical-medication${(0, _dataElement.default)('medication-summary-list-item-c7b3f21b-bf7a-4850-8690-99840b7e5bf5')}`);\n        click('.detail-pane-footer button:contains(\"Delete\")');\n        await click('.ember-tether.popover .confirm-btn');\n        assert.notOk(find('.active-medication').length, 'There are no more active medications');\n        assert.equal(find('.historical-medication').length, 1, 'There is one less historical medication');\n    });\n\n    (0, _qunit.test)('Deletes a medication with pending order drafts', async assert => {\n        await visit('/PF/charts/patients/fd198d85-b2e4-435b-854a-b924b3261d75/summary');\n        await click((0, _dataElement.default)('medication-summary-list-item-e3fcc19b-01a4-41dd-a8e0-136a4b234445'));\n        await click('.detail-pane-footer button:contains(\"Delete\")');\n        assert.ok(find('.popover.popover-confirm-warning').length, 'Warning popover is visible');\n        assert.equal(find('.popover.popover-confirm-warning .popover-title').text().trim(), 'Cannot delete medication');\n    });\n\n    (0, _qunit.test)('Prolia surveillance add medication card dismiss', async assert => {\n        let worksheetSaveCallCount = 0;\n        server.get('ClinicalEndpoint/api/v2/Drugs/Search', () => proliaSearchResult);\n        server.post('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/medications', ({ db }, request) => {\n            const medication = JSON.parse(request.requestBody);\n            medication.medicationGuid = 'MED_GUID';\n            medication.lastModifiedDateTimeUtc = moment().toISOString();\n            return medication;\n        });\n        server.post('ClinicalEndpoint/api/v1/Worksheet', ({ db }, request) => {\n            worksheetSaveCallCount++;\n            const assessment = JSON.parse(request.requestBody);\n            assert.equal(assessment.assessmentToken.name, 'proliaAesiMedicationHistory', 'The worksheet is saved with the correct token');\n            assert.equal(assessment.status, 'Dismissed', 'The worksheet is saved with the correct status');\n            assert.equal(assessment.patientPracticeGuid, 'c5faffde-78e2-4924-acaf-2115bc686d5e', 'The worksheet is saved with the correct patient practice guid');\n            assert.equal(assessment.medicationGuid, 'MED_GUID', 'The worksheet is saved with the correct medication guid');\n            assessment.worksheetInstanceGuid = 'WORKSHEET_GUID';\n            return assessment;\n        });\n        await visit('/PF/charts/patients/c5faffde-78e2-4924-acaf-2115bc686d5e/summary');\n        click((0, _dataElement.default)('record-medication'));\n        const dismissLink = (0, _dataElement.default)('prolia-assessment-card-dismiss');\n        click(searchInput);\n        await fillIn(searchInput, 'prolia');\n        await wait();\n        click((0, _dataElement.default)('medications-search-0'));\n        await click(dismissLink);\n        assert.notOk(find(dismissLink).length, 'The card is hidden after the dismiss link is clicked');\n        await click('.detail-pane-footer .btn-primary');\n        assert.equal(worksheetSaveCallCount, 1, 'The worksheet POST call was made');\n    });\n\n    const proliaCardSelect = (0, _dataElement.default)('prolia-assessment-card-history');\n    const proliaCardSelectButton = `${proliaCardSelect} .ember-select-choice`;\n    function proliaCardSelectItem(text) {\n        return `${proliaCardSelect} .dropdown-menu li:contains(\"${text}\")`;\n    }\n\n    (0, _qunit.test)('Prolia surveillance add medication card functionality', async assert => {\n        let worksheetSaveCallCount = 0;\n        server.get('ClinicalEndpoint/api/v2/Drugs/Search', () => proliaSearchResult);\n        server.post('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/medications', ({ db }, request) => {\n            const medication = JSON.parse(request.requestBody);\n            medication.medicationGuid = 'MED_GUID';\n            medication.lastModifiedDateTimeUtc = moment().toISOString();\n            return medication;\n        });\n        server.post('ClinicalEndpoint/api/v1/Worksheet', ({ db }, request) => {\n            worksheetSaveCallCount++;\n            const assessment = JSON.parse(request.requestBody);\n            assert.equal(assessment.assessmentToken.name, 'proliaAesiMedicationHistory', 'The worksheet is saved with the correct token');\n            assert.equal(assessment.status, 'Completed', 'The worksheet is saved with the correct status');\n            assert.equal(assessment.patientPracticeGuid, 'c5faffde-78e2-4924-acaf-2115bc686d5e', 'The worksheet is saved with the correct patient practice guid');\n            assert.equal(assessment.medicationGuid, 'MED_GUID', 'The worksheet is saved with the correct medication guid');\n            assert.equal(assessment.responses[0].answerToken[0], 'PreviousHistory', 'The worksheet is saved with the correct answer');\n            assert.equal(assessment.responses[0].questionToken, 'proliaMedicationHistory', 'The worksheet is saved with the correct question');\n            assessment.worksheetInstanceGuid = 'WORKSHEET_GUID';\n            return assessment;\n        });\n        await visit('/PF/charts/patients/c5faffde-78e2-4924-acaf-2115bc686d5e/summary');\n        click((0, _dataElement.default)('record-medication'));\n        click(searchInput);\n        await fillIn(searchInput, 'prolia');\n        await wait();\n        await click((0, _dataElement.default)('medications-search-0'));\n        click(proliaCardSelectButton);\n        await click(proliaCardSelectItem('Past and/or current medication'));\n        await click('.detail-pane-footer .btn-primary');\n        assert.equal(worksheetSaveCallCount, 1, 'The worksheet POST call was made');\n    });\n\n    (0, _qunit.test)('Validating the existence of duplicate medicaion warnings based on NDC', async assert => {\n        server.post('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/medications', ({ db }, request) => {\n            const medication = JSON.parse(request.requestBody);\n            medication.medicationGuid = 'MED_GUID';\n            medication.lastModifiedDateTimeUtc = moment().toISOString();\n            return medication;\n        });\n\n        server.get('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/medications/:medicationid', ({ db }, request) => {\n            /* Validate clicking on medication name will update the panel's contents to match that medication */\n            const medicationGuid = request.params.medicationid;\n            const medicationInfo = db.patientMedications.where({\n                medicationGuid\n            })[0];\n            return medicationInfo;\n        });\n        await visit('/PF/charts/patients/c5faffde-78e2-4924-acaf-2115bc686d5e/summary');\n        await click((0, _dataElement.default)('record-medication'));\n        assert.throws(findWithAssert('.medication-detail'));\n        await click(searchInput);\n        await fillIn(searchInput, 'vicodin');\n        await wait();\n        await click((0, _dataElement.default)('medications-search-0'));\n        assert.ok(find((0, _dataElement.default)('you-may-have-duplicates-warning-top-panel')).text().trim().indexOf('You may have therapeutic duplications') > -1, 'Therapeutic duplications warning renders correctly');\n        assert.ok(find('.icon-urgent').length === 1, 'Urgent icon renders correctly');\n        assert.ok(find((0, _dataElement.default)('duplicate-therapy-summary')).text(), 'Severe Interaction: Therapeutic duplication (1) Show more...', 'Severe interaction warning renders correctly');\n        await click((0, _dataElement.default)('duplicate-medication-name') + ':eq(0)');\n        /* Validate the sections below the warning still render (sig, associated dx, start date, stop date, comment, resources links) */\n        const sigText = find((0, _dataElement.default)('sig-txt'))[0].value;\n        const associatedDiagnosis = find((0, _dataElement.default)('associated-diagnosis'));\n        const startDate = find((0, _dataElement.default)('start-date-txt'))[0].value;\n        const stopDate = find((0, _dataElement.default)('stop-date-txt'))[0].value;\n        const medicationCommentText = find((0, _dataElement.default)('medication-comment-txt'));\n        const resrouces = find((0, _dataElement.default)('resources-section'));\n        assert.equal(sigText, '1 to 2 times a day', 'Sig sections below duplicate warning renders correctly');\n        assert.ok(associatedDiagnosis.length === 1, 'Associated Diagnosis section below duplicate warning renders correctly');\n        assert.equal(startDate, '11/8/2016', 'Start date field below duplicate warning renders correctly');\n        assert.equal(stopDate, '11/24/2999', 'Stop date field below duplicate warning renders correctly');\n        assert.ok(medicationCommentText.length === 1, 'Medication comment seciton below duplicate warning renders correctly');\n        assert.ok(resrouces.length === 1, 'resource section below duplicate warning renders correctly');\n        await click((0, _dataElement.default)('cancel-btn'));\n        await click((0, _dataElement.default)('record-medication'));\n        assert.throws(findWithAssert('.medication-detail'));\n        await click(searchInput);\n        await fillIn(searchInput, 'vicodin');\n        await wait();\n        await click((0, _dataElement.default)('medications-search-0'));\n        await click((0, _dataElement.default)('discontinue-duplicate-link'));\n        await click((0, _dataElement.default)('historical-medications'));\n        const historicalMedicationName = find('.historical-medication ' + (0, _dataElement.default)('medication-name') + ':eq(0)').text();\n        const activeMedicationName = find('.active-medication ' + (0, _dataElement.default)('medication-name')).text();\n        const discontinuedStartDate = find('.historical-medication .ember-view')[0].innerText.trim();\n        const discontinuedStopDate = find('.historical-medication .ember-view')[1].innerText.trim();\n\n        /* Validate discontinue link (moves that medication to historical section with a stop date) */\n        assert.equal(historicalMedicationName, 'Hydrocodone-Acetaminophen (Vicodin)', 'Discontinued medication was added to list of historical medications');\n        assert.ok(activeMedicationName.length === 0, 'Discontinued medication was removed from list of active medications');\n        assert.equal(discontinuedStartDate, '11/08/16', 'Discontinued start date renders correctly');\n        assert.equal(discontinuedStopDate, moment().format('MM/DD/YY'), 'Discontinued stop date renders correclty');\n        click('.detail-pane-footer .btn-primary');\n    });\n\n    (0, _qunit.test)('Relay dispense, unit, and days supply to eRx order', async assert => {\n        server.get('ClinicalEndpoint/api/v2/frequentMedications/', () => []);\n\n        server.post('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/medications', ({ db }, request) => JSON.parse(request.requestBody));\n\n        server.put('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/medications/:id', ({ db }, request) => JSON.parse(request.requestBody));\n\n        await visit('/PF/charts/patients/fd198d85-b2e4-435b-854a-b924b3261d75/summary');\n        await click((0, _dataElement.default)('medication-summary-list-item-c090aed5-b80d-4131-ba3c-0a25ea015164'));\n        assert.equal(find((0, _dataElement.default)('quantity-txt')).val(), 5, 'Quantity is loaded from previous prescription');\n        assert.equal(find(`${(0, _dataElement.default)('doseForm-search')} input`).val(), 'Tablet', 'Unit is loaded from previous prescription');\n        assert.equal(find((0, _dataElement.default)('daysSupply-txt')).val().trim(), '', 'Days supply defaults to nuffin');\n\n        // Change the default quantity, unit, and days supply\n        fillIn((0, _dataElement.default)('quantity-txt'), 57);\n        fillIn(`${(0, _dataElement.default)('doseForm-search')} input`, 'Box');\n        keyEvent((0, _dataElement.default)('doseForm-search'), 'keydown', 13);\n        fillIn((0, _dataElement.default)('daysSupply-txt'), 100);\n\n        await click((0, _dataElement.default)('btn-order-eRx'));\n        await click((0, _dataElement.default)('edit-btn-0'));\n        assert.equal(find((0, _dataElement.default)('quantity-txt')).val(), 57, 'Quantity is loaded from previous prescription');\n        assert.equal(find(`${(0, _dataElement.default)('doseForm-search')} input`).val(), 'Box', 'Unit is loaded from previous prescription');\n        assert.equal(find((0, _dataElement.default)('daysSupply-txt')).val(), 100, 'Days supply defaults to 100');\n    });\n\n    (0, _qunit.test)('Click multiple medications will open the correct details panes', async assert => {\n        const summaryUrl = '/PF/charts/patients/fd198d85-b2e4-435b-854a-b924b3261d75/summary';\n        await visit(summaryUrl);\n        await click((0, _dataElement.default)('medication-summary-list-item-e3fcc19b-01a4-41dd-a8e0-136a4b234445'));\n        assert.dom(MED_DETAIL_NAME).hasText('Lipitor 10 MG Oral Tablet');\n        await click((0, _dataElement.default)('medication-summary-list-item-c090aed5-b80d-4131-ba3c-0a25ea015164'));\n        assert.dom(MED_DETAIL_NAME).hasText('Lexapro 5 MG Oral Tablet');\n        await click((0, _dataElement.default)('medication-summary-list-item-a133d877-2a21-410b-b902-7ed99ae02533'));\n        assert.dom(MED_DETAIL_NAME).hasText('Simvastatin 20 MG Oral Tablet');\n        await click((0, _dataElement.default)('medication-summary-list-item-3b11ed1a-27d0-4d5d-91ee-b7d3d367b475'));\n        assert.dom(MED_DETAIL_NAME).hasText('Childrens Ibuprofen 100 MG/5ML Oral Suspension');\n        await click((0, _dataElement.default)('medication-summary-list-item-19d4c375-2bf7-4734-8f1c-68d248c4eb3c'));\n        assert.dom(MED_DETAIL_NAME).hasText('Pravastatin Sodium 80 MG Oral Tablet');\n        await click(`.medication-detail ${(0, _dataElement.default)('cancel-btn')}`);\n        assert.equal(currentURL(), summaryUrl);\n    });\n\n    (0, _qunit.test)('Medication with allergy alert and reactions', async assert => {\n        server.get('ClinicalEndpoint/api/v2/Drugs/Search', () => SEARCH_RESULT_KEFLEX);\n        await visit('/PF/charts/patients/78f2e278-4519-4b0e-b192-f1f7f360215b/summary');\n        await click((0, _dataElement.default)('record-medication'));\n        assert.throws(findWithAssert('.medication-detail'));\n        click(searchInput);\n        await fillIn(searchInput, 'Keflex');\n        await wait();\n        await click((0, _dataElement.default)('medications-search-0'));\n        assert.dom((0, _dataElement.default)('drug-allergy-interaction-btn-0-0')).hasText('Very Mild Allergy: Penicillins (Anaphylaxis, Cough)');\n        click((0, _dataElement.default)('cancel-btn'));\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/osteoporosis-dexa-modal-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element', 'boot/tests/helpers/get-text'], function (_qunit, _moduleForAcceptanceAuth, _dataElement, _getText) {\n    'use strict';\n\n    const OSTEOPOROSIS_MODAL = '.osteoporosis-dexa-modal';\n    const IMAGING_ORDER_BUTTON = 'imaging-order-btn';\n    const IMAGING_RESULT_BUTTON = 'imaging-result-btn';\n    const IMAGING_ORDER_URL = '/PF/charts/patients/ecd212c3-5c99-499e-b3c6-b2645b8a4c98/orders';\n    const IMAGING_RESULT_URL = '/PF/charts/patients/ecd212c3-5c99-499e-b3c6-b2645b8a4c98/results/new/imaging';\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Clinical | Osteoporosis modal', {});\n\n    (0, _qunit.test)('Osteoposis modal links imaging orders appropriately', async assert => {\n        const patientPracticeGuid = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n        const transcriptGuid = '7022d94f-d70a-4722-a205-dac898cf9f69';\n        const alertText = 'Osteoporosis screening: Patient has no record of osteoporosis screening. Consider DXA or document results.';\n\n        server.get('AlertEndpoint/api/v1/CdsAlerts/:patientPracticeGuid/:transcriptGuid', () => [{\n            alertIdentifier: 'CDS.Osteoporosis.Order',\n            ruleId: 35,\n            alertText,\n            citations: ['Quality Payment Program, Measure #39: Screening for Osteoporosis for Women Aged 65-85 Years of Age – National Quality Strategy Domain: Effective Clinical Care. Measure Source: Centers for Medicare and Medicaid Services. Version 1.0 11/15/2016'],\n            developer: 'Practice Fusion, Inc.',\n            sponsor: 'Amgen Inc.',\n            link: 'https://mdinteractive.com/files/uploaded/file/CMS2017/2017_Measure_039_Registry.pdf',\n            source: 'Practice Fusion, Inc.',\n            actionLinkType: 'showOsteoporosisModal',\n            actionLinkData: 'isOrderVisible=true',\n            actionLinkText: 'Document DXA results',\n            error: false\n        }]);\n        await visit(`/PF/charts/patients/${patientPracticeGuid}/encounter/${transcriptGuid}`);\n        assert.equal(find('.ember-accordion-container').length, 1, 'There are 1 CDS alert container');\n        assert.equal((0, _getText.default)('.ember-accordion-header .cds-alert-text'), alertText, 'The CDS alert text renders correctly');\n        assert.equal((0, _getText.default)('.ember-accordion-header .custom-action'), 'Document DXA results', 'The custom action text is correct');\n        await click('.ember-accordion-header .custom-action a');\n        assert.equal(find(OSTEOPOROSIS_MODAL).length, 1, 'The osteoporosis modal is shown');\n        assert.equal(find((0, _dataElement.default)(IMAGING_ORDER_BUTTON)).length, 1, 'The imaging order button is shown');\n        assert.equal(find((0, _dataElement.default)(IMAGING_RESULT_BUTTON)).length, 1, 'The imaging results button is shown');\n\n        await click((0, _dataElement.default)(IMAGING_ORDER_BUTTON));\n        assert.ok(currentURL().indexOf(IMAGING_ORDER_URL) === 0);\n    });\n\n    (0, _qunit.test)('Osteoposis modal links imaging results appropriately', async assert => {\n        const patientPracticeGuid = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n        const transcriptGuid = '7022d94f-d70a-4722-a205-dac898cf9f69';\n        const alertText = 'Osteoporosis screening: Patient has no record of osteoporosis screening. Consider DXA or document results.';\n\n        server.get('AlertEndpoint/api/v1/CdsAlerts/:patientPracticeGuid/:transcriptGuid', () => [{\n            alertIdentifier: 'CDS.Osteoporosis.Order',\n            ruleId: 35,\n            alertText,\n            citations: ['Quality Payment Program, Measure #39: Screening for Osteoporosis for Women Aged 65-85 Years of Age – National Quality Strategy Domain: Effective Clinical Care. Measure Source: Centers for Medicare and Medicaid Services. Version 1.0 11/15/2016'],\n            developer: 'Practice Fusion, Inc.',\n            sponsor: 'Amgen Inc.',\n            link: 'https://mdinteractive.com/files/uploaded/file/CMS2017/2017_Measure_039_Registry.pdf',\n            source: 'Practice Fusion, Inc.',\n            actionLinkType: 'showOsteoporosisModal',\n            actionLinkData: 'isOrderVisible=true',\n            actionLinkText: 'Document DXA results',\n            error: false\n        }]);\n        await visit(`/PF/charts/patients/${patientPracticeGuid}/encounter/${transcriptGuid}`);\n        assert.equal(find('.ember-accordion-container').length, 1, 'There are 1 CDS alert container');\n        assert.equal((0, _getText.default)('.ember-accordion-header .cds-alert-text'), alertText, 'The CDS alert text renders correctly');\n        assert.equal((0, _getText.default)('.ember-accordion-header .custom-action'), 'Document DXA results', 'The custom action text is correct');\n        await click('.ember-accordion-header .custom-action a');\n        assert.equal(find(OSTEOPOROSIS_MODAL).length, 1, 'The osteoporosis modal is shown');\n        assert.equal(find((0, _dataElement.default)(IMAGING_ORDER_BUTTON)).length, 1, 'The imaging order button is shown');\n        assert.equal(find((0, _dataElement.default)(IMAGING_RESULT_BUTTON)).length, 1, 'The imaging results button is shown');\n\n        await click((0, _dataElement.default)(IMAGING_RESULT_BUTTON));\n        assert.ok(currentURL().indexOf(IMAGING_RESULT_URL) === 0);\n    });\n\n    (0, _qunit.test)('Osteoposis modal hides imaging order appropriately', async assert => {\n        const patientPracticeGuid = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n        const transcriptGuid = '7022d94f-d70a-4722-a205-dac898cf9f69';\n        const alertText = 'Osteoporosis screening: Patient has no record of osteoporosis screening. Consider DXA or document results.';\n\n        server.get('AlertEndpoint/api/v1/CdsAlerts/:patientPracticeGuid/:transcriptGuid', () => [{\n            alertIdentifier: 'CDS.Osteoporosis.Order',\n            ruleId: 35,\n            alertText,\n            citations: ['Quality Payment Program, Measure #39: Screening for Osteoporosis for Women Aged 65-85 Years of Age – National Quality Strategy Domain: Effective Clinical Care. Measure Source: Centers for Medicare and Medicaid Services. Version 1.0 11/15/2016'],\n            developer: 'Practice Fusion, Inc.',\n            sponsor: 'Amgen Inc.',\n            link: 'https://mdinteractive.com/files/uploaded/file/CMS2017/2017_Measure_039_Registry.pdf',\n            source: 'Practice Fusion, Inc.',\n            actionLinkType: 'showOsteoporosisModal',\n            actionLinkData: 'isOrderVisible=false',\n            actionLinkText: 'Document DXA results',\n            error: false\n        }]);\n        await visit(`/PF/charts/patients/${patientPracticeGuid}/encounter/${transcriptGuid}`);\n        assert.equal(find('.ember-accordion-container').length, 1, 'There are 1 CDS alert container');\n        assert.equal((0, _getText.default)('.ember-accordion-header .cds-alert-text'), alertText, 'The CDS alert text renders correctly');\n        assert.equal((0, _getText.default)('.ember-accordion-header .custom-action'), 'Document DXA results', 'The custom action text is correct');\n        await click('.ember-accordion-header .custom-action a');\n        assert.equal(find(OSTEOPOROSIS_MODAL).length, 1, 'The osteoporosis modal is shown');\n        assert.equal(find((0, _dataElement.default)(IMAGING_ORDER_BUTTON)).length, 0, 'The imaging order button is not shown');\n        assert.equal(find((0, _dataElement.default)(IMAGING_RESULT_BUTTON)).length, 1, 'The imaging results button is shown');\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/patient-goal-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element'], function (_qunit, _moduleForAcceptanceAuth, _dataElement) {\n    'use strict';\n\n    const PATIENT_PRACTICE_GUID = 'c5faffde-78e2-4924-acaf-2115bc686d5e';\n    const PATIENT_GOAL_GUID = '3efd9363-66e9-49a1-b9da-2a5e51f1b197';\n    const ADD_GOAL = (0, _dataElement.default)('add-goal-button');\n    const DESCRIPTION = '.goal-detail textarea';\n    const SAVE = (0, _dataElement.default)('btn-save');\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Clinical | Patient Goals - v2');\n\n    (0, _qunit.test)('Add/Edit/Delete a goal', async assert => {\n        let getCalled;\n        let postCalled;\n        let putCalled;\n        let deleteCalled;\n\n        server.get(`ClinicalEndpoint/api/v1/patients/${PATIENT_PRACTICE_GUID}/patientGoals`, () => {\n            getCalled = true;\n            return { 'patientGoals': [] };\n        });\n\n        server.post(`ClinicalEndpoint/api/v1/patients/${PATIENT_PRACTICE_GUID}/patientGoals`, ({ db }, request) => {\n            const goal = JSON.parse(request.requestBody);\n\n            postCalled = true;\n            assert.equal(goal.description, 'Some text here', 'Post requests contains description');\n            assert.equal(goal.isActive, true, 'Post request contains the correct active status');\n            assert.equal(goal.effectiveDate, moment.utc(moment().format('MM/DD/YYYY')).toISOString(), 'Post requests contains the correct date');\n            goal.patientGoalGuid = '3efd9363-66e9-49a1-b9da-2a5e51f1b197';\n            return { 'patientGoal': goal };\n        });\n\n        server.put(`ClinicalEndpoint/api/v1/patients/${PATIENT_PRACTICE_GUID}/patientGoals/${PATIENT_GOAL_GUID}`, () => {\n            putCalled = true;\n            return {};\n        });\n\n        server.delete(`ClinicalEndpoint/api/v1/patients/${PATIENT_PRACTICE_GUID}/patientGoals/${PATIENT_GOAL_GUID}`, () => {\n            deleteCalled = true;\n        });\n\n        await visit(`/PF/charts/patients/${PATIENT_PRACTICE_GUID}/summary`);\n        await click(ADD_GOAL);\n        fillIn(DESCRIPTION, 'Some text here');\n        await click(SAVE);\n        assert.ok(getCalled, 'GET call to load goals was made');\n        assert.ok(postCalled, 'POST call to save goal was made');\n        assert.dom((0, _dataElement.default)('goal-description')).hasText('Some text here', 'Goal was added under the goal section');\n        await click((0, _dataElement.default)('goal-description'));\n        await fillIn(DESCRIPTION, 'edited goal');\n        await click(SAVE);\n        assert.ok(putCalled, 'PUT call to save edited goal was made');\n        assert.dom((0, _dataElement.default)('goal-description')).hasText('edited goal', 'Edited goal appears under goal section');\n        await click((0, _dataElement.default)('goal-description'));\n        await click((0, _dataElement.default)('btn-delete'));\n        assert.ok(deleteCalled, 'DELETE call to delete goal was made');\n        assert.dom((0, _dataElement.default)('no-goals-placeholder')).hasText('No patient goals recorded', 'Goal was successfully deleted and disappears from goal section');\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/patient-immunization-bidirectional-test', ['qunit', 'boot/tests/helpers/data-element', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/config'], function (_qunit, _dataElement, _moduleForAcceptanceAuth, _config) {\n    'use strict';\n\n    const OLD_DUDER_PATIENT = '78f2e278-4519-4b0e-b192-f1f7f360215b';\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Clinical | Bidirectional patient immunizations');\n\n    (0, _qunit.test)('View list of immunizations', async assert => {\n        await visit(`/PF/charts/patients/${OLD_DUDER_PATIENT}/immunizations`);\n        assert.dom((0, _dataElement.default)('immunization-group-0')).exists();\n    });\n\n    (0, _qunit.test)('Toggle add immunization', async assert => {\n        await visit(`/PF/charts/patients/${OLD_DUDER_PATIENT}/immunizations`);\n        await click((0, _dataElement.default)('btn-add-vaccine'));\n        assert.dom((0, _dataElement.default)('add-immunization-content')).exists();\n    });\n    /* jshint ignore:end */\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/patient-immunization-limited-access-test', ['qunit', 'boot/tests/helpers/data-element', 'boot/tests/helpers/module-for-acceptance-auth'], function (_qunit, _dataElement, _moduleForAcceptanceAuth) {\n    'use strict';\n\n    const OLD_DUDER_PATIENT = '78f2e278-4519-4b0e-b192-f1f7f360215b';\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Clinical | Patient immunizations limited access', {\n        beforeLogin() {\n            server.get('AuthzEndpoint/api/v1/users/:id/rights', () => ({\n                entitledFeatures: []\n            }));\n        }\n    });\n\n    (0, _qunit.test)('Immunization actions in limited access', async assert => {\n        await visit(`/PF/charts/patients/${OLD_DUDER_PATIENT}/immunizations`);\n        assert.dom((0, _dataElement.default)('btn-add-vaccine')).doesNotExist();\n        assert.dom((0, _dataElement.default)('btn-transmit')).doesNotExist();\n        assert.dom((0, _dataElement.default)('btn-connect-registry')).doesNotExist();\n    });\n\n    (0, _qunit.test)('Administered vaccine in limited access', async assert => {\n        await visit(`/PF/charts/patients/${OLD_DUDER_PATIENT}/immunizations`);\n        await click(`${(0, _dataElement.default)('immunization-group-2')} ${(0, _dataElement.default)('vaccine-0')}`);\n        assert.dom(`${(0, _dataElement.default)('select-ordered-by')} .composable-select__choice`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('txt-comments')} textarea`).isDisabled();\n        assert.dom((0, _dataElement.default)('btn-delete-immunization')).isDisabled();\n        assert.dom((0, _dataElement.default)('btn-save-immunization')).isDisabled();\n        assert.dom((0, _dataElement.default)('btn-cancel-add')).exists();\n    });\n\n    (0, _qunit.test)('Historical vaccine in limited access', async assert => {\n        await visit(`/PF/charts/patients/${OLD_DUDER_PATIENT}/immunizations`);\n        await click(`${(0, _dataElement.default)('immunization-group-0')} ${(0, _dataElement.default)('vaccine-0')}`);\n        assert.dom(`${(0, _dataElement.default)('dropdown-facility')} .composable-select__choice`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('comments')} textarea`).isDisabled();\n        assert.dom((0, _dataElement.default)('btn-delete-immunization')).isDisabled();\n        assert.dom((0, _dataElement.default)('btn-save-immunization')).isDisabled();\n        assert.dom((0, _dataElement.default)('btn-cancel-add')).exists();\n    });\n\n    (0, _qunit.test)('Refused vaccine in limited access', async assert => {\n        await visit(`/PF/charts/patients/${OLD_DUDER_PATIENT}/immunizations`);\n        await click(`${(0, _dataElement.default)('immunization-group-2')} ${(0, _dataElement.default)('vaccine-0')}`);\n        assert.dom(`${(0, _dataElement.default)('dropdown-facility')} .composable-select__choice`).isDisabled();\n        assert.dom(`${(0, _dataElement.default)('comments')} textarea`).isDisabled();\n        assert.dom((0, _dataElement.default)('btn-delete-immunization')).isDisabled();\n        assert.dom((0, _dataElement.default)('btn-save-immunization')).isDisabled();\n        assert.dom((0, _dataElement.default)('btn-cancel-add')).exists();\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/patient-summary-limited-access-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element'], function (_qunit, _moduleForAcceptanceAuth, _dataElement) {\n    'use strict';\n\n    const PATIENT_PRACTICE_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Charting | Summary limited access - v2', {\n        beforeEach() {\n            server.get('AuthzEndpoint/api/v1/users/:id/rights', () => ({\n                entitledFeatures: ['ERX.Send', 'Chart.Sign', 'EPCS.Send']\n            }));\n        }\n    });\n\n    async function assertSummarySections(assert) {\n        // Flowsheets\n        assert.dom((0, _dataElement.default)('summary-flowsheet-pencil-button')).doesNotExist('summary flowsheet edit button does not exist');\n        // Diagnoses\n        assert.dom((0, _dataElement.default)('add-diagnosis-button')).doesNotExist('add diagnosis button does not exist');\n        // Social history\n        assert.dom(`${(0, _dataElement.default)('smoking-status-section')} ${(0, _dataElement.default)('social-health-field-add-button')}`).doesNotExist('smoking status add button does not exist');\n        assert.dom(`${(0, _dataElement.default)('gender-identity-section')} ${(0, _dataElement.default)('social-health-field-add-button')}`).doesNotExist('gender identity add button does not exist');\n        assert.dom(`${(0, _dataElement.default)('sexual-orientation-section')} ${(0, _dataElement.default)('social-health-field-add-button')}`).doesNotExist('sexual orientation add button does not exist');\n        assert.dom(`${(0, _dataElement.default)('social-history-section')} ${(0, _dataElement.default)('social-health-field-add-button')}`).doesNotExist('social history pencil button does not exist');\n        // Past medical history\n        assert.dom((0, _dataElement.default)('pmh-pencil-button')).doesNotExist('past medical history pencil button does not exist');\n        // Advance directives\n        assert.dom((0, _dataElement.default)('advanced-directive-pencil-button')).doesNotExist('advanced directive pencil button does not exist');\n        // Allergies\n        assert.dom((0, _dataElement.default)('add-allergy-button')).doesNotExist('add allergy button does not exist');\n        // Medications\n        assert.dom((0, _dataElement.default)('record-medication')).doesNotExist('record medication button does not exist');\n        // Implantable devices\n        assert.dom((0, _dataElement.default)('record-device')).doesNotExist('record implantable device button does not exist');\n        // Health concerns\n        assert.dom((0, _dataElement.default)('add-health-concern-button')).doesNotExist('add health concern button does not exist');\n        assert.dom((0, _dataElement.default)('add-health-concern-note-button')).doesNotExist('add health concern note button does not exist');\n        // Goals\n        assert.dom((0, _dataElement.default)('add-goal-button')).doesNotExist('add goal button does not exist');\n        // Messages\n        assert.dom((0, _dataElement.default)('add-message-link')).doesNotExist('add messages button does not exist');\n        // Family health history\n        assert.dom((0, _dataElement.default)('add-family-history-button')).doesNotExist('add family health history button does not exist');\n        await click((0, _dataElement.default)('family-health-history-card-list-item'));\n        assert.dom(`${(0, _dataElement.default)('family-health-history-text-area-container')} ${(0, _dataElement.default)('text-area-counter')}`).isDisabled('Family health history text area is disabled');\n        assert.dom((0, _dataElement.default)('btn-save-family-health-history')).doesNotExist('User cannot save family health history');\n    }\n\n    function assertWalkMe(assert) {\n        assert.dom('.btn-new-encounter').doesNotExist('new encounter button does not exist');\n    }\n\n    function assertImplantableDevices(assert) {\n        assert.dom('.device-detail').exists('click device item opens detail pane');\n        assert.dom((0, _dataElement.default)('device-active') + '>input').isDisabled('device active checkbox is disabled');\n        assert.dom((0, _dataElement.default)('implant-date-txt')).isDisabled('implant date picker is disabled');\n        assert.dom('delete-device-button').doesNotExist('delete device button does not exist');\n        assert.dom('.device-detail .btn-primary').doesNotExist('save device button does not exist');\n    }\n\n    (0, _qunit.test)('Summary is disabled in limited access mode', async assert => {\n        await visit(`/PF/charts/patients/${PATIENT_PRACTICE_GUID}/summary/`);\n        await assertSummarySections(assert);\n        assertWalkMe(assert);\n        await click((0, _dataElement.default)('active-device-0'));\n        assertImplantableDevices(assert);\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/prolia-modal-limited-access-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element'], function (_qunit, _moduleForAcceptanceAuth, _dataElement) {\n    'use strict';\n\n    const PROLIA_PERMANENT_PLACE_LINK = (0, _dataElement.default)('prolia-permanent-link');\n    const CUSTOM_PATIENT_AGGREGATE = {\n        id: 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98',\n        diagnoses: {\n            patientDiagnoses: [{\n                diagnosisGuid: 'd3c5451b-ccb5-4770-b98e-054750b369a5',\n                patientPracticeGuid: 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98',\n                name: 'Diabetes mellitus without mention of complication, type II or unspecified type, not stated as uncontrolled',\n                code: '',\n                isAcute: false,\n                isTerminal: false,\n                startDate: '2014-10-05T07:00:00Z',\n                stopDate: '2014-10-06T07:00:00Z',\n                diagnosisCodes: [],\n                isActive: true,\n                transcriptDiagnoses: [{\n                    transcriptGuid: '980e0fb7-1e36-432a-ac8a-9969f38aad92',\n                    comment: '',\n                    isActive: true,\n                    lastModifiedByProviderGuid: '00000000-0000-0000-0000-000000000000',\n                    lastModifiedAt: '2014-12-16T16:46:31.227Z',\n                    sortOrder: -10\n                }, {\n                    transcriptGuid: '8c7c7202-f2be-45a0-a528-68eef6722d60',\n                    comment: '',\n                    isActive: true,\n                    lastModifiedByProviderGuid: '00000000-0000-0000-0000-000000000000',\n                    lastModifiedAt: '2014-10-29T18:36:02.347Z',\n                    sortOrder: 4\n                }]\n            }],\n            noKnownDiagnoses: false\n        },\n        medications: {\n            patientMedications: [{\n                medicationGuid: 'd548134c-278f-4b68-840b-06793b4ea2b8',\n                patientPracticeGuid: 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98',\n                tradeName: 'Prolia',\n                genericName: 'Denosumab',\n                rxNormCui: '993458',\n                ndc: '55513071001',\n                controlledSubstanceSchedule: '',\n                sig: {\n                    dose: null,\n                    route: 'Subcutaneous',\n                    frequency: null,\n                    duration: null,\n                    professionalDescription: '',\n                    patientDescription: '',\n                    searchTerm: null\n                },\n                doseForm: 'Solution',\n                route: 'Subcutaneous',\n                productStrength: '60 MG/ML',\n                startDateTime: '2017-07-04T07:00:00Z',\n                medicationDiscontinuedReason: {\n                    id: 0,\n                    description: null\n                },\n                transcriptMedications: [{\n                    transcriptGuid: null,\n                    transcriptDateOfService: null,\n                    comment: null,\n                    lastModifiedDateTimeUtc: '2017-07-30T23:22:38.703Z',\n                    lastModifiedProviderGuid: '85821ab8-ac27-4eca-a7bd-bc4c0b6cc980',\n                    providerFirstName: 'Mad',\n                    providerLastName: 'Hatter',\n                    providerMiddleName: null,\n                    providerSuffix: 'PhD',\n                    providerTitle: 'Dr'\n                }, {\n                    transcriptGuid: '1e2c5401-6ff2-4e9f-9cfa-49a1779c5f0d',\n                    transcriptDateOfService: null,\n                    comment: null,\n                    lastModifiedDateTimeUtc: '2017-07-30T23:22:38.703Z',\n                    lastModifiedProviderGuid: '85821ab8-ac27-4eca-a7bd-bc4c0b6cc980',\n                    providerFirstName: 'Mad',\n                    providerLastName: 'Hatter',\n                    providerMiddleName: null,\n                    providerSuffix: 'PhD',\n                    providerTitle: 'Dr'\n                }],\n                lastModifiedDateTimeUtc: '2017-07-30T23:22:38.703Z',\n                drugName: 'Prolia 60 MG/ML Subcutaneous Solution',\n                prescriptions: [],\n                isGeneric: false,\n                isMedicalSupply: false\n            }],\n            noKnownMedications: false\n        }\n    };\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Clinical | Assessment modal limited access - v2', {\n        beforeEach() {\n            server.get('AuthzEndpoint/api/v1/users/:id/rights', () => ({\n                entitledFeatures: ['ERX.Send', 'Chart.Sign', 'EPCS.Send']\n            }));\n        }\n    });\n\n    (0, _qunit.test)('Prolia modal is hidden upon visiting encounter if Prolia CDS Alert os present', async assert => {\n        const patientPracticeGuid = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n        const transcriptGuid = '7022d94f-d70a-4722-a205-dac898cf9f69';\n        const alertText = 'Patient Safety: Monitor and record adverse events of special interest that may be experienced in patients receiving Prolia.';\n\n        server.get('AlertEndpoint/api/v1/CdsAlerts/:patientPracticeGuid/:transcriptGuid', () => [{\n            alertIdentifier: 'Surveillance.Prolia',\n            ruleId: 34,\n            alertText: alertText,\n            citations: [],\n            developer: 'Practice Fusion, Inc.',\n            sponsor: 'Amgen Inc.',\n            link: 'http://www.proliahcp.com/risk-evaluation-mitigation-strategy/',\n            source: 'Practice Fusion, Inc.',\n            actionLinkType: 'addClinicalAssessment',\n            actionLinkData: 'name=proliaAesiModal',\n            actionLinkText: 'Record',\n            error: false\n        }]);\n\n        await visit(`/PF/charts/patients/${patientPracticeGuid}/encounter/${transcriptGuid}`);\n        const adverseEffectDescriptions = find(`${(0, _dataElement.default)('prolia-aesi-modal')} .disease-description`);\n        assert.equal(adverseEffectDescriptions.length, 0, 'The updated adverse effect descriptions are hidden.');\n    });\n\n    (0, _qunit.test)('Prolia permanent place link is hidden from patient summary and encounter', async assert => {\n        const patientPracticeGuid = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n        const transcriptGuid = '7022d94f-d70a-4722-a205-dac898cf9f69';\n\n        server.get('ClinicalEndpoint/api/v1/patients/:id/aggregate', () => CUSTOM_PATIENT_AGGREGATE);\n\n        await visit(`/PF/charts/patients/${patientPracticeGuid}/summary`);\n        assert.ok(find(PROLIA_PERMANENT_PLACE_LINK).length === 0, 'Prolia permanent place link is hidden on patient summary.');\n\n        await visit(`/PF/charts/patients/${patientPracticeGuid}/encounter/${transcriptGuid}`);\n        assert.ok(find(PROLIA_PERMANENT_PLACE_LINK).length === 0, 'Prolia permanent place link is hidden on encounter.');\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/recent-activity-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element', 'boot/tests/helpers/get-text'], function (_qunit, _moduleForAcceptanceAuth, _dataElement, _getText) {\n    'use strict';\n\n    const MODAL_SELECTOR = '.modal.recent-activity';\n    const ACTIONS_MENU_ITEM = `${(0, _dataElement.default)('actions-menu-options')} a:contains('View recent activity')`;\n    const PATIENT_PRACTICE_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const SUMMARY_URL = `/PF/charts/patients/${PATIENT_PRACTICE_GUID}/summary`;\n    const ENCOUNTER_URL = `/PF/charts/patients/${PATIENT_PRACTICE_GUID}/encounter/UNSIGNED_TRANSCRIPT_GUID`;\n\n    function auditItem(guid) {\n        return `${MODAL_SELECTOR} [data-guid=\"${guid}\"] ${(0, _dataElement.default)('audit-item-description')}`;\n    }\n    function auditItemText(guid) {\n        return (0, _getText.default)(auditItem(guid));\n    }\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Clinical | Recent patient activity - v2');\n\n    (0, _qunit.test)('Click encounter link from recent patient activity modal', async assert => {\n        visit(SUMMARY_URL);\n        click((0, _dataElement.default)('actions-menu'));\n        await click(ACTIONS_MENU_ITEM);\n        await wait();\n        assert.throws(findWithAssert(MODAL_SELECTOR), 'The recent activity modal is displayed.');\n        assert.equal(auditItemText('33bb0de7-3ec6-44d9-baae-67e07206d926'), 'Some Dude, MD created a referral summary document', 'The first audit item description renders correctly');\n        assert.equal(auditItemText('0113179b-abc1-4ca1-99a0-7a8b89fdb380'), 'Some Dude, MD shown 1 Clinical Decision Support alerts on SOAP Note chart note with date of service = 3/8/2016', 'CDS item renders correctly');\n        await click(`${auditItem('0113179b-abc1-4ca1-99a0-7a8b89fdb380')} a`);\n        assert.notOk(find(MODAL_SELECTOR).length, 'The recent activity modal is no longer visible');\n        assert.equal(currentURL(), ENCOUNTER_URL, 'The encounter was opened');\n    });\n\n    (0, _qunit.test)('Refresh and close patient activity modal', async assert => {\n        let getCallCount = 0;\n        server.get('AuditEndpoint/api/v1/auditEvent/patient/:patientPracticeGuid', ({ db }, request) => {\n            getCallCount++;\n            return db.auditEvents.where({ patientPracticeGuid: request.params.patientPracticeGuid })[0];\n        });\n        visit(SUMMARY_URL);\n        click((0, _dataElement.default)('actions-menu'));\n        await click(ACTIONS_MENU_ITEM);\n        await click((0, _dataElement.default)('recent-activity-refresh'));\n        assert.equal(getCallCount, 2, 'The data was refreshed when the refresh button was clicked');\n        await click((0, _dataElement.default)('recent-activity-done'));\n        assert.notOk(find(MODAL_SELECTOR).length, 'The recent activity modal is no longer visible');\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/risk-score-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element', 'boot/tests/helpers/get-text-in-print', 'sinon'], function (_qunit, _moduleForAcceptanceAuth, _dataElement, _getTextInPrint, _sinon) {\n    'use strict';\n\n    const PATIENT_PRACTICE_GUID = 'c5faffde-78e2-4924-acaf-2115bc686d5e';\n    const NEW_RISK_SCORE = {\n        optionGuid: '28f3add6-6b6b-4795-bd87-e9432f824fdf',\n        description: 'Hierarchical Condition Category (HCC)',\n        riskScore: 40.50,\n        dateAssigned: moment().format('MM/DD/YYYY')\n    };\n    const EMPTY_SOCIAL_HISTORY = {\n        genderIdentity: null,\n        sexualOrientation: null,\n        riskScore: null\n    };\n    const DEFAULT_DATE = moment().format('M/D/YYYY');\n    const VALIDATION_MESSAGES = {\n        riskScoreType: 'Please select a risk score type',\n        riskScore: 'Please enter a numeric risk score',\n        riskScoreInvalid: 'Scores are limited to positive numbers below 1000 with up to 3 decimal places',\n        dateAssigned: 'Date assigned is required'\n    };\n    const INVALID_RISK_SCORE = '9999.9999';\n    let toastrSuccessStub;\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Clinical | Patient Risk Score - v2', {\n        beforeEach() {\n            toastrSuccessStub = _sinon.default.stub(window.toastr, 'success');\n        },\n        afterEach() {\n            window.toastr.success.restore();\n        }\n    });\n\n    (0, _qunit.test)('Empty risk score renders properly', async assert => {\n        server.get('/PatientEndpoint/api/v3/patients/patientDemographic/:patientPracticeGuid', () => EMPTY_SOCIAL_HISTORY);\n\n        await visit(`/PF/charts/patients/${PATIENT_PRACTICE_GUID}/summary`);\n        assert.dom((0, _dataElement.default)('patient-risk-score-placeholder-text')).hasText('No patient risk score recorded', 'Empty risk score rendered properly');\n    });\n\n    (0, _qunit.test)('Add patient risk score on patient summary', async assert => {\n        let socialHistoryPayload = EMPTY_SOCIAL_HISTORY;\n        server.get('/PatientEndpoint/api/v3/patients/patientDemographic/:patientPracticeGuid', () => socialHistoryPayload);\n        server.put('/PatientEndpoint/api/v3/patients/patientDemographic/:patientPracticeGuid', ({ db }, request) => {\n            const newSettings = JSON.parse(request.requestBody);\n            assert.equal(newSettings.riskScore.optionGuid, NEW_RISK_SCORE.optionGuid, 'The correct risk score type guid was saved');\n            assert.equal(newSettings.riskScore.riskScore, NEW_RISK_SCORE.riskScore, 'The correct risk score was saved');\n            assert.equal(newSettings.riskScore.dateAssigned, NEW_RISK_SCORE.dateAssigned, 'The correct assigned date was saved');\n            socialHistoryPayload = {\n                genderIdentity: null,\n                sexualOrientation: null,\n                riskScore: NEW_RISK_SCORE\n            };\n            return socialHistoryPayload;\n        });\n\n        assert.expect(14);\n        await visit(`/PF/charts/patients/${PATIENT_PRACTICE_GUID}/summary`);\n        assert.dom((0, _dataElement.default)('patient-risk-score-card')).exists('Risk Score section displays on patient summary');\n        await delayAsync(100);\n        assert.dom((0, _dataElement.default)('patient-risk-score-placeholder-text')).hasText('No patient risk score recorded', 'Risk score section displays empty');\n        assert.throws(findWithAssert((0, _dataElement.default)('patient-risk-score-add-button')), 'Risk score add button is visible');\n        await click((0, _dataElement.default)('patient-risk-score-add-button'));\n        await delayAsync(100);\n        assert.throws(findWithAssert('.patient-risk-score-detail'), 'Detail panel displays after add is clicked');\n        assert.equal(find(`.patient-risk-score-detail ${(0, _dataElement.default)('date-assigned-txt')}`).val(), DEFAULT_DATE, 'Date assigned defaults to current date');\n        await click('.detail-pane-footer .btn-primary');\n        // Validation shows that risk score type is required\n        assert.throws(findWithAssert(`.tooltip-inner:contains('${VALIDATION_MESSAGES.riskScoreType}')`), 'Validation for the risk score type is shown');\n        await click(`.patient-risk-score-detail ${(0, _dataElement.default)('risk-type')} .dropdown-toggle`);\n        await click(`.patient-risk-score-detail ${(0, _dataElement.default)('risk-type')} ${(0, _dataElement.default)('risk-type-0')}`);\n        await click('.detail-pane-footer .btn-primary');\n        // Validation shows that risk score is required\n        assert.throws(findWithAssert(`.tooltip-inner:contains('${VALIDATION_MESSAGES.riskScore}')`), 'Validation for the risk score is shown');\n        fillIn(`.patient-risk-score-detail ${(0, _dataElement.default)('risk-score')}`, INVALID_RISK_SCORE);\n        await click('.detail-pane-footer .btn-primary');\n        // validation shows that risk score is not validation\n        assert.throws(findWithAssert(`.tooltip-inner:contains('${VALIDATION_MESSAGES.riskScoreInvalid}')`), 'Validation for the risk score is shown');\n        fillIn(`.patient-risk-score-detail ${(0, _dataElement.default)('risk-score')}`, NEW_RISK_SCORE.riskScore);\n        await click('.detail-pane-footer .btn-primary');\n        assert.equal(toastrSuccessStub.args[0][0], 'Patient risk score saved.', 'Confirmation toast displays after saving');\n        assert.notOk(find('.patient-risk-score-detail').length, 'Risk score pane closed upon saving');\n        assert.throws(findWithAssert((0, _dataElement.default)('patient-risk-score-item')), 'Risk score list is updated after save');\n    });\n\n    (0, _qunit.test)('Edit patient risk score', async assert => {\n        let socialHistoryPayload = EMPTY_SOCIAL_HISTORY;\n        server.get('/PatientEndpoint/api/v3/patients/patientDemographic/:patientPracticeGuid', ({ db }) => {\n            socialHistoryPayload = db.socialHistories[0];\n            return socialHistoryPayload;\n        });\n        server.put('/PatientEndpoint/api/v3/patients/patientDemographic/:patientPracticeGuid', ({ db }, request) => {\n            const newSettings = JSON.parse(request.requestBody);\n            assert.equal(newSettings.riskScore.optionGuid, NEW_RISK_SCORE.optionGuid, 'The correct risk score type guid was saved');\n            assert.equal(newSettings.riskScore.riskScore, NEW_RISK_SCORE.riskScore, 'The correct risk score was saved');\n            assert.equal(newSettings.riskScore.dateAssigned, NEW_RISK_SCORE.dateAssigned, 'The correct assigned date was saved');\n            socialHistoryPayload.riskScore = NEW_RISK_SCORE;\n            return socialHistoryPayload;\n        });\n\n        assert.expect(12);\n        await visit(`/PF/charts/patients/${PATIENT_PRACTICE_GUID}/summary`);\n        assert.dom((0, _dataElement.default)('patient-risk-score-card')).exists('Risk Score section displays on patient summary');\n        await delayAsync(100);\n        assert.throws(findWithAssert((0, _dataElement.default)('patient-risk-score-item')), 'Risk score section displays expected result');\n        assert.notOk(find((0, _dataElement.default)('patient-risk-score-add-button')).length, 'Risk score add button is not visible');\n        await click((0, _dataElement.default)('patient-risk-score-item'));\n        await delayAsync(100);\n        assert.throws(findWithAssert('.patient-risk-score-detail'), 'Detail panel displays after item is clicked');\n        await click(`.patient-risk-score-detail ${(0, _dataElement.default)('risk-type')} .dropdown-toggle`);\n        await click(`.patient-risk-score-detail ${(0, _dataElement.default)('risk-type')} ${(0, _dataElement.default)('risk-type-0')}`);\n        fillIn(`.patient-risk-score-detail ${(0, _dataElement.default)('risk-score')}`, NEW_RISK_SCORE.riskScore);\n        fillIn(`.patient-risk-score-detail ${(0, _dataElement.default)('date-assigned-txt')}`, NEW_RISK_SCORE.dateAssigned);\n        await click('.detail-pane-footer .btn-primary');\n        assert.equal(toastrSuccessStub.args[0][0], 'Patient risk score saved.', 'Confirmation toast displays after saving');\n        assert.notOk(find('.patient-risk-score-detail').length, 'Risk score pane closed upon saving');\n        assert.throws(findWithAssert(`${(0, _dataElement.default)('patient-risk-score-item')}:contains('${NEW_RISK_SCORE.description}')`), 'Risk score list is updated with correct type');\n        assert.throws(findWithAssert(`${(0, _dataElement.default)('patient-risk-score-item')}:contains('${NEW_RISK_SCORE.riskScore}')`), 'Risk score list is updated with correct score');\n        assert.throws(findWithAssert(`${(0, _dataElement.default)('patient-risk-score-item')}:contains('${NEW_RISK_SCORE.dateAssigned}')`), 'Risk score list is updated with correct date');\n    });\n\n    (0, _qunit.test)('Delete patient risk score', async assert => {\n        let socialHistoryPayload = EMPTY_SOCIAL_HISTORY;\n        server.get('/PatientEndpoint/api/v3/patients/patientDemographic/:patientPracticeGuid', ({ db }) => {\n            socialHistoryPayload = db.socialHistories[0];\n            return socialHistoryPayload;\n        });\n        server.del('/PatientEndpoint/api/v3/patients/riskScore/:patientPracticeGuid', ({ db }, request) => {\n            assert.equal(request.params.patientPracticeGuid, PATIENT_PRACTICE_GUID, 'Risk score was deleted for the correct patient');\n        });\n\n        assert.expect(10);\n        await visit(`/PF/charts/patients/${PATIENT_PRACTICE_GUID}/summary`);\n        assert.dom((0, _dataElement.default)('patient-risk-score-card')).exists('Risk Score section displays on patient summary');\n        await delayAsync(100);\n        assert.throws(findWithAssert((0, _dataElement.default)('patient-risk-score-item')), 'Risk score section displays expected result');\n        assert.notOk(find((0, _dataElement.default)('patient-risk-score-add-button')).length, 'Risk score add button is not visible');\n        await click((0, _dataElement.default)('patient-risk-score-item'));\n        await delayAsync(100);\n        assert.throws(findWithAssert('.patient-risk-score-detail'), 'Detail panel displays after item is clicked');\n        await click((0, _dataElement.default)('delete-risk-score-button'));\n        assert.throws(findWithAssert(`.content-modal .content-modal-title:contains('Delete patient risk score')`), 'Delete requires confirmation');\n        await click('.content-modal footer .btn-primary');\n        assert.equal(toastrSuccessStub.args[0][0], 'Patient risk score deleted.', 'Confirmation toast displays after deleting');\n        assert.notOk(find('.patient-risk-score-detail').length, 'Risk score pane closed upon saving');\n        assert.dom((0, _dataElement.default)('patient-risk-score-placeholder-text')).hasText('No patient risk score recorded', 'Risk score section displays empty');\n        assert.throws(findWithAssert((0, _dataElement.default)('patient-risk-score-add-button')), 'Risk score add button is visible');\n    });\n\n    (0, _qunit.test)('Print preview risk score', async assert => {\n        let socialHistoryPayload;\n        server.get('/PatientEndpoint/api/v3/patients/patientDemographic/:patientPracticeGuid', ({ db }) => {\n            socialHistoryPayload = db.socialHistories[0];\n            return socialHistoryPayload;\n        });\n        assert.expect(3);\n        await visit(`/PF/charts/patients/${PATIENT_PRACTICE_GUID}/summary`);\n        assert.throws(findWithAssert((0, _dataElement.default)('print-patient-risk-score-button')), 'Print risk score button is available');\n        await click((0, _dataElement.default)('print-patient-risk-score-button'));\n        assert.equal((0, _getTextInPrint.default)(`.print-section ${(0, _dataElement.default)('print-patient-risk-score-description')}`), socialHistoryPayload.riskScore.description, 'Risk score shows correct type description');\n        assert.equal((0, _getTextInPrint.default)(`.print-section ${(0, _dataElement.default)('print-patient-risk-score')}`), socialHistoryPayload.riskScore.riskScore, 'Risk score shows correct score');\n        click('#print-modal-controls .close-link');\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/social-health-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element', 'ember-cli-mirage'], function (_qunit, _moduleForAcceptanceAuth, _dataElement, _emberCliMirage) {\n    'use strict';\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Clinical | Social health');\n\n    function enableTheSwitches() {\n        const uncheckedSwitches = find(`${(0, _dataElement.default)('social-history')} .d-checkbox-switch:has(input:not(:checked))`);\n        uncheckedSwitches.toArray().forEach(uncheckedSwitch => click(uncheckedSwitch));\n    }\n\n    async function assertAddSocialHealthField(assert, fieldKey, expectedDescription, expectedDate) {\n        const deFieldSection = (0, _dataElement.default)(`${fieldKey}-section`);\n        const deFieldDetail = (0, _dataElement.default)(`${fieldKey}-detail`);\n\n        assert.dom(`${deFieldSection} ${(0, _dataElement.default)('behavioral-health-placeholder-text')}`).doesNotHaveClass('hidden', 'Placeholder text displays for empty fields');\n        await click(`${deFieldSection} ${(0, _dataElement.default)('behavioral-health-field-add-button')}`);\n        assert.dom((0, _dataElement.default)('btn-social-health-delete')).hasClass('hidden', 'Delete button is hidden unless content is present');\n        switch (fieldKey) {\n            case 'socialHistory':\n                fillIn(`${deFieldDetail} ${(0, _dataElement.default)('text-area-counter')}`, expectedDescription);\n                break;\n            case 'education':\n                click(`${(0, _dataElement.default)('select-education')} .composable-select__choice`);\n                click(`${(0, _dataElement.default)('select-education-option-0')}`);\n                break;\n            case 'financialResourceStatus':\n                click(`${(0, _dataElement.default)('social-health-option-0')} .radio-button__label`);\n                break;\n            case 'genderIdentity':\n            case 'sexualOrientation':\n                assert.dom((0, _dataElement.default)('txt-social-health-notes')).isDisabled('Notes is disabled until an option is picked');\n                await click(`${(0, _dataElement.default)('social-health-option-0')} .radio-button__label`);\n                assert.dom((0, _dataElement.default)('txt-social-health-notes')).isNotDisabled('Notes is enabled after picking an option');\n                break;\n        }\n        await click((0, _dataElement.default)('btn-social-health-save'));\n        assert.dom(`${deFieldSection} ${(0, _dataElement.default)('behavioral-health-placeholder-text')}`).doesNotExist('Placeholder text is hidden when field is not empty');\n        assert.dom(`${deFieldSection} ${(0, _dataElement.default)('behavioral-health-field-item-0')} a`).hasText(expectedDescription);\n        if (expectedDate) {\n            assert.dom(`${deFieldSection} ${(0, _dataElement.default)('behavioral-health-field-item-0')} span`).hasText(expectedDate);\n        }\n    }\n\n    async function assertUpdateSocialHealthField(assert, fieldKey, initialDescription, expectedDescription, initialDate, expectedDate) {\n        const deFieldSection = (0, _dataElement.default)(`${fieldKey}-section`);\n        const deFieldDetail = (0, _dataElement.default)(`${fieldKey}-detail`);\n\n        assert.dom(`${deFieldSection} ${(0, _dataElement.default)('behavioral-health-placeholder-text')}`).doesNotExist('Placeholder text is hidden when field is not empty');\n        assert.dom(`${deFieldSection} ${(0, _dataElement.default)('behavioral-health-field-item-0')} a`).hasText(initialDescription);\n        if (initialDate) {\n            assert.dom(`${deFieldSection} ${(0, _dataElement.default)('behavioral-health-field-item-0')} span`).hasText(initialDate);\n        }\n        await click(`${deFieldSection} ${(0, _dataElement.default)('behavioral-health-field-item-0')}`);\n        assert.dom((0, _dataElement.default)('btn-social-health-delete')).doesNotHaveClass('hidden', 'Delete button is hidden unless content is present');\n        switch (fieldKey) {\n            case 'socialHistory':\n                fillIn(`${deFieldDetail} ${(0, _dataElement.default)('text-area-counter')}`, expectedDescription);\n                break;\n            case 'education':\n                click(`${(0, _dataElement.default)('select-education')} .composable-select__choice`);\n                click(`${(0, _dataElement.default)('select-education-option-1')}`);\n                break;\n            case 'financialResourceStatus':\n                click(`${(0, _dataElement.default)('social-health-option-1')} .radio-button__label`);\n                break;\n            case 'genderIdentity':\n            case 'sexualOrientation':\n                assert.dom((0, _dataElement.default)('txt-social-health-notes')).isNotDisabled('Notes is enabled after picking an option');\n                click(`${(0, _dataElement.default)('social-health-option-1')} .radio-button__label`);\n                break;\n        }\n        await click((0, _dataElement.default)('btn-social-health-save'));\n        assert.dom(`${deFieldSection} ${(0, _dataElement.default)('behavioral-health-field-item-0')} a`).hasText(expectedDescription);\n        if (expectedDate) {\n            assert.dom(`${deFieldSection} ${(0, _dataElement.default)('behavioral-health-field-item-0')} span`).hasText(expectedDate);\n        }\n    }\n\n    async function assertDeleteSocialHealthField(assert, fieldKey, initialDescription, initialDate) {\n        const deFieldSection = (0, _dataElement.default)(`${fieldKey}-section`);\n\n        assert.dom(`${deFieldSection} ${(0, _dataElement.default)('behavioral-health-placeholder-text')}`).doesNotExist('Placeholder text is hidden when field is not empty');\n        assert.dom(`${deFieldSection} ${(0, _dataElement.default)('behavioral-health-field-item-0')} a`).hasText(initialDescription);\n        if (initialDate) {\n            assert.dom(`${deFieldSection} ${(0, _dataElement.default)('behavioral-health-field-item-0')} span`).hasText(initialDate);\n        }\n        await click(`${deFieldSection} ${(0, _dataElement.default)('behavioral-health-field-item-0')}`);\n        assert.dom((0, _dataElement.default)('btn-social-health-delete')).doesNotHaveClass('hidden', 'Delete button is hidden unless content is present');\n        await click((0, _dataElement.default)('btn-social-health-delete'));\n        assert.dom(`${deFieldSection} ${(0, _dataElement.default)('behavioral-health-placeholder-text')}`).doesNotHaveClass('hidden', 'Placeholder text displays for empty fields');\n    }\n\n    (0, _qunit.test)('Add social health fields', async assert => {\n        server.put('ClinicalEndpoint/api/v2/PersonalMedicalHistory/:id', () => new _emberCliMirage.default.Response(204, {}, null));\n        server.put('PatientEndpoint/api/v3/patients/patientDemographic/:id', ({ db }, request) => JSON.parse(request.requestBody));\n        await visit('/PF/charts/patients/c5faffde-78e2-4924-acaf-2115bc686d5e/summary');\n        await click((0, _dataElement.default)('link-display-settings'));\n        enableTheSwitches();\n        await click((0, _dataElement.default)('btn-save-control-bar'));\n        await assertAddSocialHealthField(assert, 'socialHistory', 'This one time when I was a wee lad, I forgot to brush my hair');\n        await assertAddSocialHealthField(assert, 'financialResourceStatus', 'Very hard', moment().format('MM/DD/YYYY'));\n        await assertAddSocialHealthField(assert, 'education', 'Never attended/kindergarten only', moment().format('MM/DD/YYYY'));\n        await assertAddSocialHealthField(assert, 'genderIdentity', 'Male');\n        await assertAddSocialHealthField(assert, 'sexualOrientation', 'Straight or heterosexual');\n    });\n\n    (0, _qunit.test)('Update social health fields', async assert => {\n        server.put('ClinicalEndpoint/api/v2/PersonalMedicalHistory/:id', () => new _emberCliMirage.default.Response(204, {}, null));\n        server.put('PatientEndpoint/api/v3/patients/patientDemographic/:id', ({ db }, request) => JSON.parse(request.requestBody));\n        await visit('/PF/charts/patients/fd198d85-b2e4-435b-854a-b924b3261d75/summary');\n        await click((0, _dataElement.default)('link-display-settings'));\n        enableTheSwitches();\n        await click((0, _dataElement.default)('btn-save-control-bar'));\n        await assertUpdateSocialHealthField(assert, 'socialHistory', 'asdfasd', 'This one time when I was a wee lad, I forgot to brush my hair');\n        await assertUpdateSocialHealthField(assert, 'financialResourceStatus', 'Very hard', 'Hard', moment().format('MM/DD/YYYY'), moment().format('MM/DD/YYYY'));\n        await assertUpdateSocialHealthField(assert, 'education', 'Never attended/kindergarten only', '1st grade', moment().format('MM/DD/YYYY'), moment().format('MM/DD/YYYY'));\n        await assertUpdateSocialHealthField(assert, 'genderIdentity', 'Male', 'Female');\n        await assertUpdateSocialHealthField(assert, 'sexualOrientation', 'Straight or heterosexual', 'Lesbian, gay or homosexual');\n    });\n\n    (0, _qunit.test)('Delete social health fields', async assert => {\n        server.put('ClinicalEndpoint/api/v2/PersonalMedicalHistory/:id', () => new _emberCliMirage.default.Response(204, {}, null));\n        server.delete('PatientEndpoint/api/v3/patients/:id/demographics/:key', () => new _emberCliMirage.default.Response(204, {}, null));\n        server.delete('PatientEndpoint/api/v3/patients/:id/demographics/:key/:optionGuid', () => new _emberCliMirage.default.Response(204, {}, null));\n        await visit('/PF/charts/patients/fd198d85-b2e4-435b-854a-b924b3261d75/summary');\n        await click((0, _dataElement.default)('link-display-settings'));\n        enableTheSwitches();\n        await click((0, _dataElement.default)('btn-save-control-bar'));\n        await assertDeleteSocialHealthField(assert, 'socialHistory', 'asdfasd');\n        await assertDeleteSocialHealthField(assert, 'financialResourceStatus', 'Very hard', moment().format('MM/DD/YYYY'));\n        await assertDeleteSocialHealthField(assert, 'education', 'Never attended/kindergarten only', moment().format('MM/DD/YYYY'));\n        await assertDeleteSocialHealthField(assert, 'genderIdentity', 'Male');\n        await assertDeleteSocialHealthField(assert, 'sexualOrientation', 'Straight or heterosexual');\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/social-history-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element'], function (_qunit, _moduleForAcceptanceAuth, _dataElement) {\n    'use strict';\n\n    const PATIENT_PRACTICE_GUID = 'c5faffde-78e2-4924-acaf-2115bc686d5e';\n    const NEW_GENDER_IDENTITY = {\n        optionGuid: '1dd3321b-5dc0-443f-bc18-da6110d3e294',\n        description: 'Transgender Male/Trans Man/Female-to-Male',\n        notes: 'This is a test of gender identity'\n    };\n    const NEW_SEXUAL_ORIENTATION = {\n        optionGuid: 'f8e4b009-e430-4e25-bd29-d8d9644ccaba',\n        description: 'Something else, please describe',\n        notes: 'This is a test of sexual orientation'\n    };\n    const EMPTY_SOCIAL_HISTORY = {\n        genderIdentity: null,\n        sexualOrientation: null\n    };\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Clinical | Social History - v2');\n\n    (0, _qunit.test)('Add Gender Identity on patient summary', async assert => {\n        let socialHistoryPayload = EMPTY_SOCIAL_HISTORY;\n        server.get('/PatientEndpoint/api/v3/patients/patientDemographic/:patientPracticeGuid', () => socialHistoryPayload);\n        server.put('/PatientEndpoint/api/v3/patients/patientDemographic/:patientPracticeGuid', ({ db }, request) => {\n            const newSettings = JSON.parse(request.requestBody);\n            assert.equal(newSettings.genderIdentity.optionGuid, NEW_GENDER_IDENTITY.optionGuid, 'The correct gender identity guid was saved');\n            assert.equal(newSettings.genderIdentity.notes, NEW_GENDER_IDENTITY.notes, 'The correct gender identity note was saved');\n            socialHistoryPayload = {\n                genderIdentity: NEW_GENDER_IDENTITY,\n                sexualOrientation: null\n            };\n            return socialHistoryPayload;\n        });\n\n        assert.expect(9);\n        await visit(`/PF/charts/patients/${PATIENT_PRACTICE_GUID}/summary`);\n        assert.dom((0, _dataElement.default)('genderIdentity-section')).exists('Gender identity section displays on patient summary');\n        assert.dom(`${(0, _dataElement.default)('genderIdentity-section')} ${(0, _dataElement.default)('behavioral-health-placeholder-text')}`).hasText('No gender identity recorded', 'Gender identity section displays empty');\n        await click(`${(0, _dataElement.default)('genderIdentity-section')} ${(0, _dataElement.default)('behavioral-health-field-add-button')}`);\n        assert.throws(findWithAssert('.right-module h15:contains(\"Gender identity > Record\")'), 'Gender identity detail panel displays after add is clicked');\n        assert.dom(`${(0, _dataElement.default)('txt-social-health-notes')}`).isDisabled('Notes are disabled without selected option');\n        await click(`${(0, _dataElement.default)('social-health-option-2')} input`);\n        assert.dom(`${(0, _dataElement.default)('txt-social-health-notes')}`).isNotDisabled('Notes are enabled after selection');\n        fillIn(`${(0, _dataElement.default)('genderIdentity-detail')} ${(0, _dataElement.default)('txt-social-health-notes')}`, NEW_GENDER_IDENTITY.notes);\n        await click(`${(0, _dataElement.default)('btn-social-health-save')}`);\n        assert.notOk(find('.right-module h15:contains(\"Gender identity > Record\")').length, 'Gender identity pane closed upon saving');\n        assert.dom(`${(0, _dataElement.default)('genderIdentity-section')} ${(0, _dataElement.default)('behavioral-health-field-item-0')}`).exists('Gender identity list is updated after save');\n    });\n\n    (0, _qunit.test)('Add Sexual Orientation on patient summary', async assert => {\n        let socialHistoryPayload = EMPTY_SOCIAL_HISTORY;\n        server.get('/PatientEndpoint/api/v3/patients/patientDemographic/:patientPracticeGuid', () => socialHistoryPayload);\n        server.put('/PatientEndpoint/api/v3/patients/patientDemographic/:patientPracticeGuid', ({ db }, request) => {\n            const newSettings = JSON.parse(request.requestBody);\n            assert.equal(newSettings.sexualOrientation.optionGuid, NEW_SEXUAL_ORIENTATION.optionGuid, 'The correct sexual orientation guid was saved');\n            assert.equal(newSettings.sexualOrientation.notes, NEW_SEXUAL_ORIENTATION.notes, 'The correct sexual orientation note was saved');\n            socialHistoryPayload = {\n                genderIdentity: null,\n                sexualOrientation: NEW_SEXUAL_ORIENTATION\n            };\n            return socialHistoryPayload;\n        });\n\n        assert.expect(9);\n        await visit(`/PF/charts/patients/${PATIENT_PRACTICE_GUID}/summary`);\n        assert.dom((0, _dataElement.default)('sexualOrientation-section')).exists('Sexual orientation section displays on patient summary');\n        assert.dom(`${(0, _dataElement.default)('sexualOrientation-section')} ${(0, _dataElement.default)('behavioral-health-placeholder-text')}`).hasText('No sexual orientation recorded', 'Sexual orientation section displays empty');\n        await click(`${(0, _dataElement.default)('sexualOrientation-section')} ${(0, _dataElement.default)('behavioral-health-field-add-button')}`);\n        assert.throws(findWithAssert('.right-module h15:contains(\"Sexual orientation > Record\")'), 'Sexual orientation detail panel displays after add is clicked');\n        assert.dom(`${(0, _dataElement.default)('txt-social-health-notes')}`).isDisabled('Notes are disabled without selected option');\n        await click(`${(0, _dataElement.default)('social-health-option-3')} input`);\n        assert.dom(`${(0, _dataElement.default)('txt-social-health-notes')}`).isNotDisabled('Notes are enabled after selection');\n        fillIn(`${(0, _dataElement.default)('sexualOrientation-detail')} ${(0, _dataElement.default)('txt-social-health-notes')}`, NEW_SEXUAL_ORIENTATION.notes);\n        await click(`${(0, _dataElement.default)('btn-social-health-save')}`);\n        assert.notOk(find('.right-module h15:contains(\"Sexual orientation > Record\")').length, 'Sexual orientation pane closed upon saving');\n        assert.dom(`${(0, _dataElement.default)('sexualOrientation-section')} ${(0, _dataElement.default)('behavioral-health-field-item-0')}`).exists('Sexual orientation list is updated after save');\n    });\n\n    (0, _qunit.test)('Print preview social history', async assert => {\n        server.get('/PatientEndpoint/api/v3/patients/patientDemographic/:patientPracticeGuid', ({ db }) => {\n            return db.socialHistories[0];\n        });\n\n        await visit(`/PF/charts/patients/${PATIENT_PRACTICE_GUID}/summary`);\n        assert.throws(findWithAssert((0, _dataElement.default)('print-behavioral-health-button')), 'Print social history button is available');\n        await click((0, _dataElement.default)('print-behavioral-health-button'));\n        assert.dom('.print-behavioral-health-section').exists('Behavioral health section displays in the print modal');\n        assert.equal(find('.print-behavioral-health-section .table .header-row .col-xs-10:eq(0)').text(), 'Tobacco use', 'Smoking status displays in the print modal');\n        assert.equal(find('.print-behavioral-health-section .table .header-row .col-xs-12:eq(2)').text(), 'Gender identity', 'Gender identity displays in the print modal');\n        assert.equal(find('.print-behavioral-health-section .table .header-row .col-xs-12:eq(3)').text(), 'Sexual orientation', 'Sexual orientation displays in the print modal');\n\n        click('#print-modal-controls .close-link');\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/summary-sia-list-test', ['qunit', 'boot/tests/helpers/module-for-acceptance-auth', 'boot/tests/helpers/data-element'], function (_qunit, _moduleForAcceptanceAuth, _dataElement) {\n    'use strict';\n\n    const PATIENT_PRACTICE_GUID = 'c5faffde-78e2-4924-acaf-2115bc686d5e';\n    const summaryURL = `/PF/charts/patients/${PATIENT_PRACTICE_GUID}/summary`;\n    const TRANSCRIPT_EVENT_DETAIL_PANE_URL = `${summaryURL}/sia/2ab9b961-161b-4413-8a23-414fc9a5aab6`;\n    const WORKSHEET_EVENT_DETAIL_PANE_URL = `${summaryURL}/sia/67586303-5ff2-49a1-a913-87f6b45120f9`;\n    const MIGRAINE_WORKSHEET_DETAIL_PANE_URL = `${summaryURL}/sia/42ba9501-6c69-4851-99e6-c5f47d5c4991`;\n    const ENCOUNTER_URL = `/PF/charts/patients/${PATIENT_PRACTICE_GUID}/encounter/562d5f03-61e5-46cc-a72c-32902c474be0`;\n\n    const TRANSCRIPT_EVENT = {\n        'transcriptEvent': {\n            'transcriptEventGuid': '2ab9b961-161b-4413-8a23-414fc9a5aab6',\n            'transcriptGuid': '562d5f03-61e5-46cc-a72c-32902c474be0',\n            'status': 'Performed',\n            'eventType': {\n                'displayName': 'Adult 30 year screening',\n                'category': 'Procedure',\n                'permittedStates': ['Ordered', 'Performed'],\n                'codes': [{\n                    'id': 59745,\n                    'codeValue': '171305000',\n                    'codeSystem': 'SNOMED-CT',\n                    'displayName': 'Adult 30 year screening'\n                }],\n                'display': 'none',\n                'displayOrder': 0,\n                'eventTypeGuid': '7d4517d9-5049-411c-b856-18a637460c2e',\n                'positiveReasonCodes': [],\n                'negativeReasonCodes': [{\n                    'id': 31,\n                    'codeValue': '105480006',\n                    'codeSystem': 'SNOMED-CT',\n                    'displayName': 'Refusal of treatment by patient'\n                }, {\n                    'id': 32,\n                    'codeValue': '397745006',\n                    'codeSystem': 'SNOMED-CT',\n                    'displayName': 'Medical contraindication'\n                }, {\n                    'id': 33,\n                    'codeValue': '183932001',\n                    'codeSystem': 'SNOMED-CT',\n                    'displayName': 'Procedure contraindicated'\n                }, {\n                    'id': 34,\n                    'codeValue': '407563006',\n                    'codeSystem': 'SNOMED-CT',\n                    'displayName': 'Treatment not tolerated'\n                }, {\n                    'id': 44,\n                    'codeValue': '107724000',\n                    'codeSystem': 'SNOMED-CT',\n                    'displayName': 'Patient transfer (procedure)'\n                }],\n                'permittedResultCodes': [],\n                'defaultNegationState': false\n            },\n            'isNegated': false,\n            'dueDate': '2018-08-06T11:04:27.067Z',\n            'comments': 'comment text',\n            'startDateTimeUtc': '2018-07-30T07:00:00Z',\n            'endDateTimeUtc': '2018-08-06T07:00:00Z',\n            'lastModifiedAt': '2018-08-06T18:04:27.323Z'\n        }\n    };\n\n    const WORKSHEET_EVENT = {\n        'transcriptEvent': {\n            'transcriptEventGuid': '67586303-5ff2-49a1-a913-87f6b45120f9',\n            'transcriptGuid': '562d5f03-61e5-46cc-a72c-32902c474be0',\n            'transcriptId': 0,\n            'status': 'Performed',\n            'eventType': {\n                'displayName': 'Adult Asthma Control Test (ages 12 and up)',\n                'category': 'Risk Category/Assessment',\n                'permittedStates': [],\n                'codes': [],\n                'display': 'normal',\n                'displayOrder': 1,\n                'eventTypeGuid': 'ed4c88e0-9083-492d-930b-5d9c1552b924',\n                'positiveReasonCodes': [],\n                'negativeReasonCodes': [],\n                'permittedResultCodes': [],\n                'defaultNegationState': false,\n                'worksheetGuid': '77fe6944-4a70-4f4f-873c-2b5a747482cc'\n            },\n            'isNegated': false,\n            'dueDate': '2018-07-30T21:33:35.327Z',\n            'reasonCode': {\n                'id': 31,\n                'codeValue': '105480006',\n                'codeSystem': 'SNOMED-CT',\n                'displayName': 'Refusal of treatment by patient'\n            },\n            'resultCode': {\n                'id': 0\n            },\n            'resultValue': 5,\n            'lastModifiedAt': '2018-07-31T04:33:35.817Z'\n        }\n    };\n\n    const MIGRAINE_WORKSHEET_EVENT = {\n        'transcriptEvent': {\n            'transcriptEventGuid': '42ba9501-6c69-4851-99e6-c5f47d5c4991',\n            'transcriptGuid': '562d5f03-61e5-46cc-a72c-32902c474be0',\n            'transcriptId': 0,\n            'status': 'Performed',\n            'eventType': {\n                'displayName': 'Migraine Disability Assessment Test (MIDAS)',\n                'category': 'Risk Category/Assessment',\n                'permittedStates': [],\n                'codes': [],\n                'display': 'normal',\n                'displayOrder': 1,\n                'eventTypeGuid': '9fc12137-0078-442a-9120-d5270b71463f',\n                'positiveReasonCodes': [],\n                'negativeReasonCodes': [],\n                'permittedResultCodes': [],\n                'defaultNegationState': false,\n                'worksheetGuid': 'a8cad205-f659-48d3-9d97-7dfc17c6d2d5'\n            },\n            'isNegated': false,\n            'reasonCode': {\n                'id': 0\n            },\n            'resultCode': {\n                'id': 7,\n                'codeValue': '1002',\n                'codeSystem': 'PF-ASSESSMENT',\n                'displayName': 'MIDAS category II'\n            },\n            'resultValue': 6,\n            'lastModifiedAt': '2018-07-17T23:21:52.053Z'\n        }\n    };\n\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Clinical | SIAs');\n\n    (0, _qunit.test)('Summary SIA list card', async assert => {\n        let loadCounts = 0;\n        server.get('ChartingEndpoint/api/v3/patients/:patientPracticeGuid/screeningsinterventionsandassessments/', ({ db }, request) => {\n            const allSIAs = db.patientSummarySia[0]['transcriptEvents'];\n            const meta = db.patientSummarySia[0]['meta'];\n            if (Ember.isPresent(request.queryParams.pageNumber)) {\n                const pageNumber = parseInt(request.queryParams.pageNumber);\n                const pageSize = parseInt(request.queryParams.pageSize);\n                const SIAs = allSIAs.slice(pageNumber * pageSize, Math.min((pageNumber + 1) * pageSize, allSIAs.length));\n                assert.equal(pageNumber, loadCounts, 'pageNumber increases');\n                assert.equal(pageSize, 7, 'the default pageSize is 7');\n                loadCounts += 1;\n                return {\n                    meta,\n                    transcriptEvents: SIAs\n                };\n            }\n            return db.patientSummarySia[0];\n        });\n\n        await visit(summaryURL);\n        assert.equal(find(`${(0, _dataElement.default)('sia-list')} li`).length, 7, 'correct number of SIAs are rendered');\n        assert.dom((0, _dataElement.default)('sia-name-0')).hasText('Admission to day hospital', 'correct sia name renders');\n        assert.dom((0, _dataElement.default)('sia-start-date-0')).hasText('Start date: 07/30/2018', 'correct start date renders');\n        assert.dom((0, _dataElement.default)('sia-status-0')).hasText('Status: Performed', 'correct status renders');\n        assert.dom((0, _dataElement.default)('load-more-button')).hasText('Show more (8)', 'correct count renders');\n        await click((0, _dataElement.default)('load-more-button'));\n        assert.equal(find(`${(0, _dataElement.default)('sia-list')} li`).length, 14, 'click show more link loads 7 more SIAs');\n        assert.dom((0, _dataElement.default)('load-more-button')).hasText('Show more (1)', 'correct count renders after loading more SIAs');\n        await click((0, _dataElement.default)('print-sia-button'));\n        assert.equal(find((0, _dataElement.default)('print-sia-name')).length, 15, 'click print button loads all SIAs');\n        click('#print-modal-controls .close-link');\n    });\n\n    (0, _qunit.test)('Summary SIA read only detail pane', async assert => {\n        server.get('ChartingEndpoint/api/v3/patients/:patientPracticeGuid/screeningsinterventionsandassessments/', ({ db }, request) => {\n            const allSIAs = db.patientSummarySia[0]['transcriptEvents'];\n            const meta = db.patientSummarySia[0]['meta'];\n            if (Ember.isPresent(request.queryParams.pageNumber)) {\n                const pageNumber = parseInt(request.queryParams.pageNumber);\n                const pageSize = parseInt(request.queryParams.pageSize);\n                const SIAs = allSIAs.slice(pageNumber * pageSize, Math.min((pageNumber + 1) * pageSize, allSIAs.length));\n                return {\n                    meta,\n                    transcriptEvents: SIAs\n                };\n            }\n            return db.patientSummarySia[0];\n        });\n\n        server.get('ChartingEndpoint/api/v3/patients/:patientPracticeGuid/transcriptEvents/:transcriptEventGuid', () => TRANSCRIPT_EVENT);\n\n        await visit(summaryURL);\n        await click((0, _dataElement.default)('sia-start-date-1'));\n        assert.equal(currentURL(), TRANSCRIPT_EVENT_DETAIL_PANE_URL, 'URL is correct.');\n        assert.dom((0, _dataElement.default)('sia-detail-display-name')).hasText('Adult 30 year screening', 'SIA name is correct.');\n        assert.dom((0, _dataElement.default)('sia-detail-status')).hasText('Performed', 'status is correct.');\n        assert.dom((0, _dataElement.default)('sia-detail-result')).hasText('No result recorded.', 'result is correct.');\n        assert.dom((0, _dataElement.default)('sia-detail-start-date')).exists('start date exists.');\n        assert.dom((0, _dataElement.default)('sia-detail-end-date')).exists('end date exists.');\n        assert.dom((0, _dataElement.default)('sia-detail-encounter-type')).hasText('Office Visit (SOAP Note)View encounter', 'encounter type is correct.');\n        assert.dom((0, _dataElement.default)('sia-detail-encounter-link')).exists('encounter link exists.');\n        assert.dom((0, _dataElement.default)('sia-detail-date-of-service')).exists('date of service exists.');\n        assert.dom((0, _dataElement.default)('sia-detail-comments')).hasText('comment text', 'comments is correct.');\n        await click((0, _dataElement.default)('sia-detail-encounter-link'));\n        assert.equal(currentURL(), ENCOUNTER_URL, 'click encounter link opens related encounter');\n    });\n\n    (0, _qunit.test)('Summary SIA read only worksheet detail pane', async assert => {\n        server.get('ChartingEndpoint/api/v3/patients/:patientPracticeGuid/screeningsinterventionsandassessments/', ({ db }, request) => {\n            const allSIAs = db.patientSummarySia[0]['transcriptEvents'];\n            const meta = db.patientSummarySia[0]['meta'];\n            if (Ember.isPresent(request.queryParams.pageNumber)) {\n                const pageNumber = parseInt(request.queryParams.pageNumber);\n                const pageSize = parseInt(request.queryParams.pageSize);\n                const SIAs = allSIAs.slice(pageNumber * pageSize, Math.min((pageNumber + 1) * pageSize, allSIAs.length));\n                return {\n                    meta,\n                    transcriptEvents: SIAs\n                };\n            }\n            return db.patientSummarySia[0];\n        });\n\n        server.get('ChartingEndpoint/api/v3/patients/:patientPracticeGuid/transcriptEvents/:transcriptEventGuid', () => WORKSHEET_EVENT);\n\n        server.get('ChartingEndpoint/api/v2/WorksheetResponses', ({ db }, request) => {\n            const transcriptEventGuid = request.queryParams.transcriptEncounterEventGuid;\n            assert.equal(transcriptEventGuid, '67586303-5ff2-49a1-a913-87f6b45120f9');\n            return db.worksheetResponses.where({ responsesGuid: '190fdb53-12c3-4dc0-9732-0b9d4e8e809c' })[0];\n        });\n\n        await visit(summaryURL);\n        await click((0, _dataElement.default)('sia-start-date-2'));\n        assert.equal(currentURL(), WORKSHEET_EVENT_DETAIL_PANE_URL, 'URL is correct.');\n        assert.dom((0, _dataElement.default)('worksheet-display-name')).hasText('Asthma Control Test™', 'worksheet name is correct.');\n        assert.dom((0, _dataElement.default)('worksheet-description')).hasText('The Asthma Control Test™ is a quick test for people with asthma 12 years and older. It provides a numerical score to help assess asthma control.', 'worksheet description is correct.');\n        assert.dom((0, _dataElement.default)('worksheet-status')).hasText('Performed', 'status is correct.');\n        assert.dom((0, _dataElement.default)('worksheet-result')).hasText('No result recorded.', 'result is correct.');\n        assert.dom((0, _dataElement.default)('worksheet-start-date')).exists('start date exists.');\n        assert.dom((0, _dataElement.default)('worksheet-end-date')).exists('end date exists.');\n        assert.dom((0, _dataElement.default)('worksheet-encounter-type')).hasText('Office Visit (SOAP Note)View encounter', 'encounter type is correct.');\n        assert.dom((0, _dataElement.default)('worksheet-encounter-link')).exists('encounter link exists.');\n        assert.dom((0, _dataElement.default)('worksheet-date-of-service')).exists('date of service exists.');\n        assert.equal(find(`${(0, _dataElement.default)('worksheet-questions')} li`).length, 5, 'questions are rendered.');\n        assert.dom((0, _dataElement.default)('worksheet-question-label-0')).hasText('In the past 4 weeks, how much of the time did your asthma keep you from getting as much done at work, school or at home?', 'question label is correct.');\n        assert.dom((0, _dataElement.default)('worksheet-question-anwser-0')).hasText('All of the time (1)', 'answer is correct.');\n        assert.dom((0, _dataElement.default)('worksheet-score')).hasText('No score', 'score is correct.');\n        assert.dom((0, _dataElement.default)('worksheet-summary')).hasText('If your score is 19 or less, your asthma may not be as well controlled as it could be.', 'summary is correct');\n        assert.dom((0, _dataElement.default)('worksheet-copyright')).hasText('Copyright 2002, by QualityMetric Incorporated. Asthma Control Test is a trademark of QualityMetric Incorporated.', 'copyright is correct.');\n        await click((0, _dataElement.default)('worksheet-encounter-link'));\n        assert.equal(currentURL(), ENCOUNTER_URL, 'click encounter link opens related encounter');\n    });\n\n    (0, _qunit.test)('Summary SIA read only migraine detail pane', async assert => {\n        server.get('ChartingEndpoint/api/v3/patients/:patientPracticeGuid/screeningsinterventionsandassessments/', ({ db }, request) => {\n            const allSIAs = db.patientSummarySia[0]['transcriptEvents'];\n            const meta = db.patientSummarySia[0]['meta'];\n            if (Ember.isPresent(request.queryParams.pageNumber)) {\n                const pageNumber = parseInt(request.queryParams.pageNumber);\n                const pageSize = parseInt(request.queryParams.pageSize);\n                const SIAs = allSIAs.slice(pageNumber * pageSize, Math.min((pageNumber + 1) * pageSize, allSIAs.length));\n                return {\n                    meta,\n                    transcriptEvents: SIAs\n                };\n            }\n            return db.patientSummarySia[0];\n        });\n\n        server.get('ChartingEndpoint/api/v3/patients/:patientPracticeGuid/transcriptEvents/:transcriptEventGuid', () => MIGRAINE_WORKSHEET_EVENT);\n\n        server.get('ChartingEndpoint/api/v2/WorksheetResponses', ({ db }, request) => {\n            const transcriptEventGuid = request.queryParams.transcriptEncounterEventGuid;\n            assert.equal(transcriptEventGuid, '42ba9501-6c69-4851-99e6-c5f47d5c4991');\n            return db.worksheetResponses.where({ responsesGuid: 'fb6e227b-d027-4f34-b427-d430fcfbff53' })[0];\n        });\n\n        await visit(summaryURL);\n        await click((0, _dataElement.default)('sia-start-date-3'));\n        assert.equal(currentURL(), MIGRAINE_WORKSHEET_DETAIL_PANE_URL, 'URL is correct.');\n        assert.dom((0, _dataElement.default)('worksheet-display-name')).hasText('Migraine disability assessment test', 'worksheet name is correct.');\n        assert.dom((0, _dataElement.default)('worksheet-description')).hasText('The MIDAS (Migraine Disability Assessment) questionnaire helps you determine the level of pain and disability caused by your patients headaches and to assist you in identifying the best treatment.', 'worksheet description is correct.');\n        assert.dom((0, _dataElement.default)('worksheet-status')).hasText('Performed', 'status is correct.');\n        assert.dom((0, _dataElement.default)('worksheet-encounter-type')).hasText('Office Visit (SOAP Note)View encounter', 'encounter type is correct.');\n        assert.dom((0, _dataElement.default)('worksheet-encounter-link')).exists('encounter link exists.');\n        assert.equal(find(`${(0, _dataElement.default)('worksheet-questions')} li`).length, 8, 'all components are rendered.');\n        assert.equal(find(`${(0, _dataElement.default)('worksheet-questions')} li p`).length, 7, 'migraine has 7 questions.');\n        assert.dom((0, _dataElement.default)('worksheet-question-label-0')).hasText('On how many days in the last 3 months did you miss work or school because of your headaches?', 'question label is correct.');\n        assert.dom((0, _dataElement.default)('worksheet-question-anwser-0')).hasText('Number of days:2', 'answer is correct.');\n        assert.dom((0, _dataElement.default)('worksheet-question-9')).hasText('Questions 6-7 can help further determine the level of disability due to migraine, but do not affect MIDAS score:', 'text separator is correct.');\n        assert.dom((0, _dataElement.default)('worksheet-score')).hasText('6 - Grade II, mild disability', 'score is correct.');\n        assert.dom((0, _dataElement.default)('worksheet-summary')).hasText('0 to 5 - MIDAS Grade I, Little or no disability6 to 10 - MIDAS Grade II, Mild disability11 to 20 - MIDAS Grade III, Moderate disability21+ - MIDAS Grade IV, Severe disability', 'summary is correct');\n        await click((0, _dataElement.default)('worksheet-encounter-link'));\n        assert.equal(currentURL(), ENCOUNTER_URL, 'click encounter link opens related encounter');\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/acceptance/using-my-dx-list-test', ['qunit', 'boot/tests/helpers/data-element', 'boot/tests/helpers/module-for-acceptance-auth', 'sinon'], function (_qunit, _dataElement, _moduleForAcceptanceAuth, _sinon) {\n    'use strict';\n\n    const PATIENT_GUID = 'ecd212c3-5c99-499e-b3c6-b2645b8a4c98';\n    const DX_SEARCH = (0, _dataElement.default)('diagnosis-result-search');\n    const DX_SEARCH_INPUT = `${DX_SEARCH} input`;\n    const MY_DX_DIAGNOSIS = `${DX_SEARCH} .ember-select-results .single-option`;\n    const ADD_DIAGNOSIS_BTN = '.brand-sky:eq(0)';\n    const DIAGNOSIS_STRING = 'Acute delta-(super) infection of hepatitis B carrier';\n\n    let toastrErrorStub;\n    (0, _moduleForAcceptanceAuth.default)('Acceptance - Core - Clinical | Using my dx list - v2', {\n        beforeEach() {\n            toastrErrorStub = _sinon.default.stub(window.toastr, 'error');\n        },\n        afterEach() {\n            window.toastr.error.restore();\n        }\n    });\n\n    function setProviderPreferences(db, request) {\n        const key = request.queryParams.keys;\n        if (key === 'Charting.FavoriteDiagnosesDisplaySystem') {\n            return { 'preferences': { 'charting.FavoriteDiagnosesDisplaySystem': 'icd9' } };\n        }\n        if (key === 'Charting.FavoriteDiagnosesSortOrder') {\n            return { 'preferences': { 'charting.FavoriteDiagnosesSortOrder': 'alpha:asc' } };\n        }\n        return db.providerPreferences[0];\n    }\n\n    (0, _qunit.test)('My Dx List - no favorite diagnoses empty state', async assert => {\n        server.get('PracticeEndpoint/api/v1/PreferenceDoc/User/:userGuid/favoriteDiagnoses', () => []);\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/summary');\n        click((0, _dataElement.default)('add-diagnosis-button'));\n        await click(DX_SEARCH_INPUT);\n        assert.equal(find(`${DX_SEARCH} .ember-select-hint`).text().trim(), 'Create personalized Dx favorites list in Settings to quickly select diagnoses that you use most often', 'Render the correct instructions when there are no items in dx list.');\n        assert.throws(findWithAssert(`${DX_SEARCH} .ember-select-custom-tab-link`), 'Render the correct link to settings when dx list is empty.');\n    });\n\n    (0, _qunit.test)('My Dx List can be used from the patient summary', async assert => {\n        let addDiagnosisCallCount = 0;\n        server.get('PracticeEndpoint/api/v1/preferences/provider', ({ db }, request) => setProviderPreferences(db, request));\n        server.post('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/diagnoses', ({ db }, request) => {\n            const requestJSON = JSON.parse(request.requestBody);\n            addDiagnosisCallCount++;\n            assert.equal(requestJSON.diagnosisCodes.length, 3, 'Correct number of diagnosis codes sent to endpoint');\n            assert.equal(requestJSON.name, DIAGNOSIS_STRING, 'Correct diagnosis name sent to endpoint');\n            return db.diagnoses[0];\n        });\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/summary');\n        click((0, _dataElement.default)('add-diagnosis-button'));\n        await click(DX_SEARCH_INPUT);\n        assert.ok(find(MY_DX_DIAGNOSIS).length > 0, 'Favorite diagnoses exist');\n        assert.throws(findWithAssert(`${DX_SEARCH} .ember-select-custom-tab-link`), 'My Dx list settings link renders in the drop-down');\n        await click(`${MY_DX_DIAGNOSIS}:first > div`);\n        assert.throws(findWithAssert(`.diagnosis-description-icd10 > h4:contains('${DIAGNOSIS_STRING}')`), 'Selected diagnosis properly chosen');\n        // Test showing and hiding codes on my dx list in summary\n        await click((0, _dataElement.default)('hide-codes-toggle'));\n        assert.ok(find((0, _dataElement.default)('my-dx-list-row-item-code').length === 0), 'Hiding codes no longer renders codes on my dx list in summary.');\n        await click((0, _dataElement.default)('show-codes-toggle'));\n        assert.ok(find((0, _dataElement.default)('my-dx-list-row-item-code').length > 0), 'Showing codes renders codes on my dx list in summary.');\n\n        // Confirm that if you attempt to add it to my diagnoses, then you get a toast saying it's already added\n        await click('.brand-sky:eq(1)');\n        await click(`a:contains('Add to My Dx list')`);\n        assert.equal(toastrErrorStub.args[0][0], 'Item already on the list', 'Attempting to add an existing diagnosis on my dx list renders a toast.');\n        // Now add the diagnosis and only assert the service call since we already test for adding diagnoses after call is made\n        await click(ADD_DIAGNOSIS_BTN);\n        assert.equal(addDiagnosisCallCount, 1, 'Request to add diagnosis from my Dx list succeeds from summary.');\n    });\n\n    (0, _qunit.test)('My Dx List can be used from the patient encounter', async assert => {\n        let addDiagnosisCallCount = 0;\n        server.get('PracticeEndpoint/api/v1/preferences/provider', ({ db }, request) => setProviderPreferences(db, request));\n        server.post('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/diagnoses', ({ db }, request) => {\n            const requestJSON = JSON.parse(request.requestBody);\n            addDiagnosisCallCount++;\n            assert.equal(requestJSON.diagnosisCodes.length, 3, 'Correct number of diagnosis codes sent to endpoint');\n            assert.equal(requestJSON.name, DIAGNOSIS_STRING, 'Correct diagnosis name sent to endpoint');\n            return db.diagnoses[0];\n        });\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/encounter/7022d94f-d70a-4722-a205-dac898cf9f69');\n        click((0, _dataElement.default)('encounter-record-diagnoses-btn'));\n        await click(DX_SEARCH_INPUT);\n        assert.ok(find(MY_DX_DIAGNOSIS).length > 0, 'Favorite diagnoses exist');\n        await click(`${MY_DX_DIAGNOSIS}:first > div`);\n        assert.throws(findWithAssert(`.diagnosis-description-icd10 > h4:contains('${DIAGNOSIS_STRING}')`), 'Selected diagnosis properly chosen');\n        // Now add the diagnosis and only assert the service call since we already test for adding diagnoses after call is made\n        await click(ADD_DIAGNOSIS_BTN);\n        assert.equal(addDiagnosisCallCount, 1, 'Request to add diagnosis from my Dx list succeeds from encounter.');\n    });\n\n    (0, _qunit.test)('My Dx List can be used from the encounter assessment', async assert => {\n        let addDiagnosisCallCount = 0;\n        server.get('PracticeEndpoint/api/v1/preferences/provider', ({ db }, request) => setProviderPreferences(db, request));\n        server.post('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/diagnoses', ({ db }, request) => {\n            const requestJSON = JSON.parse(request.requestBody);\n            const diagnoses = db.diagnoses[0];\n            assert.equal(requestJSON.diagnosisCodes.length, 3, 'Correct number of diagnosis codes sent to endpoint');\n            assert.equal(requestJSON.name, DIAGNOSIS_STRING, 'Correct diagnosis name sent to endpoint');\n            addDiagnosisCallCount++;\n            diagnoses.transcriptDiagnoses[0].transcriptGuid = '7022d94f-d70a-4722-a205-dac898cf9f69';\n            return diagnoses;\n        });\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/encounter/7022d94f-d70a-4722-a205-dac898cf9f69');\n        await click((0, _dataElement.default)('edit-note-assessment'));\n        await click((0, _dataElement.default)('toolbox-tab-diagnoses'));\n        assert.ok(find(`.diagnoses-flyout li:contains('My Dx list')`).length > 0, 'My Dx List sub tab exists when recording an assessment.');\n        await click((0, _dataElement.default)('diagnoses-tab-my-dx'));\n        assert.ok(find('.favorite-diagnoses--item').length > 0, 'Favorite diagnoses exist when recording an assessment.');\n        await click('.diagnosis-codes-row:first');\n        assert.equal(find('.diagnoses-assessment-list.with-diagnoses .field-label').text().trim(), 'Diagnoses attached to this encounter', 'Label showing that diagnoses are attached to the encounter renders properly on record assessment.');\n        assert.equal(find('.diagnoses-assessment-list.with-diagnoses #medication-list-container').text().trim(), DIAGNOSIS_STRING, 'Selected diagnosis properly in Record Assessment from my Dx list.');\n    });\n\n    // The rest of these tests will only attempt to use a diagnosis from my Dx list and confirm it populates properly on the diagnosis view after being selected\n    (0, _qunit.test)('My Dx List can be used from the lab result (edit/view)', async assert => {\n        server.get('PracticeEndpoint/api/v1/preferences/provider', ({ db }, request) => setProviderPreferences(db, request));\n        server.post('LabsEndpoint/api/v1/resultorders/:resultOrderGuid/resultorderitems/:resultOrderItemsGuid/upsertResultObservation', () => ({}));\n        await visit('/PF/charts/patients/' + PATIENT_GUID + '/results/60895fbc-810b-4793-9f65-c914fc8907f4/edit');\n        await click('.icon-exand-collapse:first');\n        await click((0, _dataElement.default)('record-diagnosis-link'));\n        await wait();\n        assert.ok(find(MY_DX_DIAGNOSIS).length > 0, 'Favorite diagnoses exist');\n        await click(`${MY_DX_DIAGNOSIS}:first > div`);\n        assert.throws(findWithAssert(`.diagnosis-description-icd10 > h4:contains('${DIAGNOSIS_STRING}')`), 'Selected diagnosis properly chosen');\n        await click(ADD_DIAGNOSIS_BTN);\n        assert.equal(find((0, _dataElement.default)('edit-observation-diagnosis-name')).text().trim(), DIAGNOSIS_STRING, 'Added diagnosis from My Dx List to lab edit view.');\n\n        // Click \"View\"\n        await click((0, _dataElement.default)('view-result-report'));\n        await click((0, _dataElement.default)('observation-name'));\n        await click((0, _dataElement.default)('record-diagnosis-link'));\n        await click(`${MY_DX_DIAGNOSIS}:first > div`);\n        assert.throws(findWithAssert(`.diagnosis-description-icd10 > h4:contains('${DIAGNOSIS_STRING}')`), 'Selected diagnosis properly in lab view from my Dx list.');\n        await click(ADD_DIAGNOSIS_BTN);\n        assert.equal(find((0, _dataElement.default)('view-observation-diagnosis-name')).text().trim(), DIAGNOSIS_STRING, 'Added diagnosis from My Dx List to lab view.');\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/integration/components/add-patient-photo-test', ['ember-qunit', 'ember-test-helpers/wait', '@ember/test-helpers/wait-until'], function (_emberQunit, _wait, _waitUntil) {\n    'use strict';\n\n    const COMPONENT = '.add-photo-modal';\n    const DISPLAY_NONE = 'display: none;';\n\n    (0, _emberQunit.moduleForComponent)('add-patient-photo', 'Integration - Core - Clinical | Component - add-patient-photo', {\n        integration: true\n    });\n\n    (0, _emberQunit.test)('Modal is not visible when isVisible is false', function (assert) {\n        this.render(Ember.HTMLBars.template({\n            \"id\": \"Ne3oUPSf\",\n            \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"add-patient-photo\\\",null,[[\\\"isVisible\\\"],[false]]],false]],\\\"hasEval\\\":false}\",\n            \"meta\": {}\n        }));\n\n        assert.dom(`${COMPONENT} .content-modal`).doesNotExist();\n    });\n\n    (0, _emberQunit.test)('Renders when isVisible is true', async function (assert) {\n        this.set('isVisible', true);\n        this.render(Ember.HTMLBars.template({\n            \"id\": \"PoNIJPMh\",\n            \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"add-patient-photo\\\",null,[[\\\"isVisible\\\",\\\"patientGuid\\\",\\\"photoUrl\\\"],[[23,[\\\"isVisible\\\"]],\\\"blah\\\",\\\"\\\"]]],false]],\\\"hasEval\\\":false}\",\n            \"meta\": {}\n        }));\n        await (0, _wait.default)();\n\n        assert.dom(`${COMPONENT} .content-modal-title`).hasText('Add patient photo');\n        assert.dom(`${COMPONENT} .upload-button a`).hasText('Upload photo');\n\n        await (0, _waitUntil.default)(() => this.$(`${COMPONENT} .photo-preview`).attr('style') === DISPLAY_NONE);\n        assert.dom(`${COMPONENT} .link-change-photo`).hasAttribute('style', DISPLAY_NONE);\n\n        this.$(`${COMPONENT} .content-modal>footer button`).click();\n        await (0, _wait.default)();\n\n        assert.dom(`${COMPONENT} .content-modal`).doesNotExist();\n        assert.notOk(this.get('isVisible'));\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/integration/components/ccda-preview-test', ['ember-qunit', 'boot/initializers/ember-cli-mirage', 'ember-test-helpers/wait', 'boot/tests/helpers/data-element', 'boot/models/session', 'boot/tests/helpers/store', 'settings/models/incoming-ccda-display-preference', 'settings/adapters/incoming-ccda-display-preference', 'settings/serializers/incoming-ccda-display-preference'], function (_emberQunit, _emberCliMirage, _wait, _dataElement, _session, _store, _incomingCcdaDisplayPreference, _incomingCcdaDisplayPreference2, _incomingCcdaDisplayPreference3) {\n    'use strict';\n\n    const testParams = {\n        docGUID: 'test-document-guid',\n        isHtmlDownloadAvailable: true,\n        docType: 'Continuity of Care Document'\n    };\n    const validResponse = {\n        clinicalDocument: {\n            patientDemographics: {\n                name: {\n                    firstName: 'CDS Alert',\n                    lastName: 'Test'\n                },\n                sex: 'Male',\n                dateOfBirth: '1973-05-27T00:00:00Z',\n                race: 'No information',\n                ethnicity: 'No information',\n                preferredLanguage: 'Provider did not ask'\n            },\n            careTeamMembers: [{\n                providerName: {\n                    firstName: 'Jay',\n                    lastName: 'Ross'\n                }\n            }],\n            components: [{\n                title: 'Functional status',\n                html: 'No functional Status Indicated',\n                isDisplayActive: true,\n                sortOrder: 1,\n                internalCode: 'FunctionalStatus',\n                templateOid: '2.16.840.1.113883.10.20.22.2.14',\n                sortingTemplateOid: '2.16.840.1.113883.10.20.22.2.14'\n            }, {\n                title: 'Assessment and plan',\n                html: '<table>\\r\\n<thead>\\r\\n<tr>\\r\\n<th>Assessment and Plan</th>\\r\\n</tr>\\r\\n</thead>\\r\\n<tbody>\\r\\n<tr ID=\\'APNULL1\\'>\\r\\n<td>No Plans indicated</td>\\r\\n</tr>\\r\\n</tbody>\\r\\n</table>',\n                isDisplayActive: true,\n                sortOrder: 2,\n                internalCode: 'AssessmentandPlan',\n                templateOid: '2.16.840.1.113883.10.20.22.2.9',\n                sortingTemplateOid: '2.16.840.1.113883.10.20.22.2.9'\n            }],\n            documentType: 'Referral Summary'\n        },\n        clinicalDocumentValidationError: {\n            errorCount: 0,\n            errorText: 'No Error',\n            errorList: []\n        }\n    };\n\n    const parseErrorResponse = {\n        clinicalDocumentValidationError: {\n            errorCount: 5,\n            errorText: 'There are errors',\n            errorList: [{\n                description: 'Test error',\n                documentLineNumber: '1',\n                type: 'C-CDA MDHT Conformance Error',\n                xpath: '/ClinicalDocument/component/structuredBody/component[4]/section'\n            }, {\n                description: 'Test error 2',\n                documentLineNumber: '2',\n                type: 'C-CDA MDHT Conformance Error',\n                xpath: '/ClinicalDocument/component/structuredBody/component[4]/section'\n            }, {\n                description: 'Test error 3',\n                documentLineNumber: '3',\n                type: 'C-CDA MDHT Conformance Error',\n                xpath: '/ClinicalDocument/component/structuredBody/component[4]/section'\n            }, {\n                description: 'Test error 4',\n                documentLineNumber: '4',\n                type: 'C-CDA MDHT Conformance Error',\n                xpath: '/ClinicalDocument/component/structuredBody/component[4]/section'\n            }, {\n                description: 'Test error 5',\n                documentLineNumber: '5',\n                type: 'C-CDA MDHT Conformance Error',\n                xpath: '/ClinicalDocument/component/structuredBody/component[4]/section'\n            }]\n        }\n    };\n\n    (0, _emberQunit.moduleForComponent)('ccda-preview-modal', 'Integration - Core - Clinical | Component - ccda-preview-modal', {\n        integration: true,\n        sentActionGotoCcdSettings: false,\n        sentActionDownloadClinicalDocument: false,\n        sendActionDownloadClinicalDocumentHtml: false,\n        beforeEach() {\n            _session.default.set('isAdmin', true);\n            this.set('testDocument', testParams);\n            this.set('actions', {\n                gotoSettings() {\n                    this.set('sentActionGotoCcdSettings', true);\n                },\n                downloadClinicalDocument() {\n                    this.set('sentActionDownloadClinicalDocument', true);\n                },\n                downloadClinicalDocumentHtml() {\n                    this.set('sendActionDownloadClinicalDocumentHtml', true);\n                }\n            });\n            const env = (0, _store.default)({\n                adapters: {\n                    'incoming-ccda-display-preference': _incomingCcdaDisplayPreference2.default\n                },\n                serializers: {\n                    'incoming-ccda-display-preference': _incomingCcdaDisplayPreference3.default\n                },\n                models: {\n                    'incoming-ccda-display-preference': _incomingCcdaDisplayPreference.default\n                }\n            });\n            this.set('store', env.store);\n            this.server = (0, _emberCliMirage.startMirage)();\n        },\n        afterEach() {\n            this.server.shutdown();\n            this.set('store');\n        }\n    });\n\n    (0, _emberQunit.test)('validate component rendering', function (assert) {\n        server.get('ClinicalDocumentEndpoint/api/v2/incomingCcda/:docId', ({ db }, request) => {\n            assert.equal(request.params.docId, testParams.docGUID, 'Call correctly made to retrieve CCDA document');\n            return validResponse;\n        });\n\n        assert.expect(9);\n        const ccdaPatientName = `${validResponse.clinicalDocument.patientDemographics.name.firstName} ${validResponse.clinicalDocument.patientDemographics.name.lastName}`;\n\n        this.render(Ember.HTMLBars.template({\n            \"id\": \"X4YP76lB\",\n            \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"ccda-preview-modal\\\",null,[[\\\"ccdaParams\\\",\\\"download\\\",\\\"downloadHtml\\\",\\\"gotoCcdSettings\\\",\\\"store\\\"],[[23,[\\\"testDocument\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"downloadClinicalDocument\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"downloadClinicalDocumentHtml\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"gotoSettings\\\"],null],[23,[\\\"store\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n            \"meta\": {}\n        }));\n\n        return (0, _wait.default)().then(() => {\n            assert.equal($('.left-panel-v2 h4.header4semibold').text().trim(), ccdaPatientName, 'Patient header was rendered correctly');\n            assert.ok($((0, _dataElement.default)('ccda-component-Functionalstatus')).length, 'Functional status section was rendered correctly');\n            assert.ok($((0, _dataElement.default)('ccda-component-Assessmentandplan')).length, 'Assessment and plan section was rendered correctly');\n            assert.equal($('.right-panel-v2 .ccda-toc-item').length, 2, 'Table of contents was rendered correctly');\n\n            this.$('.right-panel-v2 .ccda-toc-item:first .switch').click();\n            return (0, _wait.default)().then(() => {\n                assert.notOk($((0, _dataElement.default)('ccda-component-Functionalstatus')).length, 'Functional status section was hidden correctly');\n                this.$((0, _dataElement.default)('link-ccda-settings')).click();\n                return (0, _wait.default)().then(() => {\n                    assert.ok(this.get('sentActionGotoCcdSettings'), 'Clicking on the settings link performs correctly');\n                    this.$((0, _dataElement.default)('button-download-ccda-xml')).click();\n                    return (0, _wait.default)().then(() => {\n                        assert.ok(this.get('sentActionDownloadClinicalDocument'), 'Downloading the XML performs correctly');\n                        this.$((0, _dataElement.default)('button-download-ccda-html')).click();\n                        return (0, _wait.default)().then(() => {\n                            assert.ok(this.get('sendActionDownloadClinicalDocumentHtml'), 'Downloading the HTML performs correctly');\n                        });\n                    });\n                });\n            });\n        });\n    });\n\n    (0, _emberQunit.test)('validate component shows parsing errors', function (assert) {\n        server.get('ClinicalDocumentEndpoint/api/v2/incomingCcda/:docId', ({ db }, request) => {\n            assert.equal(request.params.docId, testParams.docGUID, 'Call correctly made to retrieve CCDA document');\n            return parseErrorResponse;\n        });\n\n        assert.expect(3);\n        this.render(Ember.HTMLBars.template({\n            \"id\": \"X4YP76lB\",\n            \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"ccda-preview-modal\\\",null,[[\\\"ccdaParams\\\",\\\"download\\\",\\\"downloadHtml\\\",\\\"gotoCcdSettings\\\",\\\"store\\\"],[[23,[\\\"testDocument\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"downloadClinicalDocument\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"downloadClinicalDocumentHtml\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"gotoSettings\\\"],null],[23,[\\\"store\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n            \"meta\": {}\n        }));\n\n        return (0, _wait.default)().then(() => {\n            assert.ok($('.ccda-preview-modal-error-content').length, 'Parsing Errors are rendered correctly');\n            assert.notOk($((0, _dataElement.default)('button-download-ccda-html')).length, 'Html download button not available');\n        });\n    });\n\n    (0, _emberQunit.test)('validate component shows validation errors', function (assert) {\n        server.get('ClinicalDocumentEndpoint/api/v2/incomingCcda/:docId', ({ db }, request) => {\n            assert.equal(request.params.docId, testParams.docGUID, 'Call correctly made to retrieve CCDA document');\n            return {\n                clinicalDocument: validResponse.clinicalDocument,\n                clinicalDocumentValidationError: parseErrorResponse.clinicalDocumentValidationError\n            };\n        });\n\n        assert.expect(7);\n        const ccdaPatientName = `${validResponse.clinicalDocument.patientDemographics.name.firstName} ${validResponse.clinicalDocument.patientDemographics.name.lastName}`;\n\n        this.render(Ember.HTMLBars.template({\n            \"id\": \"X4YP76lB\",\n            \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"ccda-preview-modal\\\",null,[[\\\"ccdaParams\\\",\\\"download\\\",\\\"downloadHtml\\\",\\\"gotoCcdSettings\\\",\\\"store\\\"],[[23,[\\\"testDocument\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"downloadClinicalDocument\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"downloadClinicalDocumentHtml\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"gotoSettings\\\"],null],[23,[\\\"store\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n            \"meta\": {}\n        }));\n\n        return (0, _wait.default)().then(() => {\n            assert.equal($('.left-panel-v2 h4.header4semibold').text().trim(), ccdaPatientName, 'Patient header was rendered correctly');\n            assert.ok($('.ccda-error-indicator').length, 'Error indicator was rendered correctly');\n            assert.equal($((0, _dataElement.default)('validation-error-message')).text().trim(), '5 errors detected', 'Error indicator shows correct count');\n\n            this.$((0, _dataElement.default)('view-validation-errors-link')).click();\n            return (0, _wait.default)().then(() => {\n                assert.ok($((0, _dataElement.default)('link-back-to-ccda')).length, 'Link back to view parsed CCDA renders correctly');\n                assert.notOk($('.left-panel-v2 h4.header4semibold').length, 'Patient header was hidden correctly');\n                this.$((0, _dataElement.default)('link-back-to-ccda')).click();\n                return (0, _wait.default)().then(() => {\n                    assert.equal($('.left-panel-v2 h4.header4semibold').text().trim(), ccdaPatientName, 'Patient header was shown correctly');\n                });\n            });\n        });\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/integration/components/cds-alert-test', ['ember-qunit', 'boot/tests/helpers/data-element'], function (_emberQunit, _dataElement) {\n    'use strict';\n\n    (0, _emberQunit.moduleForComponent)('cds-alert', 'Integration - Core - Clinical | Component - cds alert', {\n        integration: true\n    });\n\n    (0, _emberQunit.test)('Component renders ruleVersion contained in metadata', function (assert) {\n        this.set('cdsAlert', {\n            alertIdentifier: 'Documentation.MedicationDocumentation',\n            ruleId: 3,\n            alertText: 'Documentation: Confirm documentation of current medication list.',\n            citations: ['American Medical Association (2007). The physician’s role in medication reconciliation: Issues, strategies and safety principles.; Stock, R., Scott, J., & Gurtel, S. (2009). Using an Electronic Prescribing System to Ensure Accurate Medication Lists in a Large Multidisciplinary Medical Group. The Joint Commission Journal on Quality and Patient Safety; 35(5): 271-277'],\n            developer: 'Practice Fusion, Inc.',\n            sponsor: 'None',\n            link: 'http://www.qualityforum.org/QPS/0419',\n            source: 'Practice Fusion, Inc.',\n            actionLinkType: 'addQualityOfCareIndicator',\n            actionLinkData: 'eventTypeGuid=7269b64b-8eb8-4893-bc01-23c6b58a85ac',\n            actionLinkText: 'Mark as complete',\n            ruleVersion: '2.0'\n        });\n        this.render(Ember.HTMLBars.template({\n            \"id\": \"D09s6jy3\",\n            \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"cds-alert\\\",null,[[\\\"cdsAlert\\\",\\\"config\\\",\\\"isExpanded\\\"],[[23,[\\\"cdsAlert\\\"]],[23,[\\\"config\\\"]],true]]],false]],\\\"hasEval\\\":false}\",\n            \"meta\": {}\n        }));\n\n        const $version = this.$((0, _dataElement.default)('cds-version'));\n        assert.equal($version.text(), 'Release Version: 2.0');\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/integration/components/goals-section-test', ['ember-qunit', 'boot/tests/helpers/store', 'boot/initializers/ember-cli-mirage', 'clinical/models/patient-goal', 'clinical/adapters/patient-goal', 'clinical/serializers/patient-goal', 'ember-test-helpers/wait', 'boot/tests/helpers/data-element'], function (_emberQunit, _store, _emberCliMirage, _patientGoal, _patientGoal2, _patientGoal3, _wait, _dataElement) {\n    'use strict';\n\n    (0, _emberQunit.moduleForComponent)('goals-section', 'Integration - Core - Clinical | Component - goals-section', {\n        integration: true,\n        beforeEach() {\n            const env = (0, _store.default)({\n                adapters: {\n                    'patient-goal': _patientGoal2.default\n                },\n                serializers: {\n                    'patient-goal': _patientGoal3.default\n                },\n                models: {\n                    'patient-goal': _patientGoal.default\n                }\n            });\n            this.set('store', env.store);\n            this.server = (0, _emberCliMirage.startMirage)();\n        },\n        afterEach() {\n            this.server.shutdown();\n            this.set('store');\n        }\n    });\n\n    (0, _emberQunit.test)('validate component rendering', function (assert) {\n        server.get('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/patientGoals', () => ({\n            patientGoals: [{\n                description: 'Some text here',\n                patientPracticeGuid: '530bdcc7-0616-4701-8ff3-94082b082313',\n                patientGoalGuid: '530bdcc7-0616-4701-8ff3-94082b082311',\n                isActive: true,\n                effectiveDate: '07/19/2017'\n            }, {\n                description: 'Some text here too',\n                patientPracticeGuid: '530bdcc7-0616-4701-8ff3-94082b082313',\n                patientGoalGuid: '530bdcc7-0616-4701-8ff3-94082b082313',\n                isActive: false,\n                effectiveDate: '07/21/2017'\n            }]\n        }));\n\n        assert.expect(11);\n\n        const routingStub = Ember.Service.extend({\n            transitionToRoute() {\n                assert.ok('Transition to next screen when add icon is clicked');\n            }\n        });\n        this.register('service:pf-routing', routingStub);\n\n        const showHideToggle = '.show-hide-toggle';\n        const addIcon = '.icon-add';\n\n        Ember.run(() => {\n            this.render(Ember.HTMLBars.template({\n                \"id\": \"mjIO5gsB\",\n                \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"goals-section\\\",null,[[\\\"isAllowedToEditSummary\\\",\\\"edit\\\",\\\"store\\\"],[true,\\\"edit\\\",[23,[\\\"store\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n                \"meta\": {}\n            }));\n        });\n\n        return (0, _wait.default)().then(() => {\n            assert.dom((0, _dataElement.default)('goals-section-header')).exists('Goal header was rendered correctly');\n            assert.dom(`${(0, _dataElement.default)('active-goal-0')} ${(0, _dataElement.default)('goal-description')}`).hasText('Some text here', 'Active goal description was rendered correctly');\n            assert.dom(`${(0, _dataElement.default)('active-goal-0')} ${(0, _dataElement.default)('goal-effective-date')}`).hasText('since 07/19/2017', 'Active goal date was rendered correctly');\n            assert.dom(showHideToggle).hasText('Show inactive (1)', 'Show inactive link was rendered correctly');\n            assert.dom(addIcon).exists('Add goal icon renders correctly');\n\n            Ember.run(() => {\n                this.$(showHideToggle).click();\n            });\n\n            return (0, _wait.default)().then(() => {\n                assert.dom((0, _dataElement.default)('inactive-goals-header')).exists('Inactive header was rendered correctly');\n                assert.dom(`${(0, _dataElement.default)('inactive-goal-0')} ${(0, _dataElement.default)('goal-description')}`).hasText('Some text here too', 'Inactive goal description was rendered correctly');\n                assert.dom(`${(0, _dataElement.default)('inactive-goal-0')} ${(0, _dataElement.default)('goal-effective-date')}`).hasText('since 07/21/2017', 'Inactive goal date was rendered correctly');\n                assert.dom(showHideToggle).hasText('Hide inactive', 'Hide inactive link renders correctly');\n\n                Ember.run(() => {\n                    this.$(showHideToggle).click();\n                });\n\n                return (0, _wait.default)().then(() => {\n                    assert.dom((0, _dataElement.default)('inactive-goals-header')).doesNotExist('Inactive goals are hidden');\n\n                    Ember.run(() => {\n                        this.$(addIcon).click();\n                    });\n                });\n            });\n        });\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/integration/components/patient-header-test', ['ember-qunit', 'ember-test-helpers/wait', 'boot/tests/helpers/data-element'], function (_emberQunit, _wait, _dataElement) {\n    'use strict';\n\n    const authorization = Ember.Service.extend({\n        isEntitledFor() {\n            return true;\n        }\n    });\n    const COMPONENT = '.patient-header-component';\n    const PATIENT_AGE = '2 yrs';\n    const PATIENT_DOB = '10/01/2016';\n\n    (0, _emberQunit.moduleForComponent)('patient-header', 'Integration - Core - Clinical | Component - patient-header', {\n        integration: true,\n        beforeEach() {\n            this.register('service:authorization', authorization);\n            this.inject.service('authorization');\n        }\n    });\n\n    (0, _emberQunit.test)('Renders missing patient state', function (assert) {\n        this.render(Ember.HTMLBars.template({\n            \"id\": \"co7ADPlk\",\n            \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"patient-header\\\",null,[[\\\"patientMissingMessage\\\",\\\"patientMissingMessageDetail\\\"],[\\\"No patient\\\",\\\"No patient details\\\"]]],false]],\\\"hasEval\\\":false}\",\n            \"meta\": {}\n        }));\n\n        assert.dom(`${COMPONENT} .patient-photo`).doesNotExist();\n        assert.dom((0, _dataElement.default)('patient-ribbon-no-patient-message')).hasText('No patient');\n        assert.dom((0, _dataElement.default)('patient-ribbon-no-patient-details')).hasText('No patient details');\n    });\n\n    (0, _emberQunit.test)('Renders inactive patient state', function (assert) {\n        const displayName = 'Ina ctive';\n        this.set('patient', {\n            isActive: false,\n            genderString: 'male',\n            displayName,\n            age: PATIENT_AGE,\n            birthDate: PATIENT_DOB\n        });\n        this.render(Ember.HTMLBars.template({\n            \"id\": \"hZ7BvhL4\",\n            \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"patient-header\\\",null,[[\\\"patient\\\",\\\"isPhrStatusVisible\\\"],[[23,[\\\"patient\\\"]],false]]],false]],\\\"hasEval\\\":false}\",\n            \"meta\": {}\n        }));\n\n        assert.dom(COMPONENT).hasClass('inactive-patient');\n        assert.dom((0, _dataElement.default)('patient-ribbon-prn')).hasText('n/a');\n        assert.dom((0, _dataElement.default)('patient-ribbon-patient-name')).hasText(displayName);\n        assert.dom((0, _dataElement.default)('patient-ribbon-age-gender')).hasText(`${PATIENT_AGE} M`);\n        assert.dom((0, _dataElement.default)('patient-ribbon-dob')).hasText(PATIENT_DOB);\n        assert.dom((0, _dataElement.default)('patient-ribbon-mobile-phone')).doesNotExist();\n    });\n\n    (0, _emberQunit.test)('Expand/collapse states', async function (assert) {\n        this.set('patient', {\n            isActive: true,\n            genderString: 'male',\n            displayName: 'Some baby',\n            age: PATIENT_AGE,\n            birthDate: PATIENT_DOB,\n            mobilePhone: '5555555555',\n            homePhone: '5555555556',\n            officePhone: '5555555557'\n        });\n        this.render(Ember.HTMLBars.template({\n            \"id\": \"hZ7BvhL4\",\n            \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"patient-header\\\",null,[[\\\"patient\\\",\\\"isPhrStatusVisible\\\"],[[23,[\\\"patient\\\"]],false]]],false]],\\\"hasEval\\\":false}\",\n            \"meta\": {}\n        }));\n\n        assert.dom(COMPONENT).doesNotHaveClass('inactive-patient');\n        assert.dom(COMPONENT).doesNotHaveClass('is-expanded');\n        assert.dom((0, _dataElement.default)('patient-ribbon-mobile-phone')).hasText('M: (555) 555-5555');\n        assert.dom((0, _dataElement.default)('patient-ribbon-second-row')).doesNotExist();\n        assert.dom((0, _dataElement.default)('patient-ribbon-third-row')).doesNotExist();\n\n        this.$((0, _dataElement.default)('patient-ribbon-ellipsis')).click();\n        await (0, _wait.default)();\n        assert.dom(COMPONENT).hasClass('is-expanded');\n        assert.dom((0, _dataElement.default)('patient-ribbon-second-row')).exists();\n        assert.dom((0, _dataElement.default)('patient-ribbon-third-row')).exists();\n        assert.dom((0, _dataElement.default)('patient-ribbon-home-phone')).hasText('H: (555) 555-5556');\n        assert.dom((0, _dataElement.default)('patient-ribbon-work-phone')).hasText('W: (555) 555-5557');\n\n        this.$((0, _dataElement.default)('patient-ribbon-ellipsis')).click();\n        await (0, _wait.default)();\n        assert.dom(COMPONENT).doesNotHaveClass('is-expanded');\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/integration/components/patient-health-concerns-list-test', ['ember-qunit', 'ember-test-helpers/wait', 'ember-cli-mirage', 'boot/tests/helpers/store', 'boot/initializers/ember-cli-mirage', 'boot/tests/helpers/data-element', 'clinical/models/patient-health-concern', 'clinical/adapters/patient-health-concern', 'clinical/serializers/patient-health-concern', 'clinical/models/patient-allergy', 'clinical/adapters/patient-allergy', 'clinical/serializers/patient-allergy', 'boot/config'], function (_emberQunit, _wait, _emberCliMirage, _store, _emberCliMirage2, _dataElement, _patientHealthConcern, _patientHealthConcern2, _patientHealthConcern3, _patientAllergy, _patientAllergy2, _patientAllergy3, _config) {\n    'use strict';\n\n    const ADD_NOTE_BUTTON = (0, _dataElement.default)('add-health-concern-note-button');\n    const PATIENT_PRACTICE_GUID = 'c5faffde-78e2-4924-acaf-2115bc686d5e';\n    const EMPTY_RESPONSE = {\n        patientHealthConcerns: [],\n        meta: { noKnownHealthConcerns: false }\n    };\n    const CLINICAL_HEALTH_CONCERNS = {\n        patientHealthConcerns: [{\n            patientHealthConcernGuid: 'HEALTH_CONCERN_GUID',\n            patientPracticeGuid: PATIENT_PRACTICE_GUID,\n            healthConcernReferenceGuid: 'b3da2472-d894-4b29-967e-c4aadade0841',\n            healthConcernType: 'Diagnosis',\n            effectiveDate: '2017-06-12T00:00:00.000Z',\n            isActive: true\n        }, {\n            patientHealthConcernGuid: 'HEALTH_CONCERN_GUID_2',\n            patientPracticeGuid: PATIENT_PRACTICE_GUID,\n            healthConcernReferenceGuid: '3d26806e-aaa8-4092-87ba-944da229a299',\n            effectiveDate: '2015-06-12T00:00:00.000Z',\n            healthConcernType: 'Allergy',\n            isActive: true\n        }, {\n            patientHealthConcernGuid: 'HEALTH_CONCERN_GUID_3',\n            patientPracticeGuid: PATIENT_PRACTICE_GUID,\n            healthConcernReferenceGuid: '437e31e2-dca5-4563-a74d-247b33433558',\n            effectiveDate: '2015-06-12T00:00:00.000Z',\n            healthConcernType: 'Allergy',\n            isActive: false\n        }]\n    };\n    const authorization = Ember.Service.extend({\n        isEntitledFor(featureCode) {\n            return featureCode === 'Chart.Encounter.Edit';\n        }\n    });\n    const routing = Ember.Service.extend({\n        currentRouteName: 'patient.summary'\n    });\n    (0, _emberQunit.moduleForComponent)('patient-health-concerns-list', 'Integration - Core - Clinical | Component - patient-health-concerns-list', {\n        integration: true,\n        beforeEach() {\n            this.register('service:authorization', authorization);\n            this.inject.service('authorization');\n            this.register('service:pf-routing', routing);\n            this.inject.service('pf-routing');\n            const env = (0, _store.default)({\n                adapters: {\n                    'patient-health-concern': _patientHealthConcern2.default,\n                    'patient-allergy': _patientAllergy2.default\n                },\n                serializers: {\n                    'patient-health-concern': _patientHealthConcern3.default,\n                    'patient-allergy': _patientAllergy3.default\n                },\n                models: {\n                    'patient-health-concern': _patientHealthConcern.default,\n                    'patient-allergy': _patientAllergy.default\n                }\n            });\n            this.setProperties({\n                store: env.store,\n                patient: {\n                    patientPracticeGuid: PATIENT_PRACTICE_GUID\n                },\n                config: _config.default\n            });\n\n            this.server = (0, _emberCliMirage2.startMirage)();\n        },\n        afterEach() {\n            this.server.shutdown();\n            this.set('store');\n        }\n    });\n\n    (0, _emberQunit.test)('No known health concerns checkbox appears when health concerns list is empty', function (assert) {\n        const done = assert.async();\n        let noKnownPostCalled = false;\n        server.get('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/patientHealthConcerns', () => EMPTY_RESPONSE);\n        server.post('ClinicalEndpoint/api/v1/PatientConditions/:patientPracticeGuid/NoKnownHealthConcerns', () => {\n            noKnownPostCalled = true;\n        });\n\n        this.render(Ember.HTMLBars.template({\n            \"id\": \"CpncGdXl\",\n            \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"patient-health-concerns-list\\\",null,[[\\\"patient\\\",\\\"config\\\",\\\"store\\\"],[[23,[\\\"patient\\\"]],[23,[\\\"config\\\"]],[23,[\\\"store\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n            \"meta\": {}\n        }));\n\n        (0, _wait.default)().then(() => {\n            const $checkboxComponent = this.$('.check-box');\n            assert.ok($checkboxComponent.length, 'The no known checkbox appears when list is empty');\n            assert.equal($checkboxComponent.find('label').text().trim(), 'Patient has no health concerns', 'The checkbox label is correct');\n            $checkboxComponent.find('input').click();\n            (0, _wait.default)().then(() => {\n                assert.ok(noKnownPostCalled, 'The NoKnownHealthConcerns endpoint was POSTed to when the checkbox was checked');\n                done();\n            });\n        });\n    });\n\n    (0, _emberQunit.test)('Unchecking no known health concerns will call DELETE on the patient conditions endpoint', function (assert) {\n        const done = assert.async();\n        let noKnownDeleteCalled = false;\n        server.get('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/patientHealthConcerns', () => {\n            return {\n                patientHealthConcerns: [],\n                meta: { noKnownHealthConcerns: true }\n            };\n        });\n        server.delete('ClinicalEndpoint/api/v1/PatientConditions/:patientPracticeGuid/NoKnownHealthConcerns', () => {\n            noKnownDeleteCalled = true;\n        });\n\n        this.render(Ember.HTMLBars.template({\n            \"id\": \"CpncGdXl\",\n            \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"patient-health-concerns-list\\\",null,[[\\\"patient\\\",\\\"config\\\",\\\"store\\\"],[[23,[\\\"patient\\\"]],[23,[\\\"config\\\"]],[23,[\\\"store\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n            \"meta\": {}\n        }));\n\n        (0, _wait.default)().then(() => {\n            const $checkbox = this.$('.check-box__input');\n            assert.ok($checkbox[0].checked, 'The checkbox is checked when noKnownHealthConcerns is true on GET response');\n            $checkbox.click();\n            (0, _wait.default)().then(() => {\n                assert.ok(noKnownDeleteCalled, 'DELETE was called when checkbox unchecked');\n                done();\n            });\n        });\n    });\n\n    (0, _emberQunit.test)('Adding/editing note health concern', function (assert) {\n        const done = assert.async();\n        const newNoteText = 'A new note!';\n        const editNoteText = 'An edited note';\n        let postCalled = false;\n        let putCalled = false;\n        server.get('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/patientHealthConcerns', () => EMPTY_RESPONSE);\n        server.post('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/patientHealthConcerns', ({ db }, request) => {\n            postCalled = true;\n            const data = JSON.parse(request.requestBody);\n            data.patientHealthConcernGuid = 'ANOTHER_GUID';\n            assert.equal(data.healthConcernNote, newNoteText, 'The note value is correct on POST');\n            return {\n                patientHealthConcern: data\n            };\n        });\n        server.put('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/patientHealthConcerns/:guid', ({ db }, request) => {\n            putCalled = true;\n            const data = JSON.parse(request.requestBody);\n            assert.equal(data.healthConcernNote, editNoteText, 'The note value is correct on POST');\n            return {\n                patientHealthConcern: data\n            };\n        });\n        this.render(Ember.HTMLBars.template({\n            \"id\": \"CpncGdXl\",\n            \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"patient-health-concerns-list\\\",null,[[\\\"patient\\\",\\\"config\\\",\\\"store\\\"],[[23,[\\\"patient\\\"]],[23,[\\\"config\\\"]],[23,[\\\"store\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n            \"meta\": {}\n        }));\n\n        (0, _wait.default)().then(() => {\n            const $addButton = this.$(ADD_NOTE_BUTTON);\n            $addButton.click();\n            (0, _wait.default)().then(() => {\n                let $textArea = this.$('textarea');\n                assert.ok($textArea.length, 'The note text area appears after clicking the add note button');\n                $textArea.val(newNoteText);\n                $textArea.change();\n                this.$((0, _dataElement.default)('btn-save-health-concern-note')).click();\n                (0, _wait.default)().then(() => {\n                    assert.ok(postCalled, 'The POST endpoint was called when note was added');\n                    this.$((0, _dataElement.default)('edit-health-concern-note-button')).click();\n                    (0, _wait.default)().then(() => {\n                        $textArea = this.$('textarea');\n                        $textArea.val(editNoteText);\n                        $textArea.change();\n                        this.$((0, _dataElement.default)('btn-save-health-concern-note')).click();\n                        (0, _wait.default)().then(() => {\n                            assert.ok(putCalled, 'The PUT endpoint was called when note was edited');\n                            done();\n                        });\n                    });\n                });\n            });\n        });\n    });\n\n    (0, _emberQunit.test)('Deleting the note health concern', function (assert) {\n        const done = assert.async();\n        const noteText = 'Existing note here';\n        let deleteCalled = false;\n        server.get('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/patientHealthConcerns', () => {\n            return {\n                patientHealthConcerns: [{\n                    patientHealthConcernGuid: 'NOTE_GUID',\n                    patientPracticeGuid: PATIENT_PRACTICE_GUID,\n                    healthConcernNote: noteText,\n                    healthConcernType: 'Note'\n                }],\n                meta: { noKnownHealthConcerns: false }\n            };\n        });\n        server.delete('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/patientHealthConcerns/:guid', () => {\n            deleteCalled = true;\n            return new _emberCliMirage.default.Response(204, {}, null);\n        });\n\n        this.render(Ember.HTMLBars.template({\n            \"id\": \"CpncGdXl\",\n            \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"patient-health-concerns-list\\\",null,[[\\\"patient\\\",\\\"config\\\",\\\"store\\\"],[[23,[\\\"patient\\\"]],[23,[\\\"config\\\"]],[23,[\\\"store\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n            \"meta\": {}\n        }));\n        (0, _wait.default)().then(() => {\n            assert.dom((0, _dataElement.default)('saved-health-concern-note-text')).hasText(noteText, 'The existing note text is rendered correctly on load');\n            this.$((0, _dataElement.default)('edit-health-concern-note-button')).click();\n            (0, _wait.default)().then(() => {\n                const $textArea = this.$('textarea');\n                $textArea.val('');\n                $textArea.change();\n                this.$((0, _dataElement.default)('btn-save-health-concern-note')).click();\n                (0, _wait.default)().then(() => {\n                    assert.ok(deleteCalled, 'The DELETE health concern');\n                    assert.dom((0, _dataElement.default)('saved-health-concern-note-text')).doesNotExist('The note text was cleared');\n                    assert.dom((0, _dataElement.default)('add-health-concern-note-button')).exists('The note text was cleared');\n                    done();\n                });\n            });\n        });\n    });\n\n    (0, _emberQunit.test)('Showing/hiding inactive health concerns', function (assert) {\n        const done = assert.async();\n        server.get('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/patientHealthConcerns', () => CLINICAL_HEALTH_CONCERNS);\n        server.get('ClinicalEndpoint/api/v3/patients/:id/allergies', ({ db }) => {\n            const [allergies] = db.patientAllergies;\n            allergies.patientAllergies.setEach('patientPracticeGuid', PATIENT_PRACTICE_GUID);\n            return allergies;\n        });\n        this.render(Ember.HTMLBars.template({\n            \"id\": \"CpncGdXl\",\n            \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"patient-health-concerns-list\\\",null,[[\\\"patient\\\",\\\"config\\\",\\\"store\\\"],[[23,[\\\"patient\\\"]],[23,[\\\"config\\\"]],[23,[\\\"store\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n            \"meta\": {}\n        }));\n        (0, _wait.default)().then(() => {\n            const $inactiveLink = this.$((0, _dataElement.default)('health-concerns-toggle-inactive'));\n            assert.ok($inactiveLink.length, 'The show inactive link is visible when there are inactive health concerns');\n            assert.equal($inactiveLink.text(), 'Show inactive (1)', 'The show inactive link contains the number of inactive health concerns');\n            assert.equal(this.$('ul.list').length, 1, 'The inactive section is hidden by default');\n            $inactiveLink.click();\n            (0, _wait.default)().then(() => {\n                assert.equal(this.$('ul.list').length, 2, 'The inactive section is visible after clicking the show inactive link');\n                assert.equal($inactiveLink.text(), 'Hide inactive', 'The link now says \"Hide inactive\"');\n                assert.equal(this.$('ul.list:eq(1) li').length, 1, 'The inactive health concern is now visible');\n                $inactiveLink.click();\n                (0, _wait.default)().then(() => {\n                    assert.equal(this.$('ul.list').length, 1, 'The inactive section is hidden again');\n                    assert.equal($inactiveLink.text(), 'Show inactive (1)', 'The show inactive link contains the number of inactive health concerns');\n                    done();\n                });\n            });\n        });\n    });\n\n    (0, _emberQunit.test)('Rendering allergy and diagnosis health concerns', function (assert) {\n        const done = assert.async();\n        server.get('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/patientHealthConcerns', () => CLINICAL_HEALTH_CONCERNS);\n        server.get('ClinicalEndpoint/api/v3/patients/:id/allergies', ({ db }) => {\n            const [allergies] = db.patientAllergies;\n            allergies.patientAllergies.setEach('patientPracticeGuid', PATIENT_PRACTICE_GUID);\n            return allergies;\n        });\n        this.render(Ember.HTMLBars.template({\n            \"id\": \"CpncGdXl\",\n            \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"patient-health-concerns-list\\\",null,[[\\\"patient\\\",\\\"config\\\",\\\"store\\\"],[[23,[\\\"patient\\\"]],[23,[\\\"config\\\"]],[23,[\\\"store\\\"]]]]],false]],\\\"hasEval\\\":false}\",\n            \"meta\": {}\n        }));\n        (0, _wait.default)().then(() => {\n            const item = 'ul.list li';\n            const diagnosisItem = (0, _dataElement.default)('health-concern-item-0');\n            const allergyItem = (0, _dataElement.default)('health-concern-item-1');\n            assert.equal(this.$(item).length, 2, 'Only the active health concerns are rendered by default');\n            assert.equal(this.$(`${diagnosisItem} ${(0, _dataElement.default)('health-concern-title')}`).text(), '(E845.9) Accident involving spacecraft injuring other person', 'The title renders correctly for diagnoses');\n            assert.equal(this.$(`${diagnosisItem} ${(0, _dataElement.default)('health-concern-effective-date')}`).text(), '06/12/2017', 'The effective date renders correctly');\n            assert.equal(this.$(`${allergyItem} ${(0, _dataElement.default)('health-concern-title')}`).text(), 'AA&C', 'The title renders correctly for allergies');\n            assert.equal(this.$(`${allergyItem} ${(0, _dataElement.default)('severity-text')}`).text().trim(), 'Mild', 'The allergy severity is rendered correctly');\n            done();\n        });\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/components/cds-alert-test', ['ember-qunit'], function (_emberQunit) {\n    'use strict';\n\n    const getDefaultCdsAlert = function () {\n        return {\n            actionLinkText: 'Record',\n            actionLinkData: ''\n        };\n    };\n\n    (0, _emberQunit.moduleForComponent)('cds-alert', 'Unit - Core - Clinical | Component - cds-alert', {\n        needs: ['service:analytics', 'service:pf-routing'],\n        unit: true,\n        afterEach() {\n            const store = this.container.lookup('service:store');\n\n            if (store) {\n                store.destroy = function () {\n                    // Do nothing because this breaks pre ember-data beta 1.15\n                };\n            }\n        }\n    });\n\n    (0, _emberQunit.test)('valid data property parsing', function (assert) {\n        Ember.run(() => {\n            const component = this.subject();\n\n            const cdsAlert = getDefaultCdsAlert();\n            cdsAlert.actionLinkData = 'isValid=true&name=something&option=';\n            component.set('cdsAlert', cdsAlert);\n\n            const data = component.get('data');\n            assert.equal(data.isValid, 'true');\n            assert.equal(data.name, 'something');\n            assert.equal(data.option, '');\n        });\n    });\n\n    (0, _emberQunit.test)('null data property', function (assert) {\n        Ember.run(() => {\n            const component = this.subject();\n\n            const cdsAlert = getDefaultCdsAlert();\n            cdsAlert.actionLinkData = '';\n            component.set('cdsAlert', cdsAlert);\n\n            let data = component.get('data');\n            assert.equal(data, null);\n\n            component.set('cdsAlert.actionLinkData', null);\n            data = component.get('data');\n            assert.equal(data, null);\n        });\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/components/medication-detail-test', ['ember-qunit', 'clinical/models/medication', 'boot/initializers/ember-cli-mirage'], function (_emberQunit, _medication, _emberCliMirage) {\n    'use strict';\n\n    const analytics = {\n        track: $.noop\n    };\n    const routing = {};\n    const erxOrder = {};\n    let medication;\n    (0, _emberQunit.moduleForComponent)('medication-detail', 'Unit - Core - Clinical | Component - medication detail', {\n        unit: true,\n        beforeEach() {\n            this.register('service:authorization', { isEntitledFor: () => true }, { instantiate: false });\n            medication = _medication.default.wrap({});\n            this.register('service:analytics', analytics, { instantiate: false });\n            this.register('service:pf-routing', routing, { instantiate: false });\n            this.register('service:erx-order', erxOrder, { instantiate: false });\n            this.server = (0, _emberCliMirage.startMirage)();\n        },\n        afterEach() {\n            this.server.shutdown();\n        }\n    });\n\n    (0, _emberQunit.test)('encounter - canDelete', function (assert) {\n        Ember.run(() => {\n            // Creates the component instance\n            const component = this.subject();\n            const currentGuid = 'f671bd1a-b6ac-4c7e-baa7-24741e4cfc92';\n            const anotherGuid = 'e9450f31-01a3-4210-984e-1392a5bbc6f5';\n\n            component.set('newMedicationFromSearchResult', medication);\n            // From the encounter we have a currentGuid\n            component.set('transcriptGuid', currentGuid);\n            assert.equal(component.get('canDelete'), true);\n\n            medication.createDefaultTranscriptMedication();\n            assert.equal(component.get('canDelete'), true);\n\n            medication.attachToEncounter(currentGuid);\n            assert.equal(component.get('canDelete'), true);\n\n            medication.attachToEncounter(anotherGuid);\n            assert.equal(component.get('canDelete'), false);\n\n            medication.detachFromEncounter(currentGuid);\n            assert.equal(component.get('canDelete'), false);\n        });\n    });\n\n    (0, _emberQunit.test)('summary - canDelete', function (assert) {\n        Ember.run(() => {\n            const component = this.subject();\n            const anotherGuid = 'e9450f31-01a3-4210-984e-1392a5bbc6f5';\n            component.set('newMedicationFromSearchResult', medication);\n            assert.equal(component.get('canDelete'), true);\n            medication.createDefaultTranscriptMedication();\n            medication.createDefaultTranscriptMedication();\n\n            medication.attachToEncounter(anotherGuid);\n            assert.equal(component.get('canDelete'), false);\n        });\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/components/patient-image-test', ['ember-qunit', 'boot/models/session'], function (_emberQunit, _session) {\n    'use strict';\n\n    const defaultImageUrl = 'assets/images/default_profile.png',\n          testPatientPracticeGuid = 'TEST_PPG',\n          testAuthCookie = 'TEST_AUTH_COOKIE';\n    (0, _emberQunit.moduleForComponent)('patient-image', 'Unit - Core - Clinical | Component - patient-image', {\n        unit: true,\n        afterEach() {\n            const store = this.container.lookup('service:store');\n            if (store) {\n                store.destroy = function () {\n                    // Do nothing because this breaks pre ember-data beta 1.15\n                };\n            }\n        }\n    });\n\n    (0, _emberQunit.test)('Image attributes are correct when hasPatientImage is false', function (assert) {\n        let component = this.subject({\n            hasPatientImage: false\n        });\n        assert.equal(component.get('src'), defaultImageUrl, 'The default image url is used for src when the patient has no image');\n        assert.notOk(component.get('onerror'), 'The onerror attribute is empty when the patient has no image');\n    });\n\n    (0, _emberQunit.test)('Image attributes are correct when hasPatientImage is true', function (assert) {\n        _session.default.set('authCookie', testAuthCookie);\n        let component = this.subject({\n            hasPatientImage: true,\n            patientPracticeGuid: testPatientPracticeGuid\n        });\n        let src = component.get('src');\n        assert.ok(src.indexOf(testPatientPracticeGuid) > 0, 'The image src contains the patient practice guid');\n        assert.ok(src.indexOf(testAuthCookie) > 0, 'The image src contains the auth cookie from the session');\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/controllers/favorite-diagnoses-test', ['ember-qunit', 'clinical/models/favorite-diagnosis'], function (_emberQunit, _favoriteDiagnosis) {\n    'use strict';\n\n    (0, _emberQunit.moduleFor)('controller:settings.favoriteDiagnoses', 'Unit - Core - Clinical | Controller - Favorite Diagnoses', {\n        unit: true,\n        beforeEach() {\n            Ember.run(() => {\n                this.subject().set('model', Ember.ArrayProxy.create({\n                    content: [Ember.Object.create({\n                        id: '716289e1-e3df-09c0-ef31-2fbc2c963996',\n                        name: 'Disorder of head',\n                        sortIndex: 1,\n                        diagnosisCodes: [{\n                            code: '729.99',\n                            codeSystem: 'ICD9',\n                            description: 'Other disorders of soft tissue'\n                        }, {\n                            code: '118934005',\n                            codeSystem: 'SNOMED',\n                            description: 'Disorder of head'\n                        }]\n                    }), Ember.Object.create({\n                        id: '163d5681-778c-bdf4-77bb-c89cfbf84bc0',\n                        name: 'Toe fracture',\n                        sortIndex: 0,\n                        diagnosisCodes: [{\n                            code: '826.0',\n                            codeSystem: 'ICD9',\n                            description: 'Closed fracture of one or more phalanges of foot'\n                        }, {\n                            code: '21351003',\n                            codeSystem: 'SNOMED',\n                            description: 'Fracture of phalanx of foot'\n                        }, {\n                            code: 'S92.911A',\n                            codeSystem: 'ICD10',\n                            description: 'Unspecified fracture of right toe(s), initial encounter for closed fracture'\n                        }]\n                    })]\n                }));\n            });\n        },\n        afterEach() {\n            const store = this.container.lookup('service:store');\n            if (store) {\n                store.destroy = function () {\n                    // Do nothing because this breaks pre ember-data beta 1.15\n                };\n            }\n        }\n    });\n\n    (0, _emberQunit.test)('Verify logic of isDuplicate', function (assert) {\n\n        const controller = this.subject();\n\n        Ember.run(function () {\n\n            let diagnosis = Ember.Object.create({\n                name: 'Toe fracture',\n                'diagnosisCodes': [{\n                    code: '826.0',\n                    codeSystem: 'ICD9',\n                    description: 'Closed fracture of one or more phalanges of foot'\n                }, {\n                    code: '21351003',\n                    codeSystem: 'SNOMED',\n                    description: 'Fracture of phalanx of foot'\n                }]\n            });\n\n            assert.notOk((0, _favoriteDiagnosis.isDuplicate)(diagnosis, controller.get('model')), 'a unique diagnosis should not be marked as a duplicate');\n\n            diagnosis = Ember.Object.create({\n                name: 'Disorder of head',\n                diagnosisCodes: [{\n                    code: '729.99',\n                    codeSystem: 'ICD9',\n                    description: 'Other disorders of soft tissue'\n                }, {\n                    code: '118934005',\n                    codeSystem: 'SNOMED',\n                    description: 'Disorder of head'\n                }]\n            });\n\n            assert.ok((0, _favoriteDiagnosis.isDuplicate)(diagnosis, controller.get('model')), 'a duplicate diagnosis should be marked as a duplicate');\n\n            diagnosis = Ember.Object.create({\n                name: 'Toe fracture',\n                diagnosisCodes: [{\n                    code: '826.0',\n                    codeSystem: 'ICD9',\n                    description: 'Closed fracture of one or more phalanges of foot'\n                }, {\n                    code: '21351003',\n                    codeSystem: 'SNOMED',\n                    description: 'Fracture of phalanx of foot'\n                }]\n            });\n\n            assert.notOk((0, _favoriteDiagnosis.isDuplicate)(diagnosis, controller.get('model')), 'a very similar diagnosis should not be marked as duplicate');\n        });\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/controllers/immunizations-test', ['ember-qunit'], function (_emberQunit) {\n    'use strict';\n\n    const TRANSMIT_TEXT_FALSE = 'You will transmit all vaccination info including administered, historical and refused vaccination records for this patient.',\n          TRANSMIT_TEXT_TRUE = 'The patient indicated to not transmit and share immunization information. Go to Patient Profile to change immunization registry settings.';\n\n    (0, _emberQunit.moduleFor)('controller:patient.immunizations', 'Unit - Core - Clinical | Controller - Immunizations', {\n        needs: ['controller:patient', 'service:authorization', 'service:analytics'],\n        unit: true,\n        afterEach() {\n            let store = this.container.lookup('service:store');\n\n            if (store) {\n                store.destroy = function () {\n                    // Do nothing because this breaks pre ember-data beta 1.15\n                };\n            }\n        }\n    });\n\n    (0, _emberQunit.test)('Sets the correct transmitPopOverText when immunizationTransmitPreference is true', function (assert) {\n        const controller = this.subject();\n\n        controller.set('immunizationTransmitPreference', true);\n        assert.equal(controller.get('transmitPopOverText'), TRANSMIT_TEXT_TRUE);\n    });\n\n    (0, _emberQunit.test)('Sets the correct transmitPopOverText when immunizationTransmitPreference is false', function (assert) {\n        const controller = this.subject();\n\n        controller.set('immunizationTransmitPreference', false);\n        assert.equal(controller.get('transmitPopOverText'), TRANSMIT_TEXT_FALSE);\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/models/allergen-test', ['qunit', 'clinical/models/allergen'], function (_qunit, _allergen) {\n    'use strict';\n\n    (0, _qunit.module)('Unit - Core - Clinical | Model - Allergen');\n\n    (0, _qunit.test)('Ingredients are classified into the correct group', assert => {\n        const allergen = _allergen.default.create({\n            allergenType: 'Class',\n            name: 'Amoxicillin',\n            rxNormCui: '723',\n            score: 0.00336285075,\n            probability: 1,\n            isIngredient: true\n        });\n\n        assert.equal(allergen.get('group.display'), 'Ingredient');\n        assert.equal(allergen.get('rxNormCui'), '723');\n        assert.equal(allergen.get('name'), 'Amoxicillin');\n    });\n\n    (0, _qunit.test)('Classes are classified into the correct group when IsIngredient is false', assert => {\n        const allergen = _allergen.default.create({\n            allergenType: 'Class',\n            name: 'Penicillins',\n            score: 4.62047625,\n            probability: 1,\n            isIngredient: false\n        });\n        assert.equal(allergen.get('group.display'), 'Class');\n    });\n\n    (0, _qunit.test)('Classes are classified into the correct group when IsIngredient is not present', assert => {\n        const allergen = _allergen.default.create({\n            allergenType: 'Class',\n            name: 'Penicillins',\n            score: 4.62047625,\n            probability: 1\n        });\n        assert.equal(allergen.get('group.display'), 'Class');\n    });\n\n    (0, _qunit.test)('Products are classified into the correct group', assert => {\n        const allergen = _allergen.default.create({\n            allergenType: 'PackagedDrug',\n            name: 'Bicillin L-A',\n            rxNormCui: '731572',\n            score: 0.00336285075,\n            ndc: '60793070210'\n        });\n\n        assert.equal(allergen.get('group.display'), 'Product');\n        assert.equal(allergen.get('rxNormCui'), '731572');\n        assert.equal(allergen.get('name'), 'Bicillin L-A');\n        assert.equal(allergen.get('ndc'), '60793070210');\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/models/diagnoses-array-test', ['clinical/models/diagnoses-array', 'clinical/models/diagnosis', 'boot/tests/fixtures/clinical/diagnoses-with-facets', 'qunit'], function (_diagnosesArray, _diagnosis, _diagnosesWithFacets, _qunit) {\n    'use strict';\n\n    (0, _qunit.module)('Unit - Core - Clinical | Model - diagnoses array tests');\n\n    (0, _qunit.test)('unique dedups diagnoses based on all the codes matching', function (assert) {\n        let baseDiagnosisCodes = [{ code: '1', codeSystem: 'ICD9' }, { code: '2', codeSystem: 'ICD9' }, { code: 'x', codeSystem: 'ICD10' }];\n        let identical = [{ code: '1', codeSystem: 'ICD9' }, { code: '2', codeSystem: 'ICD9' }, { code: 'x', codeSystem: 'ICD10' }];\n        let identical2 = [{ code: '1', codeSystem: 'ICD9' }, { code: '2', codeSystem: 'ICD9' }, { code: 'x', codeSystem: 'ICD10' }];\n        let missingI9 = [{ code: '1', codeSystem: 'ICD9' }, { code: 'x', codeSystem: 'ICD10' }];\n        let missingI10 = [{ code: '1', codeSystem: 'ICD9' }, { code: '2', codeSystem: 'ICD9' }];\n        let same9sDifferent10 = [{ code: '1', codeSystem: 'ICD9' }, { code: '2', codeSystem: 'ICD9' }, { code: 'y', codeSystem: 'ICD10' }];\n        let different9Different10 = [{ code: '1', codeSystem: 'ICD9' }, { code: '3', codeSystem: 'ICD9' }, { code: 'x', codeSystem: 'ICD10' }];\n        let sameCodesDifferentSystem = [{ code: '1', codeSystem: 'ICD10' }, { code: '2', codeSystem: 'ICD9' }, { code: 'x', codeSystem: 'ICD10' }];\n        let allCodes = [baseDiagnosisCodes, identical, identical2, missingI9, missingI10, same9sDifferent10, different9Different10, sameCodesDifferentSystem];\n        let diagnoses = _diagnosis.default.wrap(allCodes.map(function (diagnosisCodes) {\n            return { diagnosisCodes: diagnosisCodes };\n        }));\n        assert.deepEqual(diagnoses.get('unique').mapBy('diagnosisCodes'), [baseDiagnosisCodes, missingI9, missingI10, same9sDifferent10, different9Different10, sameCodesDifferentSystem]);\n    });\n\n    (0, _qunit.test)('unique fallsback to diagnosis.code if no diagnosisCodes are present', function (assert) {\n        let diagnoses = _diagnosis.default.wrap([{ diagnosisCodes: [{ code: '1', codeSystem: 'ICD9' }] }, { code: '1' }, { code: '1' }]);\n        assert.equal(diagnoses.get('unique.length'), 2);\n    });\n\n    (0, _qunit.test)('unique returns a DiagnosesArray so we can chain filters', function (assert) {\n        let diagnoses = _diagnosis.default.wrap([]);\n        assert.ok(diagnoses.get('unique') instanceof _diagnosesArray.default, 'The dianoses is not an array');\n    });\n\n    (0, _qunit.test)('facets are calculated from each diagnosis attributes based on attribute.name', function (assert) {\n        let diagnoses = _diagnosis.default.wrap(_diagnosesWithFacets.default);\n        assert.equal(diagnoses.get('facets.length'), 1);\n    });\n    (0, _qunit.test)('facets include a group based on the diagnosis.attribute.name', function (assert) {\n        let diagnoses = _diagnosis.default.wrap(_diagnosesWithFacets.default);\n        assert.equal(diagnoses.get('facets.0.id'), 'Laterality Type');\n        assert.equal(diagnoses.get('facets.0.name'), 'Laterality Type');\n    });\n    (0, _qunit.test)('each facet has constraints', function (assert) {\n        let diagnoses = _diagnosis.default.wrap(_diagnosesWithFacets.default);\n        assert.equal(diagnoses.get('facets.0.constraints.length'), 3);\n    });\n    (0, _qunit.test)('each constraint has a name', function (assert) {\n        let diagnoses = _diagnosis.default.wrap(_diagnosesWithFacets.default);\n        assert.equal(diagnoses.get('facets.0.constraints.0.id'), 'Laterality Type-Right');\n        assert.equal(diagnoses.get('facets.0.constraints.0.name'), 'Right');\n        assert.equal(diagnoses.get('facets.0.constraints.1.name'), 'Left');\n        assert.equal(diagnoses.get('facets.0.constraints.2.name'), 'Unspecified');\n    });\n    (0, _qunit.test)('each constraint has a diagnoses-array', function (assert) {\n        let diagnoses = _diagnosis.default.wrap(_diagnosesWithFacets.default);\n        assert.equal(diagnoses.get('facets.0.constraints.0.diagnoses').constructor, _diagnosesArray.default);\n        assert.equal(diagnoses.get('facets.0.constraints.1.diagnoses').constructor, _diagnosesArray.default);\n        assert.equal(diagnoses.get('facets.0.constraints.2.diagnoses').constructor, _diagnosesArray.default);\n\n        assert.equal(diagnoses.get('facets.0.constraints.0.diagnoses.length'), 1);\n        assert.equal(diagnoses.get('facets.0.constraints.1.diagnoses.length'), 1);\n        assert.equal(diagnoses.get('facets.0.constraints.2.diagnoses.length'), 1);\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/models/diagnoses-test', ['clinical/models/diagnosis', 'qunit'], function (_diagnosis, _qunit) {\n    'use strict';\n\n    (0, _qunit.module)('Unit - Core - Clinical | Model - diagnoses tests');\n\n    (0, _qunit.test)('description displays ICD10Description if we have ICD10', function (assert) {\n        var diagnosis = _diagnosis.default.wrap({\n            diagnosisCodes: [{\n                code: '250.00',\n                description: 'Diabetes mellitus without mention of complication, type II or unspecified type, not stated as uncontrolled',\n                codeSystem: 'Icd9'\n            }, {\n                code: '73211009',\n                description: 'Diabetes mellitus',\n                codeSystem: 'Snomed'\n            }, {\n                code: 'E11.9',\n                codeSystem: 'Icd10',\n                description: 'Type 2 diabetes mellitus without complications'\n            }]\n        });\n        assert.equal(diagnosis.get('description'), 'Type 2 diabetes mellitus without complications');\n    });\n    (0, _qunit.test)('description displays (I9Code) ICD9Description if we only have ICD9', function (assert) {\n        var diagnosis = _diagnosis.default.wrap({\n            diagnosisCodes: [{\n                code: '250.00',\n                description: 'Diabetes mellitus without mention of complication, type II or unspecified type, not stated as uncontrolled',\n                codeSystem: 'Icd9'\n            }]\n        });\n        assert.equal(diagnosis.get('description'), '(250.00) Diabetes mellitus without mention of complication, type II or unspecified type, not stated as uncontrolled');\n    });\n    (0, _qunit.test)('description displays (I9Code) SnomedDescription: ICD9Description if we have ICD9 and Snomed, but not ICD10', function (assert) {\n        var diagnosis = _diagnosis.default.wrap({\n            diagnosisCodes: [{\n                code: '250.00',\n                description: 'Diabetes mellitus without mention of complication, type II or unspecified type, not stated as uncontrolled',\n                codeSystem: 'Icd9'\n            }, {\n                code: '73211009',\n                description: 'Diabetes mellitus',\n                codeSystem: 'Snomed'\n            }]\n        });\n        assert.equal(diagnosis.get('description'), '(250.00) Diabetes mellitus: Diabetes mellitus without mention of complication, type II or unspecified type, not stated as uncontrolled');\n    });\n    (0, _qunit.test)('description displays (CustomCode) CustomDescription if we only have Custom', function (assert) {\n        var diagnosis = _diagnosis.default.wrap({\n            diagnosisCodes: [{\n                code: 'customCode',\n                description: 'Custom description',\n                codeSystem: 'Custom'\n            }]\n        });\n        assert.equal(diagnosis.get('description'), '(customCode) Custom description');\n    });\n    (0, _qunit.test)('description displays (No associated code) CustomDescription if we only have CustomDescription but don\\'t have a customCode', function (assert) {\n        var diagnosis = _diagnosis.default.wrap({\n            diagnosisCodes: [{\n                code: '',\n                description: 'Custom description',\n                codeSystem: 'Custom'\n            }]\n        });\n        assert.equal(diagnosis.get('description'), '(No associated code) Custom description');\n    });\n\n    (0, _qunit.test)('attributes return a list of attributes based on diagnosisCodes', function (assert) {\n        var attributes1, attributes2, expectedAttributes, diagnosis;\n        attributes1 = [{\n            name: 'Laterality Type',\n            value: 'Left'\n        }, {\n            name: 'Encounter Type',\n            value: 'Initial'\n        }, {\n            name: 'Fracture Type',\n            value: 'Closed'\n        }];\n        attributes2 = [{\n            name: 'Gender',\n            value: 'Female'\n        }];\n        expectedAttributes = [{\n            name: 'Laterality Type',\n            value: 'Left'\n        }, {\n            name: 'Encounter Type',\n            value: 'Initial'\n        }, {\n            name: 'Fracture Type',\n            value: 'Closed'\n        }, {\n            name: 'Gender',\n            value: 'Female'\n        }];\n        diagnosis = _diagnosis.default.wrap({\n            diagnosisCodes: [{ attributes: attributes1 }, { attributes: attributes2 }]\n        });\n        assert.deepEqual(diagnosis.get('attributes'), expectedAttributes);\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/models/immunization-search-test', ['ember-qunit', 'clinical/models/immunization-search'], function (_emberQunit, _immunizationSearch) {\n    'use strict';\n\n    (0, _emberQunit.moduleFor)('model:immunizationSearch', 'Unit - Core - Clinical | Model - ImmunizationSearch', {\n        unit: true,\n        afterEach() {\n            let store = this.container.lookup('service:store');\n\n            if (store) {\n                store.destroy = function () {\n                    // Do nothing because this breaks pre ember-data beta 1.15\n                };\n            }\n        }\n    });\n\n    (0, _emberQunit.test)('displayName computed property', function (assert) {\n        let immunizationSearch = _immunizationSearch.default.create({\n            name: 'testName',\n            isActive: true\n        });\n\n        assert.equal(immunizationSearch.get('displayName'), 'testName');\n\n        immunizationSearch.set('isActive', false);\n\n        assert.equal(immunizationSearch.get('displayName'), 'testName (discontinued)');\n\n        immunizationSearch.set('matchedAlternateName', 'testBrandName');\n\n        assert.equal(immunizationSearch.get('displayName'), 'testBrandName / testName (discontinued)');\n\n        immunizationSearch.set('isActive', true);\n\n        assert.equal(immunizationSearch.get('displayName'), 'testBrandName / testName');\n    });\n\n    (0, _emberQunit.test)('isCustom computed property', function (assert) {\n        let immunizationSearch = _immunizationSearch.default.create({\n            searchTypeCode: 'CustomVaccine'\n        });\n\n        assert.equal(immunizationSearch.get('isCustom'), true);\n    });\n\n    (0, _emberQunit.test)('isFromInventory computed property', function (assert) {\n        let immunizationSearch = _immunizationSearch.default.create({\n            searchTypeCode: 'VaccineInventory'\n        });\n\n        assert.equal(immunizationSearch.get('isFromInventory'), true);\n    });\n\n    (0, _emberQunit.test)('isGroup computed property', function (assert) {\n        let immunizationSearch = _immunizationSearch.default.create({\n            searchTypeCode: 'ImmunizationGroup'\n        });\n\n        assert.equal(immunizationSearch.get('isGroup'), true);\n    });\n\n    (0, _emberQunit.test)('isCustomOrFromInventory computed property', function (assert) {\n        let immunizationSearch = _immunizationSearch.default.create({\n            searchTypeCode: 'CustomVaccine'\n        });\n\n        assert.equal(immunizationSearch.get('isCustomOrFromInventory'), true);\n\n        immunizationSearch.set('searchTypeCode', 'VaccineInventory');\n\n        assert.equal(immunizationSearch.get('isCustomOrFromInventory'), true);\n    });\n\n    (0, _emberQunit.test)('isDynamic computed property', function (assert) {\n        let immunizationSearch = _immunizationSearch.default.create({\n            searchTypeCode: 'DynamicVaccine'\n        });\n\n        assert.equal(immunizationSearch.get('isDynamic'), true);\n    });\n\n    (0, _emberQunit.test)('isInactive computed property', function (assert) {\n        let immunizationSearch = _immunizationSearch.default.create({\n            isActive: false\n        });\n\n        assert.equal(immunizationSearch.get('isInactive'), true);\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/models/medications-array-test', ['clinical/models/medication', 'qunit'], function (_medication, _qunit) {\n    'use strict';\n\n    (0, _qunit.module)('Unit - Core - Clinical | Model - medications array tests');\n\n    const today = moment(new Date()).format('MM/DD/YYYY');\n    const dayAfterNext = moment(new Date()).add(2, 'day').format('MM/DD/YYYY');\n    // Initial state: AlbuRx is duplciated 4 times and Xanax twice. Always active\n    function medicationsArrayWithDuplicates() {\n        return [{\n            tradeName: 'AlbuRx',\n            ndc: '44206031025'\n        }, {\n            tradeName: 'AlbuRx',\n            ndc: '44206031025'\n        }, {\n            tradeName: 'AlbuRx',\n            ndc: '44206031025'\n        }, {\n            tradeName: 'AlbuRx',\n            ndc: '44206031025'\n        }, {\n            tradeName: 'Tylenol',\n            ndc: '00045050008'\n        }, {\n            tradeName: 'Xanax',\n            ndc: '00009002901'\n        }, {\n            tradeName: 'Xanax',\n            ndc: '00009002901'\n        }];\n    }\n\n    (0, _qunit.test)('currentByNdc groups the active meds by ndc', function (assert) {\n        let medicationsArray = _medication.default.wrap(medicationsArrayWithDuplicates());\n        assert.equal(medicationsArray.get('currentByNdc')['44206031025'].length, 4);\n        medicationsArray.get('firstObject').set('stopDateTime', today);\n        assert.equal(medicationsArray.get('currentByNdc')['44206031025'].length, 3);\n        assert.equal(medicationsArray.get('currentByNdc')['00009002901'].length, 2);\n        assert.equal(medicationsArray.get('currentByNdc')['00045050008'].length, 1);\n    });\n\n    (0, _qunit.test)('groupOfDuplicates returns a list of all the duplicates', function (assert) {\n        let medicationsArray = _medication.default.wrap(medicationsArrayWithDuplicates());\n        assert.equal(medicationsArray.get('groupOfDuplicates').length, 2);\n    });\n\n    (0, _qunit.test)('duplicates don\\'t include custom (or meds with empty ndcs)', function (assert) {\n        const medicationsArray = _medication.default.wrap([{\n            tradeName: 'Custom Med 1',\n            ndc: ''\n        }, {\n            tradeName: 'Custo Med 2',\n            ndc: ''\n        }]);\n        assert.equal(medicationsArray.get('groupOfDuplicates').length, 0);\n    });\n\n    (0, _qunit.test)('duplicates don\\'t include future medications', function (assert) {\n        const medicationsArray = _medication.default.wrap([{\n            tradeName: 'AlbuRx',\n            ndc: '44206031025',\n            startDateTime: dayAfterNext\n        }, {\n            tradeName: 'AlbuRx',\n            ndc: '44206031025',\n            startDateTime: dayAfterNext\n        }]);\n        assert.equal(medicationsArray.get('groupOfDuplicates').length, 0);\n        medicationsArray.set('firstObject.startDateTime', null);\n        assert.equal(medicationsArray.get('groupOfDuplicates').length, 0);\n        medicationsArray.set('lastObject.startDateTime', null);\n        assert.equal(medicationsArray.get('groupOfDuplicates').length, 1);\n    });\n\n    (0, _qunit.test)('duplicates don\\'t include historical medications', function (assert) {\n        const medicationsArray = _medication.default.wrap([{\n            tradeName: 'AlbuRx',\n            ndc: '44206031025',\n            stopDateTime: today\n        }, {\n            tradeName: 'AlbuRx',\n            ndc: '44206031025',\n            stopDateTime: today\n        }]);\n        assert.equal(medicationsArray.get('groupOfDuplicates').length, 0);\n        medicationsArray.set('firstObject.stopDateTime', null);\n        assert.equal(medicationsArray.get('groupOfDuplicates').length, 0);\n        medicationsArray.set('lastObject.stopDateTime', null);\n        assert.equal(medicationsArray.get('groupOfDuplicates').length, 1);\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/models/medications-test', ['clinical/models/medication', 'qunit', 'ember-test-helpers/wait'], function (_medication, _qunit, _wait) {\n    'use strict';\n\n    (0, _qunit.module)('Unit - Core - Clinical | Model - medication tests');\n\n    const today = moment(new Date()).format('MM/DD/YYYY');\n    const dayAfterNext = moment(new Date()).add(2, 'day').format('MM/DD/YYYY');\n\n    (0, _qunit.test)('duplicates don\\'t include future medications', assert => {\n        assert.expect(6);\n        const medicationsArray = _medication.default.wrap([{\n            medicationGuid: 1, // It's used to exclude the same med from the list of duplicates\n            tradeName: 'AlbuRx',\n            ndc: '44206031025',\n            startDateTime: dayAfterNext\n        }, {\n            medicationGuid: 2,\n            tradeName: 'AlbuRx',\n            ndc: '44206031025',\n            startDateTime: dayAfterNext\n        }]);\n        return (0, _wait.default)().then(() => {\n            assert.equal(medicationsArray.get('firstObject.duplicates.length'), 0);\n            assert.equal(medicationsArray.get('lastObject.duplicates.length'), 0);\n\n            medicationsArray.set('firstObject.startDateTime', null);\n            return (0, _wait.default)().then(() => {\n                assert.equal(medicationsArray.get('firstObject.duplicates.length'), 0);\n                assert.equal(medicationsArray.get('lastObject.duplicates.length'), 0);\n                Ember.run(() => {\n                    medicationsArray.set('lastObject.startDateTime', null);\n                    return (0, _wait.default)().then(() => {\n                        assert.equal(medicationsArray.get('firstObject.duplicates.length'), 1);\n                        assert.equal(medicationsArray.get('lastObject.duplicates.length'), 1);\n                    });\n                });\n            });\n        });\n    });\n\n    (0, _qunit.test)('duplicates don\\'t include historical medications', function (assert) {\n        let medicationsArray;\n        Ember.run(() => {\n            medicationsArray = _medication.default.wrap([{\n                medicationGuid: 1,\n                tradeName: 'AlbuRx',\n                ndc: '44206031025',\n                stopDateTime: today\n            }, {\n                medicationGuid: 2,\n                tradeName: 'AlbuRx',\n                ndc: '44206031025',\n                stopDateTime: today\n            }]);\n        });\n        return (0, _wait.default)().then(() => {\n            assert.equal(medicationsArray.get('firstObject.duplicates.length'), 0);\n            assert.equal(medicationsArray.get('lastObject.duplicates.length'), 0);\n\n            medicationsArray.set('firstObject.stopDateTime', null);\n            return (0, _wait.default)().then(() => {\n                assert.equal(medicationsArray.get('firstObject.duplicates.length'), 0);\n                assert.equal(medicationsArray.get('lastObject.duplicates.length'), 0);\n\n                medicationsArray.set('lastObject.stopDateTime', null);\n                return (0, _wait.default)().then(() => {\n                    assert.equal(medicationsArray.get('firstObject.duplicates.length'), 1);\n                    assert.equal(medicationsArray.get('lastObject.duplicates.length'), 1);\n                });\n            });\n        });\n    });\n\n    (0, _qunit.test)('addComment for a medication with a weird TranscriptGuid should add a new transcriptMed for the encountersGuid', function (assert) {\n        var encountersGuid = '760b8d9c-9433-42bb-90e8-4eccfc65fa5b/02-24-2014',\n            medication = _medication.default.wrap({\n            transcriptMedications: [{\n                transcriptGuid: null,\n                comment: '',\n                lastModifiedDateTimeUtc: null\n            }]\n        });\n\n        medication.addComment('this is a comment', encountersGuid);\n\n        assert.equal(medication.get('transcriptMedications').length, 2);\n        assert.equal(medication.get('transcriptMedications')[1].transcriptGuid, encountersGuid);\n        assert.equal(medication.get('transcriptMedications')[1].comment, 'this is a comment');\n    });\n\n    (0, _qunit.test)('addComment for a transcript with a null TranscriptGuid should add a new transcriptMed for the encountersGuid', function (assert) {\n        var encountersGuid = '760b8d9c-9433-42bb-90e8-4eccfc65fa5b/02-24-2014',\n            medication = _medication.default.wrap({\n            transcriptMedications: [{\n                transcriptGuid: null,\n                comment: '',\n                lastModifiedDateTimeUtc: null\n            }]\n        });\n\n        medication.addComment('this is a comment', encountersGuid);\n\n        assert.equal(medication.get('transcriptMedications').length, 2);\n        assert.equal(medication.get('transcriptMedications')[1].transcriptGuid, encountersGuid);\n        assert.equal(medication.get('transcriptMedications')[1].comment, 'this is a comment');\n    });\n\n    (0, _qunit.test)('addComment for a transcript with no transcriptMedications', function (assert) {\n        var encountersGuid = '760b8d9c-9433-42bb-90e8-4eccfc65fa5b/02-24-2014',\n            medication = _medication.default.wrap({});\n\n        medication.addComment('this is a comment', encountersGuid);\n\n        assert.equal(medication.get('transcriptMedications').length, 1);\n        assert.equal(medication.get('transcriptMedications')[0].transcriptGuid, encountersGuid);\n        assert.equal(medication.get('transcriptMedications')[0].comment, 'this is a comment');\n    });\n\n    (0, _qunit.test)('addComment creates and a default transcript if no encounterGuid is provided', function (assert) {\n        var medication = _medication.default.wrap({\n            transcriptMedications: [{\n                transcriptGuid: 'irrelevant',\n                comment: '',\n                lastModifiedDateTimeUtc: null\n            }]\n        });\n        var doTest = function (encounterGuid) {\n            medication.addComment('this is a comment', encounterGuid);\n            assert.equal(medication.get('transcriptMedications').length, 2);\n            assert.equal(medication.get('transcriptMedications')[1].comment, 'this is a comment');\n        };\n        doTest();\n        doTest(undefined);\n        doTest(null);\n    });\n\n    (0, _qunit.test)('getTranscriptMedications returns the default one based on the transcriptGuid', function (assert) {\n        var medication = _medication.default.wrap({\n            transcriptMedications: [{\n                transcriptGuid: null,\n                comment: 'comment for default transcript guid',\n                lastModifiedDateTimeUtc: null\n            }, {\n                transcriptGuid: '760b8d9c-9433-42bb-90e8-4eccfc65fa5b/02-24-2014',\n                comment: 'comment for default transcript guid',\n                lastModifiedDateTimeUtc: null\n            }, {\n                transcriptGuid: 'irrelevant',\n                comment: '',\n                lastModifiedDateTimeUtc: null\n            }]\n        });\n        assert.equal(medication.getTranscriptMedication().comment, 'comment for default transcript guid');\n        assert.equal(medication.getTranscriptMedication('760b8d9c-9433-42bb-90e8-4eccfc65fa5b/02-24-2014').comment, 'comment for default transcript guid');\n    });\n\n    (0, _qunit.test)('isHistorical should be false if stopDateTime is null', function (assert) {\n        var attempts = 10000;\n        assert.expect(attempts);\n        for (var i = attempts - 1; i >= 0; i--) {\n            let medication = _medication.default.wrap({});\n            assert.equal(medication.get('isHistorical'), false, 'Medication should not be historical without a stopDateTime');\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/models/patient-goal-test', ['qunit', 'boot/tests/helpers/store', 'boot/initializers/ember-cli-mirage', 'clinical/models/patient-goal', 'clinical/adapters/patient-goal', 'clinical/serializers/patient-goal', 'common/transforms/formatted-date'], function (_qunit, _store, _emberCliMirage, _patientGoal, _patientGoal2, _patientGoal3, _formattedDate) {\n    'use strict';\n\n    let env;\n    let store;\n\n    (0, _qunit.module)('Unit - Core - Clinical | Model - Patient Goals', {\n        beforeEach() {\n            env = (0, _store.default)({\n                adapters: {\n                    'patient-goal': _patientGoal2.default\n                },\n                serializers: {\n                    'patient-goal': _patientGoal3.default\n                },\n                models: {\n                    'patient-goal': _patientGoal.default\n                },\n                transforms: {\n                    'formatted-date': _formattedDate.default\n                }\n            });\n            store = env.store;\n            this.server = (0, _emberCliMirage.startMirage)();\n        },\n        afterEach() {\n            this.server.shutdown();\n            store = null;\n        }\n    });\n\n    (0, _qunit.test)('Patient goal results are serialized correctly', assert => {\n        const done = assert.async();\n        const patientPracticeGuid = '4fa531c0-12f2-42dc-9419-ddd583272c76';\n        let endpointCalled = false;\n\n        server.get('/ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/patientGoals', ({ db }) => {\n            endpointCalled = true;\n            return db.patientGoals[0];\n        });\n\n        store.query('patient-goal', { patientPracticeGuid }).then(results => {\n            const result = results.get('firstObject');\n            assert.ok(endpointCalled, 'The patient list endpoint was called when issuing the store.query call');\n            assert.ok(result, 'The result was serialized into a model');\n            assert.equal(result.get('patientPracticeGuid'), '4fa531c0-12f2-42dc-9419-ddd583272c76', 'IsActive attribute was serialized correctly');\n            assert.equal(result.get('isActive'), true, 'IsActive attribute was serialized correctly');\n            assert.equal(result.get('effectiveDate'), '07/09/1991', 'EffectiveDate attribute was serialized correctly');\n            assert.equal(result.get('description'), 'Some text here', 'Description attribute was serialized correctly');\n            done();\n        });\n    });\n\n    (0, _qunit.test)('Patient goal POST, PUT, and DELETE are successful', assert => {\n        const done = assert.async();\n        const patientGoalGuid = '3c61bd39-c8e2-4f02-9713-d5d3a166398c';\n        let postCalled = false;\n        let putCalled = false;\n        let deleteCalled = false;\n\n        server.post('/ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/patientGoals', () => {\n            postCalled = true;\n            return {\n                'patientGoal': {\n                    'patientGoalGuid': patientGoalGuid,\n                    'patientPracticeGuid': '4fa531c0-12f2-42dc-9419-ddd583272c76',\n                    'isActive': true,\n                    'effectiveDate': '1991-07-09T00:00:00Z',\n                    'description': 'Some text here'\n                }\n            };\n        });\n\n        server.put('/ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/patientGoals/:patientGoalGuid', () => {\n            putCalled = true;\n            return {};\n        });\n\n        server.delete('/ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/patientGoals/:patientGoalGuid', () => {\n            deleteCalled = true;\n            return;\n        });\n\n        Ember.run(() => {\n            const goal = store.createRecord('patient-goal', {\n                patientPracticeGuid: '4fa531c0-12f2-42dc-9419-ddd583272c76',\n                isActive: true,\n                effectiveDate: '1991-07-09T00:00:00Z',\n                description: 'Patient goal here'\n            });\n\n            goal.save().then(() => {\n                const savedGoal = store.peekRecord('patient-goal', patientGoalGuid);\n                assert.ok(postCalled, 'The patient goal POST call was made');\n                assert.ok(savedGoal, 'A new goal appears in the store');\n                savedGoal.set('description', 'Some other text here');\n                savedGoal.save().then(() => {\n                    const updatedGoal = store.peekRecord('patient-goal', patientGoalGuid);\n                    assert.ok(putCalled, 'The patient goal PUT call was made');\n                    assert.equal(updatedGoal.get('description'), 'Some other text here', 'Patient goal was updated and stored correctly');\n                    updatedGoal.destroyRecord().then(() => {\n                        const deletedGoal = store.peekRecord('patient-goal', patientGoalGuid);\n                        assert.ok(deleteCalled, 'The patient goal DELETE call was made');\n                        assert.ok(!deletedGoal || deletedGoal.get('isDeleted'), 'Goal no longer exists in store after deleting');\n                        done();\n                    });\n                });\n            });\n        });\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/models/patient-health-concern-test', ['ember-cli-mirage', 'qunit', 'boot/tests/helpers/store', 'clinical/models/patient-health-concern', 'clinical/adapters/patient-health-concern', 'clinical/serializers/patient-health-concern', 'boot/initializers/ember-cli-mirage'], function (_emberCliMirage, _qunit, _store, _patientHealthConcern, _patientHealthConcern2, _patientHealthConcern3, _emberCliMirage2) {\n    'use strict';\n\n    const PATIENT_PRACTICE_GUID = 'c5faffde-78e2-4924-acaf-2115bc686d5e';\n    const ALLERGY_GUID = '9b3a4fa4-5970-4bcc-a3be-96e8b45710e3';\n    const ALLERGY_CONCERN_GUID = 'b6fe8d6f-5cf1-4db3-ab4f-7ab8d7b1d131';\n    const DIAGNOSIS_GUID = '9b3a4fa4-5970-4bcc-a3be-96e8b45710e4';\n    const DIAGNOSIS_CONCERN_GUID = 'b6fe8d6f-5cf1-4db3-ab4f-7ab8d7b1d132';\n    const HEALTH_CONCERN_NOTE = 'Yo, I gots concerns';\n    const NOTE_CONCERN_GUID = 'b6fe8d6f-5cf1-4db3-ab4f-7ab8d7b1d133';\n    const EFFECTIVE_DATE_UTC = '2017-06-12T00:00:00.000Z';\n    const EFFECTIVE_DATE = '06/12/2017';\n    const HEALTH_CONCERNS_RESPONSE = {\n        patientHealthConcerns: [{\n            patientHealthConcernGuid: ALLERGY_CONCERN_GUID,\n            patientPracticeGuid: PATIENT_PRACTICE_GUID,\n            effectiveDate: EFFECTIVE_DATE_UTC,\n            healthConcernType: 'Allergy',\n            healthConcernReferenceGuid: ALLERGY_GUID,\n            isActive: true\n        }, {\n            patientHealthConcernGuid: DIAGNOSIS_CONCERN_GUID,\n            patientPracticeGuid: PATIENT_PRACTICE_GUID,\n            effectiveDate: EFFECTIVE_DATE_UTC,\n            healthConcernType: 'Diagnosis',\n            healthConcernReferenceGuid: DIAGNOSIS_GUID,\n            isActive: false\n        }, {\n            patientHealthConcernGuid: NOTE_CONCERN_GUID,\n            patientPracticeGuid: PATIENT_PRACTICE_GUID,\n            healthConcernNote: HEALTH_CONCERN_NOTE,\n            healthConcernType: 'Note'\n        }]\n    };\n    let store;\n\n    (0, _qunit.module)('Unit - Core - Clinical | Model - Patient Health Concern', {\n        beforeEach() {\n            const env = (0, _store.default)({\n                adapters: {\n                    'patient-health-concern': _patientHealthConcern2.default\n                },\n                serializers: {\n                    'patient-health-concern': _patientHealthConcern3.default\n                },\n                models: {\n                    'patient-health-concern': _patientHealthConcern.default\n                }\n            });\n            store = env.store;\n            this.server = (0, _emberCliMirage2.startMirage)();\n        },\n        afterEach() {\n            this.server.shutdown();\n            store = null;\n        }\n    });\n\n    (0, _qunit.test)('Patient health concerns are serialized correctly', assert => {\n        const done = assert.async();\n        let healthConcernsEndpointCalled = false;\n\n        server.get('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/patientHealthConcerns', ({ db }, request) => {\n            healthConcernsEndpointCalled = true;\n            assert.equal(request.params.patientPracticeGuid, PATIENT_PRACTICE_GUID, 'The patientPracticeGuid was correct in the GET request');\n            return HEALTH_CONCERNS_RESPONSE;\n        });\n\n        store.query('patient-health-concern', { patientPracticeGuid: PATIENT_PRACTICE_GUID }).then(healthConcerns => {\n            const allergyConcern = healthConcerns.findBy('healthConcernType', 'Allergy');\n            const diagnosisConcern = healthConcerns.findBy('healthConcernType', 'Diagnosis');\n            const noteConcern = healthConcerns.findBy('healthConcernType', 'Note');\n\n            assert.ok(healthConcernsEndpointCalled, 'The patient health concerns endpoint was called');\n            assert.equal(healthConcerns.get('length'), 3, 'The health concerns were serialized into models');\n            assert.ok(allergyConcern, 'The allergy health concern was serialized into a model');\n            assert.equal(allergyConcern.get('id'), ALLERGY_CONCERN_GUID, 'The allergy health concern guid was serialized correctly');\n            assert.equal(allergyConcern.get('effectiveDate'), EFFECTIVE_DATE, 'The allergy health concern effective date was serialized correctly');\n            assert.equal(allergyConcern.get('healthConcernReferenceGuid'), ALLERGY_GUID, 'The allergy guid was serialized correctly');\n            assert.ok(allergyConcern.get('isActive'), 'The allergy health concern isActive field was serialized correctly');\n\n            assert.ok(diagnosisConcern, 'The diagnosis health concern was serialized into a model');\n            assert.equal(diagnosisConcern.get('id'), DIAGNOSIS_CONCERN_GUID, 'The diagnosis health concern guid was serialized correctly');\n            assert.equal(diagnosisConcern.get('effectiveDate'), EFFECTIVE_DATE, 'The diagnosis health concern effective date was serialized correctly');\n            assert.equal(diagnosisConcern.get('healthConcernReferenceGuid'), DIAGNOSIS_GUID, 'The diagnosis guid was serialized correctly');\n            assert.notOk(diagnosisConcern.get('isActive'), 'The diagnosis health concern isActive field was serialized correctly');\n\n            assert.ok(noteConcern, 'The note health concern was serialized into a model');\n            assert.equal(noteConcern.get('id'), NOTE_CONCERN_GUID, 'The note health concern guid was serialized correctly');\n            assert.equal(noteConcern.get('healthConcernNote'), HEALTH_CONCERN_NOTE, 'The health concern note was serialized correctly');\n            done();\n        });\n    });\n\n    (0, _qunit.test)('Patient health concerns can be created', assert => {\n        const done = assert.async();\n        let healthConcernsPostCalled = false;\n\n        server.post('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/patientHealthConcerns', ({ db }, request) => {\n            healthConcernsPostCalled = true;\n            const data = JSON.parse(request.requestBody);\n            const response = Ember.copy(data);\n\n            assert.notOk(data.patientHealthConcernGuid, 'The patientHealthConcernGuid is not included on POST');\n            assert.equal(data.patientPracticeGuid, PATIENT_PRACTICE_GUID, 'The patient practice guid is correct in POST body');\n            assert.equal(request.params.patientPracticeGuid, PATIENT_PRACTICE_GUID, 'The patient practice guid is correct in POST url');\n            assert.equal(data.effectiveDate, EFFECTIVE_DATE_UTC, 'The effective date is correct on POST');\n            assert.equal(data.healthConcernReferenceGuid, ALLERGY_GUID, 'The health concern guid is correct on POST');\n            assert.ok(data.isActive, 'The isActive flag is correct on POST');\n            assert.equal(data.healthConcernType, 'Allergy', 'The health concern type is correct on POST');\n\n            response.patientHealthConcernGuid = ALLERGY_CONCERN_GUID;\n            return {\n                patientHealthConcern: response\n            };\n        });\n\n        store.createRecord('patient-health-concern', {\n            patientPracticeGuid: PATIENT_PRACTICE_GUID,\n            effectiveDate: EFFECTIVE_DATE,\n            healthConcernType: 'Allergy',\n            isActive: true,\n            healthConcernReferenceGuid: ALLERGY_GUID\n        }).save().then(healthConcern => {\n            assert.ok(healthConcernsPostCalled, 'The health concerns endpoint was POSTed to');\n            assert.ok(healthConcern, 'The health concern was serialized after save');\n            assert.equal(healthConcern.get('id'), ALLERGY_CONCERN_GUID, 'The patientHealthConcernGuid was serialized correctly on save');\n            assert.equal(healthConcern.get('effectiveDate'), EFFECTIVE_DATE, 'The effective date was serialized correctly');\n            assert.equal(healthConcern.get('healthConcernReferenceGuid'), ALLERGY_GUID, 'The healthConcernReferenceGuid was serialized correctly');\n            assert.ok(healthConcern.get('isActive'), 'The isActive field was serialized correctly');\n            done();\n        });\n    });\n\n    (0, _qunit.test)('Existing health concerns can be saved', assert => {\n        const done = assert.async();\n        const newHealthConcernNote = 'Such edit. So different';\n        let healthConcernsPutCalled = false;\n\n        server.get('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/patientHealthConcerns', () => HEALTH_CONCERNS_RESPONSE);\n        server.put('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/patientHealthConcerns/:patientHealthConcernGuid', ({ db }, request) => {\n            healthConcernsPutCalled = true;\n            const data = JSON.parse(request.requestBody);\n\n            assert.equal(request.params.patientHealthConcernGuid, NOTE_CONCERN_GUID, 'The patientHealthConcernGuid is correct in PUT url');\n            assert.equal(data.patientHealthConcernGuid, NOTE_CONCERN_GUID, 'The patientHealthConcernGuid is correct in PUT body');\n            assert.equal(data.patientPracticeGuid, PATIENT_PRACTICE_GUID, 'The patient practice guid is correct in PUT body');\n            assert.equal(request.params.patientPracticeGuid, PATIENT_PRACTICE_GUID, 'The patient practice guid is correct in PUT url');\n            assert.equal(data.healthConcernType, 'Note', 'The health concern type is correct on PUT');\n            assert.equal(data.healthConcernNote, newHealthConcernNote, 'The health concern note is correct on PUT');\n\n            return {\n                patientHealthConcern: data\n            };\n        });\n\n        store.query('patient-health-concern', { patientPracticeGuid: PATIENT_PRACTICE_GUID }).then(healthConcerns => {\n            const noteConcern = healthConcerns.findBy('healthConcernType', 'Note');\n            noteConcern.set('healthConcernNote', newHealthConcernNote);\n            noteConcern.save().then(healthConcern => {\n                assert.ok(healthConcernsPutCalled, 'The health concerns PUT endpoint was called');\n                assert.ok(healthConcern, 'The health concern was serialized after save');\n                assert.equal(healthConcern.get('healthConcernNote'), newHealthConcernNote, 'The health concern note was updated on save');\n                done();\n            });\n        });\n    });\n\n    (0, _qunit.test)('Existing health concerns can be deleted', assert => {\n        const done = assert.async();\n        let healthConcernDeleteCalled = false;\n        server.get('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/patientHealthConcerns', () => HEALTH_CONCERNS_RESPONSE);\n        server.delete('ClinicalEndpoint/api/v1/patients/:patientPracticeGuid/patientHealthConcerns/:patientHealthConcernGuid', ({ db }, request) => {\n            healthConcernDeleteCalled = true;\n            assert.equal(request.params.patientHealthConcernGuid, NOTE_CONCERN_GUID, 'The patientHealthConcernGuid is correct in DELETE url');\n            return new _emberCliMirage.default.Response(204, {}, null);\n        });\n\n        store.query('patient-health-concern', { patientPracticeGuid: PATIENT_PRACTICE_GUID }).then(healthConcerns => {\n            let noteConcern = healthConcerns.findBy('healthConcernType', 'Note');\n            noteConcern.destroyRecord().then(() => {\n                assert.ok(healthConcernDeleteCalled, 'The health concerns DELETE endpoint was called');\n                noteConcern = store.peekRecord('patient-health-concern', NOTE_CONCERN_GUID);\n                assert.ok(!noteConcern || noteConcern.get('isDeleted'), 'The health concern is no longer present in the store after delete');\n                done();\n            });\n        });\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/repositories/diagnoses-test', ['clinical/repositories/diagnoses', 'qunit', 'ember-sinon-qunit/test-support/test', 'boot/util/pf-server'], function (_diagnoses, _qunit, _test, _pfServer) {\n    'use strict';\n\n    (0, _qunit.module)('Unit - Core - Clinical | Repository - diagnoses tests');\n\n    (0, _test.default)('searchForFamilyHistory calls v3 diagnosis/typeSearch with the filter and familyHealthHistorySearch flag', function (assert) {\n        let promiseStub = this.stub(_pfServer.default, 'promise').returns(new Ember.RSVP.resolve([]));\n        _diagnoses.default.searchForFamilyHistory('Diabetes');\n\n        let url = promiseStub.getCall(0).args[0];\n        assert.ok(url.match(/diagnosis\\/typeSearch\\/\\?searchTerm=Diabetes&familyHealthHistorySearch=true/));\n    });\n\n    (0, _test.default)('searchForFamilyHistory sets diagnosisType for \"Other diagnosis\" and \"Family diagnosis\"', function (assert) {\n        let relativesList = [{ relative: { observations: [{ diagnosis: { id: 1, snomedCode: 1 } }, { diagnosis: { id: 2, snomedCode: 2 } }] } }, { relative: { observations: [{ diagnosis: { id: 3, snomedCode: 3 } }] } }];\n        this.stub(_pfServer.default, 'promise').returns(new Ember.RSVP.resolve([{ id: 4 }]));\n        return _diagnoses.default.searchForFamilyHistory('Diabetes', relativesList).then(results => {\n            assert.equal(results.length, 4);\n            assert.equal(results.findBy('id', 1).diagnosisType, 'Family diagnosis');\n            assert.equal(results.findBy('id', 2).diagnosisType, 'Family diagnosis');\n            assert.equal(results.findBy('id', 3).diagnosisType, 'Family diagnosis');\n            assert.equal(results.findBy('id', 4).diagnosisType, 'Other diagnosis');\n        });\n    });\n\n    (0, _test.default)('searchForFamilyHistory returns Family diagnosis first and then Other diagnosis', function (assert) {\n        let relativesList = [{ relative: { observations: [{ diagnosis: {} }] } }];\n        this.stub(_pfServer.default, 'promise').returns(new Ember.RSVP.resolve([{}]));\n        return _diagnoses.default.searchForFamilyHistory('Diabetes', relativesList).then(results => {\n            assert.equal(results.length, 2);\n            assert.equal(results[0].diagnosisType, 'Family diagnosis');\n            assert.equal(results[1].diagnosisType, 'Other diagnosis');\n        });\n    });\n\n    (0, _test.default)('searchForFamilyHistory de-dupes all Family Diagnosis by snomed', function (assert) {\n        let relativesList = [{ relative: { observations: [{ diagnosis: { snomedCode: 1 } }, { diagnosis: { snomedCode: 2 } }] } }, { relative: { observations: [{ diagnosis: { snomedCode: 1 } }] } }];\n        this.stub(_pfServer.default, 'promise').returns(new Ember.RSVP.resolve([]));\n        return _diagnoses.default.searchForFamilyHistory('Diabetes', relativesList).then(results => {\n            assert.equal(results.length, 2);\n        });\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/repositories/medications-test', ['qunit', 'sinon', 'clinical/repositories/medications', 'boot/util/pf-server'], function (_qunit, _sinon, _medications, _pfServer) {\n    'use strict';\n\n    const medication = {\n        doseForm: 'Solution',\n        drugCode: '55513071001',\n        drugName: 'Prolia 60 MG/ML Subcutaneous Solution',\n        frequency: 8,\n        genericName: 'Denosumab',\n        id: 'a8a3a5b7-1aa8-4b82-8184-2d3fb83025a6',\n        isGeneric: false,\n        isMedicalSupply: false,\n        medicationDiscontinuedReason: null,\n        ndc: '55513071001',\n        patientPracticeGuid: '0ead6c1d-181d-4449-8227-9cf0bbac4c41',\n        productStrength: '60 MG/ML',\n        providerGuid: 'eaa90f53-9dfa-4c2a-93db-83f3b3243d5b',\n        route: 'Subcutaneous',\n        rxNormCui: '993458',\n        brandedRxNormCui: '993456',\n        sig: {}\n    };\n    let pfServerStub;\n    (0, _qunit.module)('Unit - Core - Clinical | Repository - medications', {\n        beforeEach() {\n            pfServerStub = _sinon.default.stub(_pfServer.default, 'promise');\n            pfServerStub.onFirstCall().returns(Ember.RSVP.resolve({}));\n            pfServerStub.onSecondCall().returns(Ember.RSVP.resolve([]));\n        },\n        afterEach() {\n            _pfServer.default.promise.restore();\n        }\n    });\n\n    (0, _qunit.test)('brandedRxNormCui is sent in medication save', assert => {\n        const done = assert.async();\n        _medications.default.saveMedication(medication).then(() => {\n            assert.equal(pfServerStub.firstCall.args[2].brandedRxNormCui, '993456');\n            done();\n        });\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/repositories/patient-demographics-test', ['qunit', 'boot/initializers/ember-cli-mirage', 'boot/tests/helpers/store', 'clinical/models/race-option', 'clinical/models/ethnicity-option', 'clinical/adapters/race-option', 'clinical/adapters/ethnicity-option', 'clinical/serializers/race-option', 'clinical/serializers/ethnicity-option', 'clinical/repositories/patient-demographics', 'clinical/models/sub-demographic-option', 'clinical/serializers/sub-demographic-option'], function (_qunit, _emberCliMirage, _store, _raceOption, _ethnicityOption, _raceOption2, _ethnicityOption2, _raceOption3, _ethnicityOption3, _patientDemographics, _subDemographicOption, _subDemographicOption2) {\n    'use strict';\n\n    let env, store;\n\n    (0, _qunit.module)('Unit - Core - Clinical | SIN | Repository - Patient Demographics', {\n        beforeEach() {\n            env = (0, _store.default)({\n                adapters: {\n                    'race-option': _raceOption2.default,\n                    'ethnicity-option': _ethnicityOption2.default\n                },\n                serializers: {\n                    'race-option': _raceOption3.default,\n                    'ethnicity-option': _ethnicityOption3.default,\n                    'sub-demographic-option': _subDemographicOption2.default\n                },\n                models: {\n                    'race-option': _raceOption.default,\n                    'ethnicity-option': _ethnicityOption.default,\n                    'sub-demographic-option': _subDemographicOption.default\n                }\n            });\n            store = env.store;\n            this.server = (0, _emberCliMirage.startMirage)();\n        },\n        afterEach() {\n            this.server.shutdown();\n            store = null;\n        }\n    });\n\n    (0, _qunit.test)('findPatientEthnicityOptions returns proper results', function (assert) {\n        const done = assert.async();\n        let patientDemographicEthnicityOptionsCalled = false;\n\n        server.get('/PatientEndpoint/api/v2/patients/ethnicityOptions', function ({ db }) {\n            patientDemographicEthnicityOptionsCalled = true;\n            return db.ethnicityOptions;\n        });\n\n        _patientDemographics.default.findPatientEthnicityOptions(store).then(ethnicityOptions => {\n            const option = ethnicityOptions.toArray()[1];\n            const subEthnicityOptions = option.get('subOptions');\n            const subEthnicityOption = subEthnicityOptions.get('firstObject');\n\n            assert.ok(patientDemographicEthnicityOptionsCalled, 'The ethnicity options endpoint was called.');\n            assert.equal(option.get('optionGuid'), 'd6a37b7c-c763-4695-90e7-097cdb8c2ec7', 'The first ethnicityOption optionGuid was serialized correctly.');\n            assert.equal(option.get('description'), 'Hispanic or Latino', 'The first ethnicityOption description was serialized correctly.');\n\n            assert.equal(subEthnicityOptions.get('length'), 2, 'The subEthnicity options length is correct.');\n            assert.equal(subEthnicityOption.get('optionGuid'), '5cdf014a-dfef-4193-a1c9-1e6355146599', 'The subEthnicityOption optionGuid was serialized correctly.');\n            assert.equal(subEthnicityOption.get('description'), 'Spaniard', 'The subEthnicityOption description was serialized correctly.');\n\n            done();\n        });\n    });\n\n    (0, _qunit.test)('findPatientRaceOptions returns proper results', function (assert) {\n        const done = assert.async();\n        let patientDemographicRaceOptionsCalled = false;\n\n        server.get('/PatientEndpoint/api/v2/patients/raceOptions', function ({ db }) {\n            patientDemographicRaceOptionsCalled = true;\n            return db.raceOptions;\n        });\n\n        _patientDemographics.default.findPatientRaceOptions(store).then(raceOptions => {\n            const option = raceOptions.toArray()[1];\n            const subRaceOptions = option.get('subOptions');\n            const subRaceOption = subRaceOptions.get('firstObject');\n\n            assert.ok(patientDemographicRaceOptionsCalled, 'The race options endpoint was called.');\n            assert.equal(option.get('optionGuid'), '9f94fa9e-18f5-4ba7-90d4-18ffb0d918a4', 'The first raceOption optionGuid was serialized correctly.');\n            assert.equal(option.get('description'), 'American Indian or Alaska Native', 'The first raceOption description was serialized correctly.');\n\n            assert.equal(subRaceOptions.get('length'), 2, 'The subRace options length is correct.');\n            assert.equal(subRaceOption.get('optionGuid'), 'a4a15b58-dbbc-485d-9f59-598ef6661917', 'The subRace optionGuid was serialized correctly.');\n            assert.equal(subRaceOption.get('description'), 'American Indian', 'The subRaceOption description was serialized correctly.');\n\n            done();\n        });\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/repositories/patients-test', ['qunit', 'sinon', 'clinical/repositories/patients', 'boot/util/pf-server'], function (_qunit, _sinon, _patients, _pfServer) {\n    'use strict';\n\n    function fail(assert, error) {\n        assert.ok(false, error);\n        throw error;\n    }\n\n    (0, _qunit.module)('Unit - Core - Clinical | Repository - patients', {\n        beforeEach: function () {\n            _sinon.default.stub(_pfServer.default, 'promise').returns(Ember.RSVP.resolve({ diagnoses: [], medications: [] }));\n        },\n        afterEach: function () {\n            _patients.default.loadClinicalData.expire('patientGuid');\n            _pfServer.default.promise.restore();\n        }\n    });\n\n    (0, _qunit.test)('loadClinicalData caches data', function (assert) {\n        let done = assert.async();\n        assert.equal(_pfServer.default.promise.calledOnce, false);\n        _patients.default.loadClinicalData('patientGuid').then(function () {\n            assert.ok(_pfServer.default.promise.calledOnce);\n\n            return _patients.default.loadClinicalData('patientGuid').then(function () {\n                assert.ok(_pfServer.default.promise.calledOnce);\n\n                return _patients.default.loadClinicalData('patientGuid', { forceReload: true }).then(function () {\n                    assert.ok(_pfServer.default.promise.calledTwice);\n\n                    return _patients.default.loadClinicalData('patientGuid').then(function () {\n                        assert.ok(_pfServer.default.promise.calledTwice);\n\n                        // Different parameters haver their own cache\n                        return _patients.default.loadClinicalData('differentPatientGuid').then(function () {\n                            assert.ok(_pfServer.default.promise.calledThrice);\n                            _patients.default.loadClinicalData('differentPatientGuid').then(function () {\n                                assert.ok(_pfServer.default.promise.calledThrice);\n\n                                _patients.default.loadClinicalData.expire('patientGuid');\n                                _patients.default.loadClinicalData('patientGuid');\n                                assert.equal(_pfServer.default.promise.callCount, 4);\n                            });\n                        });\n                    });\n                });\n            });\n        }).catch(fail).finally(done);\n    });\n\n    (0, _qunit.test)('loadClinicalData if the promise fails, it should retry if we call loadClinicalData again', function (assert) {\n        let done = assert.async();\n\n        _pfServer.default.promise.returns(Ember.RSVP.reject('rejected by sinon'));\n        _patients.default.loadClinicalData('patientGuid').catch(() => true).finally(function () {\n            assert.ok(_pfServer.default.promise.calledOnce);\n            var fakedData = { diagnoses: [], medications: [] };\n            _pfServer.default.promise.returns(Ember.RSVP.resolve(fakedData));\n            return _patients.default.loadClinicalData('patientGuid').then(function (returnedData) {\n                var diagnosesCount = Ember.get(returnedData, 'diagnoses.length'),\n                    medicationsCount = Ember.get(returnedData, 'medications.length');\n                assert.ok(_pfServer.default.promise.calledTwice);\n                assert.equal(diagnosesCount, 0);\n                assert.equal(medicationsCount, 0);\n            }).catch(error => fail(assert, error)).finally(done);\n        });\n    });\n\n    (0, _qunit.test)('loadClinicalData forceReload should update the original arrays and return the same instance', function (assert) {\n        let done = assert.async();\n\n        _patients.default.loadClinicalData('patientGuid').then(function (data) {\n            return _patients.default.loadClinicalData('patientGuid', { forceReload: true }).then(function (newData) {\n                assert.ok(data.diagnoses === newData.diagnoses);\n                assert.ok(data.medications === newData.medications);\n            });\n        }).catch(error => fail(assert, error)).finally(done);\n    });\n\n    (0, _qunit.test)('expiring something thats not cached shouldnt crash', function (assert) {\n        assert.expect(0);\n        _patients.default.loadClinicalData.expire('fakePatientGuidThatDoesntExist');\n    });\n\n    (0, _qunit.test)('getClinicalData returns what we have in the cache if anything', function (assert) {\n        let done = assert.async();\n        _patients.default.getClinicalData('patientGuid').then(function (firstAttempt) {\n            assert.equal(_pfServer.default.promise.callCount, 0);\n\n            return _patients.default.loadClinicalData('patientGuid').then(function (loadResult) {\n                assert.equal(_pfServer.default.promise.callCount, 1);\n                return _patients.default.getClinicalData('patientGuid').then(function (getResult) {\n                    assert.equal(_pfServer.default.promise.callCount, 1);\n                    assert.ok(loadResult === getResult);\n                    assert.ok(firstAttempt.diagnoses === loadResult.diagnoses);\n                    assert.ok(firstAttempt.medications === loadResult.medications);\n                });\n            });\n        }).catch(error => fail(assert, error)).finally(done);\n    });\n\n    (0, _qunit.test)('parallel calls to loadClinicalData should be coalesced as a single call', function (assert) {\n        let done = assert.async(),\n            promises = [_patients.default.loadClinicalData('patientGuid'), _patients.default.loadClinicalData('patientGuid')];\n        return Ember.RSVP.all(promises).then(function () {\n            assert.equal(_pfServer.default.promise.callCount, 1);\n        }).catch(error => fail(assert, error)).finally(done);\n    });\n\n    (0, _qunit.test)('parallel failed calls to loadClinicalData should not leave a failed promise in the cache', function (assert) {\n        let done = assert.async();\n        _pfServer.default.promise.returns(Ember.RSVP.reject('rejected by sinon'));\n        var promises = [_patients.default.loadClinicalData('patientGuid'), _patients.default.loadClinicalData('patientGuid')];\n        return Ember.RSVP.all(promises).catch(function () {\n            assert.equal(_pfServer.default.promise.callCount, 1);\n            var fakedData = { diagnoses: [], medications: [] };\n            _pfServer.default.promise.returns(Ember.RSVP.resolve(fakedData));\n            return _patients.default.loadClinicalData('patientGuid').then(function () {\n                assert.equal(_pfServer.default.promise.callCount, 2);\n                assert.ok('The second call succeeded instead of re-using the failed promise');\n            });\n        }).catch(error => fail(assert, error)).finally(done);\n    });\n\n    (0, _qunit.test)('parallel failed calls to loadClinicalData should not leave a failed promise in the cache and won\\'t be used by getClinicalData', function (assert) {\n        let done = assert.async();\n        _pfServer.default.promise.returns(Ember.RSVP.reject('rejected by sinon'));\n        var promises = [_patients.default.loadClinicalData('patientGuid'), _patients.default.loadClinicalData('patientGuid')];\n        return Ember.RSVP.all(promises).catch(function () {\n            assert.equal(_pfServer.default.promise.callCount, 1);\n            return _patients.default.getClinicalData('patientGuid').then(function () {\n                assert.equal(_pfServer.default.promise.callCount, 1);\n                assert.ok('The second call succeeded instead of re-using the failed promise');\n            });\n        }).catch(error => fail(assert, error)).finally(done);\n    });\n\n    (0, _qunit.test)('getClinicalData returns the same instance if called multiple times', function (assert) {\n        let done = assert.async();\n        _patients.default.getClinicalData('patientGuid').then(function (firstResult) {\n            assert.equal(_pfServer.default.promise.callCount, 0);\n\n            return _patients.default.getClinicalData('patientGuid').then(function (secondResult) {\n                assert.equal(_pfServer.default.promise.callCount, 0);\n                assert.ok(firstResult === secondResult);\n            });\n        }).catch(error => fail(assert, error)).finally(done);\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon-test-support/unit/utils/patient-search-test', ['qunit', 'clinical/util/patient-search'], function (_qunit, _patientSearch) {\n    'use strict';\n\n    (0, _qunit.module)('Unit - Core - Clinical | Utils - PatientSearch');\n\n    (0, _qunit.test)('Single word is sent as firstOrLastName', assert => {\n        const result = _patientSearch.default.formatNameParameters('test');\n        assert.equal(result.firstOrLastName, 'test');\n        assert.equal(Object.keys(result).length, 1);\n    });\n\n    (0, _qunit.test)('Leading and trailing spaces are trimmed for single-word searches', assert => {\n        const result = _patientSearch.default.formatNameParameters(' test  ');\n        assert.equal(result.firstOrLastName, 'test');\n        assert.equal(Object.keys(result).length, 1);\n    });\n\n    (0, _qunit.test)('Two words separated by space are sent with first and last name', assert => {\n        const result = _patientSearch.default.formatNameParameters('first last');\n        assert.equal(result.firstName, 'first');\n        assert.equal(result.lastName, 'last');\n        assert.equal(Object.keys(result).length, 2);\n    });\n\n    (0, _qunit.test)('Leading and trailing spaces are trimmed for multi-word searches', assert => {\n        const result = _patientSearch.default.formatNameParameters(' first  last ');\n        assert.equal(result.firstName, 'first');\n        assert.equal(result.lastName, 'last');\n        assert.equal(Object.keys(result).length, 2);\n    });\n\n    (0, _qunit.test)('All remaining text after first space is sent as last name', assert => {\n        const result = _patientSearch.default.formatNameParameters('first complex last that is long');\n        assert.equal(result.firstName, 'first');\n        assert.equal(result.lastName, 'complex last that is long');\n        assert.equal(Object.keys(result).length, 2);\n    });\n\n    (0, _qunit.test)('Searches containing comma are treated as lastName, firstName', assert => {\n        const result = _patientSearch.default.formatNameParameters('last, first');\n        assert.equal(result.firstName, 'first');\n        assert.equal(result.lastName, 'last');\n        assert.equal(Object.keys(result).length, 2);\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/advanced-directive', ['exports', 'boot/config', 'common/adapters/legacy'], function (exports, _config, _legacy) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _legacy.default.extend({\n        host: _config.default.defaultHost,\n        namespace: _config.default.chartingNamespace_v2,\n        pathForType(type) {\n            return Ember.String.capitalize(Ember.String.camelize(type));\n        },\n        query(store, type, query) {\n            return this.ajax(this.buildURL(type.modelName, query.patientPracticeGuid), 'GET');\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/allergy-reaction', ['exports', 'boot/config', 'common/adapters/static'], function (exports, _config, _static) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _static.default.extend({\n        buildURL() {\n            return `${_config.default.clinicalBaseURL_v3}allergyreactions`;\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/allergy-substance', ['exports', 'boot/config', 'common/adapters/static'], function (exports, _config, _static) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _static.default.extend({\n        buildURL() {\n            return `${_config.default.clinicalBaseURL_v3}allergysubstances`;\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/appointment', ['exports', 'boot/config', 'common/adapters/legacy'], function (exports, _config, _legacy) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _legacy.default.extend({\n        buildURL() {\n            return _config.default.scheduleURL;\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/behavioral-health', ['exports', 'boot/config', 'ember-data/adapters/rest'], function (exports, _config, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        host: _config.default.defaultHost,\n\n        buildURL(modelName, patientPracticeGuid) {\n            return `${_config.default.clinicalBaseURL_v3}patients/${patientPracticeGuid}/behavioralhealth`;\n        },\n        findRecord(store, type, id) {\n            return this.ajax(this.buildURL(type.modelName, id), 'GET');\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/care-team-member', ['exports', 'boot/config', 'common/adapters/legacy'], function (exports, _config, _legacy) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _legacy.default.extend({\n        host: _config.default.defaultHost,\n        namespace: _config.default.patientNamespace,\n        pathForType() {\n            return 'careTeam/provider';\n        },\n        createRecord(store, type, snapshot) {\n            return this.updateRecord(store, type, snapshot);\n        },\n        updateRecord(store, type, snapshot) {\n            const serializer = store.serializerFor(type.modelName);\n            const data = serializer.serialize(snapshot);\n            const options = { data };\n            const patientPracticeGuid = snapshot.attr('patientPracticeGuid');\n            const url = this.get('host') + '/' + this.get('namespace') + '/patient/' + patientPracticeGuid + '/' + this.pathForType(type);\n            return this.ajax(url, 'PUT', options).then(function (members) {\n                // TODO: consider dry'ing with care-team's adapter\n                return Ember.RSVP.hash({\n                    contacts: store.findAll('directory-contact'),\n                    practiceProviders: store.findAll('provider-profile'),\n                    specialties: store.findAll('specialty'),\n                    patientPracticeGuid,\n                    members\n                });\n            });\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/care-team', ['exports', 'common/adapters/infrequent', 'boot/config'], function (exports, _infrequent, _config) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _infrequent.default.extend({\n        host: _config.default.defaultHost,\n        namespace: _config.default.patientNamespace,\n        pathForType() {\n            return 'careTeam/members';\n        },\n        buildURL(type, patientPracticeGuid) {\n            (true && !(patientPracticeGuid) && Ember.assert('We need an id (patientPracticeGuid) to query careTeam', patientPracticeGuid));\n\n            return this.get('host') + '/' + this.get('namespace') + '/patient/' + patientPracticeGuid + '/' + this.pathForType(type);\n        },\n        findRecord(store, type, patientPracticeGuid) {\n            return Ember.RSVP.hash({\n                contacts: store.findAll('directory-contact'),\n                practiceProviders: store.findAll('provider-profile'),\n                members: this._super(store, type, patientPracticeGuid),\n                specialties: store.findAll('specialty'),\n                patientPracticeGuid\n            });\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/ccda-document-type', ['exports', 'boot/config', 'common/adapters/static'], function (exports, _config, _static) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _static.default.extend({\n        buildURL() {\n            const baseUrl = _config.default.defaultHost + _config.default.clinicalDocumentBaseURL_v2;\n\n            return `${baseUrl}/ccda/documentTypes/`;\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/ccda-template-component', ['exports', 'boot/config', 'common/adapters/legacy'], function (exports, _config, _legacy) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    const cachedResponses = {};\n    exports.default = _legacy.default.extend({\n        query(store, type, query) {\n            const { documentType } = query;\n            if (!cachedResponses[documentType]) {\n                const baseUrl = _config.default.defaultHost + _config.default.clinicalDocumentBaseURL_v2;\n                const url = `${baseUrl}/ccda/templateComponents?documentType=${documentType}`;\n\n                return this.ajax(url, 'GET').then(docTypes => {\n                    cachedResponses[documentType] = Ember.copy(docTypes, true);\n                    return docTypes;\n                });\n            }\n            return Ember.RSVP.resolve(Ember.copy(cachedResponses[documentType], true));\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/clinical-document', ['exports', 'boot/config', 'common/adapters/legacy'], function (exports, _config, _legacy) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _legacy.default.extend({\n        buildURL(type, id) {\n            return `${_config.default.clinicalDocumentBaseURL}/ccda/patient/${id}/list?pageIndex=0&pageSize=100`;\n        },\n        query(store, type, query) {\n            var url = this.buildURL(type.modelName, query.patientPracticeGuid);\n            return this.ajax(url, 'GET');\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/ethnicity-option', ['exports', 'boot/config', 'common/adapters/legacy'], function (exports, _config, _legacy) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _legacy.default.extend({\n        buildURL() {\n            return _config.default.addPatientURLV2 + '/ethnicityOptions';\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/favorite-diagnosis', ['exports', 'boot/config', 'boot/util/pf-server', 'boot/util/guid', 'common/adapters/static', 'boot/models/session'], function (exports, _config, _pfServer, _guid, _static, _session) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _static.default.extend({\n        buildURL() {\n            return `${_config.default.practiceBaseURL}PreferenceDoc/User/${_session.default.get('userGUID')}/favoriteDiagnoses`;\n        },\n\n        generateIdForRecord() {\n            return _guid.default.generateGuid();\n        },\n\n        createRecord(store, type, snapshot) {\n            snapshot.record.set('sortIndex', store.peekAll(type.modelName).get('length'));\n\n            this._doUpdate(store);\n\n            return snapshot;\n        },\n\n        updateRecord(store, type, record) {\n            Ember.run.scheduleOnce('actions', this, '_doUpdate', store);\n\n            return record;\n        },\n\n        deleteRecord(store, type, record) {\n            store.peekAll('favoriteDiagnosis').rejectBy('id', record.id).sortBy('sortIndex').forEach((dx, index) => {\n                dx.set('sortIndex', index + 1);\n            });\n\n            return this._doUpdate(store);\n        },\n\n        _doUpdate(store) {\n            let favoriteDiagnoses = store.peekAll('favoriteDiagnosis').rejectBy('currentState.isDeleted').map(diagnosis => ({\n                id: diagnosis.get('id'),\n                name: diagnosis.get('name'),\n                code: diagnosis.get('code'),\n                sortIndex: diagnosis.get('sortIndex'),\n                diagnosisCodes: diagnosis.get('diagnosisCodes').map(diagnosisCode => ({\n                    code: diagnosisCode.code,\n                    codeSystem: diagnosisCode.codeSystem,\n                    description: diagnosisCode.description\n                }))\n            }));\n            return _pfServer.default.promise(this.buildURL(), 'PUT', { 'favoriteDiagnoses': favoriteDiagnoses });\n        },\n\n        findAll(store, type, sinceToken) {\n            return this._super(store, type, sinceToken).then(data => {\n                if (!data.favoriteDiagnoses) {\n                    return { 'favoriteDiagnoses': [] };\n                }\n                return data;\n            });\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/immunization-drug', ['exports', 'boot/config', 'common/adapters/legacy'], function (exports, _config, _legacy) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _legacy.default.extend({\n        buildURL(modelName, id) {\n            return `${_config.default.defaultHost}/${_config.default.immunizationNamespace}/vaccines/search/details/vaccineType/${id}`;\n        },\n        query(store, type, query) {\n            return this.ajax(this.buildURL(type.modelName, query.vaccineTypeGuid), 'GET');\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/immunization-registry-connection', ['exports', 'boot/config', 'common/adapters/static'], function (exports, _config, _static) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _static.default.extend({\n        hasPerformedFindAll: false,\n\n        buildURL(type, id) {\n            let url = `${_config.default.defaultHost}/${_config.default.immunizationNamespace}/immunizationRegistryConnection`;\n\n            if (id) {\n                url += `/${id}`;\n            }\n\n            return url;\n        },\n\n        findAll() {\n            this.set('hasPerformedFindAll', true);\n\n            return this._super(...arguments).catch(() => {\n                this.set('hasPerformedFindAll', false);\n            });\n        },\n\n        createRecord(store, type, record) {\n            const data = store.serializerFor(type.modelName).serialize(record);\n\n            return this.ajax(this.buildURL(type.modelName), 'POST', { data });\n        },\n\n        updateRecord(store, type, snapshot) {\n            const data = store.serializerFor(type.modelName).serialize(snapshot, { includeId: true });\n            const url = this.buildURL(type.modelName, snapshot.id) + '/draft';\n\n            return this.ajax(url, 'PUT', { data });\n        },\n\n        shouldReloadAll(store, snapshotRecordArray) {\n            return !snapshotRecordArray.length && !this.get('hasPerformedFindAll');\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/immunization-registry-option', ['exports', 'boot/config', 'common/adapters/infrequent'], function (exports, _config, _infrequent) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _infrequent.default.extend({\n        buildURL() {\n            return `${_config.default.patientBaseURLV3}/patientImmunizationRegistryOptions`;\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/immunization-registry-property', ['exports', 'boot/config', 'common/adapters/legacy'], function (exports, _config, _legacy) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _legacy.default.extend({\n        query(store, type, query) {\n            const id = query.immunizationRegistryGuid;\n            const url = `${_config.default.defaultHost}/${_config.default.immunizationNamespace}/immunizationRegistry/${id}/properties`;\n\n            return this.ajax(url, 'GET');\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/immunization-registry-result', ['exports', 'boot/config', 'common/adapters/legacy'], function (exports, _config, _legacy) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _legacy.default.extend({\n        buildURL(modelName, id, snapshot, requestType, query) {\n            return `${_config.default.defaultHost}/${_config.default.immunizationV2Namespace}/patients/${query.patientPracticeGuid}/query`;\n        },\n        queryRecord(store, type, query) {\n            const queryId = `${query.registryName}|${moment.utc()}`;\n            const isAdvanced = query.isAdvancedVisible;\n            const url = this.buildURL(type.modelName, queryId, null, null, query);\n            const data = {\n                facilityGuid: query.facilityGuid,\n                immunizationRegistryGuid: query.registryGuid,\n                patientFilters: query.patientFilters.serialize(isAdvanced),\n                registryName: query.registryName\n            };\n            return this.ajax(url, 'POST', { data }).then(response => {\n                response.resultId = queryId;\n                response.patientFilters.id = queryId;\n                if (response.error) {\n                    const error = {\n                        error: response.error,\n                        errorMessage: response.errorMessage\n                    };\n                    throw error;\n                }\n                return response;\n            });\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/immunization-registry', ['exports', 'boot/config', 'common/adapters/static'], function (exports, _config, _static) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _static.default.extend({\n        host: _config.default.defaultHost,\n        namespace: _config.default.immunizationNamespace\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/immunization-transmission-status', ['exports', 'boot/config', 'common/adapters/legacy'], function (exports, _config, _legacy) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _legacy.default.extend({\n        buildURL(modelName, id) {\n            return `${_config.default.defaultHost}/${_config.default.immunizationV2Namespace}/patients/${id}/transmissionstatus`;\n        },\n        query(store, type, query) {\n            return this.ajax(this.buildURL(type.modelName, query.patientPracticeGuid), 'GET');\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/immunization', ['exports', 'boot/config', 'common/adapters/legacy'], function (exports, _config, _legacy) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _legacy.default.extend({\n        buildURL(type, id) {\n            return `${_config.default.defaultHost}/${_config.default.immunizationNamespace}/patients/${id}/immunizationHistory`;\n        },\n\n        query(store, type, query) {\n            return this.ajax(this.buildURL(type.modelName, query.patientPracticeGuid), 'GET');\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/patient-allergy', ['exports', 'boot/util/pf-server', 'boot/config', 'clinical/adapters/patient-practice-guid'], function (exports, _pfServer, _config, _patientPracticeGuid) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _patientPracticeGuid.default.extend({\n        noKnownCache: Ember.computed(() => ({})),\n        buildURL(modelName, id, snapshot, requestType, query) {\n            const patientPracticeGuid = requestType === 'query' ? query.patientPracticeGuid : snapshot.attr('patientPracticeGuid');\n            const baseUrl = `${_config.default.clinicalBaseURL_v3}patients/${patientPracticeGuid}/allergies`;\n            if (id) {\n                return `${baseUrl}/${id}`;\n            }\n            return baseUrl;\n        },\n        query(store, type, query) {\n            return this._super(store, type, query).then(data => {\n                this.set(`noKnownCache.${query.patientPracticeGuid}`, data.noKnownAllergies);\n                return data;\n            });\n        },\n        getCachedData(store, type, query) {\n            const data = this._super(store, type, query);\n            const result = Ember.ArrayProxy.create({\n                content: data\n            });\n            result.set('meta', {\n                noKnownAllergies: this.get(`noKnownCache.${query.patientPracticeGuid}`)\n            });\n            return result;\n        },\n        saveNoKnownValue(patientPracticeGuid, value) {\n            const url = `${_config.default.clinicalBaseURL}PatientConditions/${patientPracticeGuid}/NoKnownAllergies`;\n            const methodType = value ? 'POST' : 'DELETE';\n            return _pfServer.default.promise(url, methodType).then(() => this.set(`noKnownCache.${patientPracticeGuid}`, value));\n        },\n        clearNoKnownValue(patientPracticeGuid) {\n            this.set(`noKnownCache.${patientPracticeGuid}`, false);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/patient-goal', ['exports', 'boot/config', 'clinical/adapters/patient-practice-guid'], function (exports, _config, _patientPracticeGuid) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _patientPracticeGuid.default.extend({\n        buildURL(modelName, id, snapshot, requestType, query) {\n            const patientPracticeGuid = requestType === 'query' ? query.patientPracticeGuid : snapshot.attr('patientPracticeGuid');\n            const baseUrl = `${_config.default.patientHeaderURL}${patientPracticeGuid}/patientGoals`;\n            if (id) {\n                return `${baseUrl}/${id}`;\n            }\n            return baseUrl;\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/patient-health-concern', ['exports', 'boot/util/pf-server', 'boot/config', 'clinical/adapters/patient-practice-guid'], function (exports, _pfServer, _config, _patientPracticeGuid) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _patientPracticeGuid.default.extend({\n        noKnownCache: Ember.computed(function () {\n            return {};\n        }),\n        buildURL(modelName, id, snapshot, requestType, query) {\n            const patientPracticeGuid = requestType === 'query' ? query.patientPracticeGuid : snapshot.attr('patientPracticeGuid');\n            const baseUrl = `${_config.default.patientHeaderURL}${patientPracticeGuid}/patientHealthConcerns`;\n            if (id) {\n                return `${baseUrl}/${id}`;\n            }\n            return baseUrl;\n        },\n        query(store, type, query) {\n            return this._super(store, type, query).then(data => {\n                this.set(`noKnownCache.${query.patientPracticeGuid}`, data.meta && data.meta.noKnownHealthConcerns);\n                return data;\n            });\n        },\n        getCachedData(store, type, query) {\n            const data = this._super(store, type, query);\n            const result = Ember.ArrayProxy.create({\n                content: data\n            });\n            result.set('meta', {\n                noKnownHealthConcerns: this.get(`noKnownCache.${query.patientPracticeGuid}`)\n            });\n            return result;\n        },\n        removeHealthConcernByReferenceGuid(store, healthConcernReferenceGuid, healthConcerns) {\n            const healthConcern = store.peekAll('patient-health-concern').findBy('healthConcernReferenceGuid', healthConcernReferenceGuid);\n            if (healthConcern) {\n                store.unloadRecord(healthConcern);\n                if (healthConcerns) {\n                    healthConcerns.removeObject(healthConcern);\n                }\n            }\n        },\n        saveNoKnownValue(patientPracticeGuid, value) {\n            const url = `${_config.default.clinicalBaseURL}PatientConditions/${patientPracticeGuid}/NoKnownHealthConcerns`;\n            const methodType = value ? 'POST' : 'DELETE';\n            return _pfServer.default.promise(url, methodType).then(() => this.set(`noKnownCache.${patientPracticeGuid}`, value));\n        },\n        clearNoKnownValue(patientPracticeGuid) {\n            this.set(`noKnownCache.${patientPracticeGuid}`, false);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/patient-practice-guid', ['exports', 'ember-data/adapters/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        cachedPatients: Ember.computed(function () {\n            return {};\n        }),\n        query(store, type, query) {\n            const { patientPracticeGuid } = query;\n            const cacheKey = `cachedPatients.${patientPracticeGuid}`;\n            const url = this.buildURL(type.modelName, null, null, 'query', query);\n            this.set(cacheKey, false);\n            return this.ajax(url, 'GET').then(data => {\n                this.set(cacheKey, true);\n                if (query.forceReload) {\n                    this.getCachedData(store, type, query).forEach(record => store.unloadRecord(record));\n                }\n                return data;\n            });\n        },\n        getCachedData(store, type, query) {\n            return store.peekAll(type.modelName).filterBy('patientPracticeGuid', query.patientPracticeGuid);\n        },\n        needsRefresh(store, type, query) {\n            if (query) {\n                return query.forceReload || !this.get(`cachedPatients.${query.patientPracticeGuid}`);\n            }\n            return true;\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/patient-summary-sia', ['exports', 'boot/config', 'ember-data/adapters/rest'], function (exports, _config, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        host: _config.default.defaultHost,\n        namespace: _config.default.chartingNamespace_v3,\n\n        buildURL(modelName, query) {\n            const patientPracticeGuid = query.patientPracticeGuid;\n            const pageNumber = query.pageNumber;\n            let url = `${_config.default.defaultHost}/ChartingEndpoint/api/v3/patients/${patientPracticeGuid}/screeningsinterventionsandassessments/`;\n            if (Ember.isPresent(pageNumber)) {\n                url += `?pageNumber=${pageNumber}&pageSize=7`;\n            }\n            return url;\n        },\n        query(store, type, query) {\n            return this.ajax(this.buildURL(type.modelName, query), 'GET').then(response => {\n                response.query = query;\n                return response;\n            });\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/patient-summary', ['exports', 'boot/config', 'common/adapters/legacy'], function (exports, _config, _legacy) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _legacy.default.extend({\n        buildURL(type, id) {\n            return `${_config.default.patientInfoURL}${id}/patientRibbonInfo`;\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/personal-medical-history', ['exports', 'boot/config', 'common/adapters/legacy'], function (exports, _config, _legacy) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _legacy.default.extend({\n        namespace: _config.default.clinicalNamespace_v2,\n        host: _config.default.defaultHost,\n        pathForType(type) {\n            return type.classify();\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/race-option', ['exports', 'boot/config', 'common/adapters/legacy'], function (exports, _config, _legacy) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _legacy.default.extend({\n        buildURL() {\n            return _config.default.addPatientURLV2 + '/raceOptions';\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/recent-patient', ['exports', 'boot/config', 'common/adapters/legacy'], function (exports, _config, _legacy) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _legacy.default.extend({\n        buildURL(type, id) {\n            var url = _config.default.chartingURL + 'Access';\n            if (id) {\n                url += '/Provider/' + id;\n            }\n            return url + '/Recent';\n        },\n        query(store, type, query) {\n            var url = this.buildURL(type.modelName, query.providerGuid);\n            delete query.providerGuid;\n            return this.ajax(url, 'GET', { data: query });\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/relationshiptype', ['exports', 'boot/config', 'common/adapters/legacy'], function (exports, _config, _legacy) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _legacy.default.extend({\n        query(store, type, query) {\n            const url = this.buildURL(type.modelName, query.id);\n            return this.ajax(url, 'GET');\n        },\n        buildURL(type, id) {\n            return `${_config.default.clinicalBaseURL}FamilyHealthHistory/${id}/relationships`;\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/smoking-status-type', ['exports', 'boot/config', 'common/adapters/legacy'], function (exports, _config, _legacy) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _legacy.default.extend({\n        buildURL() {\n            return `${_config.default.clinicalBaseURL_v3}smokingstatuses?version=3`;\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/smoking-status', ['exports', 'boot/config', 'common/adapters/legacy'], function (exports, _config, _legacy) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _legacy.default.extend({\n        buildURL(modelName, id, snapshot, requestType, query) {\n            const patientPracticeGuid = snapshot ? snapshot.attr('patientPracticeGuid') : query.patientPracticeGuid;\n            let url = `${_config.default.clinicalBaseURL_v2}patients/${patientPracticeGuid}/smokingstatuses`;\n            if (id) {\n                url = `${url}/${id}`;\n            }\n            // version is userd in createRecord, updateRecord, deleteRecord\n            if (snapshot && snapshot.adapterOptions && snapshot.adapterOptions.version) {\n                url = `${url}?version=${snapshot.adapterOptions.version}`;\n            }\n            return url;\n        },\n        query(store, type, query) {\n            return this.ajax(this.buildURL(type.modelName, null, null, 'query', query), 'GET');\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/social-health', ['exports', 'boot/config', 'ember-data/adapters/rest'], function (exports, _config, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        host: _config.default.defaultHost,\n\n        buildURL(modelName, id, snapshot, requestType, query) {\n            if (requestType === 'deleteRecord') {\n                let url = `${_config.default.patientBaseURLV3}/patients/${id}/demographics/${query.fieldName}`;\n\n                if (query.optionGuid) {\n                    url += `/${query.optionGuid}`;\n                }\n\n                return url;\n            }\n            return `${_config.default.patientBaseURLV3}/patients/${id}/socialhealth`;\n        },\n\n        findRecord(store, type, id) {\n            const url = this.buildURL(type.modelName, id, null, 'findRecord');\n\n            return this.ajax(url, 'GET').then(payload => {\n                payload.id = id;\n                return payload;\n            });\n        },\n\n        updateRecord(store, type, snapshot) {\n            const fieldName = Ember.get(snapshot, 'adapterOptions.fieldName');\n            const isDelete = Ember.get(snapshot, 'adapterOptions.isDelete');\n            const optionGuid = Ember.get(snapshot, 'adapterOptions.optionGuid');\n            const data = snapshot.serialize();\n\n            // The social health endpoint doesn't support a PUT, so have to save through other endpoints\n            return new Ember.RSVP.Promise((resolve, reject) => {\n                if (fieldName === 'socialHistory') {\n                    return this.updatePersonalMedicalHistoryRecord(store, snapshot, data, resolve, reject);\n                } else if (isDelete) {\n                    return this.deleteDemographicRecord(snapshot, data, fieldName, optionGuid, resolve, reject);\n                } else {\n                    return this.updateDemographicRecord(fieldName, store, snapshot, data, resolve, reject);\n                }\n            });\n        },\n\n        updatePersonalMedicalHistoryRecord(store, snapshot, data, resolve, reject) {\n            return store.findRecord('personal-medical-history', snapshot.id).then(pmh => {\n                pmh.set('socialHistory', data.socialHistory);\n                return pmh.save().then(() => {\n                    return resolve(data);\n                }, e => {\n                    throw reject(e);\n                });\n            });\n        },\n\n        updateDemographicRecord(fieldName, store, snapshot, data, resolve, reject) {\n            return store.findRecord('social-history', snapshot.id).then(socialHistory => {\n                socialHistory.setProperties({\n                    education: data.education,\n                    financialResourceStatus: data.financialResourceStatus,\n                    genderIdentity: data.genderIdentity,\n                    sexualOrientation: data.sexualOrientation\n                });\n\n                return socialHistory.save({ adapterOptions: { fieldName } }).then(() => {\n                    return resolve(data);\n                }, e => {\n                    throw reject(e);\n                });\n            });\n        },\n\n        deleteDemographicRecord(snapshot, data, fieldName, optionGuid, resolve, reject) {\n            const record = snapshot.belongsTo(fieldName).record;\n            const query = {\n                fieldName,\n                optionGuid\n            };\n            const url = this.buildURL(null, snapshot.id, null, 'deleteRecord', query);\n\n            record.clear();\n\n            return this.ajax(url, 'DELETE').then(() => {\n                return resolve(data);\n            }, e => {\n                throw reject(e);\n            });\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/social-history-option', ['exports', 'boot/config', 'common/adapters/infrequent'], function (exports, _config, _infrequent) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _infrequent.default.extend({\n        buildURL() {\n            return `${_config.default.patientBaseURLV3}/patients/demographicOptionLists?list=so&list=gi&list=risk`;\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/social-history', ['exports', 'boot/config', 'common/adapters/legacy', 'boot/util/pf-server'], function (exports, _config, _legacy, _pfServer) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _legacy.default.extend({\n        pathForType(type) {\n            return type.classify();\n        },\n        buildURL(modelName, patientPracticeGuid) {\n            return `${_config.default.defaultHost}/${_config.default.patientNamespaceV3}/patients/patientDemographic/${patientPracticeGuid}`;\n        },\n        buildDemographicURL(patientPracticeGuid, demographicName) {\n            return `${_config.default.defaultHost}/${_config.default.patientNamespaceV3}/patients/${demographicName}/${patientPracticeGuid}`;\n        },\n        findRecord(store, type, id) {\n            return this.ajax(this.buildURL(type.modelName, id), 'GET').then(payload => Ember.merge(payload, { patientPracticeGuid: id }));\n        },\n        updateRecord(store, type, snapshot) {\n            let data = store.serializerFor(type.modelName).serialize(snapshot, { includeId: true });\n            const patientPracticeGuid = snapshot.id;\n            const fieldName = Ember.get(snapshot, 'adapterOptions.fieldName');\n\n            if (fieldName) {\n                data = {\n                    [fieldName]: data[fieldName],\n                    'patientPracticeGuid': data['patientPracticeGuid']\n                };\n            }\n\n            return this.ajax(this.buildURL(type.modelName, patientPracticeGuid), 'PUT', { data }).then(payload => Ember.merge(payload, { patientPracticeGuid }));\n        },\n        createRecord(store, type, snapshot) {\n            const data = store.serializerFor(type.modelName).serialize(snapshot, { includeId: false });\n            const patientPracticeGuid = snapshot.id;\n\n            return this.ajax(this.buildURL(type.modelName, patientPracticeGuid), 'POST', { data }).then(payload => Ember.merge(payload, { patientPracticeGuid }));\n        },\n        deleteDemographic(record, demographicToDelete) {\n            const patientPracticeGuid = record.get('patientPracticeGuid');\n            // This needs to use pfServer for now since the API is crap and returns 200 with no content (should be 204). The .ajax call blows up in that scenario :(\n            return _pfServer.default.promise(this.buildDemographicURL(patientPracticeGuid, demographicToDelete), 'DELETE');\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/vaccination', ['exports', 'boot/config', 'common/adapters/legacy'], function (exports, _config, _legacy) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _legacy.default.extend({\n        buildURL(type, id) {\n            return _config.default.defaultHost + '/' + _config.default.immunizationNamespace + '/vaccinations/' + id;\n        },\n\n        createRecord(store, type, record) {\n            const data = store.serializerFor(type.modelName).serialize(record, { includeId: true });\n\n            delete data.vaccineType.manufacturers;\n            delete data.vaccineType.vaccineInventories;\n\n            return this.ajax(this.buildURL(type.modelName, '00000000-0000-0000-0000-000000000000'), 'POST', { data });\n        },\n\n        deleteRecord(store, type, snapshot) {\n            return this.ajax(this.buildURL(type, snapshot.id), 'DELETE').then(() => {\n                return;\n            });\n        },\n\n        updateRecord(store, type, snapshot) {\n            const data = store.serializerFor(type.modelName).serialize(snapshot, { includeId: true });\n            const { id } = snapshot;\n\n            if (snapshot.record.get('isDeleted') || snapshot.record.get('currentState.parentState.isDeleted')) {\n                return this.deleteRecord(store, type, snapshot);\n            }\n            delete data.vaccineType.manufacturers;\n            delete data.vaccineType.vaccineInventories;\n\n            return this.ajax(this.buildURL(type.modelName, id), 'PUT', { data });\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/vaccine-inventory', ['exports', 'boot/config', 'common/adapters/legacy'], function (exports, _config, _legacy) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _legacy.default.extend({\n        buildURL(type, id) {\n            if (id) {\n                return _config.default.defaultHost + '/' + _config.default.immunizationNamespace + '/vaccineInventories/' + id;\n            } else {\n                return _config.default.defaultHost + '/' + _config.default.immunizationNamespace + '/practiceVaccineInventories';\n            }\n        },\n\n        createRecord(store, type, snapshot) {\n            const data = store.serializerFor(type.modelName).serialize(snapshot, { includeId: true });\n\n            return this.ajax(this.buildURL(type.modelName, '00000000-0000-0000-0000-000000000000'), 'POST', { data });\n        },\n\n        updateRecord(store, type, snapshot) {\n            const data = store.serializerFor(type.modelName).serialize(snapshot, { includeId: true });\n            const { id } = snapshot;\n\n            return this.ajax(this.buildURL(type.modelName, id), 'PUT', { data: data });\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/vaccine-lookup-datum', ['exports', 'boot/config', 'common/adapters/static'], function (exports, _config, _static) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _static.default.extend({\n        buildURL() {\n            return `${_config.default.defaultHost}/${_config.default.immunizationNamespace}/vaccineLookupData`;\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/vaccine-lot-usage', ['exports', 'boot/config', 'common/adapters/legacy'], function (exports, _config, _legacy) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _legacy.default.extend({\n        query(store, type, query) {\n            var url = _config.default.defaultHost + '/' + _config.default.immunizationNamespace + '/vaccineInventoryLotUsage/' + query.vaccineInventoryGuid;\n\n            return this.ajax(url, 'GET');\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/vaccine-manufacturer', ['exports', 'boot/config', 'common/adapters/legacy'], function (exports, _config, _legacy) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _legacy.default.extend({\n        buildURL(modelName, id) {\n            return `${_config.default.defaultHost}/${_config.default.immunizationNamespace}/vaccines/search/details/vaccineType/${id}`;\n        },\n        query(store, type, query) {\n            return this.ajax(this.buildURL(type.modelName, query.vaccineTypeGuid), 'GET');\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/adapters/vaccine-type', ['exports', 'boot/config', 'common/adapters/legacy'], function (exports, _config, _legacy) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _legacy.default.extend({\n        buildURL(type, id, searchTypeCode) {\n            return `${_config.default.defaultHost}/${_config.default.immunizationNamespace}/vaccines/search/details/${searchTypeCode}/${id}`;\n        },\n\n        query(store, type, query) {\n            return this.ajax(this.buildURL(type.modelName, query.searchGuid, query.searchTypeCode), 'GET').then(response => {\n                // Ember data id conflict in 2 different queries caused data issues. This prevents id collision\n                if (query.obfuscateId) {\n                    response.vaccineType.modifiedVaccineTypeGuid = `obfuscated-${response.vaccineType.vaccineTypeGuid}`;\n                }\n                return response;\n            });\n        },\n\n        queryRecord(store, type, query) {\n            return this.ajax(this.buildURL(type.modelName, query.searchGuid, query.searchTypeCode), 'GET');\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/add-patient-photo', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        isVisible: false,\n        photoUrl: '',\n        photoExists: Ember.computed.bool('photoUrl'),\n        patientGuid: '',\n        isUploading: false,\n        uploadProgress: 0,\n        isUploadError: false,\n        errorMessage: '',\n\n        isOpening: Ember.observer('isVisible', function () {\n            $('img.photo-preview').unbind('error');\n\n            if (this.get('isVisible')) {\n                this.set('uploadProgress', 0);\n                this.set('isUploading', false);\n                this.set('isUploadError', false);\n            }\n        }),\n\n        uploadUrl: Ember.computed('patientGuid', function () {\n            return `${this.get('config.patientInfoURL')}${this.get('patientGuid')}/patientImage`;\n        }),\n\n        photoUrlAuthenticated: Ember.computed('photoUrl', function () {\n            let url = `${this.get('photoUrl')}&authCookie=${this.get('session.authCookie')}`;\n            $('.photo-preview').show();\n            $('.link-change-photo').show();\n            if (url.indexOf('?') < 0 && url.indexOf('&') > -1) {\n                url = url.replace('&', '?');\n            }\n            return url;\n        }),\n\n        completeUpload(xhr) {\n            const response = xhr ? JSON.parse(xhr.response || xhr.responseText) : null;\n\n            this.set('isUploading', false);\n            if (xhr.status === 200 && response && response.status === 'OK') {\n                Ember.run.later(this, function () {\n                    const store = this.get('store'),\n                          patientPracticeGuid = this.get('patientGuid');\n                    ['patient-summary', 'patient-search', 'recent-patient'].forEach(type => {\n                        let model = store.peekRecord(type, patientPracticeGuid);\n                        if (model) {\n                            model.set('hasPatientImage', true);\n                        }\n                    });\n\n                    this.set('photoUrl', this.get('uploadUrl') + '?ts=' + new Date().getTime());\n                }, 800);\n                return;\n            }\n            this.set('isUploadError', true);\n            this.set('errorMessage', 'There was an error uploading your file');\n            if (response && response.errorMessage) {\n                this.set('errorMessage', response.errorMessage);\n            }\n        },\n\n        actions: {\n            done() {\n                this.set('isVisible', false);\n            },\n\n            onUpload(e) {\n                const xhr = e.XMLHttpRequest;\n                this.set('isUploading', true);\n                this.set('isUploadError', false);\n                this.set('uploadProgress', 0);\n\n                xhr.addEventListener('readystatechange', () => {\n                    switch (xhr.readyState) {\n                        case 1:\n                            try {\n                                xhr.setRequestHeader('Authorization', this.get('session.sessionGUID'));\n                            } catch (err) {} //IE 11 actually sets the Authorization header but throws an InvalidStateError for no reason.\n                            break;\n                        case 2:\n                        case 3:\n                            this.set('uploadProgress', this.get('uploadProgress') + 25);\n                            break;\n                        case 4:\n                            this.completeUpload(xhr);\n                            break;\n                    }\n                });\n            },\n\n            /* these actions only apply to async uploads. They are left here for future upgrade purposes\n             onUploadProgress: function(e) {\n                this.set('uploadProgress', e.percentComplete);\n            },\n             onUploadSuccess: function(e) {\n                this.set('photoUrl', e.response[0].responseURL);\n                this.set('isUploading', false);\n            },\n              */\n            onUploadError(e) {\n                this.set('isUploading', false);\n                this.set('isUploadError', true);\n                this.set('errorMessage', 'Could not upload' + e);\n                if (e.validation && !e.validation.isValid) {\n                    this.set('errorMessage', e.validation.message);\n                }\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/advance-directive-detail', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        advanceDirectiveObserver: Ember.observer('advanceDirective', function () {\n            this.rerender();\n        }),\n        init() {\n            this._super();\n            this.set('resizables', []);\n        },\n        actions: {\n            delete() {\n                this.sendAction('delete');\n            },\n            save() {\n                this.sendAction('save');\n            },\n            cancel() {\n                this.sendAction('cancel');\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/advance-directives', ['exports', 'charting/mixins/with-patient-print-title', 'ember-concurrency'], function (exports, _withPatientPrintTitle, _emberConcurrency) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_withPatientPrintTitle.default, {\n        routing: Ember.inject.service('pf-routing'),\n\n        patientPracticeGuid: Ember.computed.alias('patient.patientPracticeGuid'),\n        patientSummary: Ember.computed.alias('patient'),\n        displayName: 'Advance directives',\n        isNotAllowedToEditSummary: Ember.computed.not('isAllowedToEditSummary'),\n        hideEdit: Ember.computed.or('isLoading', 'error', 'isNotAllowedToEditSummary'),\n\n        isLoading: Ember.computed.alias('loadAdvanceDirectives.isRunning'),\n\n        defaultMessage: Ember.computed('isLoading', 'error', function () {\n            if (this.get('isLoading')) {\n                return 'Loading advance directives...';\n            }\n\n            if (this.get('error')) {\n                return 'Could not load advance directives. Try again later.';\n            }\n\n            return 'No advance directives recorded';\n        }),\n\n        patientDidChange: Ember.observer('patientPracticeGuid', Ember.on('init', function () {\n            const patientPracticeGuid = this.get('patientPracticeGuid');\n\n            if (patientPracticeGuid) {\n                this.get('loadAdvanceDirectives').perform(patientPracticeGuid);\n            }\n        })),\n\n        loadAdvanceDirectives: (0, _emberConcurrency.task)(function* (patientPracticeGuid) {\n            // Clears current advancedDirectives (in case we were looking at another patient)\n            this.setProperties({\n                error: false,\n                advancedDirectives: null\n            });\n\n            try {\n                const advanceDirectives = yield this.get('store').query('advanced-directive', { patientPracticeGuid });\n\n                this.setProperties({\n                    error: false,\n                    advanceDirectives: advanceDirectives.toArray()\n                });\n            } catch (e) {\n                this.setProperties({\n                    error: true,\n                    advanceDirectives: null\n                });\n            }\n        }).restartable(),\n\n        actions: {\n            edit(ad) {\n                const advanceDirectiveRecord = ad ? ad : this.get('store').createRecord('advanced-directive', {\n                    dateOfService: moment().startOf('day').toDate(),\n                    patientPracticeGuid: this.get('patientPracticeGuid')\n                });\n\n                this.get('routing').transitionToRoute('summary.advanceDirective', Ember.get(advanceDirectiveRecord, 'patientPracticeGuid'), advanceDirectiveRecord);\n            },\n            print() {\n                this.get('store').findRecord('patient', this.get('patientPracticeGuid')).then(() => {\n                    this.sendAction('printAudit', 'AdvanceDirectives');\n                    this.set('isPrintPreviewVisible', true);\n                });\n            },\n            refresh() {\n                const advancedDirectives = this.get('store').peekAll('advanced-directive');\n\n                this.set('advanceDirectives', advancedDirectives.filterBy('patientPracticeGuid', this.get('patientPracticeGuid')));\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/allergen-search', ['exports', 'tyrion/components/single-select', 'clinical/models/allergen'], function (exports, _singleSelect, _allergen) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _singleSelect.default.extend({\n        classNames: ['allergen-search'],\n        clearSearchOnSelect: false,\n        groupSortFunction: Ember.compare,\n        includeSearchIcon: true,\n        isRequired: true,\n        isShorter: true,\n        itemModelClass: _allergen.default,\n        minChars: 3,\n        openIfQueryPrepopulated: true,\n        openOnFocus: true,\n        optionGroupLabelPath: 'group.display',\n        optionGroupPath: 'group.sort',\n        optionLabelPath: 'name',\n        optionValuePath: 'id',\n        prompt: 'Enter allergen',\n        remoteDataUrl: Ember.computed('config.clinicalBaseURL', function () {\n            return `${this.get('config.clinicalBaseURL_v3')}allergens/search?searchTerm=`;\n        }),\n        selectType: 'typeahead',\n        buildUrl() {\n            const query = this.get('query') || '';\n            const url = [this.get('remoteDataUrl'), query.trim()].join('');\n            return `${url}&ver=3`;\n        },\n        queryRemoteContent() {\n            return this._super().then(data => data.allergens);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/allergies-list-item', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        attributeBindings: ['data-element'],\n        tagName: 'li',\n        classNameBindings: ['isSelected:active', 'isSelected:is-active'],\n        isSelected: Ember.computed('allergy', 'selectedAllergy', function () {\n            return this.get('allergy') === this.get('selectedAllergy');\n        }),\n        click() {\n            this.sendAction('editAllergy', this.get('allergy'));\n        },\n        actions: {\n            toggleShowMoreComments() {\n                this.toggleProperty('showMoreComments');\n            },\n            delete() {\n                this.sendAction('delete', this.get('allergy'));\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/allergies-list-section', ['exports', 'clinical/mixins/with-comments'], function (exports, _withComments) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_withComments.default, {\n        data: null,\n        title: null,\n        isAllowedToEditAllegies: true,\n        hasNoActiveAllergies: Ember.computed.empty('data.active'),\n        hasNoAllergies: Ember.computed.empty('data'),\n        isDrugSection: Ember.computed.equal('title', 'Drug'),\n        isDrugAllergyCheckboxVisible: Ember.computed.and('isDrugSection', 'hasNoActiveAllergies'),\n        isInactiveSection: Ember.computed.equal('title', 'Inactive'),\n        noAllergiesMessage: Ember.computed('title', function () {\n            return `No ${this.get('title').toLowerCase()} allergies recorded`;\n        }),\n        sectionClass: Ember.computed('title', function () {\n            return this.get('title').toLowerCase();\n        }),\n        actions: {\n            toggleProperty(key) {\n                this.toggleProperty(key);\n            },\n            editAllergy(allergy) {\n                this.sendAction('editAllergy', allergy);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/allergies-list', ['exports', 'clinical/mixins/with-allergies', 'boot/mixins/view-preferences', 'charting/mixins/with-patient-print-title', 'clinical/models/allergies-array'], function (exports, _withAllergies, _viewPreferences, _withPatientPrintTitle, _allergiesArray) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_withAllergies.default, _viewPreferences.default, _withPatientPrintTitle.default, {\n        patientService: Ember.inject.service('patient'),\n        authorization: Ember.inject.service('authorization'),\n        routing: Ember.inject.service('pf-routing'),\n        classNames: ['allergies'],\n        allergies: null,\n        selectedItem: null,\n        transcriptGuid: null,\n        viewPreferencesKey: 'allergies-list',\n        hideEditControls: Ember.computed.or('isLoadingOrIsError', 'session.isStaff'),\n        isLoadingOrIsError: Ember.computed.or('isLoading', 'allergiesError'),\n        patientSummary: Ember.computed.alias('patient'),\n        displayName: 'Allergies',\n        showCommentsOptions: Ember.computed(() => [{ id: 0, label: 'Comments', key: 'showComments' }, { id: 1, label: 'Encounter comments', key: 'showEncounterComments' }]),\n        isAllowedToEditAllegies: Ember.computed('authorization.entitledFeatures.[]', function () {\n            return this.get('authorization').isEntitledFor('Chart.Allergies.Edit');\n        }),\n        isNotAllowedToEditAllegies: Ember.computed.not('isAllowedToEditAllegies'),\n        isEditing: Ember.computed('routing.currentRouteName', {\n            get() {\n                const currentRouteName = this.get('routing.currentRouteName');\n\n                return currentRouteName === 'summary.allergy' || currentRouteName === 'encounter.allergy';\n            },\n            set(key, value) {\n                return value;\n            }\n        }),\n        selectedAllergy: Ember.computed('selectedItem', {\n            get() {\n                return this.get('selectedItem');\n            },\n            set(key, value) {\n                return value;\n            }\n        }),\n        useIcons: Ember.computed('routing.currentRouteName', {\n            get() {\n                return this.get('routing.currentRouteName').indexOf('encounter') === -1;\n            },\n            set(key, value) {\n                return value;\n            }\n        }),\n        onInit: Ember.on('init', function () {\n            if (this.get('useIcons')) {\n                this.set('viewPreferenceProperties', []);\n            } else {\n                this.set('viewPreferenceProperties', ['selectedCommentsOptions']);\n            }\n            const onRefreshChart = data => this.setAllergies(data.patientPracticeGuid, _allergiesArray.default.create({\n                content: data.allergies.toArray(),\n                noKnownAllergies: data.allergies.get('meta.noKnownAllergies')\n            }));\n            this.get('patientService').on('refreshChart', onRefreshChart);\n            this.set('onRefreshChart', onRefreshChart);\n        }),\n        willDestroyElement() {\n            this._super();\n            const onRefreshChart = this.get('onRefreshChart');\n            if (onRefreshChart) {\n                this.get('patientService').off('refreshChart', onRefreshChart);\n            }\n        },\n        patientPracticeGuid: Ember.computed.alias('patient.patientPracticeGuid'),\n        saveNoKnownValue(value) {\n            const patientPracticeGuid = this.get('patientPracticeGuid');\n            const adapter = this.get('store').adapterFor('patient-allergy');\n            return adapter.saveNoKnownValue(patientPracticeGuid, value);\n        },\n        isNoKnownChecked: Ember.computed('noKnownAllergies', {\n            get() {\n                return this.get('noKnownAllergies');\n            },\n            set(key, value) {\n                this.setProperties({\n                    noKnownAllergies: value,\n                    isLoadingNoKnown: true\n                });\n                this.saveNoKnownValue(value).catch(() => {\n                    this._setUnlessDestroyed('noKnownAllergies', !value);\n                    toastr.error('Failed to record no active allergies status');\n                }).finally(() => this._setUnlessDestroyed('isLoadingNoKnown', false));\n                return value;\n            }\n        }),\n        actions: {\n            toggleProperty(key) {\n                this.toggleProperty(key);\n            },\n            editAllergy(allergy) {\n                const transcriptGuid = this.get('transcriptGuid');\n\n                if (transcriptGuid) {\n                    this.get('routing').transitionToRoute('encounter.allergy', allergy.get('patientPracticeGuid'), transcriptGuid, allergy.get('allergyGuid'));\n                } else {\n                    this.get('routing').transitionToRoute('summary.allergy', allergy.get('patientPracticeGuid'), allergy.get('allergyGuid'));\n                }\n            },\n            createAllergy() {\n                const transcriptGuid = this.get('transcriptGuid');\n\n                if (transcriptGuid) {\n                    this.get('routing').transitionToRoute('encounter.allergy', this.get('patientPracticeGuid'), transcriptGuid, 'new');\n                } else {\n                    this.get('routing').transitionToRoute('summary.allergy', this.get('patientPracticeGuid'), 'new');\n                }\n            },\n            reloadAllergies() {\n                this.get('loadAllergies').perform(true);\n            },\n            print() {\n                // Load the patient info first to ensure that it gets rendered on the print preview\n                this.get('store').findRecord('patient', this.get('patientPracticeGuid')).then(() => {\n                    this.sendAction('printAudit', 'Allergies');\n                    this.set('isPrintVisible', true);\n                });\n            },\n            updateAllergies(options) {\n                if (options.allergies) {\n                    this.set('allergies', options.allergies);\n                }\n                if (options.reloadFromCache) {\n                    const patientPracticeGuid = this.get('patientPracticeGuid');\n                    const allergies = this.get('store').peekAll('patient-allergy');\n                    const allergiesArray = _allergiesArray.default.create({\n                        content: allergies.filterBy('patientPracticeGuid', patientPracticeGuid),\n                        noKnownAllergies: this.get('allergies.noKnownAllergies')\n                    });\n\n                    this.setAllergies(patientPracticeGuid, allergiesArray);\n                }\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/allergy-detail', ['exports', 'boot/models/session', 'clinical/mixins/loading', 'common/helpers/validation', 'ember-lgtm/mixins/validatable', 'tyrion/mixins/destroyed', 'common/mixins/spinner'], function (exports, _session, _loading, _validation, _validatable, _destroyed, _spinner) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    const SAVE_PROPERTIES = ['allergySeverity', 'allergyReactions', 'onsetDate', 'onsetType', 'comments', 'isActive', 'patientPracticeGuid'];\n\n    exports.default = Ember.Component.extend(_loading.default, _validatable.default, _destroyed.default, _spinner.default, {\n        analytics: Ember.inject.service(),\n        authorization: Ember.inject.service(),\n        severityOptions: null,\n        allergenTypes: null,\n        onsetTypes: null,\n        allergenType: null,\n        allSubstances: null,\n        onsetType: null,\n        showSpinner: Ember.computed.alias('isLoading'),\n        contentElement: '.detail-pane-body-wrapper',\n        validator: _validation.default.validator().validates('allergySeverity').required('Please select a severity.').validates('allergenSelection').required('Please select an allergen.').validates('isOnsetDateValid').required().isTrue('Please correct the onset date').build(),\n        isDisabled: Ember.computed('isLoading', 'isAllowedToEditAllegies', function () {\n            return _session.default.get('isStaff') || !this.get('isAllowedToEditAllegies');\n        }),\n        title: Ember.computed('allergy.type', function () {\n            const allergy = this.get('allergy');\n            if (!allergy) {\n                return 'Record allergy';\n            }\n            return `Review ${allergy.get('type')} allergy`;\n        }),\n        isDoneDisabled: Ember.computed('isLoading', function () {\n            return this.get('isLoading');\n        }),\n        showAddAnotherButton: Ember.computed('allergy', 'isAllowedToEditAllegies', function () {\n            return !this.get('allergy') && this.get('isAllowedToEditAllegies');\n        }),\n        showDeleteButton: Ember.computed('allergy', 'isAllowedToEditAllegies', function () {\n            return !this.get('isDisabled') && !!this.get('allergy') && this.get('isAllowedToEditAllegies');\n        }),\n        reactionsValuePath: 'title',\n        isAllowedToEditAllegies: Ember.computed('authorization.entitledFeatures.[]', function () {\n            return this.get('authorization').isEntitledFor('Chart.Allergies.Edit');\n        }),\n        isNotAllowedToEditAllegies: Ember.computed.not('isAllowedToEditAllegies'),\n        willDestroy() {\n            const allergy = this.get('allergy');\n            if (allergy) {\n                allergy.set('isSelected', false);\n                this.set('allergy', null);\n            }\n        },\n        init() {\n            this._super();\n            this.setProperties({\n                severityOptions: [{ label: 'Very mild', id: 'Very Mild', class: 'yellow' }, { label: 'Mild', id: 'Mild', class: 'yellow' }, { label: 'Moderate', id: 'Moderate', class: 'orange' }, { label: 'Severe', id: 'Severe', class: 'red' }],\n                allergenTypes: [{ label: 'Drug', id: 'drug' }, { label: 'Food', id: 'food' }, { label: 'Environment', id: 'environmental' }],\n                onsetTypes: [{ label: 'Childhood', id: 'Childhood' }, { label: 'Adulthood', id: 'Adulthood' }, { label: 'Unknown', id: 'Unknown' }],\n                allSubstances: []\n            });\n        },\n        setPropertiesFromAllergy: Ember.on('init', Ember.observer('allergy', function () {\n            const allergy = this.get('allergy');\n            const allergenQuery = this.get('prepopulateAllergenQuery');\n            if (allergy) {\n                this.setProperties({\n                    allergySeverity: allergy.get('allergySeverity'),\n                    allergyReactions: allergy.get('allergyReactions').slice(),\n                    onsetDate: allergy.get('onsetDate'),\n                    onsetType: allergy.get('onsetType'),\n                    comments: allergy.get('comments'),\n                    isActive: allergy.get('isActive')\n                });\n            } else {\n                // For new allergies we need to \"disableDirtyTracking\" while we set this properties\n                this.set('disableDirtyTracking', true);\n                this.setProperties({\n                    allergenType: 'drug',\n                    allergenSelection: null,\n                    allergySeverity: null,\n                    allergyReactions: [],\n                    onsetDate: null,\n                    onsetType: null,\n                    comments: null,\n                    isActive: true\n                });\n                this.set('allergenQuery', allergenQuery || '');\n            }\n\n            this.set('prepopulateAllergenQuery');\n\n            Ember.run.later(() => {\n                this.set('disableDirtyTracking', false);\n                // When discontinuing a medication due to allergy and adding a new allergy,\n                // set the isDirty flag to force validation on close and require an allergen to be set.\n                if (!allergy && allergenQuery) {\n                    this.set('isDirty', true);\n                }\n            });\n        })),\n        loadReactionsAndSubstances: Ember.on('init', function () {\n            const store = this.get('store');\n            if (store) {\n                store.findAll('allergy-reaction').then(reactions => this._unlessDestroyed(() => {\n                    this.set('allReactions', reactions.map(reaction => reaction.getProperties('title', 'reactionGroupTitle', 'displaySequence')));\n                }));\n                store.findAll('allergy-substance').then(substances => this._unlessDestroyed(() => {\n                    this.set('allSubstances', substances);\n                    this.set('allergenSelection', null);\n                }));\n            }\n        }),\n        didInsertElement() {\n            this._super();\n            this.focusOnAllergenSearch(false);\n        },\n        allergenTypeObserver: Ember.observer('allergenType', function () {\n            this.focusOnAllergenSearch(true);\n            this.set('allergenSelection', null);\n        }),\n        focusOnAllergenSearch(clearAllergenQuery) {\n            if (!this.get('allergy')) {\n                if (clearAllergenQuery) {\n                    this.set('allergenQuery', '');\n                }\n                Ember.run.scheduleOnce('afterRender', () => {\n                    if (this.get('_state') === 'inDOM') {\n                        this.$('.allergen-search input').focus();\n                    }\n                });\n            }\n        },\n        isDrug: Ember.computed.equal('allergenType', 'drug'),\n        substances: Ember.computed('allSubstances.@each.type', 'allergenType', function () {\n            const { allergenType, allSubstances } = this.getProperties('allergenType', 'allSubstances');\n            return allSubstances.filterBy('groupTitle', allergenType.capitalize()).rejectBy('isCustom', true);\n        }),\n\n        isDirtyObserver: Ember.observer('allergenSelection', 'allergySeverity', 'allergyReactions.[]', 'onsetDate', 'onsetType', 'comments', 'isActive', function () {\n            const { allergy, disableDirtyTracking, isDirty } = this.getProperties('allergy', 'disableDirtyTracking', 'isDirty');\n            const oldValue = !!isDirty;\n            let newValue = false;\n            if (!disableDirtyTracking) {\n                newValue = !this.areAllPropertiesEqual(allergy || Ember.Object.create({}), this, SAVE_PROPERTIES);\n            }\n            if (newValue !== oldValue) {\n                this.set('isDirty', newValue);\n            }\n        }),\n        areAllPropertiesEqual(x, y, properties) {\n            return properties.every(key => {\n                const xValue = x.get(key);\n                const yValue = y.get(key);\n\n                if (Ember.isEmpty(xValue) && Ember.isEmpty(yValue)) {\n                    return true;\n                }\n                if (xValue === yValue) {\n                    return true;\n                }\n                if (Ember.isArray(xValue) && Ember.isArray(yValue)) {\n                    if (xValue.length !== yValue.length) {\n                        return false;\n                    }\n                    return xValue.every((val, index) => val === yValue.objectAt(index));\n                }\n                return false;\n            });\n        },\n        isOnsetDateValid: true,\n        formattedOnsetDate: Ember.computed('onsetDate', {\n            get() {\n                const val = this.get('onsetDate');\n                return val ? moment.utc(val).format('MM/DD/YYYY') : null;\n            },\n            set(key, val) {\n                if (val) {\n                    this.set('onsetType', null);\n                    this.set('onsetDate', moment(val).toISOString());\n                } else {\n                    this.set('onsetDate', null);\n                }\n                return val;\n            }\n        }),\n        onsetTypeObserver: Ember.observer('onsetType', function () {\n            if (this.get('onsetType')) {\n                this.set('onsetDate', null);\n            }\n        }),\n        actions: {\n            addCustomAllergy(customAllergy) {\n                const allergenType = this.get('allergenType');\n                this.set('allergenSelection', {\n                    title: customAllergy,\n                    groupTitle: allergenType.capitalize(),\n                    isCustom: true\n                });\n            },\n            save() {\n                this.sendAction('close');\n            },\n            cancel() {\n                this._close();\n            },\n            delete() {\n                this._delete().then(() => {\n                    toastr.success('Allergy successfully deleted');\n                    this._close();\n                }, error => {\n                    toastr.error(error);\n                });\n            },\n            setOnsetToday() {\n                this.set('onsetType', null);\n                this.set('onsetDate', moment(moment().format('MM/DD/YYYY')).toISOString());\n            },\n            addAnother() {\n                this._saveIfDirtyAndValid().then(() => {\n                    this.setPropertiesFromAllergy();\n                    this.focusOnAllergenSearch();\n                    this.attrs.reloadAllergies();\n                });\n            }\n        },\n        _saveIfDirtyAndValid() {\n            if (this.get('isDisabled') || !this.get('isDirty')) {\n                return Ember.RSVP.resolve(this.get('allergy.content'));\n            }\n\n            // For \"add\" we need to add the substance and allergen to the allergy object\n            if (!this.get('allergy')) {\n                return this.validate().then(isValid => {\n                    if (!isValid) {\n                        throw 'invalid';\n                    }\n                    return this._save();\n                });\n            }\n            return this._save();\n        },\n        _save() {\n            const properties = this.getProperties(SAVE_PROPERTIES);\n            let isNew = false;\n            let allergy = this.get('allergy');\n            if (allergy) {\n                allergy.setProperties(properties);\n            } else {\n                isNew = true;\n                allergy = this.get('store').createRecord('patient-allergy', properties);\n                this._addAllergenAndSubstance(allergy);\n            }\n            this.get('analytics').track('Save Allergy');\n            return allergy.save().then(() => {\n                this.set('disableDirtyTracking', true);\n                if (isNew && this.attrs.allergyAdded) {\n                    this.attrs.allergyAdded(allergy);\n                }\n                return allergy;\n            }).catch(() => {\n                toastr.error('Failed to save the allergy');\n                allergy.rollbackAttributes();\n            });\n        },\n        _addAllergenAndSubstance(allergy) {\n            const { allergenSelection, allergenType } = this.getProperties('allergenSelection', 'allergenType');\n            if (allergenType === 'drug') {\n                allergy.setDrugAllergen(allergenSelection);\n            } else {\n                allergy.setSubstance(allergenSelection, allergenType);\n            }\n        },\n        deleteAllergy(allergy) {\n            return allergy.destroyRecord().then(() => this.onAllergyDeleted(allergy));\n        },\n        _delete() {\n            const allergy = this.get('allergy');\n            if (!allergy) {\n                return Ember.RSVP.resolve();\n            }\n            return this.deleteAllergy(allergy);\n        },\n        _close() {\n            // We've already saved or don't need to, so force isDirty to false.\n            this.set('disableDirtyTracking', true);\n            this.set('isDirty', false);\n            // This is needed to introduce a delay so the isDirtyBinding is updated\n            // back (to the controller) before we retry the transition\n            Ember.run.later(this, function () {\n                this.sendAction('close');\n            });\n        },\n        _closing: Ember.observer('closing', function () {\n            Ember.run.once(this, function () {\n                if (!this.get('closing')) {\n                    return;\n                }\n                this.set('closing', false);\n                if (!this.get('disableDirtyTracking')) {\n                    this._saveIfDirtyAndValid().then(() => this._close());\n                }\n            });\n        }),\n        onAllergyDeleted(allergy) {\n            if (this.attrs.allergyDeleted) {\n                this.attrs.allergyDeleted(allergy);\n            }\n            return allergy;\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/allergy-details-pane', ['exports', 'tyrion/components/detail-pane'], function (exports, _detailPane) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _detailPane.default.extend({\n        classNames: ['side-fixed', 'col-xs-5', 'summary-details', 'allergy-details'],\n        footerTemplateName: 'cancel-delete-done-footer',\n        deleteTitle: 'Delete allergy',\n        deleteMessage: 'This action is final, and will remove this allergy from this patient\\'s record.',\n        init() {\n            this._super();\n            this.set('resizables', []);\n        },\n        actions: {\n            closeDetailPaneClicked() {\n                this.sendAction('save');\n            },\n            save() {\n                this.sendAction('save');\n            },\n            addAnother() {\n                this.sendAction('addAnother');\n            },\n            cancel() {\n                this.sendAction('cancel');\n            },\n            delete() {\n                this.sendAction('delete');\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/allergy-free-text-message', ['exports', 'tyrion/mixins/destroyed', 'clinical/mixins/loading', 'clinical/models/personal-medical-history'], function (exports, _destroyed, _loading, _personalMedicalHistory) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_loading.default, _destroyed.default, {\n        layoutName: 'components/allergy-free-text-message',\n\n        canRecord: false,\n        canShowLater: false,\n        pastMedicalHistory: null,\n        patientPracticeGuid: null,\n        scrollableContainer: null,\n        shouldShowLater: false,\n\n        freeTextAllergies: Ember.computed('pastMedicalHistory.sections', function () {\n            var pastMedicalHistorySections = this.get('pastMedicalHistory.sections'),\n                allergiesSection,\n                freeTextAllergies;\n\n            if (Ember.isArray(pastMedicalHistorySections) && Ember.isPresent(pastMedicalHistorySections)) {\n                allergiesSection = pastMedicalHistorySections.findBy('key', 'allergies');\n\n                if (allergiesSection) {\n                    freeTextAllergies = allergiesSection.get('value');\n                }\n            }\n\n            return freeTextAllergies;\n        }),\n\n        isFreeTextAllergiesMessageVisible: Ember.computed('freeTextAllergies', 'shouldShowLater', function () {\n            return Ember.isPresent(this.get('freeTextAllergies')) && !this.get('shouldShowLater');\n        }),\n\n        isRecordVisible: Ember.computed('session.isStaff', 'canRecord', function () {\n            return this.get('canRecord') && !this.get('session.isStaff') && this.get('isAllowedToEditAllegies');\n        }),\n\n        loadPMHOnInit: Ember.observer('patientPracticeGuid', function () {\n            var patientPracticeGuid = this.get('patientPracticeGuid');\n\n            this.set('pastMedicalHistory', null);\n\n            if (Ember.isPresent(patientPracticeGuid)) {\n                this._withProgress(_personalMedicalHistory.default.find(this.get('store'), patientPracticeGuid).then(pmh => {\n                    this._unlessDestroyed(() => {\n                        this.set('pastMedicalHistory', pmh);\n                    });\n                }).catch(() => {\n                    this._unlessDestroyed(() => {\n                        this.set('pastMedicalHistory', null);\n                    });\n                }));\n            }\n        }).on('init'),\n\n        didInsertElement() {\n            this.addRemoveScrollHandler(true);\n        },\n\n        willDestroyElement() {\n            this.addRemoveScrollHandler(false);\n        },\n\n        actions: {\n            createAllergy() {\n                this.sendAction('createAllergy');\n            },\n\n            deleteFreeTextAllergy() {\n                this._withProgress(_personalMedicalHistory.default.deleteAllergies(this.get('store'), this.get('pastMedicalHistory')).catch(() => {\n                    toastr.error('Unable to delete free text allergies.');\n                }));\n            },\n\n            showFreeTextAllergiesLater() {\n                this.$().slideUp(250);\n                this.set('shouldShowLater', true);\n            }\n        },\n\n        addRemoveScrollHandler(isAdd) {\n            var scrollableContainerSelector = this.get('scrollableContainer'),\n                scrollableContainer = Ember.isPresent(scrollableContainerSelector) ? $(scrollableContainerSelector) : null;\n\n            if (Ember.isPresent(scrollableContainer) && scrollableContainer.length) {\n                if (isAdd) {\n                    $(scrollableContainer).on('scroll', { _this: this, scrollableContainer: scrollableContainer }, this.onScroll);\n                } else {\n                    $(scrollableContainer).off('scroll', this.onScroll);\n                }\n            }\n        },\n\n        onScroll(e) {\n            var _this = e.data._this,\n                scrollableContainer = e.data.scrollableContainer;\n\n            if (scrollableContainer.scrollTop() > 0) {\n                _this.$().slideUp(250);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/allergy-select', ['exports', 'tyrion/components/single-select'], function (exports, _singleSelect) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _singleSelect.default.extend({\n        classNames: ['allergen-search'],\n        classNameBindings: ['selectionMatchesOption:no-custom-results'],\n        prompt: 'Enter allergen',\n        optionLabelPath: 'title',\n        optionValuePath: 'title',\n        selectType: 'typeahead',\n        clearSearchOnSelect: false,\n        includeInactiveSearchIcon: true,\n        openOnFocus: true,\n        isRequired: true,\n        addCustomItemTemplateText: 'Add custom allergy: %@',\n        placeholder: 'Search by allergen',\n\n        selectionMatchesOption: Ember.computed('query', 'content', function () {\n            const content = this.get('content');\n            const query = this.get('query');\n            return content.find(option => {\n                return option.get('title').toLowerCase() === query.toLowerCase();\n            });\n        }),\n\n        actions: {\n            addCustomItem() {\n                const customItemText = this.get('query');\n                const filteredContent = this.get('filteredContent');\n                const customItemMatchesResultItem = Ember.isPresent(filteredContent[0]) && filteredContent[0].get('title') === customItemText;\n                if (customItemMatchesResultItem) {\n                    // If the user attempts to add a custom item for a result that is exactly matching the string, do not allow them to do so.\n                    return;\n                }\n                this.set('showDropdown', false);\n                this.sendAction('addItem', customItemText);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/assessment-modal', ['exports', 'clinical/models/assessment', 'clinical/models/assessments/prolia-aesi-modal', 'clinical/util/assessments/prolia-aesi-modal', 'clinical/repositories/assessments', 'common/mixins/spinner'], function (exports, _assessment, _proliaAesiModal, _proliaAesiModal2, _assessments, _spinner) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_spinner.default, {\n        isVisible: false,\n        source: '',\n        validationErrors: null,\n        showSpinner: Ember.computed.alias('isLoading'),\n        contentElement: '.assessment-modal-content',\n        isLoading: false,\n\n        contentTemplate: Ember.computed('token', {\n            get() {\n                const token = this.get('token.name');\n                if (Ember.isEmpty(token)) {\n                    return '';\n                }\n                return 'assessments/' + token.dasherize();\n            }\n        }),\n        modalClassNames: Ember.computed('isUpdatedProliaModal', function () {\n            let classNames = 'assessment-modal-control';\n            if (this.get('isUpdatedProliaModal')) {\n                classNames += ' taller-modal';\n            }\n            return classNames;\n        }),\n        model: Ember.computed('token', 'defaults', {\n            get() {\n                const patientPracticeGuid = this.get('patientPracticeGuid'),\n                      token = this.get('token.name'),\n                      defaults = this.get('defaults');\n\n                if (token === 'proliaAesiModal') {\n                    return _assessment.default.wrap(_proliaAesiModal.default, patientPracticeGuid, defaults);\n                }\n            }\n        }),\n        title: Ember.computed('token', {\n            get() {\n                const token = this.get('token.name');\n                if (token === 'proliaAesiModal') {\n                    return 'Safety Program';\n                }\n            }\n        }),\n        util: Ember.computed('token', {\n            get() {\n                const token = this.get('token.name');\n                if (token === 'proliaAesiModal') {\n                    return _proliaAesiModal2.default;\n                }\n            }\n        }),\n\n        isUpdatedProliaModal: Ember.computed('token', function () {\n            const tokenName = this.get('token.name');\n            return tokenName === 'proliaAesiModal';\n        }),\n\n        _recordWithStatus(status) {\n            let assessment = this.get('model'),\n                transcriptGuid = this.get('transcriptGuid'),\n                medicationGuid = this.get('medicationGuid'),\n                patientPracticeGuid = this.get('patientPracticeGuid'),\n                source = this.get('source');\n\n            if (assessment) {\n                assessment.set('status', status);\n\n                if (Ember.isPresent(source)) {\n                    assessment.set('source', source);\n                }\n                if (Ember.isPresent(medicationGuid)) {\n                    assessment.set('medicationGuid', medicationGuid);\n                }\n                if (Ember.isPresent(transcriptGuid)) {\n                    assessment.set('transcriptGuid', transcriptGuid);\n                }\n                if (Ember.isPresent(patientPracticeGuid)) {\n                    assessment.set('patientPracticeGuid', patientPracticeGuid);\n                }\n\n                return _assessments.default.saveAssessment(assessment);\n            }\n            return Ember.RSVP.resolve();\n        },\n\n        _saveValidAssessment() {\n            this.set('isLoading', true);\n            this._recordWithStatus('Completed').then(() => {\n                let completionState = this.get('util.getCompletionState'),\n                    state = completionState ? completionState(this.get('model')) : null;\n\n                if (state) {\n                    if (state.isComplete) {\n                        toastr.success(state.message, '', { toastClass: 'assessment-complete-message' });\n                    } else {\n                        this.sendAction('confirmAssessment', state.message);\n                    }\n                }\n            }).finally(() => {\n                this._closeAssessment();\n            });\n        },\n\n        _closeAssessment() {\n            this.set('validationErrors', null);\n            this.set('isLoading', false);\n            this.set('isVisible', false);\n            this.set('token', null);\n        },\n        trackingType: Ember.computed('token', {\n            get() {\n                if (this.get('token.name') === 'proliaAesiModal') {\n                    return 'Prolia Adverse Events';\n                }\n            }\n        }),\n        _trackShown: Ember.observer('isVisible', function () {\n            if (this.get('isVisible')) {\n                this._track('Assessment Modal Displayed');\n            }\n        }),\n        _track(text, details) {\n            let trackingType = this.get('trackingType');\n            details = details || {};\n            if (Ember.isPresent(trackingType)) {\n                this.get('analytics').track(text, Ember.merge(details, {\n                    'Assessment Type': trackingType,\n                    'Assessment Source': this.get('source'),\n                    'Patient Practice Guid': this.get('patientPracticeGuid')\n                }));\n            }\n        },\n        actions: {\n            cancel() {\n                const details = {};\n                this._recordWithStatus('Dismissed');\n                details['Prolia adverse effects present'] = false;\n                this._track('Assessment Modal Dismissed');\n                this._closeAssessment();\n            },\n            save() {\n                this.set('isLoading', true);\n                let toValidate = Ember.ObjectProxy.create({\n                    content: this.get('model')\n                });\n                this.get('util.validator').validate(toValidate).then(result => {\n                    this.set('isLoading', false);\n                    if (result.valid) {\n                        const details = {};\n                        this._saveValidAssessment();\n\n                        details['Prolia adverse effects present'] = this.get('model.proliaAnyAesi.isSelected');\n                        this._track('Assessment Modal Saved', details);\n                    } else {\n                        // clean validation results\n                        let errorObject = {};\n                        Object.keys(result.errors).forEach(key => {\n                            if (result.errors[key].length > 0) {\n                                errorObject[key] = result.errors[key];\n                            }\n                        });\n                        this.set('validationErrors', errorObject);\n                    }\n                });\n            },\n            propertyChanged(value, key) {\n                let changedKey = key || value.property,\n                    model = this.get('model'),\n                    changeLogic = this.get('util.enforceChangeLogic');\n\n                if (Ember.isPresent(changeLogic) && Ember.isPresent(model)) {\n                    changeLogic(changedKey, model).forEach(change => {\n                        this.set(`model.${change.property}`, change.value);\n                    });\n                    this.set('validationErrors', null);\n                }\n            },\n            setProperty(key, value) {\n                this.set(`model.${key}`, value);\n            },\n            trackAndSetProperty(trackingText, key, value) {\n                this._track(trackingText);\n                this.send('setProperty', key, value);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/card-field', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        attributeBindings: ['data-element'],\n\n        content: null,\n        fieldValuePath: '',\n        isAllowedToEdit: true,\n        isEditing: false,\n        isError: false,\n        isLoading: false,\n        isShowingAll: false,\n        title: '',\n        canHaveMultipleRecord: false,\n\n        hasMultipleItems: Ember.computed.gt('content.length', 1),\n\n        canEdit: Ember.computed('fieldValuePath', 'isAllowedToEdit', 'isLoading', 'isError', 'isEditing', 'canHaveMultipleRecord', function () {\n            const fieldValuePath = this.get('fieldValuePath');\n            const fieldValue = fieldValuePath ? this.get(`content.${fieldValuePath}`) : this.get('content');\n\n            if (!this.get('isAllowedToEdit') || Ember.isPresent(fieldValue) && !this.get('canHaveMultipleRecord') || this.get('isLoading') || this.get('isError') || this.get('isEditing')) {\n                return false;\n            }\n\n            return true;\n        }),\n\n        contentArray: Ember.computed('content', 'content.[]', 'isShowingAll', function () {\n            const content = this.get('content');\n\n            if (Ember.isArray(content)) {\n                return this.get('isShowingAll') ? content : [Ember.get(content, 'firstObject')].compact();\n            }\n\n            return [content].compact();\n        }),\n\n        historicalContentCount: Ember.computed('contentArray', function () {\n            return (this.get('content') || []).length - this.get('contentArray').length;\n        }),\n\n        placeholderText: Ember.computed('fieldValuePath', 'isLoading', 'isError', 'title', 'isEditing', 'content.[]', function () {\n            const fieldValuePath = this.get('fieldValuePath');\n            const fieldValue = fieldValuePath ? this.get(`content.${fieldValuePath}`) : this.get('content');\n            const fieldLabel = this.get('title').toLowerCase();\n\n            if (Ember.isPresent(fieldValue) || this.get('isEditing')) {\n                return null;\n            }\n\n            if (this.get('isLoading')) {\n                return `Loading ${fieldLabel}...`;\n            }\n\n            if (this.get('error')) {\n                return `Could not load ${fieldLabel}. Try again later.`;\n            }\n\n            return `No ${fieldLabel} recorded`;\n        }),\n\n        recordingText: Ember.computed('title', function () {\n            return `Record ${this.get('title').toLowerCase()}`;\n        }),\n\n        actions: {\n            toggleShowAll() {\n                this.toggleProperty('isShowingAll');\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/care-team-contact-form', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        loadSpecialties: Ember.on('init', function () {\n            this.set('specialties', this.get('store').findAll('specialty'));\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/care-team-detail', ['exports', 'common/mixins/spinner', 'clinical/mixins/loading', 'tyrion/mixins/destroyed', 'clinical/models/contact-to-profile-adapter', 'clinical/models/provider-profile-to-profile-adapter', 'common/helpers/validation', 'ember-lgtm/mixins/validatable'], function (exports, _spinner, _loading, _destroyed, _contactToProfileAdapter, _providerProfileToProfileAdapter, _validation, _validatable) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    var phoneValidator = function (phone) {\n        // At least 10 characters and only parens, dashes, plus, spaces and digits\n        return Ember.isPresent(phone) && phone.length >= 10 && /^[\\d()\\-\\+\\s]*$/.test(phone);\n    },\n        wrapInAdapters = function (hash) {\n        hash.practiceProviders = hash.practiceProviders.map(function (provider) {\n            return _providerProfileToProfileAdapter.default.create({ providerProfile: provider, specialties: hash.specialties });\n        });\n        hash.directoryContacts = hash.directoryContacts.map(function (contact) {\n            return _contactToProfileAdapter.default.create({ directoryContact: contact });\n        });\n        return hash;\n    },\n        filterContactsAlreadyInCareTeam = function (careTeam, hash) {\n        var idsAlreadyPartOfCareTeam = careTeam.getWithDefault('members', []).mapBy('id');\n        hash.practiceProviders = hash.practiceProviders.reject(function (contact) {\n            return idsAlreadyPartOfCareTeam.includes(Ember.get(contact, 'id'));\n        });\n        hash.directoryContacts = hash.directoryContacts.reject(function (contact) {\n            return idsAlreadyPartOfCareTeam.includes(Ember.get(contact, 'id'));\n        });\n    },\n        Contact = Ember.Object.extend(_validatable.default, {\n        validator: _validation.default.validator().validates('firstName').required('First Name is required.').isName('Name cannot contain any special symbols or numbers').validates('lastName').required('Last Name is required.').isName('Name cannot contain any special symbols or numbers').validates('fax').required('Fax is required.').using(phoneValidator, 'Enter a valid fax number').validates('officePhone').optional().using(phoneValidator, 'Enter a valid phone number').validates('email').optional().email('Must be a valid email address.')\n        // .validates('directAddress')\n        //     .optional()\n        //     .email('Must be a valid email address.')\n        .build()\n    });\n\n    exports.default = Ember.Component.extend(_spinner.default, _loading.default, _destroyed.default, _validatable.default, {\n        classNames: ['care-team-detail', 'col-xs-5'],\n\n        // SpinnerSupport overrides\n        contentElement: '.well.right-module',\n        showSpinner: Ember.computed.alias('isLoading'),\n        bigHeaderText: Ember.computed(function () {\n            return this.get('isNew') ? 'Add provider' : 'Edit provider';\n        }),\n        isAddingNew: Ember.computed.not('member'),\n        cantBePreferred: Ember.computed('contact.isProviderProfile', 'isBackup', function () {\n            return !this.get('contact.isProviderProfile') || this.get('isBackup');\n        }),\n        cantBeBackup: Ember.computed('contact.isProviderProfile', 'isPreferred', function () {\n            return !this.get('contact.isProviderProfile') || this.get('isPreferred');\n        }),\n\n        // Confirm change properties\n        confirmChangeTitle: Ember.computed('changingPreferredProvider', 'changingPrimaryProvider', function () {\n            if (this.get('changingPreferredProvider') && this.get('changingPrimaryProvider')) {\n                return 'Update preferred and primary care provider (PCP)';\n            } else if (this.get('changingPreferredProvider')) {\n                return 'Update preferred provider';\n            } else if (this.get('changingPrimaryProvider')) {\n                return 'Update primary care provider (PCP)';\n            }\n        }),\n        confirmChangeDescription: Ember.computed('changingPreferredProvider', 'changingPrimaryProvider', function () {\n            if (this.get('changingPreferredProvider') && this.get('changingPrimaryProvider')) {\n                return 'Preferred and primary care providers (PCP) are already assigned for this patient. The preferred and primary care provider(s) (PCP) will be removed from this patient\\'s care team unless the previously assigned provider(s) have another relationship to this patient.';\n            } else if (this.get('changingPreferredProvider')) {\n                return 'A preferred provider is already assigned for this patient. That preferred provider will be removed from this patient\\'s care team unless that provider has another relationship to patient.';\n            } else if (this.get('changingPrimaryProvider')) {\n                return 'A primary care provider (PCP) is already assigned for this patient. That primary care provider (PCP) will be removed from this patient\\'s care team unless that provider has another relationship to patient.';\n            }\n        }),\n        needsToConfirmProviderChange: Ember.computed('isProviderChangeConfirmed', 'changingPreferredProvider', 'changingPrimaryProvider', function () {\n            if (this.get('isProviderChangeConfirmed')) {\n                // The user already confirmed they want to do it.\n                return false;\n            }\n            return this.get('changingPreferredProvider') || this.get('changingPrimaryProvider');\n        }),\n        changingPreferredProvider: Ember.computed('isPreferred', 'member', 'careTeam.preferredProvider', function () {\n            return this.get('isPreferred') && this.get('careTeam.preferredProvider') && this.get('careTeam.preferredProvider') !== this.get('member');\n        }),\n        changingPrimaryProvider: Ember.computed('isPrimary', 'member', 'careTeam.primaryProvider', function () {\n            return this.get('isPrimary') && this.get('careTeam.primaryProvider') && this.get('careTeam.primaryProvider') !== this.get('member');\n        }),\n        init() {\n            this._super();\n            this.set('resizables', []);\n        },\n        initializeProperties: Ember.observer('member', Ember.on('init', function () {\n            if (!this.get('member')) {\n                // if we don't have a member, reset all the properties to their default values\n                // This won't be needed if we were using routes since we would have clean transitions\n                this.setProperties({\n                    isPreferred: false,\n                    isBackup: false,\n                    isPrimary: false,\n                    isReferring: false,\n                    isOther: false,\n                    otherDescription: '',\n                    contact: null\n                });\n                this._loadDirectoryAndProviders();\n                return;\n            }\n            var member = this.get('member'),\n                profile = member.get('profile'),\n                relationships = member.get('relationships'),\n                otherRelationship = relationships.findBy('careTeamMemberType', 'Other');\n            this.setProperties({\n                isPreferred: relationships.isAny('careTeamMemberType', 'PreferredProvider'),\n                isBackup: relationships.isAny('careTeamMemberType', 'BackupProvider'),\n                isPrimary: relationships.isAny('careTeamMemberType', 'PrimaryCareProvider'),\n                isReferring: relationships.isAny('careTeamMemberType', 'ReferringProvider'),\n                isOther: !!otherRelationship,\n                otherDescription: otherRelationship ? Ember.get(otherRelationship, 'description') : ''\n            });\n            this._withProgress(this.get('store').findRecord('care-team', this.get('patientPracticeGuid')).then(careTeam => {\n                this.set('careTeam', careTeam);\n            }));\n            this._setContact(profile);\n        })),\n\n        // provided entity. Only modified on save.\n        member: null,\n        selectOptions: null,\n\n        // Copies of original values\n        isPreferred: false,\n        isBackup: false,\n        isPrimary: false,\n        isReferring: false,\n        isOther: false,\n        otherDescription: '',\n        cantEditOtherDescription: Ember.computed.not('isOther'),\n        contact: null, // TODO: rename to profile, since this is the abstraction (sometimes practiceProvider not only the contact)\n\n        validator: _validation.default.validator().validates('contact').when(function (contact) {\n            // Only validate the contact if it's a directoryContact. We don't edit practiceProviders\n            return Ember.get(contact, 'isDirectoryContact');\n        }).isValid().validates('relationships').using(function (value, key, validatableObject) {\n            return validatableObject.get('isPreferred') || validatableObject.get('isBackup') || validatableObject.get('isPrimary') || validatableObject.get('isReferring') || validatableObject.get('isOther');\n        }, 'You need to select at least one relationship').build(),\n\n        actions: {\n            cancel() {\n                this.sendAction('close');\n            },\n            confirmProviderChange() {\n                // window.alert('confirmed!!');\n                this.set('isProviderChangeConfirmed', true);\n                this.set('isConfirmingProviderChange', false);\n                this.send('save');\n            },\n            save() {\n                var _this = this,\n                    member = this.get('member') || this.get('store').createRecord('care-team-member', { patientPracticeGuid: this.get('patientPracticeGuid') }),\n                    relationships = member.get('relationships'),\n                    doSave = function () {\n                    return member.save().then(function () {\n                        // TODO: try moving this to the care-team-member serializer. We already have the response payload with all the data, but we're not mapping it back correctly\n                        return _this.get('careTeam').reload().then(function () {\n                            _this.sendAction('close');\n                        });\n                    }).errorMessage('Had problems saving');\n                };\n\n                if (this.get('isAddingNew') && !this.get('contact')) {\n                    // Nothing to do here. They just opened it, didn't select anyone and clicked X\n                    this.sendAction('close');\n                    return;\n                }\n\n                this._withProgress(this.validate().then(function (isValid) {\n                    var errorMessage = _this.get('errors.relationships') || 'Please review the errors and try again.';\n                    if (!isValid) {\n                        toastr.error(errorMessage);\n                        return;\n                    }\n                    if (_this.get('needsToConfirmProviderChange')) {\n                        _this.set('isConfirmingProviderChange', true);\n                        return;\n                    }\n\n                    relationships.clear();\n                    if (_this.get('isAddingNew')) {\n                        member.set('profile', _this.get('selectedProfile'));\n                        member.set('id', member.get('profile.id'));\n                    }\n                    if (_this.get('isPreferred')) {\n                        relationships.pushObject({ careTeamMemberType: 'PreferredProvider' });\n                    }\n                    if (_this.get('isBackup')) {\n                        relationships.pushObject({ careTeamMemberType: 'BackupProvider' });\n                    }\n                    if (_this.get('isPrimary')) {\n                        relationships.pushObject({ careTeamMemberType: 'PrimaryCareProvider' });\n                    }\n                    if (_this.get('isReferring')) {\n                        relationships.pushObject({ careTeamMemberType: 'ReferringProvider' });\n                    }\n                    if (_this.get('isOther')) {\n                        relationships.pushObject({ careTeamMemberType: 'Other', description: _this.get('otherDescription') });\n                    }\n                    if (_this.get('contact.isDirectoryContact')) {\n                        // TODO: consider adding dirty tracking to the profile\n                        member.get('profile').setProperties(_this.get('contact'));\n                        return member.get('profile.directoryContact').save().then(function () {\n                            member.set('id', member.get('profile.id'));\n                            doSave();\n                        });\n                    } else {\n                        return doSave();\n                    }\n                }));\n            },\n            profileSelected(selectedOption) {\n                var profile = Ember.get(selectedOption, 'profile');\n                this.set('selectedProfile', profile);\n                this._setContact(profile);\n            },\n            createContact() {\n                var profile = _contactToProfileAdapter.default.create({\n                    directoryContact: this.get('store').createRecord('directory-contact')\n                });\n                this.set('selectedProfile', profile);\n                this._setContact(profile);\n            }\n        },\n\n        _loadDirectoryAndProviders() {\n            // TODO: consider moving all the mapping logic to a repo or its own adasermol\n            var selectOptions = [];\n            if (!this.get('selectOptions')) {\n                // Set this early to avoid trying to load twice since ED doesn't do a good job at this\n                this.set('selectOptions', selectOptions);\n                this._withProgress(Ember.RSVP.hash({\n                    practiceProviders: this.get('store').findAll('provider-profile'),\n                    directoryContacts: this.get('store').findAll('directory-contact'),\n                    specialties: this.get('store').findAll('specialty'),\n                    careTeam: this.get('store').findRecord('care-team', this.get('patientPracticeGuid'))\n                }).then(wrapInAdapters).then(hash => {\n                    this.set('careTeam', hash.careTeam);\n                    filterContactsAlreadyInCareTeam(hash.careTeam, hash);\n                    selectOptions.pushObjects(hash.practiceProviders.map(function (provider) {\n                        return {\n                            groupKey: 1,\n                            group: 'Your practice',\n                            profile: provider\n                        };\n                    }));\n                    selectOptions.pushObjects(hash.directoryContacts.map(function (contact) {\n                        return {\n                            groupKey: 2,\n                            group: 'Your connections',\n                            profile: contact\n                        };\n                    }));\n                    // selectOptions.pushObject({\n                    //     groupKey: 3,\n                    //     group: 'Practice fusion directory',\n                    //     // TODO: add selectOptionItem to override the template, grey this out and disable it\n                    //     fullProviderName: 'Search to see providers in the directory'\n                    // });\n                }));\n            }\n        },\n\n        _setContact(profile) {\n            var properties = profile.getProperties('firstName', 'lastName', 'specialtyId', 'specialty', 'officePhone', 'fax', 'email', 'isDirectoryContact', 'isProviderProfile'),\n                contact = Contact.create(properties);\n            this.set('contact', contact);\n        },\n\n        _focusOnFirstSelect: Ember.on('didInsertElement', function () {\n            this.$('input').first().focus();\n        }),\n        _focusOnSecondInput: Ember.observer('selectedProfile', function () {\n            var _this = this;\n            Ember.run.scheduleOnce('afterRender', function () {\n                var inputs = _this.$('input:enabled'),\n                    secondInput = $(inputs[1]);\n                secondInput.focus();\n            });\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/care-team-list', ['exports', 'common/mixins/spinner', 'clinical/mixins/loading', 'tyrion/mixins/destroyed', 'clinical/models/contact-to-profile-adapter'], function (exports, _spinner, _loading, _destroyed, _contactToProfileAdapter) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_spinner.default, _loading.default, _destroyed.default, {\n        classNames: ['care-team-list'],\n        showSpinner: Ember.computed.alias('isLoading'),\n\n        loadCareTeam: Ember.on('init', Ember.observer('patientPracticeGuid', function () {\n            if (this.get('patientPracticeGuid')) {\n                this.get('store').findRecord('care-team', this.get('patientPracticeGuid')).then(careTeam => this._unlessDestroyed(() => {\n                    this.reloadContactsIfNeeded(careTeam);\n                    this.set('careTeam', careTeam);\n                }));\n            }\n        })),\n        reloadContactsIfNeeded(careTeam) {\n            const members = careTeam.get('members');\n            const membersNeedingReload = members ? members.filter(member => {\n                return member.get('isDirectoryContact') && !member.get('directoryContact');\n            }) : null;\n            if (Ember.isPresent(membersNeedingReload)) {\n                this.get('store').findAll('directory-contact').then(contacts => {\n                    membersNeedingReload.forEach(member => {\n                        const contact = contacts.findBy('id', member.get('id'));\n                        if (contact) {\n                            member.set('profile', _contactToProfileAdapter.default.create({ directoryContact: contact }));\n                        }\n                    });\n                });\n            }\n        },\n        actions: {\n            add() {\n                this.sendAction('addProvider');\n            },\n            edit(member) {\n                if (!this.get('disabled')) {\n                    this.sendAction('selectMember', member);\n                }\n            },\n            delete(member) {\n                var careTeam = this.get('careTeam');\n                member.get('relationships').clear();\n                this._withProgress(member.save().then(function () {\n                    // TODO: try moving this to the care-team-member serializer. We already have the response payload with all the data, but we're not mapping it back correctly\n                    careTeam.reload();\n                })).errorMessage('Failed to delete the care team member');\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/ccda-preview-modal', ['exports', 'ember-concurrency', 'clinical/mixins/loading', 'tyrion/mixins/destroyed', 'common/mixins/spinner', 'tyrion/components/mixins/print-preview-support', 'charting/mixins/with-patient-print-title', 'clinical/repositories/ccda-preview', 'boot/util/pf-browser'], function (exports, _emberConcurrency, _loading, _destroyed, _spinner, _printPreviewSupport, _withPatientPrintTitle, _ccdaPreview, _pfBrowser) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_loading.default, _destroyed.default, _spinner.default, _printPreviewSupport.default, _withPatientPrintTitle.default, {\n        contentElement: '.content-modal-body',\n        showSpinner: Ember.computed.alias('isLoading'),\n        classNames: ['ccda-preview-modal'],\n        printContentSelector: '.ccda-preview-modal-content',\n        documentGuid: Ember.computed.alias('ccdaParams.docGUID'),\n        patientPracticeGuid: Ember.computed.alias('ccdaParams.patientGUID'),\n        threadGuid: Ember.computed.alias('ccdaParams.threadGuid'),\n        titleConfigurable: Ember.computed('ccdaParams.doctype', 'ccda.documentType', 'patientName', 'isConfigurable', 'isValidationError', 'showErrorPane', function () {\n            const docType = this.get('ccda.documentType') || this.get('ccdaParams.doctype');\n            const name = this.get('patientName');\n            if (this.get('showErrorPane')) {\n                return 'Validation Error';\n            }\n            if (this.get('isConfigurable') && name) {\n                return `${docType} for ${name}`;\n            }\n            if (this.get('isValidationError')) {\n                if (docType) {\n                    return `${docType} validation error`;\n                }\n                return 'Validation error';\n            }\n            return docType;\n        }),\n        title: Ember.computed.alias('ccdaParams.doctype'),\n        clinicalDocumentType: null,\n        notificationFade: null,\n        isHtmlDownloadAvailable: Ember.computed.alias('ccdaParams.isHtmlDownloadAvailable'),\n        isVisible: Ember.computed.alias('ccdaParams'),\n        isConfigurable: true,\n        isOutbound: Ember.computed.alias('ccdaParams.isOutbound'),\n        shouldHideSettingsLink: Ember.computed.or('isValidationError', 'isOutbound'),\n        layoutName: Ember.computed('isConfigurable', function () {\n            if (this.get('isConfigurable')) {\n                return 'components/ccda-preview-modal-configurable';\n            }\n            return 'components/ccda-preview-modal-default';\n        }),\n        showErrorPane: false,\n        showNotification: true,\n        isValidationError: Ember.computed('ccda.validationErrors', function () {\n            const validationErrors = this.get('ccda.validationErrors');\n            return Ember.isPresent(validationErrors) && validationErrors.errorCount > 0;\n        }),\n        isParseError: Ember.computed('ccda.validationErrors', 'ccda.clinicalDocument', function () {\n            const validationErrors = this.get('ccda.validationErrors');\n            const parsedDocument = this.get('ccda.clinicalDocument');\n            return Ember.isEmpty(parsedDocument) && Ember.isPresent(validationErrors) && validationErrors.errorCount > 0;\n        }),\n        validationErrorMessage: Ember.computed('ccda.validationErrors', function () {\n            const validationErrors = this.get('ccda.validationErrors');\n            if (Ember.isEmpty(validationErrors) || validationErrors.errorCount < 1) {\n                return '';\n            }\n\n            const errorCount = validationErrors.errorCount;\n            return errorCount > 1 ? `${errorCount} errors detected ` : '1 error detected';\n        }),\n        isValidating: Ember.computed.alias('validateCcda.isRunning'),\n        parentDisplayObserver: Ember.observer('ccda.components.@each.isDisplayActive', function () {\n            const components = this.get('ccda.components');\n            if (Ember.isPresent(components)) {\n                components.filterBy('isChild').forEach(child => {\n                    const parentComponent = components.findBy('templateOid', child.sortingTemplateOid);\n                    if (Ember.isPresent(parentComponent)) {\n                        Ember.set(child, 'isDisplayActive', parentComponent.isDisplayActive);\n                    }\n                });\n            }\n        }),\n\n        sortedComponents: Ember.computed('ccda.components.[]', function () {\n            const components = this.get('ccda.components');\n            if (Ember.isPresent(components)) {\n                return components.sortBy('sortOrder');\n            }\n            return components;\n        }),\n\n        isNotificationDisplayed: Ember.computed.or('showNotification', 'isValidating'),\n\n        init() {\n            this._super();\n            const params = this.getProperties('documentGuid', 'patientPracticeGuid', 'threadGuid', 'isOutbound');\n            this._withProgress(_ccdaPreview.default.loadCcda(params).then(ccda => this._unlessDestroyed(() => {\n                this.set('ccda', ccda);\n                if (Ember.isEmpty(this.get('title'))) {\n                    this.set('title', ccda.documentType);\n                }\n                this.set('clinicalDocumentType', ccda.documentType);\n\n                if (this.get('isConfigurable')) {\n                    this.appendParentOnlyComponents(ccda.components);\n\n                    if (Ember.isEmpty(ccda.validationErrors)) {\n                        this.get('validateCcda').perform();\n                    } else if (Ember.isEmpty(ccda.patientDemographics)) {\n                        this.set('showErrorPane', true);\n                    }\n                    this.get('updateNotification').perform();\n                }\n            })).catch(() => {\n                toastr.error('Unable to load clinical document at this time');\n                this._setUnlessDestroyed('isVisible', false);\n            }));\n        },\n        patientName: Ember.computed('ccda.patientDemographics.name', function () {\n            const name = this.get('ccda.patientDemographics.name');\n            let fullName;\n            if (name && name.firstName && name.lastName) {\n                fullName = `${name.firstName} ${name.lastName}`;\n                if (name.suffix) {\n                    fullName += ` ${name.suffix}`;\n                }\n            }\n            return fullName;\n        }),\n        preferredLanguage: Ember.computed('ccda.patientDemographics.preferredLanguage', function () {\n            const language = this.get('ccda.patientDemographics.preferredLanguage');\n            if (language === 'eng') {\n                return 'English';\n            } else if (language === 'spa') {\n                return 'Spanish';\n            }\n            return language;\n        }),\n        careTeamAddress: Ember.computed.alias('ccda.careTeamMembers.firstObject.providerFacility'),\n        careTeamPhone: Ember.computed.alias('ccda.careTeamMembers.firstObject.providerPhone'),\n        careTeamNames: Ember.computed('ccda.careTeamMembers', function () {\n            const members = this.get('ccda.careTeamMembers') || [];\n            const names = members.map(member => {\n                let name;\n                if (member.providerName && member.providerName.firstName) {\n                    name = `${member.providerName.firstName} ${member.providerName.lastName}`;\n                    if (member.providerName.suffix) {\n                        name += ` ${member.providerName.suffix}`;\n                    }\n                }\n                return name;\n            }).compact().uniq();\n            return Ember.isEmpty(names) ? ['None recorded'] : names;\n        }),\n        patientSummary: Ember.computed('patientPracticeGuid', 'ccda.patientDemographics', function () {\n            const patientPracticeGuid = this.get('patientPracticeGuid');\n            let summary;\n            if (Ember.isPresent(patientPracticeGuid)) {\n                summary = this.get('store').peekRecord('patient-summary', patientPracticeGuid);\n            }\n            if (!summary) {\n                summary = {\n                    fullName: this.get('patientName'),\n                    birthDate: this.get('ccda.patientDemographics.dateOfBirth')\n                };\n            }\n            return summary;\n        }),\n        shouldHideDownloadButton: Ember.computed(function () {\n            return _pfBrowser.default.isMobile();\n        }),\n        printPreviewDidLoad() {\n            const $printContainer = Ember.$(this.get('printContentSelector'));\n            const [printContainer] = $printContainer;\n            if (printContainer) {\n                $printContainer.addClass('size-for-print-content');\n                this.set('printFrameHeightValue', printContainer.scrollHeight);\n                $printContainer.removeClass('size-for-print-content');\n            }\n        },\n        appendParentOnlyComponents(components) {\n            const parentsToAppend = [];\n            if (Ember.isPresent(components)) {\n                this.get('store').findAll('incoming-ccda-display-preference').then(preferences => {\n                    components.filterBy('isChild').map(component => component.sortingTemplateOid).forEach(parentOid => {\n                        const existingParent = components.findBy('templateOid', parentOid);\n                        if (Ember.isEmpty(existingParent)) {\n                            const preferenceParent = preferences.findBy('templateOid', parentOid);\n                            if (Ember.isPresent(preferenceParent)) {\n                                parentsToAppend.push({\n                                    isTocOnly: true,\n                                    title: preferenceParent.get('sectionName'),\n                                    templateOid: preferenceParent.get('templateOid'),\n                                    isChild: false,\n                                    sortOrder: preferenceParent.get('sortOrder'),\n                                    isDisplayActive: preferenceParent.get('isDisplayActive'),\n                                    dataElement: 'ccda-component-' + preferenceParent.get('sectionName').replace(/\\W/g, ''),\n                                    dataElementToc: 'ccda-toc-component-' + preferenceParent.get('sectionName').replace(/\\W/g, ''),\n                                    dataElementClass: '.ccda-component-' + preferenceParent.get('sectionName').replace(/\\W/g, '')\n                                });\n                            }\n                        }\n                    });\n                    parentsToAppend.forEach(component => {\n                        if (!components.isAny('templateOid', component.templateOid)) {\n                            components.pushObject(component);\n                        }\n                    });\n                });\n            }\n        },\n        validateCcda: (0, _emberConcurrency.task)(function* () {\n            this.set('showNotification', false);\n            const params = this.getProperties('documentGuid', 'patientPracticeGuid', 'threadGuid', 'isOutbound');\n            try {\n                const validation = yield _ccdaPreview.default.validateCcda(params);\n                if (Ember.isPresent(validation)) {\n                    this.set('ccda.validationErrors', validation);\n                }\n            } catch (e) {\n                toastr.error('Unable to validate clinical document at this time');\n            }\n            this.get('updateNotification').perform();\n        }).drop(),\n        updateNotification: (0, _emberConcurrency.task)(function* () {\n            this.set('showNotification', true);\n            if (!this.get('isValidationError')) {\n                yield (0, _emberConcurrency.timeout)(3000);\n                this.set('showNotification', false);\n            }\n        }).restartable(),\n\n        actions: {\n            download(isHtml) {\n                const clinicalDocumentTypeCode = this.get('clinicalDocumentType') || this.get('title');\n                const downloadRequest = Ember.Object.create({\n                    documentGuid: this.get('documentGuid'),\n                    patientGuid: this.get('patientPracticeGuid'),\n                    threadGuid: this.get('threadGuid'),\n                    clinicalDocumentTypeCode\n                });\n\n                this.sendAction(isHtml ? 'downloadHtml' : 'download', downloadRequest);\n                this.set('isVisible', false);\n            },\n            print() {\n                if (this.get('isConfigurable') && this.get('isValidationError')) {\n                    this.set('printContentSelector', '.ccda-preview-modal-error-content');\n                } else {\n                    this.set('printContentSelector', '.ccda-preview-modal-content');\n                }\n                _ccdaPreview.default.auditPrint(this.getProperties('patientPracticeGuid', 'patientName'));\n                Ember.run.next(this, 'send', 'printPreview');\n            },\n            goToSection(dataElement) {\n                let target = this.$(`.left-panel [data-element='${dataElement}']`);\n                if (Ember.isEmpty(target)) {\n                    const components = this.get('sortedComponents');\n                    const targetRecord = components.findBy('dataElement', dataElement);\n                    target = components.filterBy('sortingTemplateOid', targetRecord.templateOid).map(component => {\n                        return this.$(`.left-panel [data-element='${component.dataElement}']`);\n                    }).find(element => {\n                        return Ember.isPresent(element) && element.length > 0;\n                    });\n                }\n                if (Ember.isPresent(target)) {\n                    this.$('.left-panel').scrollTop(Ember.$(target)[0].offsetTop - 45);\n                }\n            },\n            gotoCcdSettings() {\n                this.set('isVisible', false);\n                this.sendAction('gotoCcdSettings');\n            },\n            toggleErrorPane() {\n                this.toggleProperty('showErrorPane');\n            },\n            closeNotification() {\n                this.set('showNotification', false);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/cds-alert', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    const ENCOUNTER_MEDICATION_NEW_ROUTE = {\n        route: 'encounter.medication',\n        arg1: 'new'\n    };\n    const RESULT_NEW_ROUTE = {\n        route: 'results.new',\n        arg1: 'diagnostic'\n    };\n    const ACTION_LINK_TYPE_TO_EMBER_ROUTE_MAP = {\n        addLabResult: RESULT_NEW_ROUTE,\n        orderLabDiagnostic: {\n            route: 'orders.new',\n            arg1: 'diagnostic'\n        },\n        addVaccine: {\n            route: 'patient.immunizations'\n        },\n        addMedication: ENCOUNTER_MEDICATION_NEW_ROUTE\n    };\n\n    exports.default = Ember.Component.extend({\n        analytics: Ember.inject.service(),\n        routing: Ember.inject.service('pf-routing'),\n\n        bubbleAction: null,\n        cdsAlert: null,\n        isExpanded: false,\n        patientPracticeGuid: null,\n        transcriptGuid: null,\n\n        actionLinkText: Ember.computed.alias('cdsAlert.actionLinkText'),\n        actionLinkData: Ember.computed.alias('cdsAlert.actionLinkData'),\n        alertIdentifier: Ember.computed.alias('cdsAlert.alertIdentifier'),\n        ruleId: Ember.computed.alias('cdsAlert.ruleId'),\n        isExternalLink: Ember.computed.equal('actionLinkType', 'resourceLink'),\n        showInfobuttonLink: Ember.computed.alias('cdsAlert.infobutton.length'),\n\n        eventTypeGuid: Ember.computed('actionLinkData', function () {\n            const actionLinkDataQueryString = this.get('actionLinkData');\n            if (actionLinkDataQueryString) {\n                return this._getParameterByName('eventTypeGuid', actionLinkDataQueryString);\n            }\n            return null;\n        }),\n        worksheetGuid: Ember.computed('actionLinkData', function () {\n            const actionLinkDataQueryString = this.get('actionLinkData');\n            if (actionLinkDataQueryString) {\n                return this._getParameterByName('worksheetGuid', actionLinkDataQueryString);\n            }\n            return null;\n        }),\n        token: Ember.computed('actionLinkData', function () {\n            const actionLinkDataQueryString = this.get('actionLinkData');\n            if (actionLinkDataQueryString) {\n                const name = this._getParameterByName('name', actionLinkDataQueryString);\n                if (name) {\n                    return { name };\n                }\n            }\n            return null;\n        }),\n        data: Ember.computed('actionLinkData', function () {\n            const actionLinkDataQueryString = this.get('actionLinkData');\n            if (actionLinkDataQueryString) {\n                const data = {};\n                const params = actionLinkDataQueryString.split('&');\n                params.forEach(param => {\n                    const kvp = param.split('=');\n                    data[decodeURIComponent(kvp[0])] = decodeURIComponent(kvp[1] || '');\n                });\n\n                return data;\n            }\n            return null;\n        }),\n        externalLinkUri: Ember.computed('actionLinkData', function () {\n            const actionLinkDataQueryString = this.get('actionLinkData');\n            if (actionLinkDataQueryString) {\n                return this._getParameterByName('uri', actionLinkDataQueryString);\n            }\n            return null;\n        }),\n        internalRouteLink: Ember.computed('alertIdentifier', function () {\n            // Ugh, unfortunate necessary evil because we want ember route link information to be sourced on the client.\n            const actionLinkType = this.get('actionLinkType');\n            const vaccineSearchQuery = this.get('vaccineSearchQuery');\n            const internalRouteParameters = ACTION_LINK_TYPE_TO_EMBER_ROUTE_MAP[actionLinkType];\n\n            if (internalRouteParameters && Ember.isNone(vaccineSearchQuery)) {\n                return internalRouteParameters;\n            }\n\n            if (actionLinkType === 'internalSupportLink') {\n                return {\n                    route: 'supportInfo',\n                    arg1: this.get('actionLinkData')\n                };\n            }\n            return null;\n        }),\n        isVaccineRoute: Ember.computed('pf-routing.currentRouteName', function () {\n            const currentRouteName = this.get('routing').get('currentRouteName');\n            if (currentRouteName === 'patient.immunizations') {\n                return true;\n            }\n            return null;\n        }),\n        vaccineSearchQuery: Ember.computed('actionLinkData', function () {\n            const actionLinkDataQueryString = this.get('actionLinkData');\n            if (actionLinkDataQueryString) {\n                return this._getParameterByName('searchQuery', actionLinkDataQueryString);\n            }\n            return null;\n        }),\n        ruleVersion: Ember.computed.alias('cdsAlert.ruleVersion'),\n        actionLinkType: Ember.computed('cdsAlert.actionLinkType', 'session.userEditLevel', function () {\n            const actionLinkType = this.get('cdsAlert.actionLinkType');\n            const userEditLevel = this.get('session.userEditLevel');\n            if (actionLinkType === 'addQualityOfCareIndicator' && userEditLevel < 2) {\n                return null;\n            }\n            return actionLinkType;\n        }),\n        _getParameterByName(name, queryString) {\n            if (Ember.isEmpty(queryString)) {\n                return null;\n            }\n\n            name = name.replace(/[\\[\\]]/g, '\\\\$&');\n            const regex = new RegExp(name + '(=([^&#]*)|&|#|$)');\n            const results = regex.exec(queryString);\n            if (!results) {\n                return null;\n            }\n            if (!results[2]) {\n                return '';\n            }\n            return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n        },\n        _track(text, data) {\n            const trackingData = data || {};\n            trackingData['CDS Alert Identifier'] = this.get('ruleId');\n            trackingData['Transcript Guid'] = this.get('transcriptGuid');\n            trackingData['Patient Practice Guid'] = this.get('patientPracticeGuid');\n            this.get('analytics').track(text, trackingData);\n        },\n        actions: {\n            dismiss() {\n                this.attrs.cdsAlertDismissed(this.get('cdsAlert'));\n                this._track('Cds Alert Dismissed');\n            },\n            toggleExpanded() {\n                this.toggleProperty('isExpanded');\n\n                if (this.get('isExpanded')) {\n                    this._track('Cds Alert Expanded');\n                }\n            },\n            bubbleAction() {\n                const cdsAction = {\n                    text: this.get('actionLinkText'),\n                    action: this.get('actionLinkType'),\n                    data: this.get('data'),\n                    worksheetGuid: this.get('worksheetGuid'),\n                    eventTypeGuid: this.get('eventTypeGuid'),\n                    // ruleId to be compatible with encounter code\n                    cdsRuleId: this.get('ruleId'),\n                    searchQuery: this.get('vaccineSearchQuery'),\n                    patientPracticeGuid: this.get('patientPracticeGuid')\n                };\n                const token = this.get('token');\n\n                if (this.get('isVaccineRoute')) {\n                    cdsAction.preloadCode = cdsAction.searchQuery;\n                    cdsAction.preloadKeyword = cdsAction.searchQuery;\n                } else if (cdsAction.action === 'addVaccine' && cdsAction.searchQuery) {\n                    cdsAction.action = 'preloadPatientImmunizations';\n                    cdsAction.arg1 = cdsAction.searchQuery;\n                }\n                if (token) {\n                    cdsAction.token = token;\n                    cdsAction.source = 'CDS Alert';\n                    // TODO: Extract out the defaults to be more generic when we get another clinical worksheet deal\n                    cdsAction.defaults = [{\n                        key: 'proliaMedicationHistory',\n                        property: 'value',\n                        value: 'PreviousHistory'\n                    }];\n                }\n\n                this.attrs.bubbleAction(cdsAction);\n\n                this._track('Cds Alert Custom Action Followed', {\n                    'CDS Alert Custom Action Text': cdsAction.text\n                });\n            },\n            openUri(uri) {\n                const usableUri = uri || this.get('cdsAlert.customAction.uri');\n                this._track('Cds Alert External Deep Link Uri Opened');\n                window.open(usableUri, '_blank');\n            },\n            routeLink(route, argument) {\n                if (route) {\n                    this._track('Cds Alert Went To Internal Link', {\n                        'CDS Alert Internal Link Route': route\n                    });\n\n                    if (argument) {\n                        this.get('routing').transitionToRoute(route, argument);\n                    } else {\n                        this.get('routing').transitionToRoute(route);\n                    }\n                }\n            },\n            trackReferenceLinkClick() {\n                this._track('Cds Alert Reference Information Click');\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/cds-alerts', ['exports', 'charting/mixins/cds-alerts-mixin'], function (exports, _cdsAlertsMixin) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_cdsAlertsMixin.default, {\n        classNames: ['cdsAccordion'],\n        tagName: 'section',\n        authorization: Ember.inject.service(),\n\n        cdsAlerts: null,\n        isExpanded: true,\n        isLoading: false,\n        cdsEndpointError: false,\n        shouldCollapseOnScroll: true,\n\n        showActionLinks: Ember.computed('authorization.entitledFeatures.[]', function () {\n            return this.get('authorization').isEntitledFor('Chart.CDS.Interact');\n        }),\n        items: Ember.computed('cdsAlerts.[]', 'cdsAlerts.@each.isDismissed', function () {\n            let list = this.get('cdsAlerts') || [];\n            return list.rejectBy('isDismissed');\n        }),\n        processInfoButtons: Ember.observer('cdsAlerts.@each.infobutton', function () {\n            const cdsAlerts = this.get('cdsAlerts') || [];\n            const alertsWithInfobuttons = cdsAlerts.filterBy('infobutton');\n\n            if (!Ember.isEmpty(alertsWithInfobuttons)) {\n                this.updateInfobuttonLinks(alertsWithInfobuttons);\n            }\n        }),\n        actions: {\n            cdsAlertDismissed(cdsAlert) {\n                let cdsAlertToDismiss = this.get('cdsAlerts').findBy('ruleId', Ember.get(cdsAlert, 'ruleId'));\n\n                if (cdsAlertToDismiss) {\n                    Ember.set(cdsAlertToDismiss, 'isDismissed', true);\n                }\n            },\n\n            toggleExpanded() {\n                if (this.get('isLoading')) {\n                    return;\n                }\n                Ember.run(() => {\n                    // Prevents tests from spazzing\n                    this.setIsExpanded(!this.get('isExpanded'));\n                });\n            },\n            refreshData() {\n                this.setIsExpanded(false);\n                this.sendAction('refresh');\n                return false;\n            },\n            bubbleAction(action) {\n                this.sendAction('bubbleAction', action.action, action);\n            }\n        },\n        setIsExpanded(value) {\n            if (this.get('isExpanded') === value) {\n                return;\n            }\n            this.removeScrollHandler();\n            Ember.run(() => {\n                this.set('isExpanded', value);\n            });\n            if (value) {\n                this.$('.cds-alerts').slideDown(250, this.addScrollHandler.bind(this));\n            } else {\n                this.$('.cds-alerts').slideUp(250, this.addScrollHandler.bind(this));\n            }\n        },\n        didInsertElement() {\n            this.addScrollHandler();\n        },\n        willDestroyElement() {\n            this.removeScrollHandler();\n        },\n        addScrollHandler() {\n            if (this._$container()) {\n                this._$container().on('scroll', $.proxy(this, 'onScroll'));\n            }\n        },\n        removeScrollHandler() {\n            if (this._$container()) {\n                this._$container().off('scroll', $.proxy(this, 'onScroll'));\n            }\n        },\n        onScroll() {\n            var scrollTop = this._$container().scrollTop();\n            if (scrollTop === 0) {\n                this.set('shouldCollapseOnScroll', true);\n                if (!this.get('isLoading')) {\n                    this.setIsExpanded(true);\n                }\n            } else if (scrollTop > 0 && this.get('shouldCollapseOnScroll')) {\n                this.set('shouldCollapseOnScroll', false);\n                this.setIsExpanded(false);\n            }\n        },\n        _$container() {\n            // HACK: Horrible hack to get to this in both immunizations and encounter. This solution is fragile.\n            // We need a better way to find the right container that isn't coupled with the current HTML structure.\n            // TODO: Consider moving the scroll-up logic to the (yet to be created) csd-alerts component.\n            return this.$() ? this.$().parent() : null;\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/create-clinical-document-modal', ['exports', 'clinical/mixins/loading', 'tyrion/mixins/destroyed', 'common/mixins/spinner', 'boot/util/pf-server'], function (exports, _loading, _destroyed, _spinner, _pfServer) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_destroyed.default, _loading.default, _spinner.default, {\n        classNames: ['create-clinical-document-modal'],\n        showSpinner: Ember.computed.alias('isLoading'),\n        contentElement: '.content-modal',\n        isSelectionDisabled: Ember.computed.equal('selectedType', 'Referral Summary'),\n        analytics: Ember.inject.service(),\n        title: Ember.computed('patientName', function () {\n            return `Export patient record for ${this.get('patientName')}`;\n        }),\n        _loadDocumentTypes: Ember.on('init', function () {\n            this._withProgress(this.store.findAll('ccda-document-type').then(documentTypes => this._setPropertiesUnlessDestroyed({\n                documentTypes: documentTypes,\n                selectedType: documentTypes.get('firstObject.code')\n            })));\n        }),\n        _loadCcdaComponents: Ember.observer('selectedType', function () {\n            this._withProgress(this.store.query('ccda-template-component', { documentType: this.get('selectedType') }).then(sections => {\n                sections.setEach('isChecked', true);\n                this._setUnlessDestroyed('sections', sections);\n            }));\n        }),\n        optionalSections: Ember.computed.filterBy('sections', 'isOptional'),\n        actions: {\n            selectAll(value) {\n                if (!this.get('isSelectionDisabled')) {\n                    let sections = this.get('optionalSections') || [];\n                    sections.setEach('isChecked', value);\n                }\n            },\n            cancel() {\n                this.set('isVisible', false);\n            },\n            create() {\n                if (this.get('isLoading')) {\n                    return;\n                }\n                let url = `${this.get('config.clinicalDocumentBaseURL')}/ccda/patient`,\n                    data = {\n                    ccdaGenerationType: this.get('selectedType').replace(' Summary', ''),\n                    patientPracticeGuid: this.get('patientPracticeGuid'),\n                    requestedCcdaSections: this.get('optionalSections').filterBy('isChecked').map(function (section) {\n                        return section.get('id').replace(/_|Section/g, '');\n                    })\n                };\n                this._withProgress(_pfServer.default.promise(url, 'POST', data)).catch(() => toastr.error('There was a problem creating the document')).finally(() => {\n                    this._unlessDestroyed(() => {\n                        this.set('isVisible', false);\n                        this.sendAction('create');\n                    });\n                });\n                this.get('analytics').track('Data Portability Patient Generate');\n            }\n        },\n        _getSections() {\n            return this.get('optionalSections').map(function (section) {\n                return {\n                    name: section.get('id'),\n                    toUse: section.get('isChecked')\n                };\n            });\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/create-patient-clinical-document-modal', ['exports', 'clinical/mixins/loading', 'tyrion/mixins/destroyed', 'common/mixins/spinner', 'boot/util/pf-server'], function (exports, _loading, _destroyed, _spinner, _pfServer) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_destroyed.default, _loading.default, _spinner.default, {\n        classNames: ['create-clinical-document-modal', 'patient-ccda-modal'],\n        showSpinner: Ember.computed.alias('isLoading'),\n        contentElement: '.content-modal',\n        analytics: Ember.inject.service(),\n\n        patientName: null,\n        dob: null,\n        gender: null,\n\n        sections: null,\n        _loadCcdaComponents: Ember.on('init', function () {\n            this._withProgress(this.store.query('ccda-template-component', { documentType: 'Clinical' }).then(sections => {\n                sections.setEach('isChecked', true);\n                this._setUnlessDestroyed('sections', sections);\n            }));\n        }),\n        actions: {\n            selectAll(value) {\n                if (Ember.isPresent(this.get('sections'))) {\n                    const sections = this.get('sections') || [];\n                    sections.setEach('isChecked', value);\n                }\n            },\n            cancel() {\n                this.set('isVisible', false);\n            },\n            create() {\n                if (this.get('isLoading')) {\n                    return;\n                }\n                const url = `${this.get('config.clinicalDocumentBaseURL')}/ccda/patient`;\n                const data = {\n                    ccdaGenerationType: 'Clinical',\n                    patientPracticeGuid: this.get('patientPracticeGuid'),\n                    requestedCcdaSections: this.get('sections').filterBy('isChecked').mapBy('id')\n                };\n                this._withProgress(_pfServer.default.promise(url, 'POST', data)).then(() => {\n                    this.sendAction('create');\n                    this.get('analytics').track('Data Portability Patient Generate');\n                }).catch(() => toastr.error('There was a problem creating the document')).finally(() => {\n                    this._unlessDestroyed(() => {\n                        this.set('isVisible', false);\n                    });\n                });\n            }\n        },\n        _getSections() {\n            return this.get('sections').map(section => {\n                return {\n                    name: section.get('id'),\n                    toUse: section.get('isChecked')\n                };\n            });\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/datetime-formatted', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    const nullableMoment = { format: $.noop };\n    exports.default = Ember.Component.extend({\n        tagName: 'time',\n        datetime: null,\n        format: 'MM/DD/YY',\n        titleFormat: 'dddd MMMM Do YYYY',\n        attributeBindings: ['datetime', 'title', 'data-element'],\n        isSourceInUtc: true,\n        title: Ember.computed('moment', function () {\n            return this.get('moment').format(this.get('titleFormat'));\n        }),\n        humanize: false,\n        formattedDate: Ember.computed('moment', 'humanize', 'format', function () {\n            if (this.get('humanize')) {\n                return this.get('moment').fromNow();\n            }\n            return this.get('moment').format(this.get('format'));\n        }),\n        moment: Ember.computed('datetime', function () {\n            if (Ember.isEmpty(this.get('datetime'))) {\n                return nullableMoment;\n            }\n            var value;\n            if (this.get('isSourceInUtc')) {\n                value = moment.utc(this.get('datetime'));\n            } else {\n                value = moment(this.get('datetime'));\n            }\n            return value;\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/deprecated/allergy-free-text-message', ['exports', 'clinical/components/allergy-free-text-message'], function (exports, _allergyFreeTextMessage) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _allergyFreeTextMessage.default.extend();\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/deprecated/diagnoses-summary-list-item', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        classNameBindings: [':item', 'isSelected:active'],\n        isSelected: Ember.computed('selectedDiagnosisGuid', 'diagnosis.diagnosisGuid', function () {\n            return this.get('selectedDiagnosisGuid') === this.get('diagnosis.diagnosisGuid');\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/deprecated/diagnoses-summary-list-section', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        actions: {\n            editDiagnosis(diagnosis) {\n                this.sendAction('editDiagnosis', diagnosis);\n            },\n            toggleProperty(key) {\n                this.toggleProperty(key);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/deprecated/diagnoses-summary-list', ['exports', 'clinical/mixins/with-diagnoses', 'charting/mixins/with-patient-print-title'], function (exports, _withDiagnoses, _withPatientPrintTitle) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_withDiagnoses.default, _withPatientPrintTitle.default, {\n        classNames: 'diagnoses-summary-list',\n        patientSummary: Ember.computed.alias('patient'),\n        displayName: 'Diagnoses',\n\n        activeDiagnosesSortProperty: Ember.computed(() => ['content.startDate:desc']),\n        historicalDiagnosesSortProperty: Ember.computed(() => ['content.stopDate:desc']),\n        sortedChronicActiveDiagnoses: Ember.computed.sort('chronicActivePatientDiagnoses', 'activeDiagnosesSortProperty'),\n        sortedChronicHistoricalDiagnoses: Ember.computed.sort('chronicHistoricalPatientDiagnoses', 'historicalDiagnosesSortProperty'),\n        sortedAcuteActiveDiagnoses: Ember.computed.sort('acuteActivePatientDiagnoses', 'activeDiagnosesSortProperty'),\n        sortedAcuteHistoricalDiagnoses: Ember.computed.sort('acuteHistoricalPatientDiagnoses', 'historicalDiagnosesSortProperty'),\n        allActiveDiagnoses: Ember.computed.sort('activePatientDiagnoses', 'activeDiagnosesSortProperty'),\n        allHistoricalDiagnoses: Ember.computed.sort('historicalPatientDiagnoses', 'historicalDiagnosesSortProperty'),\n\n        patientGuid: Ember.computed.alias('patient.patientPracticeGuid'),\n        isAllowedToEditDiagnoses: Ember.computed('authorization.entitledFeatures.[]', function () {\n            return this.get('authorization').isEntitledFor('Chart.Summary.Edit');\n        }),\n        actions: {\n            displayChanged(diagnosisDescriptionDisplay) {\n                this.set('diagnosisDescriptionDisplay', diagnosisDescriptionDisplay);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/device-detail', ['exports', 'common/helpers/validation', 'clinical/repositories/devices', 'clinical/mixins/loading', 'common/mixins/spinner', 'ember-lgtm/mixins/validatable', 'tyrion/mixins/destroyed'], function (exports, _validation, _devices, _loading, _spinner, _validatable, _destroyed) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_spinner.default, _loading.default, _destroyed.default, _validatable.default, {\n        classNames: ['detail-pane', 'col-sm-5', 'summary-details', 'side-fixed'],\n        tagName: 'section',\n\n        analytics: Ember.inject.service(),\n        routing: Ember.inject.service('pf-routing'),\n        resizables: Ember.computed(() => []),\n        authorization: Ember.inject.service(),\n        isAllowedToEditDevices: Ember.computed('authorization.entitledFeatures.[]', function () {\n            return this.get('authorization').isEntitledFor('Chart.Devices.Edit');\n        }),\n        isNotAllowedToEditDevices: Ember.computed.not('isAllowedToEditDevices'),\n        contentElement: '.device-detail .detail-pane-body-wrapper',\n        showSpinner: Ember.computed.alias('isLoading'),\n        showDeleteConfirm: false,\n        editedDeviceGuid: '',\n        isDirty: false,\n        isEditing: false,\n        device: {},\n        showAdvancedOptions: false,\n        deviceName: Ember.computed.alias('device.userEnteredInfo.userEnteredDeviceTypeName'),\n        implantDate: Ember.computed.alias('device.userEnteredInfo.userEnteredImplantDate'),\n        udi: Ember.computed.alias('device.udiInfo.uniqueDeviceIdentifier'),\n\n        isUdiPopulated: Ember.computed('device.udiInfo', function () {\n            return !Ember.isEmpty(this.get('device.udiInfo.deviceIdentifier')) && !Ember.isEmpty(this.get('device.udiInfo.uniqueDeviceIdentifier'));\n        }),\n        isSaveDisabled: Ember.computed.not('isUdiPopulated'),\n\n        manufactureDateDisplay: Ember.computed('device.udiInfo.manufacturingDate', function () {\n            return this._getDisplayDate(this.get('device.udiInfo.manufacturingDate'));\n        }),\n\n        expirationDateDisplay: Ember.computed('device.expirationDate', function () {\n            return this._getDisplayDate(this.get('device.udiInfo.expirationDate'));\n        }),\n\n        validator: _validation.default.validator().validates('udi').required('Please enter a Unique Device Identifier').validates('implantDate').optional().isDate('Please enter a valid date').build(),\n\n        disabled: Ember.computed('isNotAllowedToEditDevices', function () {\n            return !this.get('session.canEditChart') || this.get('isNotAllowedToEditDevices');\n        }),\n\n        canDelete: Ember.computed('isEditing', 'disabled', function () {\n            return this.get('isEditing') && !this.get('disabled');\n        }),\n\n        _closing: Ember.observer('closing', function () {\n            if (!this.get('closing')) {\n                return;\n            }\n            this.set('closing', false);\n            if (this.get('isDirty')) {\n                Ember.run.once(this, '_saveDevice');\n            }\n        }),\n\n        loadEditedDevice: Ember.on('init', Ember.observer('editedDeviceGuid', function () {\n            const deviceGuid = this.get('editedDeviceGuid');\n            const isEditing = !Ember.isEmpty(deviceGuid);\n\n            this.setProperties({\n                isEditing: isEditing,\n                device: {\n                    userEnteredInfo: {},\n                    udiInfo: {\n                        snomed: []\n                    },\n                    isActive: false,\n                    patientPracticeGuid: this.get('patientGuid')\n                }\n            });\n            if (isEditing) {\n                this._loadDevice();\n            }\n        })),\n\n        actions: {\n            getUdiInfo() {\n                const device = this.get('device');\n                const patientGuid = this.get('patientGuid');\n\n                if (Ember.isEmpty(device.udiInfo.uniqueDeviceIdentifier)) {\n                    return Ember.RSVP.resolve();\n                }\n                return this._withProgress(_devices.default.getUdiData(device, patientGuid).then(data => {\n                    if (Ember.isEmpty(data)) {\n                        this.set('showUdiFailure', true);\n                    } else if (Ember.isEmpty(data.uniqueDeviceIdentifier)) {\n                        this.set('showUdiUniqueFailure', true);\n                    } else {\n                        this.set('fetchedUdiInfo', data);\n                        this.set('showUdiSuccess', true);\n                    }\n                }));\n            },\n\n            confirmUdiInfo() {\n                const fetched = this.get('fetchedUdiInfo');\n                if (fetched) {\n                    this.set('device.udiInfo', fetched);\n                    this.set('deviceName', fetched.gmdnPtName);\n                    this.set('fetchedUdiInfo', null);\n                }\n                this.set('showUdiSuccess', false);\n            },\n\n            cancelUdiInfo() {\n                this.set('showUdiSuccess', false);\n                this.set('showUdiFailure', false);\n                this.set('showUdiUniqueFailure', false);\n            },\n\n            reEnterUdiInfo() {\n                this.set('showUdiFailure', false);\n                this.set('showUdiUniqueFailure', false);\n                // TODO: highlight UDI field\n            },\n\n            removeUdiInfo() {\n                this.set('device.udiInfo', { snomed: [], uniqueDeviceIdentifier: this.get('device.udiInfo.uniqueDeviceIdentifier') });\n            },\n\n            cancel() {\n                this.sendAction('updateDirty', false);\n                this._close();\n            },\n\n            close() {\n                this._close();\n            },\n\n            save() {\n                this._saveDevice(true);\n            },\n\n            showDelete() {\n                this.set('showDeleteConfirm', true);\n            },\n\n            delete() {\n                const device = this.get('device');\n                this.set('showDeleteConfirm ', false);\n                this._withProgress(_devices.default.deleteDevice(device)).then(() => {\n                    this.sendAction('updateDirty', false);\n                    toastr.success('Implantable device deleted');\n                    this._close(device);\n                }).catch(() => toastr.error('Failed to delete device'));\n            }\n        },\n\n        _close(device) {\n            Ember.run.later(() => {\n                this.sendAction('close', device);\n            });\n        },\n\n        _loadDevice() {\n            const patientGuid = this.get('patientGuid');\n            const deviceGuid = this.get('editedDeviceGuid');\n            this.set('loadDeviceFailed', false);\n            this._withProgress(_devices.default.loadDevice(patientGuid, deviceGuid)).then(device => {\n                this._unlessDestroyed(() => {\n                    if (device && device.udiInfo && device.udiInfo.gmdnPtName) {\n                        device.userEnteredInfo.userEnteredDeviceTypeName = device.udiInfo.gmdnPtName;\n                    }\n                    device.userEnteredInfo.userEnteredImplantDate = this._getDisplayDate(device.userEnteredInfo.userEnteredImplantDate, true);\n                    this.set('device', device);\n                });\n            }).errorMessage('The device could not be loaded', { rethrow: true }).catch(() => {\n                this._unlessDestroyed(() => {\n                    this.set('loadDeviceFailed', true);\n                });\n            });\n        },\n\n        _saveDevice(showSuccess) {\n            const device = this.get('device');\n            const isDeviceNew = Ember.isEmpty(this.get('editedDeviceGuid'));\n\n            this.validate().then(isValid => {\n                if (Ember.isEmpty(device)) {\n                    return;\n                }\n\n                if (!isValid) {\n                    return;\n                }\n\n                this.get('analytics').track('Save Device');\n                this._withProgress(_devices.default.saveDevice(device).then(result => {\n                    this.sendAction('updateDirty', false);\n                    if (showSuccess) {\n                        toastr.success(isDeviceNew ? 'Implantable device added' : 'Implantable device saved');\n                    }\n                    this.set('device', result);\n                    this.set('editedDeviceGuid', result.healthcareDeviceGuid);\n                    this._close(result);\n                }, () => {\n                    toastr.error('Failed to save device');\n                }));\n            });\n        },\n\n        _getDisplayDate(dateVal, ignoreEmpty) {\n            if (!dateVal || !moment(dateVal).isValid()) {\n                return ignoreEmpty ? '' : 'Unspecified';\n            }\n            return moment(dateVal).utc().format('MM/DD/YYYY');\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/diagnoses-assessment-list-read-only', ['exports', 'clinical/mixins/with-diagnoses'], function (exports, _withDiagnoses) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_withDiagnoses.default, {\n        oneline: true,\n        firstCommentOneLine: true\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/diagnoses-assessment-list', ['exports', 'boot/models/session', 'clinical/repositories/diagnoses', 'clinical/mixins/with-diagnoses', 'common/mixins/spinner', 'charting/utils/encounter', 'ember-concurrency'], function (exports, _session, _diagnoses, _withDiagnoses, _spinner, _encounter, _emberConcurrency) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_withDiagnoses.default, _spinner.default, {\n        patientGuid: '',\n        transcriptGuid: '',\n        classNames: ['diagnoses-assessment-list'],\n        classNameBindings: ['hasDiagnoses:with-diagnoses'],\n        hasDiagnoses: Ember.computed.notEmpty('encounterDiagnoses'),\n        canEditDiagnoses: Ember.computed(() => !_session.default.get('isStaff')),\n        isLoading: Ember.computed.alias('removeDiagnosisTask.isRunning'),\n        removeDiagnosisTask: (0, _emberConcurrency.task)(function* (diagnosis) {\n            const transcriptGuid = this.get('transcriptGuid');\n            try {\n                yield _diagnoses.default.deleteTranscriptDiagnosis(diagnosis, transcriptGuid);\n            } catch (error) {\n                const action = _encounter.default.mapSaveErrorToAction(error, 403);\n                if (action) {\n                    this.sendAction(action);\n                } else {\n                    toastr.error('Failed to remove diagnosis');\n                }\n            }\n        }),\n        actions: {\n            removeDiagnosis(diagnosis) {\n                this.get('removeDiagnosisTask').perform(diagnosis);\n            },\n            editDiagnosis(diagnosis) {\n                this.sendAction('editDiagnosis', diagnosis.get('diagnosisGuid'));\n            },\n            refineDiagnosis(diagnosis) {\n                this.sendAction('refineDiagnosis', diagnosis.get('diagnosisGuid'));\n            },\n            moveToTop(encounterDiagnosis) {\n                if (encounterDiagnosis === this.get('encounterDiagnoses.firstObject')) {\n                    return;\n                }\n                const firstTranscriptDx = this.get('encounterDiagnoses.firstObject.transcriptDiagnosis');\n                const sortOrder = firstTranscriptDx ? Ember.get(firstTranscriptDx, 'sortOrder') - 1 : 0;\n                Ember.set(encounterDiagnosis.transcriptDiagnosis, 'sortOrder', sortOrder);\n                this.set('didReorder', true);\n            },\n            moveUp(encounterDiagnosis) {\n                if (encounterDiagnosis === this.get('encounterDiagnoses.firstObject')) {\n                    return;\n                }\n                const encounterDiagnoses = this.get('encounterDiagnoses');\n                const encounterDiagnosisAbove = encounterDiagnoses.objectAt(encounterDiagnoses.indexOf(encounterDiagnosis) - 1);\n                const oldSortOrder = Ember.get(encounterDiagnosis.transcriptDiagnosis, 'sortOrder');\n\n                // Swap sort orders with the Dx above\n                if (encounterDiagnosisAbove) {\n                    Ember.set(encounterDiagnosis.transcriptDiagnosis, 'sortOrder', Ember.get(encounterDiagnosisAbove.transcriptDiagnosis, 'sortOrder'));\n                    Ember.set(encounterDiagnosisAbove.transcriptDiagnosis, 'sortOrder', oldSortOrder);\n                    this.set('didReorder', true);\n                }\n            }\n        },\n        _saveDxOrder: Ember.on('willDestroyElement', function () {\n            if (this.get('didReorder')) {\n                _diagnoses.default.reorderTranscriptDiagnosis(this.get('transcriptGuid'), this.get('encounterDiagnoses').mapBy('diagnosis'));\n            }\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/diagnoses-flyout', ['exports', 'clinical/repositories/diagnoses', 'common/mixins/spinner', 'clinical/mixins/loading', 'boot/mixins/view-preferences', 'charting/utils/encounter', 'tyrion/mixins/destroyed'], function (exports, _diagnoses, _spinner, _loading, _viewPreferences, _encounter, _destroyed) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_spinner.default, _loading.default, _viewPreferences.default, _destroyed.default, {\n        classNames: 'diagnoses-flyout',\n\n        viewPreferencesKey: 'diagnoses-flyout',\n        viewPreferenceProperties: Ember.computed(() => ['currentTab']),\n\n        currentTab: Ember.computed({\n            get() {\n                return 'favorite';\n            },\n            set(key, value) {\n                if (value === 'frequent') {\n                    return 'favorite';\n                }\n                return value;\n            }\n        }),\n\n        previousSelected: Ember.computed.equal('currentTab', 'previous'),\n        favoriteSelected: Ember.computed.equal('currentTab', 'favorite'),\n\n        showSpinner: Ember.computed.alias('isLoading'),\n        patientGuid: '',\n\n        actions: {\n            setCurrentTab(tab) {\n                this.set('currentTab', tab);\n            },\n            recordDiagnoses() {\n                this.sendAction('recordDiagnoses');\n            },\n            frequentDiagnosisSelected(selectedDiagnosis) {\n                const transcriptGuid = this.get('transcriptGuid');\n                selectedDiagnosis.set('patientPracticeGuid', this.get('patientGuid'));\n                selectedDiagnosis.attachToEncounter(transcriptGuid);\n                this._withProgress(_diagnoses.default.saveDiagnosis(selectedDiagnosis, transcriptGuid).catch(error => {\n                    const action = _encounter.default.mapSaveErrorToAction(error, 403);\n                    if (action) {\n                        this._sendActionUnlessDestroyed(action);\n                    } else {\n                        toastr.error('Failed to save diagnosis');\n                    }\n                }));\n            },\n            refreshChart() {\n                this.sendAction('refreshChart');\n            },\n            closeEncounterTab() {\n                this.sendAction('closeEncounterTab');\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/diagnoses-summary-list-item', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        attributeBindings: ['data-element'],\n        tagName: 'li',\n        classNameBindings: ['isSelected:is-active'],\n        isSelected: Ember.computed('selectedDiagnosisGuid', 'diagnosis.diagnosisGuid', function () {\n            return this.get('selectedDiagnosisGuid') === this.get('diagnosis.diagnosisGuid');\n        }),\n        click() {\n            this.attrs.editDiagnosis(this.get('diagnosis'));\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/diagnoses-summary-list-section', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        actions: {\n            toggleProperty(key) {\n                this.toggleProperty(key);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/diagnoses-summary-list', ['exports', 'clinical/mixins/with-diagnoses', 'charting/mixins/with-patient-print-title'], function (exports, _withDiagnoses, _withPatientPrintTitle) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_withDiagnoses.default, _withPatientPrintTitle.default, {\n        routing: Ember.inject.service('pf-routing'),\n        tunnel: Ember.inject.service(),\n        classNames: 'diagnoses-summary-list',\n        patientSummary: Ember.computed.alias('patient'),\n        displayName: 'Diagnoses',\n        isExpanded: false,\n\n        activeDiagnosesSortProperty: Ember.computed(() => ['content.startDate:desc']),\n        historicalDiagnosesSortProperty: Ember.computed(() => ['content.stopDate:desc']),\n        sortedChronicActiveDiagnoses: Ember.computed.sort('chronicActivePatientDiagnoses', 'activeDiagnosesSortProperty'),\n        sortedChronicHistoricalDiagnoses: Ember.computed.sort('chronicHistoricalPatientDiagnoses', 'historicalDiagnosesSortProperty'),\n        sortedAcuteActiveDiagnoses: Ember.computed.sort('acuteActivePatientDiagnoses', 'activeDiagnosesSortProperty'),\n        sortedAcuteHistoricalDiagnoses: Ember.computed.sort('acuteHistoricalPatientDiagnoses', 'historicalDiagnosesSortProperty'),\n        sortedUnspecifiedActiveDiagnoses: Ember.computed.sort('unspecifiedActiveDiagnoses', 'activeDiagnosesSortProperty'),\n        allActiveDiagnoses: Ember.computed.sort('activePatientDiagnoses', 'activeDiagnosesSortProperty'),\n        allHistoricalDiagnoses: Ember.computed.sort('historicalPatientDiagnoses', 'historicalDiagnosesSortProperty'),\n        patientGuid: Ember.computed.alias('patient.patientPracticeGuid'),\n        isAllowedToEditDiagnoses: Ember.computed('authorization.entitledFeatures.[]', function () {\n            return this.get('authorization').isEntitledFor('Chart.Summary.Edit');\n        }),\n        selectedDiagnosisGuid: Ember.computed('selectedItem', {\n            get() {\n                return this.get('selectedItem');\n            },\n            set(value) {\n                return value;\n            }\n        }),\n        actions: {\n            displayChanged(diagnosisDescriptionDisplay) {\n                this.set('diagnosisDescriptionDisplay', diagnosisDescriptionDisplay);\n                this.get('tunnel').send('patient-summary-mixpanel-event', {\n                    event: 'Diagnosis Description Display Change',\n                    properties: { 'Diagnosis Display By': diagnosisDescriptionDisplay }\n                });\n            },\n            editDiagnosis(diagnosis) {\n                if (diagnosis) {\n                    const diagnosisGuid = diagnosis.get('diagnosisGuid');\n                    this.get('routing').transitionToRoute('summary.diagnosis', diagnosis.get('patientPracticeGuid'), diagnosisGuid);\n                    this.attrs.setControllerProperties({\n                        selectedItem: diagnosisGuid\n                    });\n                }\n            },\n            recordDiagnosisOnSummary() {\n                this.get('routing').transitionToRoute('summary.diagnosis', 'new');\n                this.attrs.setControllerProperties({\n                    selectedItem: undefined\n                });\n            },\n            toggleIsExpanded() {\n                this.toggleProperty('isExpanded');\n            },\n            refresh() {\n                this.reloadDiagnoses();\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/diagnosis-codes', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        classNames: ['diagnosis-codes', 'clearfix'],\n        excludeSelectedCode: false,\n        icd10Codes: Ember.computed('diagnosis', 'diagnosis.icd10Codes', 'excludeSelectedCode', function () {\n            const codes = this.get('diagnosis.icd10Codes');\n            const selectedCode = this.get('diagnosis.icd10OrSnomedCode');\n            if (this.get('excludeSelectedCode') && selectedCode) {\n                return codes.rejectBy('code', selectedCode);\n            }\n            return codes;\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/diagnosis-description', ['exports', 'boot/mixins/view-preferences'], function (exports, _viewPreferences) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_viewPreferences.default, {\n        viewPreferencesKey: 'icd10-upgrade',\n        viewPreferenceProperties: Ember.computed(() => ['diagnosisDescriptionDisplay']),\n\n        persistUserPreferences: () => {},\n        diagnosisDescriptionDisplay: Ember.computed({\n            get() {\n                let cachedDisplay = this.cacheFor('diagnosisDescriptionDisplay') || 'icd10';\n                if (cachedDisplay !== 'icd10') {\n                    return 'term';\n                }\n                return cachedDisplay;\n            },\n            set(key, value) {\n                if (Ember.isEmpty(value)) {\n                    return this.cacheFor('diagnosisDescriptionDisplay') || 'term';\n                }\n                return value;\n            }\n        }),\n\n        descriptions: Ember.computed('diagnosisDescriptionDisplay', 'diagnosis', 'diagnosis.diagnosisCodes.[]', 'isIcd10Display', function () {\n            var display = this.get('diagnosisDescriptionDisplay'),\n                diagnosis = this.get('diagnosis'),\n                diagnosisCodes;\n\n            if (diagnosis.get('isCustom')) {\n                return [(diagnosis.get('customCode') ? '(' + diagnosis.get('customCode') + ') ' : '') + diagnosis.get('customDescription')];\n            } else if (display === 'icd9' || display === 'icd10') {\n                diagnosisCodes = diagnosis._getCodesByCodeSystem(display);\n\n                if (diagnosisCodes.length > 0) {\n                    return diagnosisCodes.map(function (diagnosis) {\n                        return (diagnosis.code ? '(' + diagnosis.code + ') ' : '') + diagnosis.description;\n                    }, this);\n                } else {\n                    return [diagnosis.get('name')];\n                }\n            } else {\n                if (this.get('isIcd10Display')) {\n                    return [diagnosis.get('name')];\n                }\n                return [(diagnosis.get('code') ? '(' + diagnosis.get('code') + ') ' : '') + diagnosis.get('name')];\n            }\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/diagnosis-detail-form-icd10', ['exports', 'clinical/mixins/with-medications', 'boot/mixins/view-preferences'], function (exports, _withMedications, _viewPreferences) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_viewPreferences.default, _withMedications.default, {\n        // attrs\n        diagnosis: null,\n        relatedDiagnoses: Ember.computed(function () {\n            return [];\n        }),\n        patientGuid: null,\n        transcriptGuid: null,\n        canToggleAttachToEncounter: false,\n        disabled: false,\n        canRefine: Ember.computed('refineDiagnosis', 'diagnosis.isCustom', 'isAllowedToEditDiagnoses', function () {\n            return this.get('refineDiagnosis') && !this.get('diagnosis.isCustom') && this.get('isAllowedToEditDiagnoses');\n        }),\n        associatedMedications: Ember.computed(function () {\n            return [];\n        }),\n        // TODO: remove once we remove d-diagnosis-detail\n        showAllDescriptions: false,\n        isAddingNewDiagnosis: false,\n        showMedicationEdit: false,\n        // actions:\n        // recordMedication(),\n        // editMedication(medicationGuid, dxGuid),\n        // isValidDiagnosisChanged(dxGuid, isValid),\n        // refineDiagnosis(),\n        // associateMedication(med),\n        // disassociateMedication(med),\n\n        viewPreferencesKey: 'diagnosis-detail-form',\n        viewPreferenceProperties: Ember.computed(() => ['showingCodes']),\n        showingCodes: true,\n        needsRefine: Ember.computed('diagnosis.needsIcd10Refinement', 'diagnosis.needsIcd9Refinement', 'relatedDiagnoses', function () {\n            if (this.get('diagnosis.needsIcd10Refinement') && Ember.isPresent(this.get('relatedDiagnoses'))) {\n                return true;\n            }\n            return this.get('diagnosis.needsIcd9Refinement') && this.get('isAddingNewDiagnosis') && Ember.isPresent(this.get('relatedDiagnoses'));\n        }),\n\n        showExistingIsTerminal: Ember.computed('diagnosis', function () {\n            return this.get('diagnosis.isTerminal');\n        }),\n\n        showEncounterCommentsSection: Ember.computed.or('attachToEncounter', 'diagnosis.encounterCommentsWithComment'),\n        showResourcesSection: Ember.computed('diagnosis.ic10orIcd9Code', function () {\n            return this.get('diagnosis.ic10orIcd9Code');\n        }),\n\n        isStartDateValid: true,\n        isStopDateValid: true,\n        _isValidDiagnosisChanged: Ember.observer('isStartDateValid', 'isStopDateValid', 'diagnosis.startDate', 'diagnosis.stopDate', function () {\n            var isValid = this.get('isStartDateValid') && this.get('isStopDateValid') && this._isValidDateRange();\n            this.sendAction('isValidDiagnosisChanged', this.get('diagnosis.diagnosisGuid'), isValid);\n        }),\n        _isValidDateRange() {\n            var start = this.get('diagnosis.startDate'),\n                stop = this.get('diagnosis.stopDate'),\n                startMoment = moment(start),\n                stopMoment = moment(stop);\n            if (!start || !stop || !startMoment.isValid() || !stopMoment.isValid() || start === stop) {\n                // If either is null, invalid or they're the same no need to check for range\n                return true;\n            }\n            return startMoment.isBefore(stopMoment);\n        },\n        diagnosisComment: Ember.computed('diagnosis.diagnosisComment', {\n            get() {\n                return this.get('diagnosis.diagnosisComment.comment');\n            },\n            set(key, value) {\n                const diagnosis = this.get('diagnosis');\n                if (diagnosis) {\n                    diagnosis.addComment(value);\n                    return diagnosis.get('diagnosisComment.comment');\n                }\n                return null;\n            }\n        }),\n        attachToEncounter: Ember.computed('diagnosis.transcriptDiagnosis.@each.transcriptGuid', 'transcriptGuid', {\n            get() {\n                const diagnosis = this.get('diagnosis');\n                const transcriptGuid = this.get('transcriptGuid');\n                return diagnosis && diagnosis.isEncounterDiagnosis(transcriptGuid);\n            },\n            set(key, value) {\n                const diagnosis = this.get('diagnosis');\n                const transcriptGuid = this.get('transcriptGuid');\n                if (value) {\n                    diagnosis.attachToEncounter(transcriptGuid);\n                } else {\n                    diagnosis.detachFromEncounter(transcriptGuid);\n                }\n                return diagnosis && diagnosis.isEncounterDiagnosis(transcriptGuid);\n            }\n        }),\n        encounterComment: Ember.computed('diagnosis.transcriptDiagnosis.@each.comment', 'transcriptGuid', {\n            get() {\n                const diagnosis = this.get('diagnosis');\n                const transcriptGuid = this.get('transcriptGuid');\n                const transcriptDiagnosis = diagnosis && diagnosis.getTranscriptDiagnosis(transcriptGuid) || {};\n                return Ember.get(transcriptDiagnosis, 'comment');\n            },\n            set(key, value) {\n                const diagnosis = this.get('diagnosis');\n                const transcriptGuid = this.get('transcriptGuid');\n                diagnosis.addComment(value, transcriptGuid);\n\n                const transcriptDiagnosis = diagnosis && diagnosis.getTranscriptDiagnosis(transcriptGuid) || {};\n                return Ember.get(transcriptDiagnosis, 'comment');\n            }\n        }),\n        availableMedications: Ember.computed('activePatientMedications.[]', 'medications.withoutDiagnosis.[]', function () {\n            return this.get('activePatientMedications');\n        }),\n        acuity: Ember.computed('diagnosis.acuity', 'diagnosis.isAcute', {\n            get() {\n                const diagnosisAcuity = this.get('diagnosis.acuity') || '';\n                const diagnosisIsAcute = this.get('diagnosis.isAcute');\n                if (diagnosisIsAcute || diagnosisAcuity.toLowerCase() === 'acute') {\n                    return 'acute';\n                }\n                if (diagnosisAcuity.toLowerCase() === 'chronic') {\n                    return 'chronic';\n                }\n                return 'unspecified';\n            },\n            set(key, value) {\n                this.set('diagnosis.acuity', value || 'unspecified');\n                this.set('diagnosis.isAcute', value === 'acute');\n                return value;\n            }\n        }),\n\n        recordMedicationActionName: Ember.computed(function () {\n            // We only bind to this action if we have someone to delegate to\n            if (this.get('recordMedication')) {\n                return 'recordMedication';\n            }\n        }),\n        canEditMedications: Ember.computed('associatedMedications.[]', 'isAllowedToEditDiagnoses', function () {\n            return Ember.isPresent(this.get('associatedMedications')) && this.get('isAllowedToEditDiagnoses');\n        }),\n        canAddMedicationsLink: Ember.computed('showMedicationAdd', 'isAllowedToEditDiagnoses', function () {\n            return !this.get('showMedicationAdd') && this.get('isAllowedToEditDiagnoses');\n        }),\n\n        actions: {\n            // TODO: remove once we remove d-diagnosis-detail\n            deleteDiagnosis() {\n                this.sendAction('deleteDiagnosis', this.get('diagnosis'));\n            },\n            startToday() {\n                this.set('diagnosis.startDate', moment().format('MM/DD/YYYY'));\n            },\n            stopToday() {\n                this.set('diagnosis.stopDate', moment().format('MM/DD/YYYY'));\n            },\n            associateMedication(medication) {\n                // Check for duplicates in list-style\n                if (Ember.isPresent(medication) && !this.get('associatedMedications').findBy('medicationGuid', medication.get('medicationGuid'))) {\n                    this.sendAction('associateMedication', medication);\n                }\n            },\n            disassociateMedication(medication) {\n                this.sendAction('disassociateMedication', medication);\n            },\n            recordMedication(searchTerm) {\n                this.sendAction('recordMedication', this.get('diagnosis.diagnosisGuid'), searchTerm || '');\n            },\n            editMedication(medication) {\n                var diagnosisGuid = this.get('diagnosis.diagnosisGuid'),\n                    medicationGuid = medication.get('medicationGuid');\n                this.sendAction('editMedication', medicationGuid, diagnosisGuid);\n            },\n            toggleProperty(propertyName) {\n                this.toggleProperty(propertyName);\n            },\n\n            refineDiagnosis() {\n                this.sendAction('refineDiagnosis');\n            },\n            toggleComment() {\n                this.toggleProperty('showComment');\n            },\n            toggleEncounterComment() {\n                this.toggleProperty('showEncounterComment');\n            },\n            clearAcuity() {\n                this.set('acuity', null);\n            },\n            toggleAddMedications() {\n                this.toggleProperty('showMedicationAdd');\n                this.set('showMedicationEdit', false);\n                this.set('medicationsQuery', '');\n                if (!this.get('availableMedications.length') && !this.get('showMedicationAdd')) {\n                    this._focusOnDiagnosisComment();\n                }\n            },\n            toggleEditMedications() {\n                this.toggleProperty('showMedicationEdit');\n                this.set('showMedicationAdd', false);\n            }\n        },\n\n        _focusOnDiagnosisComment() {\n            this.$('.diagnosis-detail--diagnosis-comment textarea').focus();\n        },\n        _focusOnMedicationSelect() {\n            Ember.run.later(() => this.$('.diagnosis-detail-medication-search input').focus());\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/diagnosis-detail-form', ['exports', 'clinical/mixins/with-medications', 'boot/mixins/view-preferences'], function (exports, _withMedications, _viewPreferences) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_viewPreferences.default, _withMedications.default, {\n        // attrs\n        diagnosis: null,\n        relatedDiagnoses: Ember.computed(function () {\n            return [];\n        }),\n        patientGuid: null,\n        transcriptGuid: null,\n        canToggleAttachToEncounter: false,\n        disabled: false,\n        canRefine: Ember.computed('refineDiagnosis', 'diagnosis.isCustom', function () {\n            return this.get('refineDiagnosis') && !this.get('diagnosis.isCustom');\n        }),\n        associatedMedications: Ember.computed(function () {\n            return [];\n        }),\n        // TODO: remove once we remove d-diagnosis-detail\n        showAllDescriptions: false,\n        canAddMedications: true,\n        isAddingNewDiagnosis: false,\n\n        // actions:\n        // recordMedication(),\n        // editMedication(medicationGuid, dxGuid),\n        // isValidDiagnosisChanged(dxGuid, isValid),\n        // refineDiagnosis(),\n        // associateMedication(med),\n        // disassociateMedication(med),\n\n        viewPreferencesKey: 'diagnosis-detail-form',\n        viewPreferenceProperties: Ember.computed(() => ['showingCodes']),\n        showingCodes: true,\n        needsRefine: Ember.computed('diagnosis.needsIcd10Refinement', 'diagnosis.needsIcd9Refinement', function () {\n            if (this.get('diagnosis.needsIcd10Refinement')) {\n                return true;\n            }\n            return this.get('diagnosis.needsIcd9Refinement') && this.get('isAddingNewDiagnosis');\n        }),\n\n        isStartDateValid: true,\n        isStopDateValid: true,\n        _isValidDiagnosisChanged: Ember.observer('isStartDateValid', 'isStopDateValid', 'diagnosis.startDate', 'diagnosis.stopDate', function () {\n            var isValid = this.get('isStartDateValid') && this.get('isStopDateValid') && this._isValidDateRange();\n            this.sendAction('isValidDiagnosisChanged', this.get('diagnosis.diagnosisGuid'), isValid);\n        }),\n        _isValidDateRange() {\n            var start = this.get('diagnosis.startDate'),\n                stop = this.get('diagnosis.stopDate'),\n                startMoment = moment(start),\n                stopMoment = moment(stop);\n            if (!start || !stop || !startMoment.isValid() || !stopMoment.isValid() || start === stop) {\n                // If either is null, invalid or they're the same no need to check for range\n                return true;\n            }\n            return startMoment.isBefore(stopMoment);\n        },\n        diagnosisComment: Ember.computed('diagnosis.diagnosisComment', {\n            get() {\n                return this.get('diagnosis.diagnosisComment.comment');\n            },\n            set(key, value) {\n                const diagnosis = this.get('diagnosis');\n                if (diagnosis) {\n                    diagnosis.addComment(value);\n                    return diagnosis.get('diagnosisComment.comment');\n                }\n                return null;\n            }\n        }),\n        attachToEncounter: Ember.computed('diagnosis.transcriptDiagnosis.@each.transcriptGuid', 'transcriptGuid', {\n            get() {\n                const diagnosis = this.get('diagnosis');\n                const transcriptGuid = this.get('transcriptGuid');\n                return diagnosis && diagnosis.isEncounterDiagnosis(transcriptGuid);\n            },\n            set(key, value) {\n                const diagnosis = this.get('diagnosis');\n                const transcriptGuid = this.get('transcriptGuid');\n                if (value) {\n                    diagnosis.attachToEncounter(transcriptGuid);\n                } else {\n                    diagnosis.detachFromEncounter(transcriptGuid);\n                }\n                return diagnosis && diagnosis.isEncounterDiagnosis(transcriptGuid);\n            }\n        }),\n        encounterComment: Ember.computed('diagnosis.transcriptDiagnosis.@each.comment', {\n            get() {\n                const diagnosis = this.get('diagnosis');\n                const transcriptGuid = this.get('transcriptGuid');\n                const transcriptDiagnosis = diagnosis && diagnosis.getTranscriptDiagnosis(transcriptGuid) || {};\n                return Ember.get(transcriptDiagnosis, 'comment');\n            },\n            set(key, value) {\n                const diagnosis = this.get('diagnosis');\n                const transcriptGuid = this.get('transcriptGuid');\n                diagnosis.addComment(value, transcriptGuid);\n\n                const transcriptDiagnosis = diagnosis && diagnosis.getTranscriptDiagnosis(transcriptGuid) || {};\n                return Ember.get(transcriptDiagnosis, 'comment');\n            }\n        }),\n\n        availableMedications: Ember.computed('associatedMedications.[]', 'medications.active.[]', 'medications.withoutDiagnosis.[]', function () {\n            return _.difference(this.get('medications.withoutDiagnosis.active'), this.get('associatedMedications'));\n        }),\n\n        recordMedicationActionName: Ember.computed(function () {\n            // We only bind to this action if we have someone to delegate to\n            if (this.get('recordMedication')) {\n                return 'recordMedication';\n            }\n        }),\n\n        actions: {\n            // TODO: remove once we remove d-diagnosis-detail\n            deleteDiagnosis() {\n                this.sendAction('deleteDiagnosis', this.get('diagnosis'));\n            },\n            startToday() {\n                this.set('diagnosis.startDate', moment().format('MM/DD/YYYY'));\n            },\n            stopToday() {\n                this.set('diagnosis.stopDate', moment().format('MM/DD/YYYY'));\n            },\n            associateMedication(medication) {\n                if (this.get('associateMedication')) {\n                    this.sendAction('associateMedication', medication);\n                } else {\n                    // TODO: remove this branch once we remove d-diagnosis-detail\n                    this.get('diagnosis').associateMedication(medication);\n                }\n                if (!this.get('availableMedications.length')) {\n                    this._focusOnDiagnosisComment();\n                }\n            },\n            disassociateMedication(medication) {\n                if (this.get('disassociateMedication')) {\n                    this.sendAction('disassociateMedication', medication);\n                } else {\n                    // TODO: remove this branch once we remove d-diagnosis-detail\n                    this.get('diagnosis').disassociateMedication(medication);\n                }\n                if (this.get('availableMedications.length')) {\n                    this._focusOnMedicationSelect();\n                } else {\n                    this._focusOnDiagnosisComment();\n                }\n            },\n            recordMedication(searchTerm) {\n                this.sendAction('recordMedication', this.get('diagnosis.diagnosisGuid'), searchTerm);\n            },\n            editMedication(medication) {\n                var diagnosisGuid = this.get('diagnosis.diagnosisGuid'),\n                    medicationGuid = medication.get('medicationGuid');\n                this.sendAction('editMedication', medicationGuid, diagnosisGuid);\n            },\n            toggleProperty(propertyName) {\n                this.toggleProperty(propertyName);\n            },\n\n            refineDiagnosis() {\n                this.sendAction('refineDiagnosis');\n            }\n        },\n\n        _focusOnDiagnosisComment() {\n            this.$('.diagnosis-detail--diagnosis-comment textarea').focus();\n        },\n        _focusOnMedicationSelect() {\n            Ember.run.later(() => this.$('.diagnosis-detail-medication-search input').focus());\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/diagnosis-detail', ['exports', 'boot/models/session', 'clinical/repositories/diagnoses', 'common/mixins/spinner', 'boot/mixins/view-preferences', 'clinical/models/favorite-diagnosis', 'charting/utils/encounter', 'clinical/models/favorite-diagnoses-settings', 'ember-concurrency'], function (exports, _session, _diagnoses, _spinner, _viewPreferences, _favoriteDiagnosis, _encounter, _favoriteDiagnosesSettings, _emberConcurrency) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_spinner.default, _viewPreferences.default, {\n        analytics: Ember.inject.service(),\n        pfRouting: Ember.inject.service('pf-routing'),\n        authorization: Ember.inject.service('authorization'),\n        // attrs\n        closing: false, // Two-way bound for routnes transition\n        isDirty: false, // One-way bound for routes transition\n        patientGuid: null,\n        transcriptGuid: null,\n        diagnosisGuid: undefined, // Passed when editing a diagnosis.\n        isRecordedFromAssessment: false,\n        canAddMultiple: true,\n        canAddMedications: true,\n        canAddCustom: true,\n        isLabResultDiagnosis: false,\n        tabSources: null,\n        defaultDropdownTab: 1,\n\n        // actions\n        close: null,\n        recordMedication: null, // (diagnosisGuid, term)\n        editMedication: null, // (medicationGuid, diagnosisGuid)\n        saveDiagnosis: null, // Used by labs since they delete/save differently\n        deleteDiagnosis: null, // Used by labs since they delete/save differently\n\n        isLoading: Ember.computed.or('loadTask.isRunning', 'saveTask.isRunning', 'deleteTask.isRunning', 'cancelTask.isRunning', 'saveThenClose.isRunning'),\n\n        // Overrides\n        // SpinnerSupport Overrides\n        showSpinner: Ember.computed.alias('isLoading'),\n        contentElement: '.well.right-module',\n        classNames: ['diagnosis-icd10-container', 'type-v2'],\n        // ViewPreferences overrides\n        viewPreferencesKey: 'diagnosis-detail',\n        viewPreferenceProperties: Ember.computed(() => ['isShowCodesInSearch']),\n        // Detail Pane overrides\n        detailsPaneTitle: Ember.computed('isAddingNewDiagnosis', 'isRecordedFromAssessment', function () {\n            let baseText = this.get('isAddingNewDiagnosis') ? 'Record diagnosis' : 'Review diagnosis';\n            if (this.get('isRecordedFromAssessment')) {\n                baseText += ' in assessment';\n            }\n            return baseText;\n        }),\n        isToolboxVisible: Ember.computed('displayDiagnosisTypeAhead', function () {\n            return false;\n        }),\n\n        // Analytics properties\n        addedViaFavorite: false,\n        addedViaSearch: false,\n        addedViaCustom: false,\n\n        disabled: Ember.computed(function () {\n            return !_session.default.get('canEditChart') || !this.get('isAllowedToEditDiagnoses');\n        }),\n\n        // State management (adding -> editing -> refining -> and back)\n        isAddingNewDiagnosis: Ember.computed.empty('diagnosisGuid'),\n        isRefiningDiagnosis: false,\n        displayDiagnosisTypeAhead: Ember.computed('isAddingNewDiagnosis', 'isRefiningDiagnosis', function () {\n            return this.get('isAddingNewDiagnosis') && !this.get('isRefiningDiagnosis');\n        }),\n        isEditingDiagnosisDetails: Ember.computed('isRefiningDiagnosis', 'diagnosis', function () {\n            return !this.get('isRefiningDiagnosis') && this.get('diagnosis');\n        }),\n        isFrequentDiagnosisOpen: true,\n\n        isShowCodesInSearch: true,\n\n        codesInSearchText: Ember.computed('isShowCodesInSearch', function () {\n            return (this.get('isShowCodesInSearch') ? 'Hide' : 'Show') + ' codes in search';\n        }),\n        refineCodeSystem: 'icd10Code',\n\n        isICD9ModalShowing: false,\n\n        diagnosis: null,\n        hasValidDates: true,\n        isAllowedToEditDiagnoses: Ember.computed('authorization.entitledFeatures.[]', function () {\n            return this.get('authorization').isEntitledFor('Chart.Diagnoses.Edit');\n        }),\n        isNotAllowedToEditDiagnoses: Ember.computed.not('isAllowedToEditDiagnoses'),\n        init() {\n            this._super();\n            this.setProperties({\n                resizables: [],\n                tabSources: [{\n                    category: 'My Dx list',\n                    noResultsMessage: 'Create personalized Dx favorites list in Settings to quickly select diagnoses that you use most often',\n                    options: [],\n                    customLink: {\n                        text: 'Update My Dx list',\n                        action: 'updateFavorites'\n                    }\n                }]\n            });\n        },\n        _loadDiagnosis: Ember.on('init', Ember.observer('diagnosisGuid', function () {\n            this.get('loadTask').perform();\n        })),\n\n        _loadIcd10RelatedDiagnoses() {\n            if (!this.get('diagnosis.needsIcd10Refinement')) {\n                return;\n            }\n\n            this.set('relatedDiagnoses', []);\n            _diagnoses.default.loadIcd10RelatedDiagnoses(this.get('diagnosis')).then(icd10Diagnoses => {\n                this.set('relatedDiagnoses', icd10Diagnoses);\n            }).errorMessage('Can\\'t load related diagnoses. Try again later.');\n        },\n\n        canToggleAttachToEncounter: Ember.computed('transcriptGuid', 'isRecordedFromAssessment', 'isAllowedToEditDiagnoses', function () {\n            return this.get('transcriptGuid') && !this.get('isRecordedFromAssessment') && this.get('isAllowedToEditDiagnoses');\n        }),\n\n        canDelete: Ember.computed('attachedToAdditionalEncounter', 'associatedWithAMedication', function () {\n            // This checks are here, because we only edit one at a time and the \"Delete\" button is at this level\n            // not the form\n            return !this.get('attachedToAdditionalEncounter') && !this.get('associatedWithAMedication');\n        }),\n\n        attachedToAdditionalEncounter: Ember.computed('diagnosis.encounterComments.[]', 'transcriptGuid', function () {\n            const encounterComments = this.get('diagnosis.encounterComments') || [];\n            const length = encounterComments.get('length');\n            if (length > 1) {\n                return true;\n            } else if (length === 1) {\n                return encounterComments.objectAt(0).transcriptGuid !== this.get('transcriptGuid');\n            }\n            return false;\n        }),\n\n        associatedWithAMedication: Ember.computed('associatedMedications.[]', function () {\n            // Note that computed.bool considers an empty array to be true.\n            return !!this.get('associatedMedications.length');\n        }),\n\n        recordMedicationActionName: Ember.computed(function () {\n            // We only bind to this action if we have someone to delegate to\n            if (this.get('recordMedication')) {\n                return 'recordMedication';\n            }\n        }),\n        editMedicationActionName: Ember.computed(function () {\n            // We only bind to this action if we have someone to delegate to\n            if (this.get('editMedication')) {\n                return 'editMedication';\n            }\n        }),\n\n        focusOnSearch: Ember.on('didInsertElement', Ember.observer('isAddingNewDiagnosis', function () {\n            Ember.run.scheduleOnce('afterRender', () => {\n                if (this.get('isAddingNewDiagnosis')) {\n                    this.$('.diagnosis-typeahead input').focus();\n                }\n            });\n        })),\n        deleteMessage: Ember.computed('isLabResultDiagnosis', function () {\n            if (this.get('isLabResultDiagnosis')) {\n                return 'This action is final and will remove this diagnosis from this lab result, but not this patient\\'s history.';\n            }\n            return 'This action is final and will remove this diagnosis from this patient\\'s history.';\n        }),\n\n        saveThenClose: (0, _emberConcurrency.task)(function* () {\n            yield this.get('saveTask').perform();\n            this.sendAction('close');\n        }),\n\n        loadTask: (0, _emberConcurrency.task)(function* () {\n            const patientGuid = this.get('patientGuid');\n            const diagnosisGuid = this.get('diagnosisGuid');\n            yield this.get('saveTask').perform();\n\n            this.set('diagnosis', null);\n            this.set('relatedDiagnoses', []);\n            if (this.get('isAddingNewDiagnosis')) {\n                this.set('query', '');\n            } else {\n                const diagnosis = yield _diagnoses.default.loadDiagnosis(patientGuid, diagnosisGuid);\n                this.set('diagnosis', diagnosis);\n                this.set('hasValidDates', true);\n                this._loadIcd10RelatedDiagnoses();\n            }\n\n            yield this.get('_loadFavoriteDiagnosesForIcd10').perform();\n        }).restartable(),\n\n        cancelTask: (0, _emberConcurrency.task)(function* () {\n            if (!this.get('diagnosis.isDirty')) {\n                this.sendAction('close');\n                return;\n            }\n            if (!this.get('diagnosis.isNew')) {\n                // For existing Dx revert the changes by reloading\n                yield _diagnoses.default.loadDiagnosis(this.get('patientGuid'), this.get('diagnosis.diagnosisGuid'));\n                this.sendAction('close');\n            } else {\n                // It's a new diagnoses, simply clear isDirty, so we can close and discard the in memory changes\n                this.set('diagnosis.isDirty', false);\n                // NOTE: makes sure isDirty propagates to the controller before sending the close action\n                Ember.run.scheduleOnce('sync', () => {\n                    this.sendAction('close');\n                });\n            }\n        }).drop(),\n\n        saveThenAdd: (0, _emberConcurrency.task)(function* () {\n            yield this.get('saveTask').perform();\n            this.setProperties({\n                diagnosis: null,\n                query: ''\n            });\n            yield (0, _emberConcurrency.waitForQueue)('afterRender');\n            this.set('defaultDropdownTab', 1);\n            const $input = this.$('.filtered-search-input');\n            if ($input) {\n                $input.focus();\n            }\n        }).drop(),\n\n        actions: {\n            save() {\n                this.get('saveThenClose').perform();\n            },\n            saveAndAdd() {\n                this.get('saveThenAdd').perform();\n            },\n            cancel() {\n                this.get('cancelTask').perform();\n            },\n            deleteDiagnosis() {\n                this.get('deleteTask').perform();\n            },\n            refineDx(relatedDiagnoses) {\n                this.set('relatedDiagnoses', relatedDiagnoses);\n                this.set('isRefiningDiagnosis', true);\n                this.set('showRefineFacets', true);\n            },\n            diagnosisSelected(diagnosis) {\n                this.set('addedViaSearch', true);\n                this._setSelectedDiagnosis(diagnosis);\n                this.set('isRefiningDiagnosis', false);\n            },\n            customDiagnosisSelected(customDiagnosis) {\n                this.set('addedViaCustom', true);\n                this._setSelectedDiagnosis(customDiagnosis);\n            },\n            favoriteDiagnosisSelected(diagnosis) {\n                this.set('addedViaFavorite', true);\n                this._setSelectedDiagnosis(diagnosis);\n                this._loadIcd10RelatedDiagnoses();\n            },\n\n            recordMedication(ignoredLegacyParameter, term) {\n                this.get('saveTask').perform().then(() => {\n                    this.sendAction('recordMedication', this.get('diagnosis.diagnosisGuid'), term);\n                });\n            },\n            editMedication(medicationGuid) {\n                this.get('saveTask').perform().then(() => {\n                    this.sendAction('editMedication', medicationGuid, this.get('diagnosis.diagnosisGuid'));\n                });\n            },\n            associateMedication(medication) {\n                this.get('associatedMedications').pushObject(medication);\n            },\n            disassociateMedication(medication) {\n                this.get('associatedMedications').removeObject(medication);\n            },\n            hasValidDatesChanged(diagnosisGuid, hasValidDates) {\n                this.set('hasValidDates', hasValidDates);\n            },\n            refineDiagnosis() {\n                this.set('isRefiningDiagnosis', true);\n                this.set('showRefineFacets', true);\n            },\n            goBackToDiagnoisDetails() {\n                this.set('isRefiningDiagnosis', false);\n            },\n            diagnosisRefined() {\n                this.set('isRefiningDiagnosis', false);\n            },\n            toggleProperty(propertyName) {\n                this.toggleProperty(propertyName);\n            },\n            closeICD9Modal() {\n                this.set('isICD9ModalShowing', false);\n            },\n            closeICD10Modal() {\n                this.set('isICD10ModalShowing', false);\n            },\n            saveToMyDxList() {\n                const diagnosis = this.get('diagnosis');\n\n                if (diagnosis.get('diagnosisCodes.length') === 0) {\n                    toastr.error('Diagnosis requires codes for My Dx List');\n                } else if ((0, _favoriteDiagnosis.isDuplicate)(diagnosis, this.store.peekAll('favoriteDiagnosis'))) {\n                    toastr.error('Item already on the list');\n                } else {\n                    const newRecord = this.store.createRecord('favoriteDiagnosis', {\n                        name: diagnosis.get('name'),\n                        code: diagnosis.get('code'),\n                        diagnosisCodes: diagnosis.get('diagnosisCodes')\n                    });\n\n                    Ember.run.next(() => {\n                        newRecord.save().then(() => {\n                            toastr.success('Added to My Dx List');\n                        });\n                    });\n                }\n            },\n            editDiagnosisSelection() {\n                this.set('addedViaSearch', false);\n                this.set('diagnosis', null);\n                this.set('isRefiningDiagnosis', false);\n                this.set('searchControlOpen', true);\n            },\n            updateMyDxList() {\n                this.get('pfRouting').transitionToRoute('settings.favoriteDiagnoses');\n            }\n        },\n        associatedMedications: Ember.computed(function () {\n            return [];\n        }),\n        _setAssociatedMedications: Ember.observer('diagnosis.medications.[]', function () {\n            // NOTE: relying on an observer since we don't have an easy way to have a read-only or oneway binding\n            const medications = this.get('diagnosis.medications') || [];\n            const medicationsCopy = medications.slice(0);\n            this.set('associatedMedications', medicationsCopy);\n        }),\n\n        _setSelectedDiagnosis(diagnosis) {\n            diagnosis.set('patientPracticeGuid', this.get('patientGuid'));\n            diagnosis.set('isDirty', true);\n            this.set('relatedDiagnoses', []);\n            if (this.get('transcriptGuid')) {\n                diagnosis.attachToEncounter(this.get('transcriptGuid'));\n            }\n            this.set('diagnosis', diagnosis);\n        },\n\n        _getAnalyticsActionDetails(diagnosis) {\n            const actionDetails = {};\n            const transcriptGuid = this.get('transcriptGuid');\n            actionDetails['Dx Comment'] = !!diagnosis.get('diagnosisComment.comment');\n            actionDetails['Tx Comment'] = !!(transcriptGuid && diagnosis.getTranscriptDiagnosis(transcriptGuid) && Ember.get(diagnosis.getTranscriptDiagnosis(transcriptGuid), 'comment'));\n            actionDetails['Has Medications'] = !!this.get('associatedMedications.length');\n            actionDetails['Is Acute'] = diagnosis.get('isAcute');\n            actionDetails['Is Chronic'] = diagnosis.get('acuity') ? diagnosis.get('acuity').toLowerCase() === 'chronic' : false;\n            actionDetails['Is Undefined'] = diagnosis.get('acuity') ? diagnosis.get('acuity').toLowerCase() === 'unspecified' : true;\n            actionDetails['Has Date'] = diagnosis.get('startDate') || diagnosis.get('stopDate');\n            actionDetails['Via Favorite'] = this.get('addedViaFavorite');\n            actionDetails['Via Search'] = this.get('addedViaSearch');\n            actionDetails['Via Custom'] = this.get('addedViaCustom');\n            return actionDetails;\n        },\n\n        saveTask: (0, _emberConcurrency.task)(function* () {\n            const transcriptGuid = this.get('transcriptGuid');\n            const associatedMedications = this.get('associatedMedications');\n            const diagnosis = this.get('diagnosis') || Ember.Object.create();\n            const originalMeds = diagnosis.get('medications');\n            const addedMeds = _.difference(associatedMedications, originalMeds);\n            const removedMeds = _.difference(originalMeds, associatedMedications);\n\n            if (!diagnosis.get('isDirty') && Ember.isEmpty(addedMeds) && Ember.isEmpty(removedMeds)) {\n                // It isn't dirty and we didn't change meds nothing to do here, thank you very much for opening the detail pane\n                return;\n            }\n\n            if (!this.get('hasValidDates')) {\n                toastr.warning('Please validate the date before saving a diagnosis');\n                throw 'Can\\'t save diagnoses due to validation errors';\n            }\n\n            // Add logic for ICD-10 refinement here\n            if (diagnosis.get('needsIcd10Refinement') && this.get('isAddingNewDiagnosis')) {\n                this.set('isICD10ModalShowing', true);\n                this.set('isRefiningDiagnosis', true);\n                this.set('showRefineFacets', true);\n                throw 'Can\\'t save diagnoses due to validation errors';\n            }\n\n            this._prepareDiagnosisForSave(diagnosis);\n            this.get('analytics').track('Save Diagnosis', this._getAnalyticsActionDetails(diagnosis));\n            if (this.get('saveDiagnosis')) {\n                this.sendAction('saveDiagnosis', diagnosis);\n                // If someone (e.g. lab results) is handling this, we don't want to call the server\n                return;\n            }\n\n            try {\n                if (this.get('isDirty')) {\n                    yield _diagnoses.default.saveDiagnosis(diagnosis, transcriptGuid);\n                }\n                if (!Ember.isEmpty(addedMeds)) {\n                    yield Ember.RSVP.all(addedMeds.map(addedMed => diagnosis.associateMedication(addedMed)));\n                }\n                if (!Ember.isEmpty(removedMeds)) {\n                    yield Ember.RSVP.all(removedMeds.map(removedMed => diagnosis.disassociateMedication(removedMed)));\n                }\n            } catch (error) {\n                this._handleSaveError(error, 'Failed to save diagnosis');\n            }\n        }).drop(),\n\n        _prepareDiagnosisForSave(diagnosis) {\n            const transcriptGuid = this.get('transcriptGuid');\n            // We always create at least one TranscriptDiagnosis\n            if (this.get('isRecordedFromAssessment')) {\n                diagnosis.attachToEncounter(transcriptGuid);\n            } else {\n                diagnosis.createDefaultTranscriptDiagnosis();\n            }\n            diagnosis.set('name', (diagnosis.get('name') || '').substring(0, 255));\n        },\n        deleteTask: (0, _emberConcurrency.task)(function* () {\n            const transcriptGuid = this.get('transcriptGuid');\n            const diagnosis = this.get('diagnosis');\n\n            if (this.get('deleteDiagnosis')) {\n                this.sendAction('deleteDiagnosis', diagnosis);\n                // If someone (e.g. lab results) is handling this, we don't want to call the server\n            } else {\n                try {\n                    if (diagnosis.get('medications.length')) {\n                        yield Ember.RSVP.all(diagnosis.get('medications').map(medication => {\n                            return diagnosis.disassociateMedication(medication);\n                        }));\n                    }\n\n                    yield _diagnoses.default.deleteDiagnosis(diagnosis, transcriptGuid);\n                    toastr.success('Deleted diagnosis');\n                    if (this.attrs.diagnosisDeleted) {\n                        this.attrs.diagnosisDeleted(diagnosis);\n                    }\n                } catch (error) {\n                    this._handleSaveError(error, 'Failed to delete the diagnosis');\n                    return;\n                }\n            }\n            this.sendAction('close');\n        }).drop(),\n        _closingChanged: Ember.observer('closing', function () {\n            Ember.run.once(this, () => {\n                if (!this.get('closing')) {\n                    return;\n                }\n                this.set('closing', false);\n                if (this.get('diagnosis.isDirty')) {\n                    this.get('saveThenClose').perform();\n                }\n            });\n        }),\n        _setIsDirty: Ember.observer('diagnosis.isDirty', function () {\n            this.sendAction('updateDirty', !!this.get('diagnosis.isDirty'));\n        }),\n        _handleSaveError(error, message) {\n            let action = _diagnoses.default.mapSaveErrorToAction(error, this.get('diagnosis'));\n            // The error message could be a dx associated with a lab result or a timing issue (e.g. an encounter was signed or a dx was associated with a med without this client knowing)\n            const errorMessage = Ember.get(error, 'responseJSON.message');\n            const validErrorMessages = ['Patient diagnosis associated to a medication.', 'Patient diagnosis associated to a lab result.'];\n            if (validErrorMessages.indexOf(errorMessage) === -1 && !action) {\n                action = _encounter.default.mapSaveErrorToAction(error, 403);\n            }\n            if (action) {\n                this.sendAction('updateDirty', false);\n                Ember.run.next(this, 'sendAction', action);\n            } else {\n                toastr.error(errorMessage || message);\n            }\n            throw error;\n        },\n        _loadFavoriteDiagnosesForIcd10: (0, _emberConcurrency.task)(function* () {\n            const store = this.get('store');\n            try {\n                const displayCodeSystem = yield _favoriteDiagnosesSettings.default.getDisplayCodeSystem(store);\n                this.set('displayCodeSystem', displayCodeSystem);\n\n                const sortOrder = yield _favoriteDiagnosesSettings.default.getSortOrder(store);\n                const diagnoses = yield store.findAll('favoriteDiagnosis');\n                let options = [];\n                if (diagnoses.get('length')) {\n                    diagnoses.forEach(code => code.set('displayCodeSystem', displayCodeSystem));\n                    options = diagnoses.sortBy(sortOrder.property);\n                    if (!sortOrder.sortAscending) {\n                        options.reverse();\n                    }\n                }\n                this.set('tabSources', [{\n                    category: 'My Dx list',\n                    noResultsMessage: 'Create personalized Dx favorites list in Settings to quickly select diagnoses that you use most often',\n                    customLink: {\n                        text: 'Update My Dx list',\n                        action: 'updateFavorites'\n                    },\n                    options\n                }]);\n            } catch (e) {\n                this.set('didFailToLoadFavorites', true);\n                throw e;\n            } finally {\n                this.set('isLoading', false);\n            }\n        }).drop()\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/diagnosis-display-selector-v2', ['exports', 'boot/mixins/view-preferences'], function (exports, _viewPreferences) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_viewPreferences.default, {\n        classNames: ['display-diagnosis-selector'],\n        attributeBindings: ['data-element'],\n\n        viewPreferencesKey: 'icd10-upgrade',\n        viewPreferenceProperties: Ember.computed(() => ['diagnosisDescriptionDisplay']),\n\n        promptValue: Ember.computed('diagnosisDescriptionDisplay', 'diagnosisDescriptionDisplayOptions', function () {\n            const value = this.get('diagnosisDescriptionDisplay');\n            const display = this.get('diagnosisDescriptionDisplayOptions').findBy('value', value);\n            return display && display.label ? display.label : 'Show';\n        }),\n\n        diagnosisDescriptionDisplay: Ember.computed({\n            get() {\n                const cachedDisplay = this.cacheFor('diagnosisDescriptionDisplay') || 'icd10';\n                if (cachedDisplay !== 'icd10') {\n                    return 'term';\n                }\n                return cachedDisplay;\n            },\n            set(key, value) {\n                if (Ember.isEmpty(value)) {\n                    return this.cacheFor('diagnosisDescriptionDisplay') || 'term';\n                }\n                return value;\n            }\n        }),\n\n        persistToViewPreferencesOnSelectionChange: Ember.observer('diagnosisDescriptionDisplay', function () {\n            this.persistUserPreferences();\n            this.sendAction('displayChanged', this.get('diagnosisDescriptionDisplay'));\n        }),\n\n        diagnosisDescriptionDisplayOptions: [{\n            value: 'icd10',\n            label: 'ICD-10'\n        }, {\n            value: 'term',\n            label: 'Term'\n        }],\n        actions: {\n            selectOption(option) {\n                this.set('diagnosisDescriptionDisplay', option.value);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/diagnosis-display-selector', ['exports', 'boot/mixins/view-preferences'], function (exports, _viewPreferences) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_viewPreferences.default, {\n        tagName: 'span',\n        classNames: ['display-diagnosis-selector'],\n        attributeBindings: ['data-element'],\n\n        isShorter: false,\n\n        viewPreferencesKey: 'icd10-upgrade',\n        viewPreferenceProperties: Ember.computed(() => ['diagnosisDescriptionDisplay']),\n\n        diagnosisDescriptionDisplay: Ember.computed({\n            get() {\n                let cachedDisplay = this.cacheFor('diagnosisDescriptionDisplay') || 'icd10';\n                if (cachedDisplay !== 'icd10') {\n                    return 'term';\n                }\n                return cachedDisplay;\n            },\n            set(key, value) {\n                if (Ember.isEmpty(value)) {\n                    return this.cacheFor('diagnosisDescriptionDisplay') || 'term';\n                }\n                return value;\n            }\n        }),\n\n        persistToViewPreferencesOnSelectionChange: Ember.observer('diagnosisDescriptionDisplay', function () {\n            this.persistUserPreferences();\n            this.sendAction('displayChanged', this.get('diagnosisDescriptionDisplay'));\n        }),\n\n        diagnosisDescriptionDisplayOptions: [{\n            value: 'icd10',\n            label: 'ICD-10'\n        }, {\n            value: 'term',\n            label: 'Term'\n        }]\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/diagnosis-facets', ['exports', 'clinical/models/diagnoses-array'], function (exports, _diagnosesArray) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        classNames: ['diagnosis-facets-popover', 'popover', 'left', 'popover-modal'],\n\n        // attrs\n        diagnoses: Ember.computed(function () {\n            return [];\n        }),\n        selectedConstraints: Ember.computed('diagnoses', function () {\n            return [];\n        }),\n        // actions: constraintsChanged(filteredDiagnoses)\n\n        selectedConstraintIds: Ember.computed('selectedConstraints.@each.id', function () {\n            return this.get('selectedConstraints').mapBy('id');\n        }),\n        filteredDiagnoses: Ember.computed('selectedConstraints.[]', 'diagnoses.[]', function () {\n            var constraints = this.get('selectedConstraints'),\n                diagnoses = this.get('diagnoses');\n            if (Ember.isEmpty(constraints)) {\n                return diagnoses; // No need to filter\n            }\n            // NOTE: we get the content, since _.isArray doesn't work with Ember's ArrayProxy and it's used by interesection\n            diagnoses = constraints.mapBy('diagnoses.content');\n            // Diagnoses is an array of arrays, so we need to apply when getting the intersection\n            diagnoses = _.intersection.apply(null, diagnoses);\n            diagnoses = _.unique(diagnoses);\n            return _diagnosesArray.default.createArray(diagnoses);\n        }),\n\n        actions: {\n            constraintClicked(isChecked, constraint) {\n                var constraints = this.get('selectedConstraints');\n                if (isChecked) {\n                    constraints.pushObject(constraint);\n                } else {\n                    constraints.removeObject(constraints.findBy('id', Ember.get(constraint, 'id')));\n                }\n                this.sendAction('constraintsChanged', this.get('filteredDiagnoses'));\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/diagnosis-refine', ['exports', 'boot/mixins/view-preferences', 'common/mixins/spinner', 'clinical/mixins/loading', 'clinical/repositories/diagnoses'], function (exports, _viewPreferences, _spinner, _loading, _diagnoses) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_viewPreferences.default, _spinner.default, _loading.default, {\n        classNames: ['diagnosis-refine'],\n        facetOffset: '200px 250px',\n\n        // attrs\n        diagnosis: null,\n        diagnoses: Ember.computed(function () {\n            return [];\n        }),\n        showCodes: false,\n        shouldShowCode: true,\n        showFacets: false,\n        isAddingNewDiagnosis: false,\n        isAddingCodesFromDiagnosis: true,\n        // actions: diagnosisRefined(diagnosisWithOnlyTheNewCodes)\n\n        // Overrides\n        // ViewPreferences Overrides\n        viewPreferencesKey: 'diagnosis-refine',\n        viewPreferenceProperties: Ember.computed(() => ['showCodes']),\n        // SpinnerSupport Overrides\n        showSpinner: Ember.computed.alias('isLoading'),\n\n        // properties\n        searchByIcd9: true,\n        selectedConstraints: Ember.computed(function () {\n            return [];\n        }),\n\n        tetherConstraints: Ember.computed(function () {\n            return [{\n                to: 'window',\n                pin: true,\n                attachment: 'together'\n            }];\n        }),\n\n        filteredDiagnoses: Ember.computed('diagnoses.[]', function () {\n            // If not overriden, just return all diagnoses.\n            return this.get('diagnoses');\n        }),\n\n        showHideCodesText: Ember.computed('showCodes', function () {\n            return (this.get('showCodes') ? 'Hide' : 'Show') + ' codes';\n        }),\n\n        searchByCodeSystem: 'icd9Code',\n\n        search: Ember.observer('searchByCodeSystem', function () {\n            var _this = this,\n                searchField;\n            searchField = this.get('searchByCodeSystem');\n            this._withProgress(_diagnoses.default.loadIcd10RelatedDiagnoses(this.get('diagnosis'), searchField).then(function (icd10Diagnoses) {\n                _this.setProperties({\n                    diagnoses: icd10Diagnoses,\n                    filteredDiagnoses: icd10Diagnoses\n                });\n            })).errorMessage('Can\\'t load related diagnoses. Try again later.');\n        }),\n\n        actions: {\n            refineDiagnoses(diagnosis) {\n                if (this.get('isAddingCodesFromDiagnosis')) {\n                    this.get('diagnosis').addCodesFrom(diagnosis);\n                }\n                this.sendAction('diagnosisRefined', diagnosis);\n            },\n\n            toggleProperty(propertyName) {\n                this.toggleProperty(propertyName);\n            },\n\n            constraintsChanged(filteredDiagnoses) {\n                this.set('filteredDiagnoses', filteredDiagnoses);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/diagnosis-search-for-family-history', ['exports', 'tyrion/components/single-select', 'clinical/repositories/diagnoses'], function (exports, _singleSelect, _diagnoses) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _singleSelect.default.extend({\n        classNames: ['diagnosis-search-for-family-history'],\n        // attrs\n        /***\n         * @property relatives\n         * @type {Array}\n         * A list of relatives in the form :\n         * ```\n         * [\n         *   {relative: { observations: [{diagnosis: {}}]} }\n         * ];\n         * ```\n         */\n        relatives: null,\n        // actions\n        /***\n         * @event select\n         * @param {Object} an object that represents the selected diagnosis\n         */\n        select: null,\n\n        // single-select overrides\n        // TODO: group stuff\n        placeholder: 'Search to add a diagnosis',\n        optionLabelPath: 'description',\n        selectType: 'typeahead',\n        isShorter: true,\n        sortLabels: false,\n        clearSearchOnFocus: false,\n        clearSearchOnSelect: false,\n        includeSearchIcon: true,\n        filterOnSelection: false,\n        minChars: 3,\n        openOnFocus: true,\n        isRemoteContent: true, // Force it to call queryRemoteContent even though we don't provide a url\n        optionGroupPath: 'diagnosisType',\n\n        queryRemoteContent() {\n            var query = this.get('query'),\n                lastSearch = this.get('lastSearch') || {};\n            query = query.trim();\n            if (query === lastSearch.query) {\n                return lastSearch.promise;\n            }\n            lastSearch.query = query;\n            lastSearch.promise = _diagnoses.default.searchForFamilyHistory(query, this.get('relatives'));\n            this.set('lastSearch', lastSearch);\n            return lastSearch.promise;\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/diagnosis-typeahead-icd10', ['exports', 'tyrion/components/multi-source-select', 'clinical/repositories/diagnoses', 'clinical/models/diagnosis', 'clinical/models/diagnoses-array'], function (exports, _multiSourceSelect, _diagnoses, _diagnosis, _diagnosesArray) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _multiSourceSelect.default.extend({\n        classNames: ['diagnosis-typeahead', 'diagnosis-typeahead-icd10'],\n        // attrs\n        canAddCustom: true,\n        optionalCodeSystems: Ember.computed('config.isDiagnosisSnomedAllOn', function () {\n            if (this.get('config.isDiagnosisSnomedAllOn')) {\n                return ['icd10', 'snomedAll', 'icd9'];\n            }\n            return ['icd10', 'snomed', 'icd9'];\n        }),\n        requiredCodeSystems: Ember.computed(() => []),\n        optionLabelPath: 'term',\n        optionDescriptionPath: 'term',\n        optionValuePath: 'id',\n\n        // component overrides\n        optionComponent: 'diagnosis-typeahead-item-icd10',\n        placeholder: 'Search to add diagnosis',\n        prompt: 'Add diagnosis',\n        isShorter: true,\n        sortLabels: false,\n        includeSearchIcon: true,\n        filterOnSelection: true,\n        addCustomItemTemplateText: 'Add custom diagnosis: \\\"%@\\\"',\n        canAddCustomItem: Ember.computed.and('canAddCustom', 'hasMinChars'),\n        clearSearchOnFocus: false,\n        clearSearchOnSelect: true,\n        minChars: 2,\n        openOnFocus: true,\n        maxSelections: 1,\n        isRemoteContent: true, // Force it to call queryRemoteContent even though we don't provide a url\n        dropdownEnabled: true,\n        includeDropdownFooter: Ember.computed.or('selectedTab.customLink', 'canAddCustomItem'),\n        hintText: 'Type at least 2 characters to start seeing results',\n        isSendSearchActionOnEnterKeyEnabled: false,\n        useTether: false,\n\n        queryRemoteContent() {\n            var query = this.get('query'),\n                lastSearch = this.get('lastSearch') || {};\n            query = query.trim();\n            if (query === lastSearch.query) {\n                return lastSearch.promise;\n            }\n            lastSearch.query = query;\n            lastSearch.promise = _diagnoses.default.search(query, this.get('requiredCodeSystems'), this.get('optionalCodeSystems')).then(results => {\n                this.setHighlightedIndex(0);\n                return results;\n            });\n            this.set('lastSearch', lastSearch);\n            return lastSearch.promise;\n        },\n\n        _selectionChanged: Ember.observer('selection', function () {\n            var selection = this.get('selection'),\n                fixedDxCodes = [],\n                relatedDxCodes = [],\n                diagnosis,\n                relatedDiagnoses;\n\n            if (selection !== null) {\n                this.set('tabSelectedDefault', 0);\n                if (selection.get('constructor.modelName') === 'favorite-diagnosis') {\n                    this.sendAction('favoriteSelected', _diagnosis.default.wrap({\n                        name: selection.get('name'),\n                        diagnosisCodes: Ember.copy(selection.get('diagnosisCodes'), true)\n                    }));\n                    this.set('tabSelectedDefault', 1);\n                } else if (selection.get('codeToRefine')) {\n                    selection.get('diagnosisCodes').forEach(function (codes) {\n                        if (codes[0].codeSystem.toLowerCase() === selection.get('codeToRefine')) {\n                            // Note using pushObject, since each array represents combinatory for a different diagnosis\n                            relatedDxCodes.pushObject(codes);\n                        } else if (!(codes[0].codeSystem.toLowerCase() === 'snomed' && selection.get('snomedCodes.length') > 1)) {\n                            fixedDxCodes.pushObjects(codes);\n                        }\n                    });\n\n                    diagnosis = _diagnosis.default.wrap({\n                        diagnosisCodes: fixedDxCodes,\n                        name: selection.get('term')\n                    });\n\n                    relatedDiagnoses = relatedDxCodes.map(function (arrayOfCodes) {\n                        return _diagnosis.default.wrap({\n                            diagnosisCodes: arrayOfCodes\n                        });\n                    });\n                    this.sendAction('diagnosisSelected', diagnosis);\n                    this.sendAction('refineDx', _diagnosesArray.default.createArray(relatedDiagnoses), diagnosis);\n                } else {\n                    selection.get('diagnosisCodes').forEach(function (codes) {\n                        if (!(codes[0].codeSystem.toLowerCase() === 'snomed' && selection.get('snomedCodes.length') > 1)) {\n                            fixedDxCodes.pushObjects(codes);\n                        }\n                    });\n\n                    diagnosis = _diagnosis.default.wrap({\n                        diagnosisCodes: fixedDxCodes,\n                        name: selection.get('term')\n                    });\n\n                    this.sendAction('diagnosisSelected', diagnosis);\n                }\n\n                this.set('selection', null);\n            }\n        }),\n        filteredContent: Ember.computed('content.[]', 'selectedTab.content.[]', 'query', 'optionLabelPath', 'sortLabels', function () {\n            const content = this.get('selectedTab.isDefault') ? this.get('content') : this.get('selectedTab.content');\n            if (Ember.isEmpty(content)) {\n                return [];\n            }\n            return content;\n        }),\n        actions: {\n            selectTab(tab) {\n                this.selectTab(tab, true);\n            },\n            addCustomItem() {\n                this._super.apply(this, arguments);\n                var description = this.get('query'),\n                    customDiagnosis = _diagnosis.default.wrap({\n                    name: description,\n                    diagnosisCodes: [{ codeSystem: 'Custom', code: '', description: description }]\n                });\n                this.sendAction('customDiagnosisSelected', customDiagnosis);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/diagnosis-typeahead-item-icd10', ['exports', 'tyrion/components/multi-source-option'], function (exports, _multiSourceOption) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _multiSourceOption.default.extend({\n        layoutName: 'components/diagnosis-typeahead-item-icd10'\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/diagnosis-typeahead-item', ['exports', 'tyrion/components/single-select-option'], function (exports, _singleSelectOption) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _singleSelectOption.default.extend({\n        layoutName: 'components/diagnosis-typeahead-item',\n        showCodes: Ember.computed.alias('parentDataContext.showCodes')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/diagnosis-typeahead', ['exports', 'tyrion/components/single-select', 'clinical/repositories/diagnoses', 'clinical/models/diagnosis', 'clinical/models/diagnoses-array'], function (exports, _singleSelect, _diagnoses, _diagnosis, _diagnosesArray) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _singleSelect.default.extend({\n        classNames: ['diagnosis-typeahead'],\n        classNameBindings: ['showCodes'],\n        // attrs\n        canAddCustom: true,\n        optionalCodeSystems: null,\n        requiredCodeSystems: null,\n        showCodes: true,\n\n        // actions\n        // diagnosisSelected(Diagnosis)\n        // customDiagnosisSelected(Diagnosis)\n        /***\n         * The component sends diagnosisSelected first followed by refineDx (if needed)\n         * includes the list of matches from the initial search. This refinement\n         * can be to ICD-9 or ICD-10\n         */\n        // refineDx(DiagnosesArray, DiagnosisToRefin)\n\n        // single-select overrides\n        optionComponent: 'diagnosis-typeahead-item',\n        dataContext: Ember.computed('showCodes', function () {\n            const showCodes = this.get('showCodes');\n            return { showCodes };\n        }),\n\n        placeholder: 'Search to add a diagnosis',\n        optionLabelPath: 'term',\n        selectType: 'typeahead',\n        isShorter: true,\n        sortLabels: false,\n        clearSearchOnFocus: false,\n        clearSearchOnSelect: true,\n        includeSearchIcon: true,\n        filterOnSelection: false,\n        addCustomItemTemplateText: 'Add custom diagnosis for \\\"%@\\\"',\n        canAddCustomItem: Ember.computed.and('canAddCustom', 'hasMinChars'),\n        minChars: 3,\n        openOnFocus: true,\n        isRemoteContent: true, // Force it to call queryRemoteContent even though we don't provide a url\n        queryRemoteContent() {\n            var query = this.get('query'),\n                lastSearch = this.get('lastSearch') || {};\n            query = query.trim();\n            if (query === lastSearch.query) {\n                return lastSearch.promise;\n            }\n            lastSearch.query = query;\n            lastSearch.promise = _diagnoses.default.search(query, this.get('requiredCodeSystems'), this.get('optionalCodeSystems'));\n            this.set('lastSearch', lastSearch);\n            return lastSearch.promise;\n        },\n\n        _selectionChanged: Ember.observer('selection', function () {\n            var selection = this.get('selection'),\n                fixedDxCodes = [],\n                relatedDxCodes = [],\n                diagnosis,\n                relatedDiagnoses;\n\n            if (selection !== null) {\n                if (selection.get('codeToRefine')) {\n                    selection.get('diagnosisCodes').forEach(function (codes) {\n                        if (codes[0].codeSystem.toLowerCase() === selection.get('codeToRefine')) {\n                            // Note using pushObject, since each array represents combinatory for a different diagnosis\n                            relatedDxCodes.pushObject(codes);\n                        } else if (!(codes[0].codeSystem.toLowerCase() === 'snomed' && selection.get('snomedCodes.length') > 1)) {\n                            fixedDxCodes.pushObjects(codes);\n                        }\n                    });\n\n                    diagnosis = _diagnosis.default.wrap({\n                        diagnosisCodes: fixedDxCodes,\n                        name: selection.get('term')\n                    });\n\n                    relatedDiagnoses = relatedDxCodes.map(function (arrayOfCodes) {\n                        return _diagnosis.default.wrap({\n                            diagnosisCodes: arrayOfCodes\n                        });\n                    });\n                    this.sendAction('diagnosisSelected', diagnosis);\n                    this.sendAction('refineDx', _diagnosesArray.default.createArray(relatedDiagnoses), diagnosis);\n                } else {\n                    selection.get('diagnosisCodes').forEach(function (codes) {\n                        if (!(codes[0].codeSystem.toLowerCase() === 'snomed' && selection.get('snomedCodes.length') > 1)) {\n                            fixedDxCodes.pushObjects(codes);\n                        }\n                    });\n\n                    diagnosis = _diagnosis.default.wrap({\n                        diagnosisCodes: fixedDxCodes,\n                        name: selection.get('term')\n                    });\n\n                    this.sendAction('diagnosisSelected', diagnosis);\n                }\n\n                this.set('selection', null);\n            }\n        }),\n        actions: {\n            addCustomItem() {\n                this._super.apply(this, arguments);\n                var description = this.get('query'),\n                    customDiagnosis = _diagnosis.default.wrap({\n                    name: description,\n                    diagnosisCodes: [{ codeSystem: 'Custom', code: '', description: description }]\n                });\n                this.sendAction('customDiagnosisSelected', customDiagnosis);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/encounter-diagnoses-list-item', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        attributeBindings: ['data-element'],\n        diagnosis: null,\n        hintTextClass: '',\n        click() {\n            this._super();\n            this.sendAction('editDiagnosis', this.get('diagnosis'));\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/encounter-diagnoses-list-section', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        actions: {\n            editDiagnosis(diagnosis) {\n                this.sendAction('editDiagnosis', diagnosis);\n            },\n            toggleProperty(key) {\n                this.toggleProperty(key);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/encounter-diagnoses-list', ['exports', 'clinical/mixins/with-diagnoses', 'boot/mixins/view-preferences', 'charting/mixins/with-patient-print-title'], function (exports, _withDiagnoses, _viewPreferences, _withPatientPrintTitle) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    const SHOW_OPTIONS = [{ id: 1, label: 'Diagnosis Comment', flagName: 'showDiagnosisComment' }, { id: 2, label: 'Encounter Comments', flagName: 'showEncounterComment' }, { id: 3, label: 'Medication', flagName: 'showMedication' }];\n    const DEFAULT_SHOW_OPTIONS = [];\n    const SORT_OPTIONS = [{ id: 1, label: 'Sort alphabetically', activeField: 'name', historicalField: 'name', sortAscending: true }, { id: 2, label: 'Sort by start/stop date', activeField: 'startDateUtc', historicalField: 'endDateUtc', sortAscending: false }];\n    const DEFAULT_SORT = SORT_OPTIONS[1];\n\n    exports.default = Ember.Component.extend(_withDiagnoses.default, _viewPreferences.default, _withPatientPrintTitle.default, {\n        // public properties\n        patient: null,\n        patientGuid: Ember.computed.alias('patient.patientPracticeGuid'),\n        patientSummary: Ember.computed.alias('patient'),\n        displayName: 'Diagnoses',\n\n        actions: {\n            selectedSortOption(sortOption) {\n                this.set('selectedSort', sortOption);\n            },\n            displayChanged(diagnosisDescriptionDisplay) {\n                Ember.run.scheduleOnce('afterRender', this, 'set', 'diagnosisDescriptionDisplay', diagnosisDescriptionDisplay);\n            }\n        },\n        isAllowedToEditDiagnoses: Ember.computed('authorization.entitledFeatures.[]', function () {\n            return this.get('authorization').isEntitledFor('Chart.Diagnoses.Edit');\n        }),\n        viewPreferencesKey: 'encounter-diagnoses-list',\n        viewPreferenceProperties: Ember.computed(() => ['selectedSort', 'selectedShowOptions']),\n        sortOptions: Ember.computed(function () {\n            return SORT_OPTIONS;\n        }),\n        selectedSort: Ember.computed(function () {\n            return DEFAULT_SORT;\n        }),\n        showOptions: Ember.computed(function () {\n            return SHOW_OPTIONS;\n        }),\n        selectedShowOptions: Ember.computed(function () {\n            // Default overriden by preferences\n            return DEFAULT_SHOW_OPTIONS;\n        }),\n        _updateShowOptionFlags: Ember.observer('selectedShowOptions', function () {\n            var _this = this;\n            this.get('showOptions').forEach(function (item) {\n                var isSelected = !!_this.get('selectedShowOptions').findBy('id', item.id);\n                _this.set(item.flagName, isSelected);\n            });\n        }),\n\n        sortedChronicActiveDiagnoses: Ember.computed.sort('chronicActivePatientDiagnoses', 'activeSortProperties'),\n        sortedChronicHistoricalDiagnoses: Ember.computed.sort('chronicHistoricalPatientDiagnoses', 'historicalSortProperties'),\n        sortedAcuteActiveDiagnoses: Ember.computed.sort('acuteActivePatientDiagnoses', 'activeSortProperties'),\n        sortedAcuteHistoricalDiagnoses: Ember.computed.sort('acuteHistoricalPatientDiagnoses', 'historicalSortProperties'),\n        allActiveDiagnoses: Ember.computed.sort('activePatientDiagnoses', 'activeSortProperties'),\n        allHistoricalDiagnoses: Ember.computed.sort('historicalPatientDiagnoses', 'historicalSortProperties'),\n        activeSortProperties: Ember.computed('selectedSort.activeField', 'selectedSort.sortAscending', function () {\n            const property = this.get('selectedSort.activeField');\n            return this.get('selectedSort.sortAscending') ? [property] : [`${property}:desc`];\n        }),\n        historicalSortProperties: Ember.computed('selectedSort.historicalField', 'selectedSort.sortAscending', function () {\n            const property = this.get('selectedSort.historicalField');\n            return this.get('selectedSort.sortAscending') ? [property] : [`${property}:desc`];\n        }),\n        sortedUnspecifiedActiveDiagnoses: Ember.computed.sort('unspecifiedActivePatientDiagnoses', 'activeSortProperties')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/eventing-radio-button', ['exports', 'tyrion/components/d-radio-button'], function (exports, _dRadioButton) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _dRadioButton.default.extend({\n        onChecked: null,\n        checkedValue: '',\n\n        _updateElementValue() {\n            if (!this.get('checked')) {\n                return;\n            }\n\n            if (this.get('onChecked')) {\n                this.sendAction('onChecked', this.get('value'), this.get('checkedValue'));\n            }\n\n            this.set('selectedValue', this.get('value'));\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/family-health-history-card', ['exports', 'clinical/mixins/with-pmh', 'charting/mixins/with-patient-print-title', 'ember-concurrency'], function (exports, _withPmh, _withPatientPrintTitle, _emberConcurrency) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_withPmh.default, _withPatientPrintTitle.default, {\n        authorization: Ember.inject.service(),\n        routing: Ember.inject.service('pf-routing'),\n\n        hasRecordedHistory: Ember.computed.notEmpty('pastMedicalHistory.familyHealthHistory'),\n        hideEdit: Ember.computed.or('isLoading', 'error', 'isNotAllowedToEditPMH', 'hasRecordedHistory', 'isEditing'),\n        isEditing: Ember.computed.equal('routing.currentRouteName', 'summary.family-health-history'),\n        patientSummary: Ember.computed.alias('patient'),\n        isListVisible: Ember.computed.or('isEditing', 'hasRecordedHistory'),\n\n        defaultMessage: Ember.computed('isLoading', 'isListVisible', function () {\n            if (this.get('isListVisible')) {\n                return null;\n            }\n\n            if (this.get('isLoading')) {\n                return 'Loading family health history...';\n            }\n\n            return 'No family health history recorded';\n        }),\n\n        isNotAllowedToEditPMH: Ember.computed('authorization.entitledFeatures.[]', function () {\n            return !this.get('authorization').isEntitledFor('Chart.Encounter.Edit');\n        }),\n\n        actions: {\n            edit() {\n                this.get('routing').transitionToRoute('summary.family-health-history');\n            }\n        },\n\n        print: (0, _emberConcurrency.task)(function* () {\n            // Load the patient info first to ensure that it gets rendered on the print preview\n            yield this.get('store').findRecord('patient', this.get('patientPracticeGuid'));\n\n            this.sendAction('printAudit', 'PastMedicalHistory');\n            this.set('isPrintPreviewVisible', true);\n        }).drop()\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/family-history-diagnosis-detail', ['exports', 'ember-concurrency', 'clinical/repositories/family-health-history', 'clinical/repositories/diagnoses'], function (exports, _emberConcurrency, _familyHealthHistory, _diagnoses) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    const saveProperties = ['diagnosis', 'onsetDate', 'comment', 'relative'];\n\n    exports.default = Ember.Component.extend({\n        classNames: ['family-history-detail'],\n        maxDate: moment(new Date()).format('MM/DD/YYYY'),\n        notDisabled: Ember.computed.not('disabled'),\n        showSaveButton: Ember.computed.and('diagnosis', 'notDisabled'),\n        showDeleteButton: Ember.computed.and('observation.observationGuid', 'notDisabled'),\n        relativeDescription: Ember.computed('relative', function () {\n            const relative = this.get('relative');\n            const relationshipType = Ember.get(relative, 'relationshipType.description');\n            const { firstName, lastName } = Ember.getProperties(relative, 'firstName', 'lastName');\n            let name;\n            if (Ember.isPresent(firstName) && Ember.isPresent(lastName)) {\n                name = `${firstName} ${lastName}`;\n            } else if (Ember.isPresent(lastName)) {\n                name = lastName;\n            } else {\n                name = firstName;\n            }\n            if (Ember.isPresent(name)) {\n                return `${name} - ${relationshipType}`;\n            }\n            return relationshipType;\n        }),\n        noResultsText: Ember.computed('diagnosisQuery', function () {\n            return this.get('diagnosisQuery.length') > 2 ? 'No results' : 'Type at least 3 characters to see results';\n        }),\n        init() {\n            this._super();\n            this.setObservationFields();\n        },\n        didInsertElement() {\n            this._super();\n            if (!this.get('diagnosis')) {\n                this.$('.composable-select__input').focus();\n            }\n        },\n        setObservationFields: Ember.observer('observation', function () {\n            const observation = this.get('observation') || {};\n            const initialProperties = Ember.getProperties(observation, saveProperties);\n            if (Ember.isPresent(initialProperties.onsetDate)) {\n                initialProperties.onsetDate = moment.utc(initialProperties.onsetDate).format('MM/DD/YYYY');\n            }\n            this.setProperties(Ember.merge({ initialProperties }, initialProperties));\n        }),\n        searchDiagnoses: (0, _emberConcurrency.task)(function* (query) {\n            const searchResults = yield _diagnoses.default.searchForFamilyHistory(query, this.get('relatives'));\n            return searchResults;\n        }).restartable(),\n        save: (0, _emberConcurrency.task)(function* () {\n            const observation = this.get('observation');\n            const data = this.getProperties(saveProperties);\n            if (Ember.isPresent(data.onsetDate)) {\n                data.onsetDate = moment(data.onsetDate).utc().startOf('day').toISOString();\n            }\n            Ember.setProperties(observation, data);\n            Ember.set(observation, 'relative', {\n                relativeGuid: Ember.get(observation, 'relative.relativeGuid')\n            });\n            try {\n                yield _familyHealthHistory.default.saveObservation(observation);\n                this.reload();\n                this.close();\n            } catch (e) {\n                Ember.setProperties(observation, this.get('initialProperties'));\n            }\n        }).drop(),\n        delete: (0, _emberConcurrency.task)(function* () {\n            const observation = this.get('observation');\n            yield _familyHealthHistory.default.deleteObservation(observation);\n            this.removeObservation(observation);\n            this.close();\n        }).drop()\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/family-history-list', ['exports', 'clinical/repositories/family-health-history'], function (exports, _familyHealthHistory) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        classNames: ['box-padding-Alg-v2', 'flex-grow', 'family-history__list'],\n        actions: {\n            unknownConditionChecked(value) {\n                const { unknownCondition, patientPracticeGuid } = this.getProperties('unknownCondition', 'patientPracticeGuid');\n                Ember.set(unknownCondition, 'operation', value ? 'add' : 'delete');\n                _familyHealthHistory.default.saveCondition(unknownCondition, patientPracticeGuid);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/family-history-relative-card', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        attributeBindings: ['data-guid', 'data-element'],\n        'data-element': 'relative-card',\n        'data-guid': Ember.computed.alias('relative.relativeGuid'),\n        relationshipDescription: Ember.computed.alias('relative.relationshipType.description'),\n        fullName: Ember.computed('relative.{firstName,lastName}', function () {\n            const firstName = this.get('relative.firstName');\n            const lastName = this.get('relative.lastName');\n            if (Ember.isEmpty(firstName)) {\n                if (Ember.isEmpty(lastName)) {\n                    return '';\n                }\n                return lastName;\n            }\n            if (Ember.isEmpty(lastName)) {\n                return firstName;\n            }\n            return `${firstName} ${lastName}`;\n        }),\n        title: Ember.computed('relationshipDescription', 'fullName', function () {\n            const { relationshipDescription, fullName } = this.getProperties('relationshipDescription', 'fullName');\n            if (Ember.isEmpty(fullName)) {\n                return relationshipDescription;\n            }\n            return `${relationshipDescription} - ${fullName}`;\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/family-history-relative-detail', ['exports', 'clinical/repositories/family-health-history', 'ember-concurrency'], function (exports, _familyHealthHistory, _emberConcurrency) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    const saveProperties = ['dateOfBirth', 'firstName', 'lastName', 'comment', 'relationshipType', 'isDeceased'];\n\n    exports.default = Ember.Component.extend({\n        classNames: ['family-history-detail'],\n        maxDate: moment(new Date()).format('MM/DD/YYYY'),\n        notDisabled: Ember.computed.not('disabled'),\n        showSaveButton: Ember.computed.and('relationshipType', 'notDisabled'),\n        showDeleteButton: Ember.computed.and('relative.relativeGuid', 'notDisabled'),\n        init() {\n            this._super();\n            this.setRelativeFields();\n        },\n        setRelativeFields: Ember.observer('relative', function () {\n            const relative = this.get('relative') || {};\n            const initialProperties = Ember.getProperties(relative, saveProperties);\n            if (!Ember.get(relative, 'relativeGuid')) {\n                this.set('isRelationshipDropdownOpen', true);\n            }\n            if (Ember.isPresent(initialProperties.dateOfBirth)) {\n                initialProperties.dateOfBirth = moment.utc(initialProperties.dateOfBirth).format('MM/DD/YYYY');\n            }\n            this.setProperties(Ember.merge({ initialProperties }, initialProperties));\n        }),\n        save: (0, _emberConcurrency.task)(function* () {\n            const relative = this.get('relative');\n            const data = this.getProperties(saveProperties);\n            if (data.relationshipType.serialize) {\n                data.relationshipType = data.relationshipType.serialize({\n                    includeId: true\n                });\n            }\n            if (Ember.isPresent(data.dateOfBirth)) {\n                data.dateOfBirth = moment(data.dateOfBirth).utc().startOf('day').toISOString();\n            }\n            Ember.setProperties(relative, data);\n            try {\n                yield _familyHealthHistory.default.saveRelative(relative);\n                this.reload();\n                this.close();\n            } catch (e) {\n                relative.setProperties(this.get('initialProperties'));\n            }\n        }).drop(),\n        delete: (0, _emberConcurrency.task)(function* () {\n            const relative = this.get('relative');\n            yield _familyHealthHistory.default.deleteRelative(relative);\n            this.removeRelative(relative);\n            this.close();\n        }).drop()\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/favorite-diagnoses-toolbox', ['exports', 'clinical/models/diagnosis', 'clinical/models/favorite-diagnoses-settings', 'common/mixins/spinner', 'boot/mixins/view-preferences', 'ember-concurrency'], function (exports, _diagnosis, _favoriteDiagnosesSettings, _spinner, _viewPreferences, _emberConcurrency) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_spinner.default, _viewPreferences.default, {\n        showSpinner: Ember.computed.alias('loadFavoriteDiagnoses.isRunning'),\n        didFailToLoad: Ember.computed.alias('loadFavoriteDiagnoses.last.isError'),\n\n        classNames: ['favorite-diagnoses-toolbox'],\n\n        // ViewPreferences Overrides\n        viewPreferencesKey: 'favorite-diagnoses-toolbox',\n        viewPreferenceProperties: Ember.computed(() => ['isShowingCodes']),\n\n        diagnoses: null,\n        init() {\n            this._super();\n            this.get('loadFavoriteDiagnoses').perform();\n        },\n        isShowingCodes: true,\n        saveChoiceImmediately: Ember.observer('isShowingCodes', function () {\n            this.persistUserPreferences();\n        }),\n        isDisplayCodeSystemTerm: Ember.computed.equal('displayCodeSystem', 'term'),\n        displayCodeSystem: 'icd10',\n        displayCodeSystemLabel: 'ICD-10',\n        loadFavoriteDiagnoses: (0, _emberConcurrency.task)(function* () {\n            const store = this.get('store');\n            const displayCodeSystem = this.get('displayCodeSystem');\n\n            const sortOrder = yield _favoriteDiagnosesSettings.default.getSortOrder(store);\n            let diagnoses = yield store.findAll('favoriteDiagnosis');\n\n            if (diagnoses.get('length')) {\n                diagnoses.forEach(code => code.set('displayCodeSystem', displayCodeSystem));\n                diagnoses = diagnoses.sortBy(sortOrder.property);\n                if (!sortOrder.sortAscending) {\n                    diagnoses.reverse();\n                }\n            }\n            this.set('diagnoses', diagnoses);\n        }).drop(),\n        applyDisplayCodeSystemWhenAddingNewDiagnosis: Ember.observer('diagnoses.[]', function () {\n            const displayCodeSystem = this.get('displayCodeSystem');\n\n            this.get('diagnoses').forEach(code => {\n                code.set('displayCodeSystem', displayCodeSystem);\n            });\n        }),\n        actions: {\n            selectDiagnosis(diagnosis) {\n                this.sendAction('diagnosisSelected', _diagnosis.default.wrap({\n                    name: diagnosis.get('name'),\n                    diagnosisCodes: Ember.copy(diagnosis.get('diagnosisCodes'), true)\n                }));\n            },\n            retryLoadingData() {\n                this.get('loadFavoriteDiagnoses').perform();\n            },\n            toggleShowCodes() {\n                this.toggleProperty('isShowingCodes');\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/favorite-diagnosis-detail', ['exports', 'tyrion/components/detail-pane'], function (exports, _detailPane) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _detailPane.default.extend({\n        classNames: ['favorite-diagnosis-detail-panel'],\n        isToolBoxVisible: false,\n        hasCustomToolbox: false,\n        init() {\n            this._super();\n            this.set('resizables', [{ element: '.detail-pane-body-wrapper', offset: 288 }]);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/frequent-diagnoses', ['exports', 'clinical/repositories/diagnoses', 'clinical/models/diagnosis', 'clinical/mixins/loading', 'common/mixins/spinner'], function (exports, _diagnoses, _diagnosis, _loading, _spinner) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_spinner.default, _loading.default, {\n        loading: false,\n        frequentDiagnoses: undefined,\n        classNames: ['frequent-diagnoses'],\n\n        loadFrequentDiagnoses: Ember.on('init', function (forceReload) {\n            var _this = this;\n            this.set('frequentDiagnoses', []);\n            this.set('loadFailed', false);\n            this._withProgress(_diagnoses.default.loadFrequentDiagnoses({ forceReload: forceReload }).then(function (data) {\n                _this.set('frequentDiagnoses', data);\n            }).catch(function () {\n                _this.set('loadFailed', true);\n            }));\n        }),\n\n        actions: {\n            selectDiagnosis(frequentDiagnosis) {\n                var deep = true,\n                    diagnosis = Ember.copy(frequentDiagnosis.get('content'), deep);\n                diagnosis = _diagnosis.default.wrap(diagnosis);\n                this.sendAction('diagnosisSelected', diagnosis);\n            },\n            reloadFrequentDiagnoses() {\n                this.loadFrequentDiagnoses(true);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/frequent-medications', ['exports', 'clinical/repositories/medications', 'clinical/models/medication', 'common/mixins/spinner', 'ember-concurrency'], function (exports, _medications, _medication, _spinner, _emberConcurrency) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_spinner.default, {\n        attributeBindings: ['data-element'],\n        'data-element': 'frequent-medications',\n        loading: false,\n        medicationsFilter: null,\n        filteredText: '',\n        filteredMedications: null,\n        hideFilter: false,\n        frequentMedications: null,\n        classNames: ['flex-grow', 'flex-column'],\n\n        isLoading: Ember.computed.alias('loadFrequentMedications.isRunning'),\n\n        init() {\n            this._super();\n            this.get('loadFrequentMedications').perform();\n        },\n\n        loadFrequentMedications: (0, _emberConcurrency.task)(function* (forceReload) {\n            this.setProperties({\n                frequentMedications: [],\n                filteredMedications: []\n            });\n            this.set('loadFailed', false);\n            try {\n                const data = yield _medications.default.loadFrequentMedications({ forceReload });\n                this.set('frequentMedications', data);\n                this.doFilterMedications();\n            } catch (e) {\n                this.set('loadFailed', true);\n            }\n        }).drop(),\n\n        doFilterMedications: Ember.observer('medicationsFilter', function () {\n            var filterText = this.get('medicationsFilter'),\n                meds = this.get('frequentMedications'),\n                filteredMedications;\n\n            if (Ember.isEmpty(filterText)) {\n                this.set('filteredMedications', meds);\n            } else {\n                filteredMedications = meds.filter(function (med) {\n                    return med.get('drugName').toLowerCase().indexOf(filterText.toLowerCase()) > -1;\n                });\n                this.set('filteredMedications', filteredMedications);\n            }\n        }),\n\n        actions: {\n\n            selectMedication(frequentMedication) {\n                var deep = true,\n                    medication = Ember.copy(frequentMedication.get('content'), deep);\n                medication = _medication.default.wrap(medication);\n                this.sendAction('selectMedication', medication);\n            },\n\n            reloadFrequentMedications() {\n                this.get('loadFrequentMedications').perform(true);\n            },\n\n            cleanUp() {\n                this.setProperties({\n                    'medicationsFilter': null\n                });\n            }\n        }\n\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/goal-detail', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        resizables: null,\n        addingNewGoal: false,\n        errors: null,\n        placeholderText: 'Add a goal',\n        init() {\n            this._super();\n            this.setProperties({\n                addingNewGoal: !this.get('goal.description'),\n                resizables: []\n            });\n            this.focusSearch();\n        },\n        willDestroy() {\n            this.set('errors', null);\n        },\n        goalResetObserver: Ember.observer('goal', function () {\n            if (Ember.isEmpty(this.get('goal.description'))) {\n                let textarea = this.$('textarea');\n                textarea[0].value = '';\n                autosize.update(textarea);\n            }\n        }),\n        isValidObserver: Ember.observer('isValid', 'goal', function () {\n            if (this.get('isValid')) {\n                this.focusSearch();\n            }\n        }),\n        focusIn() {\n            this.set('errors', null);\n        },\n        focusSearch() {\n            Ember.run.scheduleOnce('afterRender', () => {\n                this.$('textarea').focus();\n            });\n        },\n        actions: {\n            delete() {\n                this.sendAction('delete');\n            },\n            cancel() {\n                this.sendAction('cancel');\n            },\n            save(shouldAddAnother) {\n                this.sendAction('save', shouldAddAnother);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/goals-section', ['exports', 'ember-concurrency', 'charting/mixins/with-patient-print-title'], function (exports, _emberConcurrency, _withPatientPrintTitle) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_withPatientPrintTitle.default, {\n        patientService: Ember.inject.service('patient'),\n        routing: Ember.inject.service('pf-routing'),\n\n        classNames: ['goals-section'],\n        sortProperties: Ember.computed(() => ['sortableDate']),\n        sortedGoals: Ember.computed.sort('goals', 'sortProperties'),\n        activeGoals: Ember.computed.filterBy('sortedGoals', 'isActive', true),\n        inactiveGoals: Ember.computed.filterBy('sortedGoals', 'isActive', false),\n        isLoading: Ember.computed.alias('loadGoals.isRunning'),\n        includeHeaderAndFooter: true,\n        showInactiveGoals: false,\n        printActive: false,\n        printInactive: false,\n        isPrintVisible: false,\n        patientSummary: Ember.computed.alias('patient'),\n        patientPracticeGuid: Ember.computed.alias('patient.patientPracticeGuid'),\n        displayName: 'Goals',\n        printOptions: Ember.computed(() => [{ value: 'all', label: 'All goals' }, { value: 'active', label: 'Active goals' }, { value: 'inactive', label: 'Inactive goals' }]),\n        init() {\n            this._super();\n            const onRefreshChart = data => {\n                if (data.patientPracticeGuid === this.get('patientPracticeGuid')) {\n                    this.onLoadedGoals(data.goals ? data.goals.toArray() : []);\n                }\n            };\n            this.get('patientService').on('refreshChart', onRefreshChart);\n            this.set('onRefreshChart', onRefreshChart);\n        },\n        willDestroyElement() {\n            this.get('patientService').off('refreshChart', this.get('onRefreshChart'));\n        },\n        loadPatientGoals: Ember.on('init', Ember.observer('patientPracticeGuid', function () {\n            this.set('errorText', null);\n            this.get('loadGoals').perform();\n        })),\n        loadGoals: (0, _emberConcurrency.task)(function* () {\n            const patientPracticeGuid = this.get('patientPracticeGuid');\n            const store = this.get('store');\n            this.set('errorText', null);\n            this.set('goals', null);\n            try {\n                const goals = yield store.query('patient-goal', { patientPracticeGuid });\n                this.onLoadedGoals(goals.toArray());\n            } catch (e) {\n                this.set('errorText', 'Could not load patient goals. Try again later.');\n                throw e;\n            }\n        }).restartable(),\n        onLoadedGoals(goals) {\n            this.set('goals', goals);\n            if (this.attrs.loadedGoals) {\n                this.attrs.loadedGoals(goals);\n            }\n        },\n        actions: {\n            edit(goal) {\n                const goalGuid = goal ? goal.get('id') : 'new';\n                const patientPracticeGuid = goal ? goal.get('patientPracticeGuid') : this.get('patientPracticeGuid');\n                this.get('routing').transitionToRoute('summary.goal', patientPracticeGuid, goalGuid);\n            },\n            add() {\n                this.get('routing').transitionToRoute('summary.goal', this.get('patientPracticeGuid'), 'new');\n            },\n            toggleShowInactiveLink() {\n                this.toggleProperty('showInactiveGoals');\n            },\n            print(type) {\n                this.get('store').findRecord('patient', this.get('patientPracticeGuid')).then(() => {\n                    this.sendAction('printAudit', 'PatientGoals');\n                    this.set('printActive', type === 'all' || type === 'active');\n                    this.set('printInactive', type === 'all' || type === 'inactive');\n                    this.set('isPrintVisible', true);\n                });\n            },\n            refreshGoals() {\n                const goals = this.get('store').peekAll('patient-goal').filterBy('patientPracticeGuid', this.get('patientPracticeGuid'));\n\n                this.set('goals', goals);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/health-concern-detail', ['exports', 'ember-concurrency', 'clinical/repositories/diagnoses', 'tyrion/mixins/destroyed'], function (exports, _emberConcurrency, _diagnoses, _destroyed) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_destroyed.default, {\n        useTether: Ember.computed(() => !window.runningTests),\n        tabSelectedDefault: 0,\n        categories: Ember.computed('diagnosesCategory', 'allergiesCategory', function () {\n            return [this.get('diagnosesCategory'), this.get('allergiesCategory')];\n        }),\n        diagnosesCategory: Ember.computed(function () {\n            return {\n                category: 'Diagnoses',\n                noResultsMessage: 'Patient does not have any recorded diagnoses.',\n                options: []\n            };\n        }),\n        allergiesCategory: Ember.computed(function () {\n            return {\n                category: 'Allergies',\n                noResultsMessage: 'Patient does not have any recorded allergies.',\n                options: []\n            };\n        }),\n        loadCategories: Ember.on('init', Ember.observer('model', function () {\n            this.setProperties({\n                resizables: [],\n                'allergiesCategory.options': [],\n                'diagnosesCategory.options': []\n            });\n            const healthConcernReferenceGuid = this.get('model.healthConcernReferenceGuid');\n            if (healthConcernReferenceGuid) {\n                if (!this.get('model.healthConcernReferenceItem')) {\n                    this.get('loadReferenceItem').perform(healthConcernReferenceGuid, this.get('model.healthConcernType'));\n                }\n            } else {\n                this.get('loadClinicalData').perform();\n            }\n        })),\n        loadClinicalData: (0, _emberConcurrency.task)(function* () {\n            const patientPracticeGuid = this.get('model.patientPracticeGuid');\n            const existingHealthConcerns = yield this.get('store').query('patient-health-concern', { patientPracticeGuid });\n            yield (0, _emberConcurrency.all)([this.get('loadAllergiesCategory').perform(patientPracticeGuid, existingHealthConcerns), this.get('loadDiagnosesCategory').perform(patientPracticeGuid, existingHealthConcerns)]);\n        }).drop(),\n        loadAllergiesCategory: (0, _emberConcurrency.task)(function* (patientPracticeGuid, existingHealthConcerns) {\n            const allergies = yield this.loadAllergies(patientPracticeGuid);\n            this.set('allergiesCategory.options', allergies.map(allergy => {\n                const healthConcernReferenceGuid = allergy.get('allergyGuid');\n                if (allergy.get('isCustom') || existingHealthConcerns.findBy('healthConcernReferenceGuid', healthConcernReferenceGuid)) {\n                    return null;\n                }\n                return {\n                    label: allergy.get('allergenText'),\n                    healthConcernReferenceGuid\n                };\n            }).compact().sortBy('label'));\n        }),\n        loadAllergies(patientPracticeGuid) {\n            return this.get('store').query('patient-allergy', { patientPracticeGuid });\n        },\n        loadDiagnosesCategory: (0, _emberConcurrency.task)(function* (patientPracticeGuid, existingHealthConcerns) {\n            const diagnoses = yield _diagnoses.default.loadDiagnoses(patientPracticeGuid);\n            this.set('diagnosesCategory.options', diagnoses.map(diagnosis => {\n                const healthConcernReferenceGuid = diagnosis.get('diagnosisGuid');\n                const isCustom = Ember.isEmpty(diagnosis.get('diagnosisCodes')) || diagnosis.get('isCustom');\n                if (isCustom || existingHealthConcerns.findBy('healthConcernReferenceGuid', healthConcernReferenceGuid)) {\n                    return null;\n                }\n                let label = diagnosis.get('icd10Code');\n                let isIcd10 = true;\n                if (!label) {\n                    label = diagnosis.get('icd9Code');\n                    isIcd10 = false;\n                }\n                return {\n                    healthConcernReferenceGuid,\n                    description: this.getDiagnosisDescription(diagnosis, isIcd10),\n                    label\n                };\n            }).compact().sortBy('description'));\n        }),\n        getDiagnosisDescription(diagnosis, isIcd10) {\n            const system = isIcd10 ? 'icd10' : 'icd9';\n            const codes = diagnosis._getCodesByCodeSystem(system);\n            if (Ember.isEmpty(codes)) {\n                return diagnosis.get('name');\n            }\n            return codes.map((code, index) => {\n                if (index === 0) {\n                    return code.description;\n                }\n                return `(${code.code}) ${code.description}`;\n            }).join(', ');\n        },\n        loadReferenceItem: (0, _emberConcurrency.task)(function* (healthConcernReferenceGuid, healthConcernType) {\n            const patientPracticeGuid = this.get('model.patientPracticeGuid');\n            if (healthConcernType === 'Allergy') {\n                const allergies = yield this.loadAllergies(patientPracticeGuid);\n                const allergy = allergies.findBy('allergyGuid', healthConcernReferenceGuid);\n                this.set('model.healthConcernReferenceItem', allergy);\n            } else {\n                const diagnoses = yield _diagnoses.default.loadDiagnoses(patientPracticeGuid);\n                const diagnosis = diagnoses.findBy('diagnosisGuid', healthConcernReferenceGuid);\n                this.set('model.healthConcernReferenceItem', diagnosis);\n            }\n        }).restartable(),\n        actions: {\n            selectClinicalItem(item) {\n                const healthConcernType = item.description ? 'Diagnosis' : 'Allergy';\n                const { healthConcernReferenceGuid } = item;\n                this.get('model').setProperties({\n                    healthConcernReferenceGuid,\n                    healthConcernType\n                });\n                this.set('model.healthConcernReferenceGuid', healthConcernReferenceGuid);\n                this.get('loadReferenceItem').perform(healthConcernReferenceGuid, healthConcernType);\n            },\n            clearClinicalItem() {\n                const model = this.get('model');\n                const healthConcernType = model.get('healthConcernType');\n                this.set('tabSelectedDefault', healthConcernType === 'Allergy' ? 1 : 0);\n                model.setProperties({\n                    healthConcernReferenceGuid: null,\n                    healthConcernType: null,\n                    healthConcernReferenceItem: null\n                });\n            },\n            save() {\n                this.attrs.save(false);\n            },\n            saveAndAddAnother() {\n                this.attrs.save(true);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/immunization-select', ['exports', 'boot/config', 'clinical/models/immunization-search', 'tyrion/components/single-select'], function (exports, _config, _immunizationSearch, _singleSelect) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _singleSelect.default.extend({\n        classNameBindings: ['hasCustomResults::no-custom-results'],\n\n        customItems: null,\n        clearSearchOnSelect: false,\n        includeSearchIcon: true,\n        isAddingNewVaccination: false,\n        isAllowingInventory: true,\n        itemModelClass: _immunizationSearch.default,\n        minChars: 2,\n        optionLabelPath: 'displayName',\n        placeholder: 'Search all vaccines',\n        selectType: 'typeahead',\n        sortLabels: false,\n        sourceType: null,\n\n        hasCustomResults: Ember.computed.notEmpty('customItems'),\n\n        remoteDataUrl: Ember.computed(function () {\n            return `${_config.default.defaultHost}/${_config.default.immunizationNamespace}/vaccines/advancedSearch`;\n        }),\n\n        didInsertElement() {\n            if (this.get('isAddingNewVaccination')) {\n                this.$('.ember-text-field').focus();\n            }\n\n            if (Ember.isPresent(this.get('query'))) {\n                Ember.run.scheduleOnce('afterRender', this, () => {\n                    this.set('showDropdown', true);\n                    this.updateContent();\n                });\n            }\n        },\n\n        buildUrl() {\n            const sourceType = this.get('sourceType');\n            let query = this.get('query');\n            let searchType = _immunizationSearch.historical;\n\n            if (Ember.isPresent(query)) {\n                if (query.lastIndexOf('.') === query.length - 1) {\n                    query = query.substring(0, query.length - 1);\n                }\n\n                if (query.indexOf('/') > -1) {\n                    query = query.substring(0, query.indexOf('/'));\n                }\n            }\n\n            if (sourceType && sourceType.toLowerCase() === _immunizationSearch.administered) {\n                searchType = _immunizationSearch.administered;\n            }\n\n            return `${this.get('remoteDataUrl')}/${searchType}/${encodeURIComponent(query.trim())}`;\n        },\n\n        performQuery() {\n            if (this.get('query') !== this.get('selection.displayName')) {\n                this.set('customItems', null);\n                this._super();\n            }\n        },\n\n        processResults(data) {\n            const additionalGroup = Ember.Object.create({\n                isGroupOption: true,\n                name: 'Additional search results'\n            });\n            const additionalItems = [];\n            const inventoryGroup = Ember.Object.create({\n                isGroupOption: true,\n                name: 'From your inventory'\n            });\n            const inventoryItems = [];\n            const itemModelClass = this.get('itemModelClass');\n            const results = [];\n            const customItems = [];\n\n            if (data) {\n                if (this.get('sourceType') !== 'Historical') {\n                    data = data.filterBy('isActive');\n                }\n\n                data.forEach(item => {\n                    var itemModel = itemModelClass.create(item);\n\n                    if (itemModel.get('isCustomOrFromInventory')) {\n                        inventoryItems.pushObject(itemModel);\n                    } else if (itemModel.get('isDynamic')) {\n                        customItems.pushObject(itemModel);\n                    } else {\n                        additionalItems.pushObject(itemModel);\n                    }\n                });\n\n                if (this.get('isAllowingInventory') && inventoryItems.length) {\n                    results.pushObject(inventoryGroup);\n                    results.pushObjects(inventoryItems);\n                }\n\n                if (Ember.isPresent(additionalItems)) {\n                    if (this.get('isAllowingInventory') && Ember.isPresent(inventoryItems)) {\n                        results.pushObject(additionalGroup);\n                    }\n\n                    results.pushObjects(additionalItems);\n                }\n            }\n\n            this.set('customItems', customItems);\n\n            return results;\n        },\n\n        actions: {\n            addCustomItem() {\n                const customItemText = this.get('query');\n                const customItems = this.get('customItems');\n                const customItemMatch = Ember.isArray(customItems) ? customItems.findBy('name', customItemText) : null;\n\n                if (this.get('addItem') && Ember.isPresent(customItemMatch)) {\n                    this.set('showDropdown', false);\n                    this.sendAction('addItem', customItemMatch);\n                }\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/immunizations/add-immunization-details', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        isElectronicTransmission: Ember.computed(() => false),\n        errors: Ember.computed(() => null),\n        facilities: Ember.computed(() => []),\n        model: Ember.computed(() => null),\n        providers: Ember.computed(() => []),\n        reference: Ember.computed(() => null),\n        selectedAdministeringProvider: null,\n        selectedInventoryLot: null,\n        selectedOrderingProvider: null,\n        selectedUnits: null,\n        showExpirationWarning: Ember.computed(() => false),\n\n        currentRoute: Ember.computed.alias('model.route'),\n        isCustom: Ember.computed.alias('model.vaccineType.isCustom'),\n        isDynamicCustom: Ember.computed.alias('model.vaccineType.isDynamic'),\n        isElectronicAndAdministered: Ember.computed.and('isElectronicTransmission', 'isAdministered'),\n        isInventoryFundingSourceDisabled: Ember.computed.and('model.vaccineInventory.immunizationFundingSource', 'model.immunizationFundingSource', 'isNotCustom'),\n        isInventoryExpirationDisabled: Ember.computed.and('model.vaccineInventory.vaccineExpirationDate', 'model.vaccineLotExpirationDate', 'isNotDynamicCustom'),\n        isInventoryLotDisabled: Ember.computed.and('model.vaccineInventory.vaccineLotNumber', 'model.vaccineLotNumber', 'isNotDynamicCustom'),\n        isInventoryManufacturerDisabled: Ember.computed.and('model.vaccineInventory.vaccineManufacturer', 'model.manufacturer', 'isNotDynamicCustom'),\n        isImmunizationDrugListEmpty: Ember.computed.empty('reference.immunizationDrugs'),\n        isNotCustom: Ember.computed.not('isCustom'),\n        isNotDynamicCustom: Ember.computed.not('isDynamicCustom'),\n        isSiteDisabled: Ember.computed.or('disabled', 'currentRoute.isSiteIrrelevant'),\n        isVisConceptRequired: Ember.computed.and('model.isVisConceptRequired', 'isElectronicAndAdministered'),\n        providerHasNpi: Ember.computed.or('providerNpiAdministering', 'providerNpiOrdering'),\n        providerNpiAdministering: Ember.computed.alias('selectedAdministeringProvider.npi'),\n        providerNpiOrdering: Ember.computed.alias('selectedOrderingProvider.npi'),\n        showComments: Ember.computed.alias('isAdministered'),\n        showSelfPayRestrictionDropdown: Ember.computed.and('isAdministered', 'config.isSelfPayRestrictionOn'),\n\n        eligibleProviders: Ember.computed('providers.[]', function () {\n            return (Ember.get(this, 'providers') || []).filter(provider => {\n                return (Ember.get(provider, 'editLevel') || '0').toString() !== '0' && Ember.get(provider, 'isActive');\n            });\n        }),\n        isInventoryMultipleLots: Ember.computed('reference.vaccineInventories.[]', function () {\n            return (Ember.get(this, 'reference.vaccineInventories') || []).length > 1;\n        }),\n        isNdcDisabled: Ember.computed('isCustom', 'model.ndc', 'model.vaccineInventory.ndc', 'isImmunizationDrugListEmpty', function () {\n            return Ember.get(this, 'isCustom') || Ember.isPresent(Ember.get(this, 'model.ndc')) && Ember.isPresent(Ember.get(this, 'model.vaccineInventory.ndc')) || Ember.get(this, 'isImmunizationDrugListEmpty');\n        }),\n        isSiteRequired: Ember.computed('isSiteDisabled', 'isElectronicTransmission', 'isAdministered', function () {\n            return Ember.get(this, 'isElectronicTransmission') && !Ember.get(this, 'isSiteDisabled') && Ember.get(this, 'isAdministered');\n        }),\n        knownFacilities: Ember.computed('facilities', function () {\n            return (Ember.get(this, 'facilities') || []).rejectBy('name', 'Unknown');\n        }),\n        vaccinationBodyRoutes: Ember.computed('reference.vaccinationBodyRoutes', 'isAdministered', function () {\n            const routes = Ember.get(this, 'reference.vaccinationBodyRoutes') || [];\n            if (Ember.get(this, 'isAdministered')) {\n                return routes.filterBy('isActive');\n            }\n            return routes;\n        }),\n        vaccinationBodySites: Ember.computed('reference.vaccinationBodySites', 'isAdministered', function () {\n            const sites = Ember.get(this, 'reference.vaccinationBodySites') || [];\n            return sites.filterBy('isActive');\n        }),\n        areInventoryFieldsReadonly: Ember.computed('model.vaccineInventory', 'isAddingImmunization', function () {\n            if (Ember.get(this, 'isAddingImmunization')) {\n                return false;\n            }\n            return !!Ember.get(this, 'model.vaccineInventory');\n        }),\n\n        administeredUnitsChanged: Ember.observer('model.administeredUnits', 'reference.vaccinationUnits', function () {\n            const administeredUnits = Ember.get(this, 'model.administeredUnits') || '';\n            const unitsList = Ember.get(this, 'reference.vaccinationUnits');\n            const selectedUnits = Ember.get(this, 'selectedUnits.code');\n\n            if (Ember.isPresent(unitsList)) {\n                if (Ember.isPresent(administeredUnits) && selectedUnits !== administeredUnits) {\n                    Ember.set(this, 'selectedUnits', unitsList.find(unit => {\n                        return (Ember.get(unit, 'code') || '').toLowerCase() === administeredUnits.toLowerCase();\n                    }));\n                } else if (Ember.isEmpty(selectedUnits)) {\n                    Ember.set(this, 'selectedUnits', unitsList.find(unit => {\n                        return (Ember.get(unit, 'code') || '').toLowerCase() === 'ml';\n                    }));\n                    this.send('selectAdministeredUnits', Ember.get(this, 'selectedUnits'));\n                }\n            }\n        }),\n        administeringProviderGuidChanged: Ember.observer('model.administeredByProviderGuid', function () {\n            this.setSeletedProvider('administeredByProviderGuid', 'selectedAdministeringProvider', true);\n        }),\n        facilityGuidChanged: Ember.observer('model.facilityGuid', function () {\n            const knownFacilities = Ember.get(this, 'knownFacilities') || [];\n            Ember.set(this, 'selectedFacility', knownFacilities.findBy('facilityGuid', Ember.get(this, 'model.facilityGuid')));\n        }),\n        ndcObserver: Ember.observer('model.ndc', 'reference.immunizationDrugs', function () {\n            const ndc = Ember.get(this, 'model.ndc');\n            const immunizationDrugs = Ember.get(this, 'reference.immunizationDrugs');\n            if (ndc && immunizationDrugs) {\n                const selectedNdc = immunizationDrugs.findBy('nationalDrugCode', ndc);\n                Ember.set(this, 'selectedNdc', selectedNdc);\n            }\n        }),\n        inventoryLotChanged: Ember.observer('model.vaccineLotNumber', 'reference.vaccineInventories', function () {\n            Ember.set(this, 'selectedInventoryLot', (Ember.get(this, 'reference.vaccineInventories') || []).findBy('vaccineLotNumber', Ember.get(this, 'model.vaccineLotNumber')));\n        }),\n        orderingProviderGuidChanged: Ember.observer('model.orderingProviderGuid', function () {\n            this.setSeletedProvider('orderingProviderGuid', 'selectedOrderingProvider', true);\n        }),\n        reactionChanged: Ember.observer('model.vaccinationAdverseReactionGuid', 'reference.vaccinationAdverseReactions', function () {\n            const reaction = Ember.get(this, 'model.vaccinationAdverseReactionGuid');\n            const reactions = Ember.get(this, 'reference.vaccinationAdverseReactions');\n            if (reaction && reactions) {\n                const selectedReaction = reactions.findBy('adverseReactionGuid', reaction);\n                Ember.set(this, 'selectedReaction', selectedReaction);\n            }\n        }),\n        routeChanged: Ember.observer('currentRoute.isSiteIrrelevant', function () {\n            if (Ember.get(this, 'currentRoute.isSiteIrrelevant')) {\n                Ember.set(this, 'model.site', null);\n            }\n        }),\n        specialIndicationChanged: Ember.observer('model.vaccinationScheduleSpecialIndicationGuid', 'reference.vaccinationScheduleSpecialIndications', function () {\n            const specialIndication = Ember.get(this, 'model.vaccinationScheduleSpecialIndicationGuid');\n            const indications = Ember.get(this, 'reference.vaccinationScheduleSpecialIndications');\n            if (specialIndication && indications) {\n                const selectedSpecialIndication = indications.findBy('scheduleSpecialIndicationGuid', specialIndication);\n                Ember.set(this, 'selectedSpecialIndication', selectedSpecialIndication);\n            }\n        }),\n        vaccineInventoryChanged: Ember.observer('model.vaccineInventory', 'isCustom', function () {\n            const inventoryFundingSource = Ember.get(this, 'model.vaccineInventory.immunizationFundingSource');\n            if (Ember.isPresent(inventoryFundingSource) && !Ember.get(this, 'isCustom') && Ember.get(this, 'isAddingImmunization')) {\n                Ember.set(this, 'model.immunizationFundingSource', inventoryFundingSource);\n            }\n        }),\n\n        setInventoryWhenCustom(inventoryPropertyName, value) {\n            if (Ember.get(this, 'isCustom') && Ember.isPresent(Ember.get(this, 'model.vaccineInventory'))) {\n                Ember.set(this, `model.vaccineInventory.${inventoryPropertyName}`, value);\n            }\n        },\n        setSeletedProvider(providerGuidPropertyName, selectedProviderPropertyName, forceNullValue) {\n            const providerGuid = Ember.get(this, 'model.' + providerGuidPropertyName);\n            const providers = Ember.get(this, 'providers') || [];\n            const providerMatch = providers.findBy('providerGuid', providerGuid);\n            const isPresentOrForcedNull = !Ember.isEmpty(providerMatch) || forceNullValue;\n\n            if (Ember.get(this, selectedProviderPropertyName + '.providerGuid') !== providerGuid && isPresentOrForcedNull) {\n                Ember.set(this, selectedProviderPropertyName, providerMatch);\n            }\n\n            this.attrs.providerUpdated(Ember.get(this, 'selectedAdministeringProvider.npi'), Ember.get(this, 'selectedOrderingProvider.npi'));\n        },\n\n        init() {\n            this._super();\n            this.administeredUnitsChanged();\n            this.administeringProviderGuidChanged();\n            this.orderingProviderGuidChanged();\n            this.vaccineInventoryChanged();\n            this.facilityGuidChanged();\n            this.ndcObserver();\n            this.specialIndicationChanged();\n            this.reactionChanged();\n            this.inventoryLotChanged();\n        },\n\n        actions: {\n            selectAdministeredByProvider(provider) {\n                Ember.set(this, 'model.administeredByProviderGuid', Ember.get(provider, 'providerGuid'));\n            },\n            selectExpirationDate(expirationDate) {\n                Ember.set(this, 'model.vaccineLotExpirationDate', expirationDate);\n                this.setInventoryWhenCustom('vaccineExpirationDate', expirationDate);\n            },\n            selectFacility(facility) {\n                Ember.set(this, 'model.facilityGuid', Ember.get(facility, 'facilityGuid'));\n            },\n            selectOrderingProvider(provider) {\n                Ember.set(this, 'model.orderingProviderGuid', Ember.get(provider, 'providerGuid'));\n            },\n            selectAdministeredUnits(units) {\n                if (Ember.isPresent(units)) {\n                    Ember.set(this, 'model.administeredUnits', Ember.get(units, 'code'));\n                }\n            },\n            selectLotOption(selectedLot) {\n                if (Ember.isPresent(selectedLot)) {\n                    Ember.set(this, 'model.vaccineInventory', selectedLot);\n                    Ember.set(this, 'model.vaccineLotNumber', Ember.get(selectedLot, 'vaccineLotNumber'));\n                    Ember.set(this, 'model.vaccineLotExpirationDate', Ember.get(selectedLot, 'vaccineExpirationDate'));\n                    Ember.set(this, 'model.manufacturer', Ember.get(selectedLot, 'vaccineManufacturer'));\n                    Ember.set(this, 'model.ndc', Ember.get(selectedLot, 'ndc'));\n                    Ember.set(this, 'model.immunizationFundingSource', Ember.get(selectedLot, 'immunizationFundingSource'));\n                }\n                this.attrs.clearExpirationWarningResponse();\n            },\n            selectManufacturer(selectedManufacturer) {\n                this.setInventoryWhenCustom('vaccineManufacturer', selectedManufacturer);\n            },\n            selectNdc(selectedNdc) {\n                if (Ember.isPresent(selectedNdc)) {\n                    Ember.set(this, 'model.ndc', Ember.get(selectedNdc, 'nationalDrugCode'));\n\n                    // default route if there is a matched route indicated in the NDC\n                    const matchedRoute = (Ember.get(this, 'vaccinationBodyRoutes') || []).findBy('name', Ember.get(selectedNdc, 'route'));\n                    if (Ember.isPresent(matchedRoute)) {\n                        Ember.set(this, 'model.route', matchedRoute);\n                    }\n                }\n            },\n            selectReaction(reaction) {\n                if (Ember.isPresent(reaction)) {\n                    Ember.set(this, 'model.vaccinationAdverseReactionGuid', Ember.get(reaction, 'adverseReactionGuid'));\n                }\n            },\n            selectSpecialIndication(indication) {\n                if (Ember.isPresent(indication)) {\n                    Ember.set(this, 'model.vaccinationScheduleSpecialIndicationGuid', Ember.get(indication, 'scheduleSpecialIndicationGuid'));\n                }\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/immunizations/add-immunization-historical', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        errors: Ember.computed(() => null),\n        facilities: Ember.computed(() => []),\n        isElectronicTransmission: Ember.computed(() => false),\n        model: Ember.computed(() => null),\n        historicalSources: Ember.computed(() => null),\n\n        knownFacilities: Ember.computed('facilities', function () {\n            return (Ember.get(this, 'facilities') || []).rejectBy('name', 'Unknown');\n        }),\n        vaccinationSources: Ember.computed('reference.vaccinationSources', function () {\n            return (Ember.get(this, 'reference.vaccinationSources') || []).filterBy('isHistoricalActive');\n        }),\n\n        facilityGuidChanged: Ember.observer('model.facilityGuid', function () {\n            const facilities = Ember.get(this, 'knownFacilities') || [];\n            Ember.set(this, 'selectedFacility', facilities.findBy('facilityGuid', Ember.get(this, 'model.facilityGuid')));\n        }),\n\n        init() {\n            this._super();\n            this.facilityGuidChanged();\n        },\n\n        actions: {\n            selectFacility(facility) {\n                Ember.set(this, 'model.facilityGuid', Ember.get(facility, 'facilityGuid'));\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/immunizations/add-immunization-refused', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        facilities: Ember.computed(() => []),\n        isElectronicTransmission: Ember.computed(() => false),\n        model: Ember.computed(() => null),\n        rejectionReasons: null,\n\n        rejectionReason: Ember.computed.alias('model.rejectionReason'),\n\n        knownFacilities: Ember.computed('facilities', function () {\n            return (Ember.get(this, 'facilities') || []).rejectBy('name', 'Unknown');\n        }),\n        showEndDate: Ember.computed('rejectionReason.isExpirable', 'model.rejectionReasonExpirationDate', 'isAddingImmunization', function () {\n            const isExpirable = Ember.get(this, 'rejectionReason.isExpirable');\n            if (Ember.get(this, 'isAddingImmunization')) {\n                return isExpirable;\n            }\n            return isExpirable || Ember.isPresent(Ember.get(this, 'model.rejectionReasonExpirationDate'));\n        }),\n\n        facilityGuidChanged: Ember.observer('model.facilityGuid', function () {\n            const facilities = Ember.get(this, 'knownFacilities') || [];\n            Ember.set(this, 'selectedFacility', facilities.findBy('facilityGuid', Ember.get(this, 'model.facilityGuid')));\n        }),\n\n        init() {\n            this._super();\n            this.facilityGuidChanged();\n        },\n\n        actions: {\n            selectFacility(facility) {\n                Ember.set(this, 'model.facilityGuid', Ember.get(facility, 'facilityGuid'));\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/immunizations/add-immunization', ['exports', 'ember-concurrency', 'boot/util/pf-server', 'common/mixins/spinner', 'common/helpers/validation', 'common/helpers/dates'], function (exports, _emberConcurrency, _pfServer, _spinner, _validation, _dates) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_spinner.default, {\n        classNames: ['type-v2', 'stacked-column', 'allow-shrink'],\n\n        analytics: Ember.inject.service(),\n\n        classNameBindings: ['isVisible:visible:hidden'],\n        hasApprovedExpirationWarning: false,\n        isDetailsVisible: false,\n        isEditingVaccine: true,\n        isSearching: false,\n        isVisible: false,\n        preloadKeyword: null,\n        providerHasNpi: false,\n        sourceType: null,\n        vaccination: null,\n        vaccineQuery: '',\n\n        disableSave: Ember.computed.not('canSave'),\n        isAdministered: Ember.computed.equal('sourceType', 'Administered'),\n        isHistorical: Ember.computed.equal('sourceType', 'Historical'),\n        isImmunizationDrugListEmpty: Ember.computed.empty('referenceData.immunizationDrugs'),\n        isNdcNotRequired: Ember.computed.or('isHistorical', 'isVaccineCustom', 'isInventoryWithoutNdc'),\n        isRefused: Ember.computed.equal('sourceType', 'Refused'),\n        isVaccineCustom: Ember.computed.alias('vaccination.vaccineType.isCustom'),\n        isVaccineQueryEmpty: Ember.computed.empty('vaccineQuery'),\n        showSpinner: Ember.computed.or('createVaccination.isRunning', 'loadReferenceData.isRunning'),\n        isNotAllowedToEditImmunizations: Ember.computed.not('isAllowedToEditImmunizations'),\n        vaccineInventory: Ember.computed.alias('vaccination.vaccineInventory'),\n\n        isInventoryWithoutNdc: Ember.computed('vaccineInventory', 'vaccineInventory.ndc', 'referenceData.immunizationDrugs', function () {\n            return Ember.isPresent(Ember.get(this, 'vaccineInventory')) && Ember.isEmpty(Ember.get(this, 'referenceData.immunizationDrugs')) && Ember.isEmpty(Ember.get(this, 'vaccineInventory.ndc'));\n        }),\n\n        canSave: Ember.computed('isAllowedToEditImmunizations', 'isAdministered', 'vaccination.vaccineType', 'vaccination.vaccinationDate', 'vaccination.vaccinationTime', 'vaccination.administeredByProviderGuid', 'vaccination.orderingProviderGuid', 'vaccination.facilityGuid', function () {\n            const vaccineType = Ember.get(this, 'vaccination.vaccineType');\n            const { isAdministered, isAllowedToEditImmunizations } = Ember.getProperties(this, 'isAdministered', 'isAllowedToEditImmunizations');\n            if (!isAllowedToEditImmunizations) {\n                return false;\n            }\n            if (isAdministered) {\n                return Ember.isPresent(vaccineType) && Ember.isPresent(Ember.get(this, 'vaccination.vaccinationDate')) && Ember.isPresent(Ember.get(this, 'vaccination.vaccinationTime')) && Ember.isPresent(Ember.get(this, 'vaccination.administeredByProviderGuid')) && Ember.isPresent(Ember.get(this, 'vaccination.orderingProviderGuid')) && Ember.isPresent(Ember.get(this, 'vaccination.facilityGuid'));\n            }\n            return Ember.isPresent(vaccineType);\n        }),\n        doseCountRemainingText: Ember.computed('vaccineInventory.remainingDoseCount', function () {\n            const doseCount = Ember.get(this, 'vaccineInventory.remainingDoseCount');\n            if (doseCount < 1) {\n                return 'No doses remaining';\n            }\n            if (doseCount === 1) {\n                return '1 Dose remaining';\n            }\n            return `${doseCount} Doses remaining`;\n        }),\n        isVaccineSelected: Ember.computed('vaccination', 'isAddingImmunization', 'isEditingVaccine', 'selectedVaccine', function () {\n            const { isEditingVaccine, selectedVaccine, vaccination, isAddingImmunization } = Ember.getProperties(this, 'vaccination', 'isAddingImmunization', 'isEditingVaccine', 'selectedVaccine');\n            if (vaccination && !isAddingImmunization) {\n                return true;\n            }\n            if (isEditingVaccine) {\n                return false;\n            }\n            return Ember.isPresent(selectedVaccine);\n        }),\n        validationRules: Ember.computed('isAdministered', 'isHistorical', 'isRefused', function () {\n            if (Ember.get(this, 'isHistorical')) {\n                return this.validatorHistorical;\n            }\n            if (Ember.get(this, 'isRefused')) {\n                return this.validatorRefused;\n            }\n            return this.validatorAdministered;\n        }),\n\n        createVaccination: (0, _emberConcurrency.task)(function* (previouslySelected) {\n            const isAdministered = Ember.get(this, 'isAdministered');\n            const isHistorical = Ember.get(this, 'isHistorical');\n            const source = (Ember.get(this, 'referenceData.vaccinationSources') || []).findBy('sourceType', Ember.get(this, 'sourceType'));\n\n            Ember.set(this, 'errors', null);\n            if (Ember.isPresent(source)) {\n                const vaccination = yield Ember.get(this, 'store').createRecord('vaccination', {\n                    dosesFromInventory: Ember.get(this, 'isAdministered') ? 1 : null,\n                    patientPracticeGuid: Ember.get(this, 'patient.patientPracticeGuid'),\n                    practiceGuid: Ember.get(this, 'session.practiceGuid'),\n                    vaccinationDate: isHistorical ? null : moment().format('MM/DD/YYYY'),\n                    vaccinationTime: isAdministered ? moment().format('hh:mm A') : null,\n                    facilityGuid: isHistorical ? null : Ember.get(this, 'session.facilityGuid'),\n                    source\n                });\n                Ember.set(this, 'vaccination', vaccination);\n                Ember.set(this, 'isDetailsVisible', isAdministered);\n            }\n            if (Ember.isPresent(previouslySelected)) {\n                Ember.get(this, 'loadSelectedVaccineData').perform(previouslySelected, true);\n            }\n        }).drop(),\n        loadReferenceData: (0, _emberConcurrency.task)(function* () {\n            const referenceData = yield this.get('store').findAll('vaccine-lookup-datum');\n            const lookupDatum = Ember.get(referenceData, 'firstObject');\n            Ember.set(this, 'referenceData', Ember.Object.create({\n                immunizationFundingSources: Ember.get(lookupDatum, 'immunizationFundingSources').toArray(),\n                notificationPreferences: Ember.get(lookupDatum, 'notificationPreferences').toArray(),\n                rejectionReasons: Ember.get(lookupDatum, 'rejectionReasons').toArray(),\n                vaccinationAdverseReactions: Ember.get(lookupDatum, 'vaccinationAdverseReactions').toArray(),\n                vaccinationBodyRoutes: Ember.get(lookupDatum, 'routes').toArray(),\n                vaccinationBodySites: Ember.get(lookupDatum, 'sites').toArray(),\n                vaccinationScheduleSpecialIndications: Ember.get(lookupDatum, 'vaccinationScheduleSpecialIndications').toArray(),\n                vaccinationSources: Ember.get(lookupDatum, 'sources').toArray(),\n                vaccinationUnits: Ember.get(lookupDatum, 'vaccinationUnits').toArray(),\n                vfcStatuses: Ember.get(lookupDatum, 'vfcStatuses').toArray(),\n                visConcepts: Ember.get(lookupDatum, 'visConcepts').toArray()\n            }));\n        }).drop(),\n        loadSelectedVaccineData: (0, _emberConcurrency.task)(function* (selectedResult, setVaccineDetails) {\n            const searchResultName = Ember.get(selectedResult, 'name');\n            const isAdministered = Ember.get(this, 'isAdministered');\n            const searchQuery = {\n                searchGuid: Ember.get(selectedResult, 'searchGuid') || Ember.get(selectedResult, 'vaccineTypeGuid'),\n                searchTypeCode: Ember.get(selectedResult, 'searchTypeCode') || 'VaccineType'\n            };\n\n            Ember.set(this, 'errors', null);\n            try {\n                const vaccineType = yield Ember.get(this, 'store').queryRecord('vaccine-type', searchQuery);\n                if (Ember.isPresent(vaccineType)) {\n                    const existingInventoryGuid = Ember.get(this, 'vaccination.vaccineInventory.vaccineInventoryGuid');\n                    Ember.set(this, 'vaccination.vaccineInventory', null);\n\n                    const inventories = Ember.get(vaccineType, 'sortedVaccineInventories');\n                    const vaccineInventory = existingInventoryGuid ? inventories.findBy('vaccineInventoryGuid', existingInventoryGuid) : Ember.get(inventories, 'firstObject');\n                    const isCustom = Ember.get(vaccineType, 'isCustom');\n                    const isDynamic = isCustom && (Ember.get(selectedResult, 'searchTypeCode') || '').toLowerCase() === 'dynamicvaccine';\n                    Ember.set(vaccineType, 'isDynamic', isDynamic);\n                    if (isCustom) {\n                        Ember.set(vaccineType, 'name', searchResultName);\n                        if (Ember.isPresent(inventories)) {\n                            Ember.setProperties(vaccineInventory, {\n                                customVaccinationTypeName: searchResultName,\n                                isHidden: true,\n                                isDeleted: false\n                            });\n                        }\n                    }\n                    if (Ember.isPresent(inventories) && (isAdministered || isCustom)) {\n                        Ember.set(this, 'vaccination.vaccineInventory', vaccineInventory);\n                    }\n\n                    Ember.setProperties(this, {\n                        'referenceData.vaccineInventories': isAdministered ? inventories.toArray() : [],\n                        'referenceData.vaccineManufacturers': Ember.get(vaccineType, 'manufacturers').toArray(),\n                        'referenceData.immunizationDrugs': Ember.get(vaccineType, 'sortedImmunizationDrugs').toArray()\n                    });\n                    if (setVaccineDetails) {\n                        Ember.setProperties(Ember.get(this, 'vaccination'), {\n                            administeredByProviderGuid: isAdministered ? Ember.get(vaccineType, 'providerGuid') : null,\n                            orderingProviderGuid: isAdministered ? Ember.get(vaccineType, 'providerGuid') : null,\n                            vaccineType\n                        });\n                        if (Ember.isPresent(vaccineInventory) && isAdministered && !isDynamic) {\n                            Ember.setProperties(Ember.get(this, 'vaccination'), {\n                                immunizationFundingSource: Ember.get(vaccineInventory, 'immunizationFundingSource'),\n                                manufacturer: Ember.get(vaccineInventory, 'vaccineManufacturer'),\n                                ndc: Ember.get(vaccineInventory, 'ndc'),\n                                vaccineLotExpirationDate: Ember.get(vaccineInventory, 'vaccineExpirationDate'),\n                                vaccineLotNumber: Ember.get(vaccineInventory, 'vaccineLotNumber')\n                            });\n                        } else {\n                            Ember.setProperties(Ember.get(this, 'vaccination'), {\n                                immunizationFundingSource: null,\n                                manufacturer: null,\n                                ndc: null,\n                                vaccineLotExpirationDate: null,\n                                vaccineLotNumber: null\n                            });\n                        }\n                    }\n                }\n            } catch (err) {\n                toastr.error('Failed to load vaccination details.');\n            }\n        }).drop(),\n        saveVaccination: (0, _emberConcurrency.task)(function* () {\n            try {\n                Ember.set(this, 'errors', null);\n                const validator = Ember.get(this, 'validationRules');\n                const { errors, valid } = yield validator.validate(this);\n\n                if (valid) {\n                    yield Ember.get(this, 'vaccination').save();\n                    toastr.success('Immunization record saved');\n                    if (this.updatePatientAdContextCvxCodes) {\n                        this.updatePatientAdContextCvxCodes();\n                    }\n                    yield Ember.get(this, 'savePatientPrivacyConsent').perform();\n                    this.close();\n                } else {\n                    const resultantErrors = {};\n                    for (let field in errors) {\n                        if (errors.hasOwnProperty(field) && Ember.isPresent(errors[field])) {\n                            resultantErrors[field.split('.').join('')] = errors[field][0];\n                        }\n                    }\n                    if (resultantErrors['vaccinationdosesFromInventory'] === 'Insufficient doses remaining') {\n                        resultantErrors['vaccinationdosesFromInventory'] = Ember.get(this, 'doseCountRemainingText') || 'Insufficient doses remaining';\n                    }\n                    Ember.set(this, 'errors', Ember.Object.create(resultantErrors));\n                }\n            } catch (err) {\n                toastr.error('Failed to save vaccination.');\n            }\n        }).drop(),\n        searchVaccines: (0, _emberConcurrency.task)(function* (query) {\n            const sourceType = (Ember.get(this, 'sourceType') || 'historical').toLowerCase();\n            const url = `${Ember.get(this, 'config.defaultHost')}/${Ember.get(this, 'config.immunizationNamespace')}/vaccines/advancedSearch`;\n            query = query || '';\n\n            if (query.lastIndexOf('.') === query.length - 1) {\n                query = query.substring(0, query.length - 1);\n            }\n            if (query.indexOf('/') > -1) {\n                query = query.substring(0, query.indexOf('/'));\n            }\n\n            const results = yield _pfServer.default.promise(`${url}/${sourceType}/${encodeURIComponent(query.trim())}`);\n            Ember.set(this, 'vaccineSearchResults', (results || []).map(result => {\n                const resultTypeCode = (result.searchTypeCode || '').toLowerCase();\n                const showAsInventory = ['vaccineinventory', 'customvaccine'].includes(resultTypeCode);\n                result.groupTitle = showAsInventory ? 'From your inventory' : 'Additional search results';\n                result.groupOrder = showAsInventory ? 0 : 1;\n                return result;\n            }).sortBy('groupOrder'));\n        }).drop(),\n        savePatientPrivacyConsent: (0, _emberConcurrency.task)(function* () {\n            const privacyConsentOption = Ember.get(this, 'privacyConsentOption');\n            if (privacyConsentOption) {\n                const entityGuid = Ember.get(this, 'vaccination.vaccinationGuid');\n                const store = Ember.get(this, 'store');\n                const optionCode = Ember.get(privacyConsentOption, 'code');\n                let privacyConsentRecord = store.peekRecord('patient-privacy-consent', entityGuid);\n                if (privacyConsentRecord) {\n                    Ember.set(privacyConsentRecord, 'optionCode', optionCode);\n                } else {\n                    const patientPracticeGuid = Ember.get(this, 'vaccination.patientPracticeGuid');\n                    privacyConsentRecord = store.createRecord('patient-privacy-consent', {\n                        id: entityGuid,\n                        entityTypeCode: 'immz',\n                        patientPracticeGuid,\n                        optionCode\n                    });\n                }\n                yield privacyConsentRecord.save();\n            }\n        }),\n\n        init() {\n            this._super();\n            Ember.get(this, 'loadReferenceData').perform();\n        },\n        validatorAdministered: _validation.default.validator().validates('vaccination.vaccineType').required('A vaccine is required').validates('vaccination.vaccinationDate').required('An administered date is required').validates('vaccination.vaccinationTime').isTimeValid('An administered time is required').validates('vaccination.administeredByProviderGuid').required('An administering provider is required').validates('vaccination.orderingProviderGuid').required('An ordering provider is required').validates('vaccination.facilityGuid').required('An administered facility is required').validates('vaccination.manufacturer').using('vaccination.manufacturer', 'vaccination.vaccineInventory.vaccineManufacturer.vaccineManufacturerGuid', 'vaccination.vaccineInventory.customVaccineManufacturerName', (vaccineManufacturer, inventoryManufacturerId, customVaccineManufacturerName) => {\n            return Ember.isPresent(vaccineManufacturer) || Ember.isPresent(inventoryManufacturerId) || Ember.isPresent(customVaccineManufacturerName);\n        }, 'A manufacturer is required').validates('vaccination.vaccineLotNumber').using('vaccination.vaccineLotNumber', 'vaccination.vaccineInventory', (lotNumber, inventory) => {\n            return !Ember.isEmpty(lotNumber) || !Ember.isEmpty(inventory);\n        }, 'A lot is required').validates('vaccination.dosesFromInventory').using('vaccination.dosesFromInventory', quantity => !Ember.isEmpty(quantity) && quantity > 0, 'A vaccine quantity is required').using('vaccination.dosesFromInventory', 'vaccineInventory.remainingDoseCount', (quantity, inventoryRemaining) => {\n            if (Ember.isEmpty(inventoryRemaining)) {\n                return true;\n            }\n            const dosesToRemain = inventoryRemaining - quantity;\n            return dosesToRemain >= 0;\n        }, 'Insufficient doses remaining').validates('vaccination.administeredAmount').using('vaccination.administeredAmount', amount => !Ember.isEmpty(amount), 'An administered amount is required').validates('vaccination.administeredUnits').using('vaccination.administeredUnits', units => !Ember.isEmpty(units), 'Administered units are required').validates('vaccination.vaccineLotExpirationDate').using('vaccination.vaccineLotExpirationDate', 'vaccination.vaccineInventory.vaccineExpirationDate', (lotExpirationDate, vaccineExpirationDate) => {\n            return Ember.isPresent(lotExpirationDate) && _dates.default.isValidDate(lotExpirationDate) && moment(lotExpirationDate).format('MM/DD/YYYY') === lotExpirationDate || Ember.isPresent(vaccineExpirationDate) && _dates.default.isValidDate(vaccineExpirationDate) && moment(vaccineExpirationDate).format('MM/DD/YYYY') === vaccineExpirationDate;\n        }, 'A valid vaccine expiration date is required').validates('vaccination.site').when('isElectronicTransmission', 'vaccination.route', (isElectronicTransmission, route) => {\n            return isElectronicTransmission && (!route || !Ember.get(route, 'isSiteIrrelevant'));\n        }).required('A vaccination body site is required').validates('vaccination.route').when('isElectronicTransmission', isElectronicTransmission => isElectronicTransmission).required('A vaccination route is required').validates('vaccination.visConceptGuidList').when('isElectronicTransmission', isElectronicTransmission => isElectronicTransmission).using('vaccination.visConceptGuidList', 'vaccination.isVisConceptRequired', (list, isRequired) => {\n            return !isRequired || (list || []).length >= 1;\n        }, 'Vis edition is required').validates('vaccination.vfcStatus').when('isElectronicTransmission', isElectronicTransmission => isElectronicTransmission).required('VFC financial class is required').validates('providerHasNpi').when('isElectronicTransmission', isElectronicTransmission => isElectronicTransmission).using('providerHasNpi', providerHasNpi => {\n            return providerHasNpi === true;\n        }, 'At least one provider needs an NPI to complete this immunization. ' + 'Add the NPI using a link below or select a different administering or ordering provider.').validates('vaccination.ndc').when('isNdcNotRequired', isNdcNotRequired => !isNdcNotRequired).required('An NDC is required').build(),\n\n        validatorHistorical: _validation.default.validator().validates('vaccination.vaccineType').required('A vaccine is required').validates('vaccination.source').required('A source for information is required').build(),\n\n        validatorRefused: _validation.default.validator().validates('vaccination.vaccineType').required('A vaccine is required').validates('vaccination.rejectionReason').required('A refusal reason is required').build(),\n\n        actions: {\n            cancel() {\n                const vaccinationGuid = Ember.get(this, 'vaccination.vaccinationGuid');\n                if (vaccinationGuid) {\n                    const privacyConsentRecord = Ember.get(this, 'store').peekRecord('patient-privacy-consent', vaccinationGuid);\n                    if (privacyConsentRecord) {\n                        privacyConsentRecord.rollbackAttributes();\n                    }\n                }\n\n                if (this.close) {\n                    this.close();\n                }\n            },\n            clearExpirationWarningResponse() {\n                Ember.set(this, 'showExpirationWarning', false);\n                Ember.set(this, 'hasApprovedExpirationWarning', false);\n            },\n            confirmSave() {\n                Ember.set(this, 'showExpirationWarning', false);\n                Ember.set(this, 'hasApprovedExpirationWarning', true);\n                Ember.get(this, 'saveVaccination').perform();\n                Ember.get(this, 'analytics').track('Save Vaccine', {\n                    type: Ember.get(this, 'sourceType')\n                });\n            },\n            delete() {},\n            editVaccine() {\n                Ember.set(this, 'isEditingVaccine', true);\n                Ember.get(this, 'analytics').track('Edit Vaccine');\n            },\n            providerUpdated(administeredNpi, orderedNpi) {\n                Ember.set(this, 'providerHasNpi', Ember.isPresent(administeredNpi) || Ember.isPresent(orderedNpi));\n            },\n            selectSourceType(sourceType) {\n                Ember.set(this, 'sourceType', sourceType);\n                Ember.set(this, 'vaccineQuery', '');\n                Ember.set(this, 'vaccineSearchResults', []);\n                Ember.set(this, 'selectedVaccine', null);\n                Ember.get(this, 'createVaccination').perform();\n                Ember.run.scheduleOnce('afterRender', this, () => {\n                    const $input = this.$('.composable-select__typeahead input');\n                    if ($input) {\n                        $input.focus();\n                    }\n                });\n            },\n            save() {\n                if (Ember.get(this, 'vaccination.isVaccineLotExpired') && Ember.get(this, 'isAddingImmunization') && !Ember.get(this, 'hasApprovedExpirationWarning')) {\n                    Ember.set(this, 'showExpirationWarning', true);\n                } else {\n                    this.send('confirmSave');\n                }\n            },\n            selectVaccine(selectedVaccine) {\n                Ember.set(this, 'isEditingVaccine', false);\n                Ember.get(this, 'loadSelectedVaccineData').perform(selectedVaccine, true);\n            },\n            toggleDetails() {\n                this.toggleProperty('isDetailsVisible');\n            },\n            selectPatientPrivacyConsent(privacyConsentOption) {\n                Ember.set(this, 'privacyConsentOption', privacyConsentOption);\n            }\n        },\n        setEditVaccinationProperties: Ember.observer('vaccination', 'isAddingImmunization', function () {\n            const { vaccination, isAddingImmunization, preloadKeyword } = Ember.getProperties(this, 'vaccination', 'isAddingImmunization', 'preloadKeyword');\n            if (vaccination) {\n                if (!isAddingImmunization) {\n                    const sourceType = Ember.get(vaccination, 'source.sourceType');\n                    const selectedVaccine = Ember.get(vaccination, 'vaccineType');\n                    if (Ember.get(selectedVaccine, 'isCustom')) {\n                        Ember.set(selectedVaccine, 'name', Ember.get(this, 'vaccination.vaccineName'));\n                    }\n                    Ember.setProperties(this, {\n                        isDetailsVisible: sourceType === 'Administered',\n                        privacyConsentOption: null,\n                        selectedVaccine,\n                        sourceType\n                    });\n                    Ember.get(this, 'loadSelectedVaccineData').perform(selectedVaccine);\n                }\n            } else {\n                Ember.setProperties(this, {\n                    selectedVaccine: null,\n                    privacyConsentOption: null,\n                    vaccineQuery: preloadKeyword,\n                    preloadKeyword: null\n                });\n                if (Ember.isEmpty(preloadKeyword)) {\n                    Ember.set(this, 'sourceType', null);\n                } else {\n                    this.send('selectSourceType', 'Administered');\n                }\n            }\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/immunizations/download-immunizations', ['exports', 'ember-concurrency', 'clinical/repositories/immunization-registry'], function (exports, _emberConcurrency, _immunizationRegistry) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        isDownloading: false,\n        isVisible: false,\n\n        downloadFileName: Ember.computed('patient.fullName', function () {\n            return `${Ember.get(this, 'patient.fullName')}.IIS`;\n        }),\n\n        downloadFile: (0, _emberConcurrency.task)(function* () {\n            const registry = Ember.get(this, 'selectedRegistry');\n\n            const immunizationRecord = yield _immunizationRegistry.default.loadImmunizationRecord(registry, Ember.get(this, 'patient.patientPracticeGuid'));\n            const file = new Blob([immunizationRecord.hl7Document], {\n                type: 'text/plain;charset=utf-8'\n            });\n            if (Ember.isPresent(file)) {\n                window.saveAs(file, Ember.get(this, 'downloadFileName'));\n            }\n\n            Ember.setProperties(this, {\n                isVisible: false,\n                selectedRegistry: null,\n                isDownloading: false\n            });\n        }).drop(),\n\n        initDownloadSettings: (0, _emberConcurrency.task)(function* () {\n            const registries = Ember.get(this, 'registries');\n\n            if (Ember.isEmpty(Ember.get(this, 'content'))) {\n                toastr.error('This patient has no immunization record');\n            } else if (Ember.isEmpty(registries)) {\n                toastr.error('Could not load immunization registries');\n            } else {\n                Ember.set(this, 'isVisible', true);\n\n                const preferences = yield _immunizationRegistry.default.loadDownloadPreferences(Ember.get(this, 'store'));\n\n                if (!Ember.isEmpty(preferences.defaultRegistryId) && !Ember.isEmpty(registries)) {\n                    Ember.set(this, 'selectedRegistry', registries.findBy('id', preferences.defaultRegistryId));\n                }\n                if (Ember.isPresent(Ember.get(this, 'selectedRegistry'))) {\n                    Ember.set(this, 'selectedRegistry.registryProvider', preferences.defaultLogin);\n                }\n            }\n        }).drop(),\n\n        updateRegistries: Ember.observer('registries', 'isDownloading', function () {\n            if (Ember.get(this, 'isDownloading')) {\n                Ember.get(this, 'initDownloadSettings').perform();\n            }\n        }),\n\n        init() {\n            this._super();\n            this.updateRegistries();\n        },\n\n        actions: {\n            cancel() {\n                this.setProperties({\n                    isVisible: false,\n                    selectedRegistry: null,\n                    isDownloading: false\n                });\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/immunizations/list-immunizations', ['exports', 'common/mixins/spinner'], function (exports, _spinner) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_spinner.default, {\n        classNames: ['list-immunizations']\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/immunizations/print-immunizations', ['exports', 'charting/mixins/with-patient-print-title'], function (exports, _withPatientPrintTitle) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_withPatientPrintTitle.default, {\n        isVisible: false,\n        isRegistryRecord: false,\n        hasNoForecastResults: Ember.computed.empty('registryContent.forecast'),\n        hasNoHistoryResults: Ember.computed.empty('registryContent.history')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/immunizations/registry-results-forecast', ['exports', 'common/mixins/spinner'], function (exports, _spinner) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_spinner.default, {\n        classNames: ['registry-query-results-pane'],\n\n        hasNoResults: Ember.computed.empty('model'),\n        actions: {}\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/immunizations/registry-results-history', ['exports', 'common/mixins/spinner'], function (exports, _spinner) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_spinner.default, {\n        classNames: ['registry-query-results-pane'],\n\n        hasNoResults: Ember.computed.empty('model'),\n        actions: {}\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/immunizations/registry-search-form', ['exports', 'ember-concurrency', 'common/mixins/spinner', 'common/helpers/phone'], function (exports, _emberConcurrency, _spinner, _phone) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_spinner.default, {\n        classNames: ['box-margin-TBmd-v2', 'registry-search-form'],\n\n        birthOrderOptions: Ember.computed(() => [{\n            display: 'Unspecified',\n            value: null\n        }, { display: '1', value: 1 }, { display: '2', value: 2 }, { display: '3', value: 3 }, { display: '4', value: 4 }, { display: '5', value: 5 }, { display: '6', value: 6 }, { display: '7', value: 7 }, { display: '8', value: 8 }, { display: '9', value: 9 }, { display: '10', value: 10 }]),\n        gestationOptions: Ember.computed(() => [{ display: 'Yes', value: true }, { display: 'No', value: false }]),\n        isAdvancedVisible: false,\n\n        toggleButtonText: Ember.computed('isAdvancedVisible', function () {\n            return Ember.get(this, 'isAdvancedVisible') ? 'Show less' : 'Advanced search';\n        }),\n        birthOrderChanged: Ember.observer('model.birthOrder', function () {\n            this.setSelectedListValue('birthOrder', 'selectedBirthOrder', Ember.get(this, 'birthOrderOptions'), 'value');\n        }),\n        genderChanged: Ember.observer('model.gender', function () {\n            this.setSelectedListValue('gender', 'selectedGender', Ember.get(this, 'genderOptions'), 'gender');\n        }),\n        gestationChanged: Ember.observer('model.isMultipleBirth', function () {\n            this.setSelectedListValue('isMultipleBirth', 'selectedGestation', Ember.get(this, 'gestationOptions'), 'value');\n        }),\n        stateChanged: Ember.observer('model.state', function () {\n            this.setSelectedListValue('state', 'selectedState', Ember.get(this, 'stateOptions'), 'state');\n        }),\n        phoneNumberChanged: Ember.observer('model.phoneNumber', function () {\n            Ember.set(this, 'model.phoneNumber', _phone.default.formatPhone(Ember.get(this, 'model.phoneNumber')));\n        }),\n\n        loadFormOptions: (0, _emberConcurrency.task)(function* () {\n            const genderOptions = yield Ember.get(this, 'store').findAll('gender-option');\n            Ember.set(this, 'genderOptions', genderOptions.toArray());\n\n            const stateOptions = yield this.get('store').findAll('state');\n            Ember.set(this, 'stateOptions', stateOptions.toArray());\n        }).drop(),\n\n        setSelectedListValue(propertyKey, listPropertyKey, list, searchValueKey) {\n            const propertyValue = Ember.get(this, `model.${propertyKey}`);\n            const foundItem = list.findBy(searchValueKey, propertyValue);\n\n            Ember.set(this, listPropertyKey, foundItem);\n        },\n\n        init() {\n            this._super();\n            Ember.get(this, 'loadFormOptions').perform();\n        },\n\n        actions: {\n            clearGestation() {\n                Ember.set(this, 'model.isMultipleBirth', null);\n                Ember.set(this, 'model.birthOrder', null);\n                Ember.set(this, 'selectedBirthOrder', null);\n                Ember.set(this, 'selectedGestation', null);\n            },\n            clearAddress() {\n                Ember.set(this, 'model.address1', null);\n                Ember.set(this, 'model.address2', null);\n            },\n            clearMaidenName() {\n                Ember.set(this, 'model.mothersMaidenName', null);\n            },\n            clearPatientRecordNumber() {\n                Ember.set(this, 'model.patientRecordNumber', null);\n            },\n            clearPhoneNumber() {\n                Ember.set(this, 'model.phoneNumber', null);\n            },\n            selectBirthOrder(birthOrder) {\n                Ember.set(this, 'model.birthOrder', birthOrder.value);\n            },\n            selectGender(gender) {\n                Ember.set(this, 'model.gender', gender.gender);\n            },\n            selectGestation(gestation) {\n                Ember.set(this, 'model.isMultipleBirth', gestation.value);\n            },\n            selectState(state) {\n                Ember.set(this, 'model.state', Ember.get(state, 'state'));\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/immunizations/registry-search', ['exports', 'ember-concurrency', 'common/mixins/spinner'], function (exports, _emberConcurrency, _spinner) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_spinner.default, {\n        classNames: ['flex-column', 'box-padding-LRlg-v2', 'registry-search-container'],\n\n        analytics: Ember.inject.service(),\n\n        isHistoryVisible: true,\n        isSearchVisible: true,\n        selectedRegistry: null,\n        isAdvancedVisible: false,\n\n        hasNoRegistries: Ember.computed.empty('connectedRegistries'),\n        isForecastVisible: Ember.computed.not('isHistoryVisible'),\n        isWaitingMessageVisible: Ember.computed.and('queryRegistry.isRunning', 'queryWait.isIdle'),\n\n        connectedRegistries: Ember.computed('registries', 'registryConnections', function () {\n            const registries = Ember.get(this, 'registries');\n            const registryConnections = Ember.get(this, 'registryConnections') || [];\n            return registryConnections.map(connection => {\n                return (registries || []).findBy('immunizationRegistryGuid', Ember.get(connection, 'immunizationRegistryGuid'));\n            });\n        }),\n\n        hasMultipleConnectedRegistries: Ember.computed('connectedRegistries', function () {\n            return (Ember.get(this, 'connectedRegistries').toArray() || []).length > 1;\n        }),\n        showSpinner: Ember.computed('queryRegistry.isRunning', 'loadPatientDetails.isRunning', 'isWaitingMessageVisible', function () {\n            return Ember.get(this, 'loadPatientDetails.isRunning') || Ember.get(this, 'queryRegistry.isRunning') && !Ember.get(this, 'isWaitingMessageVisible');\n        }),\n\n        connectedRegistriesChanged: Ember.observer('connectedRegistries', function () {\n            const connectedRegistries = Ember.get(this, 'connectedRegistries');\n            const selectedRegistry = Ember.get(this, 'selectedRegistry');\n            if (Ember.isPresent(connectedRegistries) && (Ember.isEmpty(selectedRegistry) || Ember.isEmpty(connectedRegistries.findBy('immunizationRegistryGuid', Ember.get(selectedRegistry, 'immunizationRegistryGuid'))))) {\n                Ember.set(this, 'selectedRegistry', Ember.get(connectedRegistries, 'firstObject'));\n            }\n        }),\n        patientChanged: Ember.observer('patient.patientPracticeGuid', function () {\n            Ember.get(this, 'loadPatientDetails').perform();\n        }),\n\n        loadPatientDetails: (0, _emberConcurrency.task)(function* () {\n            try {\n                const patientPracticeGuid = Ember.get(this, 'patient.patientPracticeGuid');\n                const patientDetails = yield Ember.get(this, 'store').findRecord('patient', patientPracticeGuid);\n                this.send('clearFilters', patientDetails);\n            } catch (err) {\n                this.send('clearFilters');\n            }\n        }).drop(),\n\n        queryRegistry: (0, _emberConcurrency.task)(function* () {\n            try {\n                const results = yield Ember.get(this, 'store').queryRecord('immunization-registry-result', {\n                    facilityGuid: Ember.get(this, 'session.facilityGuid'),\n                    patientFilters: Ember.get(this, 'patientFilters'),\n                    patientPracticeGuid: Ember.get(this, 'patient.patientPracticeGuid'),\n                    registryGuid: Ember.get(this, 'selectedRegistry.id'),\n                    registryName: Ember.get(this, 'selectedRegistry.displayName'),\n                    isAdvancedVisible: Ember.get(this, 'isAdvancedVisible')\n                });\n                Ember.set(this, 'searchResults', results);\n                this.attrs.toggleIsRegistryPrintingEnabled(true);\n                Ember.set(this, 'isSearchVisible', false);\n            } catch (error) {\n                this.attrs.toggleIsRegistryPrintingEnabled(false);\n                Ember.set(this, 'error', error || { errorMessage: 'There was an error connecting to the registry.' });\n            }\n        }).drop(),\n        queryWait: (0, _emberConcurrency.task)(function* () {\n            yield (0, _emberConcurrency.timeout)(Ember.get(this, 'config.longAsyncWarningTimeout') || 10000);\n            if (Ember.get(this, 'queryRegistry.isRunning')) {\n                Ember.get(this, 'analytics').track('Loading of Registry Record');\n            }\n        }).drop(),\n\n        init() {\n            this._super();\n            this.patientChanged();\n            this.connectedRegistriesChanged();\n        },\n\n        willDestroyElement() {\n            this.attrs.toggleIsRegistryPrintingEnabled(false);\n            this._super(...arguments);\n        },\n\n        actions: {\n            cancelWait() {\n                Ember.get(this, 'queryRegistry').cancelAll();\n                Ember.get(this, 'queryWait').cancelAll();\n                Ember.get(this, 'analytics').track('Cancel Loading of Registry Record');\n            },\n            clearError() {\n                Ember.set(this, 'error', null);\n            },\n            clearFilters(defaultPatient) {\n                const defaultSettings = Ember.isEmpty(defaultPatient) ? {} : {\n                    address1: Ember.get(defaultPatient, 'streetAddress1'),\n                    address2: Ember.get(defaultPatient, 'streetAddress2'),\n                    birthOrder: Ember.get(defaultPatient, 'birthSequence'),\n                    city: Ember.get(defaultPatient, 'city'),\n                    dateOfBirth: Ember.get(defaultPatient, 'birthDate'),\n                    firstName: Ember.get(defaultPatient, 'firstName'),\n                    gender: Ember.get(defaultPatient, 'gender'),\n                    isMultipleBirth: Ember.get(defaultPatient, 'isMultipleBirth'),\n                    lastName: Ember.get(defaultPatient, 'lastName'),\n                    middleName: Ember.get(defaultPatient, 'middleName'),\n                    mothersMaidenName: Ember.get(defaultPatient, 'mothersMaidenName'),\n                    patientRecordNumber: Ember.get(defaultPatient, 'patientRecordNumber'),\n                    phoneNumber: Ember.get(defaultPatient, 'mobilePhone') || Ember.get(defaultPatient, 'homePhone') || Ember.get(defaultPatient, 'officePhone'),\n                    postalCode: Ember.get(defaultPatient, 'postalCode'),\n                    state: Ember.get(defaultPatient, 'state')\n                };\n                Ember.set(this, 'patientFilters', Ember.get(this, 'store').createRecord('immunization-registry-filter', defaultSettings));\n            },\n            search() {\n                Ember.set(this, 'error', null);\n                Ember.get(this, 'analytics').track('Perform Registry Search', {\n                    registryName: Ember.get(this, 'selectedRegistry.displayName')\n                });\n                Ember.get(this, 'queryRegistry').perform();\n                Ember.get(this, 'queryWait').perform();\n            },\n            toggleAdvanced() {\n                this.toggleProperty('isAdvancedVisible');\n            },\n            toggleSearch(showSearch) {\n                Ember.set(this, 'isSearchVisible', showSearch);\n                Ember.get(this, 'analytics').track(showSearch ? 'Edit Registry Search' : `View Registry Record ${Ember.get(this, 'isHistoryVisible') ? 'History' : 'Forecast'}`);\n                this.attrs.toggleIsRegistryPrintingEnabled(!showSearch);\n            },\n            toggleResultsView(view) {\n                Ember.set(this, 'isHistoryVisible', view === 'history');\n                Ember.get(this, 'analytics').track(`View Registry Record ${Ember.get(this, 'isHistoryVisible') ? 'History' : 'Forecast'}`);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/immunizations/transmission-errors', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        classNames: ['transmission-errors'],\n        tagName: 'section',\n        isExpanded: false,\n\n        errorCount: Ember.computed.alias('errors.length'),\n\n        setIsExpanded(value) {\n            if (this.get('isExpanded') === value) {\n                return;\n            }\n            Ember.run(() => {\n                this.set('isExpanded', value);\n            });\n            if (value) {\n                this.$('.transmission-errors-content').slideDown(250);\n            } else {\n                this.$('.transmission-errors-content').slideUp(250);\n            }\n        },\n\n        actions: {\n            toggleExpanded() {\n                Ember.run(() => {\n                    // Prevents tests from spazzing\n                    this.setIsExpanded(!this.get('isExpanded'));\n                });\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/immunizations/vis-edition', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        visConceptList: Ember.computed('vaccination.visConceptGuidList', 'visConcepts.[]', function () {\n            const list = [...(Ember.get(this, 'vaccination.visConceptGuidList') || [])];\n            const visConcepts = Ember.get(this, 'visConcepts') || [];\n            return list.map(guid => visConcepts.findBy('visConceptGuid', guid));\n        }),\n        actions: {\n            select() {\n                const guidList = [...(Ember.get(this, 'visConceptList') || [])].map(concept => concept.id);\n                Ember.setProperties(this, {\n                    'vaccination.visVersionDate': null,\n                    'vaccination.visConceptGuidList': _.uniq(guidList)\n                });\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/interaction-alert-duplicate-therapies', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        duplicateTherapies: null,\n        isDuplicationSummaryExpanded: false,\n\n        duplicateTherapyGroups: Ember.computed('duplicateTherapies.[]', function () {\n            let duplicateTherapies = this.get('duplicateTherapies'),\n                classInteractions = duplicateTherapies.filterBy('className'),\n                sameIngredientInteractions = duplicateTherapies.filterBy('className', null),\n                duplicateTherapyGroups = [],\n                classInteractionsGroups;\n\n            if (Ember.isPresent(classInteractions)) {\n                classInteractionsGroups = _.groupBy(classInteractions, interaction => interaction.className);\n                duplicateTherapyGroups.addObjects(Object.keys(classInteractionsGroups).map(className => {\n                    return Ember.ObjectProxy.create({\n                        content: classInteractionsGroups[className][0],\n                        alertLabel: `Class: ${className}`,\n                        isAlertTextExpanded: false\n                    });\n                }));\n            }\n\n            if (Ember.isPresent(sameIngredientInteractions)) {\n                duplicateTherapyGroups.addObject(Ember.ObjectProxy.create({\n                    content: sameIngredientInteractions[0],\n                    alertLabel: 'Same Ingredients',\n                    isAlertTextExpanded: false\n                }));\n            }\n\n            return duplicateTherapyGroups;\n        }),\n\n        duplicateTherapySummaryText: Ember.computed('duplicateTherapyGroups.[]', 'isDuplicationSummaryExpanded', function () {\n            let expandText = this.get('isDuplicationSummaryExpanded') ? 'Show less...' : 'Show more...',\n                duplicationCount = this.get('duplicateTherapyGroups.length');\n\n            if (duplicationCount > 1) {\n                return `Severe Interaction: Therapeutic duplications (${duplicationCount}) ${expandText}`;\n            }\n\n            return `Severe Interaction: Therapeutic duplication (1) ${expandText}`;\n        }),\n\n        actions: {\n            toggleExpandDuplications() {\n                this.toggleProperty('isDuplicationSummaryExpanded');\n            },\n\n            toggleExpandDuplicationAlertText(duplicateTherapyGroup) {\n                duplicateTherapyGroup.toggleProperty('isAlertTextExpanded');\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/interaction-alert-item', ['exports', 'clinical/models/medication'], function (exports, _medication) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        drug: null,\n        drugIndex: null,\n        interaction: null,\n        interactionIndex: null,\n        showMore: false,\n        allergiesInvolved: Ember.computed.alias('interaction.allergiesInvolved'),\n        firstAllergy: Ember.computed.alias('interaction.allergiesInvolved.firstObject'),\n        isDrug: Ember.computed.equal('type', 'Drug'),\n        type: Ember.computed.alias('interaction.interactionType'),\n\n        drugOrAllergenText: Ember.computed('isDrug', 'firstAllergy', function () {\n            if (this.get('isDrug')) {\n                return _medication.default.wrap(this.get('drug')).get('genericAndTradeName');\n            }\n            var name = this.get('firstAllergy.allergen.name');\n            return Ember.isEmpty(name) ? this.get('firstAllergy.allergen.allergySubstance.title') : name;\n        }),\n\n        inteactionTypeText: Ember.computed('interaction.interactionType', function () {\n            return this.get('interaction.interactionType') === 'Drug' ? 'Interaction' : this.get('interaction.interactionType');\n        }),\n\n        severityClassName: Ember.computed('type', 'firstAllergy', function () {\n            return this.getCssClassNameBySeverity(this.getSeverity());\n        }),\n\n        severityText: Ember.computed('type', 'firstAllergy', function () {\n            return this.getTitleBySeverity(this.getSeverity());\n        }),\n\n        getSeverity() {\n            return this.get('isDrug') ? this.get('interaction.severity') || '' : this.get('firstAllergy.allergySeverity.title') || '';\n        },\n\n        getCssClassNameBySeverity(severity) {\n            var classMapping = {\n                'major': 'severitySevere',\n                'severe': 'severitySevere',\n                'duplicatetherapy': 'severitySevere',\n                'moderate': 'severityModerate',\n                'very mild': 'severityMild',\n                'mild': 'severityMild',\n                'minor': 'severityMild',\n                'unknown': 'severityUnknown'\n            };\n            return classMapping[severity.toLowerCase()];\n        },\n\n        getTitleBySeverity(severity) {\n            var nameMapping = {\n                'major': 'Severe',\n                'severe': 'Severe',\n                'duplicatetherapy': 'Severe',\n                'moderate': 'Moderate',\n                'very mild': 'Very Mild',\n                'mild': 'Mild',\n                'minor': 'Mild',\n                'unknown': 'Unknown'\n            };\n            return nameMapping[severity.toLowerCase()];\n        },\n\n        actions: {\n            toggleShowSummary() {\n                this.toggleProperty('showSummary');\n            },\n\n            toggleShowDetail() {\n                this.toggleProperty('showDetail');\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/interaction-alerts', ['exports', 'clinical/repositories/interaction-alerts', 'clinical/mixins/loading', 'tyrion/mixins/destroyed'], function (exports, _interactionAlerts, _loading, _destroyed) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    const CUSTOM_DRUG_ERROR_CODE = 'CUSTOM_DRUG';\n\n    exports.default = Ember.Component.extend(_loading.default, _destroyed.default, {\n        classNames: ['interaction-alerts'],\n\n        drugAlertErrors: null,\n        duplicateTherapies: null,\n        interactions: null,\n        loadInteractionsFailed: false,\n        medication: null,\n        patientGuid: null,\n\n        loadInteractions: Ember.on('init', Ember.observer('medication', 'patientGuid', function () {\n            let patientGuid = this.get('patientGuid'),\n                medication = this.get('medication');\n\n            if (Ember.isEmpty(medication)) {\n\n                //We don't do anything if we don't have a medication\n                return;\n            }\n            if (Ember.isEmpty(patientGuid)) {\n\n                // Nothing to load. Clear the interactions\n                this.set('interactions', []);\n            }\n\n            this.set('loadInteractionsFailed', false);\n\n            this._withProgress(_interactionAlerts.default.loadInteractionAlertsByMedication(patientGuid, medication).then(data => {\n                this._setPropertiesUnlessDestroyed({\n                    interactions: data.interactions.rejectBy('isDuplicateTherapy').sortBy('severitySort'),\n                    duplicateTherapies: data.interactions.filterBy('isDuplicateTherapy'),\n                    drugAlertErrors: data.drugAlertErrors\n                });\n            }).catch(() => {\n                this._setUnlessDestroyed('loadInteractionsFailed', true);\n            }));\n        })),\n\n        hasNoInteraction: Ember.computed('interactions', 'drugAlertErrors', function () {\n            let interactions = this.get('interactions'),\n                duplicateTherapies = this.get('duplicateTherapies'),\n                drugAlertErrors = this.get('drugAlertErrors') || [],\n                customDrugErrors;\n\n            if (Ember.isEmpty(interactions) && Ember.isEmpty(drugAlertErrors) && Ember.isEmpty(duplicateTherapies)) {\n                return true;\n            } else if (!Ember.isEmpty(drugAlertErrors)) {\n                customDrugErrors = drugAlertErrors.filterBy('errorCode', CUSTOM_DRUG_ERROR_CODE) || [];\n                return Ember.isEmpty(interactions) && Ember.isEmpty(duplicateTherapies) && customDrugErrors.length === drugAlertErrors.length;\n            }\n\n            return false;\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/medication-detail-duplicates', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        classNames: ['duplicate-medication-alert'],\n\n        isEditing: false,\n        newMedicationFromSearchResult: null,\n\n        medicationDuplicates: Ember.computed.alias('newMedicationFromSearchResult.duplicates')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/medication-detail', ['exports', 'clinical/models/assessment', 'clinical/repositories/assessments', 'clinical/repositories/diagnoses', 'erx/repositories/erx-provider', 'common/helpers/validation', 'clinical/models/medication', 'clinical/repositories/medications', 'clinical/models/assessments/prolia-aesi-medication-history', 'boot/models/session', 'common/mixins/spinner', 'ember-lgtm/mixins/validatable', 'clinical/mixins/with-medications', 'charting/utils/encounter', 'tyrion/mixins/destroyed', 'ember-concurrency', 'erx/models/prescription-diagnosis'], function (exports, _assessment, _assessments, _diagnoses, _erxProvider, _validation, _medication, _medications, _proliaAesiMedicationHistory, _session, _spinner, _validatable, _withMedications, _encounter, _destroyed, _emberConcurrency, _prescriptionDiagnosis) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    const scheduleMapping = { 1: 'I', 2: 'II', 3: 'III', 4: 'IV', 5: 'V' };\n\n    exports.default = Ember.Component.extend(_spinner.default, _withMedications.default, _validatable.default, _destroyed.default, {\n        classNames: ['detail-pane', 'col-sm-5', 'summary-details', 'side-fixed'],\n        tagName: 'section',\n\n        analytics: Ember.inject.service(),\n        routing: Ember.inject.service('pf-routing'),\n        erxOrderService: Ember.inject.service('erx-order'),\n\n        contentElement: '.medication-detail .detail-pane-body-wrapper',\n        showSpinner: Ember.computed.or('isLoading', 'isOrdering'),\n\n        attachToEncounter: false,\n        bigHeaderText: 'Record medication',\n        daysSupply: null,\n        editedMedicationGuid: undefined,\n        erxProviders: null,\n        isDirty: false,\n        isEditing: false,\n        isFrequentMedsOpen: true,\n        isRecordedFromPlan: false,\n        newMedicationFromSearchResult: undefined,\n        prescriptionUnitQuery: '',\n        prescriptionUnits: null,\n        quantity: null,\n        searchText: '',\n        selectedPrescriptionUnit: null,\n        sigText: null,\n        showDiscontinuedWarning: false,\n        smallHeaderText: 'Medication',\n        startDateIsValid: true,\n        stopDateIsValid: true,\n        transcriptGuid: null,\n\n        controlledSubstanceScheduleChanged: false,\n        showDeprecatedMedicationWarning: false,\n        deprecatedMedication: null,\n        deprecatedReason: null,\n        isMedicationDeprecated: false,\n\n        erxOrderDrafts: [],\n        hasErxOrderDrafts: Ember.computed.notEmpty('erxOrderDrafts'),\n\n        isCustomMedication: Ember.computed.empty('newMedicationFromSearchResult.isCustom'),\n        isMedOrderable: Ember.computed.and('newMedicationFromSearchResult', 'isMedNotDiscontinued'),\n        isToolboxVisible: Ember.computed('isEditing', 'isEntitledToEditMedications', function () {\n            return this.get('isEntitledToEditMedications') && !this.get('isEditing');\n        }),\n        startDateTime: Ember.computed.alias('newMedicationFromSearchResult.startDateTime'),\n        stopDateTime: Ember.computed.alias('newMedicationFromSearchResult.stopDateTime'),\n        disabledOrNotEntitled: Ember.computed('disabled', 'isEntitledToEditMedications', function () {\n            return this.get('disabled') || !this.get('isEntitledToEditMedications');\n        }),\n        showProliaPanel: Ember.computed('newMedicationAssessmentCardToken', 'isEntitledToEditMedications', function () {\n            return this.get('isEntitledToEditMedications') && this.get('newMedicationAssessmentCardToken');\n        }),\n        validator: _validation.default.validator().validates('startDateIsValid').required().isTrue('Please correct the start date').validates('stopDateIsValid').required().isTrue('Please correct the stop date').validates('startDateTime').using('startDateTime', 'stopDateTime', function (start, stop) {\n            var startMoment = moment(start),\n                stopMoment = moment(stop);\n            if (!start || !stop || !startMoment.isValid() || !stopMoment.isValid() || start === stop) {\n                // If either is null, invalid or they're the same no need to check for range\n                return true;\n            }\n            return startMoment.isBefore(stopMoment);\n        }, 'The start date needs to be before the end date').validates('selectedPrescriptionUnit').using('prescriptionUnitQuery', 'selectedPrescriptionUnit', function (prescriptionUnitQuery, selectedPrescriptionUnit) {\n            return Ember.isEmpty(prescriptionUnitQuery) || Ember.isPresent(selectedPrescriptionUnit);\n        }, 'Select a valid prescription unit').validates('sigText').doesntHaveOpeningHtmlTags('Cannot contain html tags.').validates('medicationComment').doesntHaveOpeningHtmlTags('Cannot contain html tags.').build(),\n\n        canDelete: Ember.computed('transcriptGuid', 'newMedicationFromSearchResult.encounterComments.[]', function () {\n            var encounterComments = this.getWithDefault('newMedicationFromSearchResult.encounterComments', []),\n                length = encounterComments.get('length');\n            if (length > 1) {\n                // Can't delete if we have more than one encounterComment\n                return false;\n            } else if (length === 1) {\n                // If we only have one, it has to be the current one.\n                return encounterComments.objectAt(0).transcriptGuid === this.get('transcriptGuid');\n            }\n            return true;\n        }),\n\n        canToggleAttachToEncounter: Ember.computed('transcriptGuid', 'isRecordedFromPlan', function () {\n            return this.get('transcriptGuid') && !this.get('isRecordedFromPlan');\n        }),\n\n        controlledSubstanceSchedule: Ember.computed('newMedicationFromSearchResult', function () {\n            var controlledSubstanceSchedule = this.get('newMedicationFromSearchResult.controlledSubstanceSchedule');\n            return scheduleMapping[controlledSubstanceSchedule];\n        }),\n\n        disabled: Ember.computed(function () {\n            return !_session.default.get('canEditChart');\n        }),\n\n        isMedNotDiscontinued: Ember.computed('stopDateTime', function () {\n            // med is not discontinued if stopDateTime is null OR if stopDateTime is after now\n            return Ember.isEmpty(this.get('stopDateTime')) || moment(this.get('stopDateTime')).isAfter(moment());\n        }),\n\n        recordedProvider: Ember.computed('newMedicationFromSearchResult.providerGuid', function () {\n            var providerGuid = this.getWithDefault('newMedicationFromSearchResult.providerGuid');\n            if (providerGuid) {\n                return this.store.findRecord('provider', providerGuid);\n            }\n            return '';\n        }),\n\n        recordedText: Ember.computed('newMedicationFromSearchResult.lastModifiedDateTimeUtc', function () {\n            var lastModified = this.get('newMedicationFromSearchResult.lastModifiedDateTimeUtc');\n            if (lastModified) {\n                lastModified = moment(lastModified).format('MM/DD/YYYY hh:mm A');\n            }\n            return lastModified;\n        }),\n\n        restartStopLabel: Ember.computed('stopDateTime', function () {\n            return this.get('stopDateTime') ? 'Restart Med' : 'Move to historical';\n        }),\n\n        selectedDiagnosisText: Ember.computed('selectedDiagnosis', function () {\n            const selectedDiagnosis = this.get('selectedDiagnosis');\n            if (Ember.isPresent(selectedDiagnosis)) {\n                const diagnosis = _prescriptionDiagnosis.default.createFromListResult(selectedDiagnosis, 'Icd10');\n                if (Ember.isPresent(diagnosis)) {\n                    return diagnosis.get('display');\n                }\n                return Ember.get(selectedDiagnosis, 'name');\n            }\n            return null;\n        }),\n\n        shouldShowDuplicateWarning: Ember.computed('newMedicationFromSearchResult.duplicates', 'isLoading', 'isOrdering', function () {\n            return !this.get('isLoading') && !this.get('isOrdering') && this.get('newMedicationFromSearchResult.duplicates');\n        }),\n\n        prescriptionsSortProperty: Ember.computed(() => ['prescriptionDate:desc']),\n        sortedPrescriptions: Ember.computed.sort('newMedicationFromSearchResult.prescriptions', 'prescriptionsSortProperty'),\n\n        _closing: Ember.observer('closing', function () {\n            if (!this.get('closing')) {\n                return;\n            }\n            this.set('closing', false);\n            if (this.get('isDirty')) {\n                Ember.run.once(this, '_saveMedication');\n            }\n        }),\n\n        _markDirty: Ember.observer('medicationComment', 'encounterComment', 'attachToEncounter', 'sigText', 'startDateTime', 'stopDateTime', 'selectedMedicationDiscontinuedReason', 'selectedDiagnosis', 'startDateIsValid', 'stopDateIsValid', 'prescriptionUnitQuery', function (obj, prop) {\n            if (!this.get('isDirty')) {\n                this.updateDirtyAfterRender(true);\n            }\n            if (prop === 'selectedMedicationDiscontinuedReason') {\n                this.set('goToDrugAllergy', this.get('selectedMedicationDiscontinuedReason.id') === 12 /*Allergic to medication*/);\n            }\n        }),\n\n        clearGoToDrugAllergy: Ember.observer('isDirty', function () {\n            if (this.get('isDirty') === false) {\n                this.set('goToDrugAllergy', false);\n            }\n        }),\n\n        onControlledSubstanceScheduleChanged: Ember.observer('controlledSubstanceScheduleChanged', function () {\n            if (this.get('controlledSubstanceScheduleChanged')) {\n                return this.setProperties({\n                    showDeprecatedMedicationWarning: true,\n                    deprecatedMedication: this.get('newMedicationFromSearchResult'),\n                    deprecatedReason: {\n                        description: 'Medication no longer available',\n                        id: 13\n                    },\n                    isMedicationDeprecated: true\n                });\n            }\n            this.setProperties({\n                showDeprecatedMedicationWarning: false,\n                deprecatedMedication: null,\n                deprecatedReason: null,\n                isMedicationDeprecated: false\n            });\n        }),\n\n        focusOnSearch: Ember.on('didInsertElement', Ember.observer('isEditing', function () {\n            var _this = this;\n            Ember.run.scheduleOnce('afterRender', function () {\n                if (!_this.get('isEditing')) {\n                    _this.$('.medication-search input').focus();\n                }\n            });\n        })),\n\n        loadEditedMedication: Ember.on('init', Ember.observer('editedMedicationGuid', 'isRecordedFromPlan', function () {\n            var medicationGuid = this.get('editedMedicationGuid'),\n                isEditing = !Ember.isEmpty(medicationGuid);\n\n            this.setProperties({\n                erxOrderDrafts: [],\n                isEditing: isEditing,\n                newMedicationFromSearchResult: undefined\n            });\n            if (isEditing) {\n                this._loadMedication();\n                this.get('erxOrderService').getDraftsByMedicationGuid(this.get('patientGuid'), medicationGuid).then(drafts => {\n                    this.set('erxOrderDrafts', drafts);\n                });\n            }\n            // Change the title.\n            if (this.get('isRecordedFromPlan')) {\n                this.set('smallHeaderText', 'Note');\n                this.set('bigHeaderText', 'Review medications in plan');\n            } else {\n                this.set('smallHeaderText', 'Medication');\n                if (this.get('isEntitledToEditMedications')) {\n                    this.set('bigHeaderText', 'Record medication');\n                } else {\n                    this.set('bigHeaderText', 'Review medication');\n                }\n            }\n        })),\n\n        init() {\n            this._super();\n            this.get('loadErxProviders').perform();\n            this.onControlledSubstanceScheduleChanged();\n        },\n\n        actions: {\n            addCustomMedication(customMedText) {\n                var customMed = {\n                    'drugName': customMedText,\n                    'tradeName': customMedText,\n                    'professionalDescription': customMedText,\n                    'genericName': '',\n                    'productStrength': '',\n                    'route': '',\n                    'doseForm': '',\n                    'isGeneric': false,\n                    'isOverTheCounter': false,\n                    'isMedicalSupply': false,\n                    'isObsolete': false\n                };\n                this.doNewMedicationSelected(customMed);\n            },\n\n            cancel() {\n                // Setting it to false so we don't save\n                this.sendAction('updateDirty', false);\n                this._close();\n            },\n\n            close() {\n                this._saveMedication(false, true);\n            },\n\n            closeDeprecatedMedicationWarning() {\n                this.set('showDeprecatedMedicationWarning', false);\n                if (this.get('controlledSubstanceScheduleChanged')) {\n                    this.set('controlledSubstanceScheduleChanged', false);\n                }\n            },\n\n            createOrder() {\n                this.get('analytics').track('Order Rx - QTY, Unit, and Days Supply', {\n                    'Entered Quantity': Ember.isPresent(this.get('quantity')),\n                    'Entered Unit': Ember.isPresent(this.get('selectedPrescriptionUnit')),\n                    'Entered Days Supply': Ember.isPresent(this.get('daysSupply'))\n                });\n\n                const newMedicationFromSearchResult = this.get('newMedicationFromSearchResult');\n                const isPending = Ember.isEmpty(newMedicationFromSearchResult.get('medicationGuid'));\n                this.set('isMedicationDeprecated', false);\n                this.set('deprecatedMedication', null);\n                this.set('deprecatedReason', null);\n                // Check to make sure that the medication has not been deprecated\n                this._checkMedicationStatus(newMedicationFromSearchResult).then(() => {\n                    if (this.get('isMedicationDeprecated')) {\n                        this.set('showDeprecatedMedicationWarning', true);\n                    } else {\n                        this.set('isOrdering', true);\n                        this._saveMedication(false, false, isPending);\n                    }\n                });\n            },\n\n            chooseNewMedication() {\n                const medication = this.get('deprecatedMedication');\n                const transcriptGuid = this.get('transcriptGuid');\n                const deprecatedReason = this.get('deprecatedReason');\n\n                this.set('showDeprecatedMedicationWarning', false);\n                this.set('isEditing', false);\n                this._withProgress(_medications.default.replaceDeprecatedMedication(medication, transcriptGuid, deprecatedReason)).then(newMedication => {\n                    this.doNewMedicationSelected(newMedication);\n                    this.set('searchText', medication.get('drugName'));\n                    _medications.default.loadMedications(this.get('patientGuid'), { forceReload: true });\n                    Ember.run.next(() => {\n                        this.$('.medication-search input').click();\n                    });\n                }).catch(error => this._handleSaveError(error, 'Failed to discontinue the deprecated medication'));\n            },\n\n            deleteMedicationDetail() {\n                const medication = this.get('newMedicationFromSearchResult');\n                if (!medication) {\n                    return;\n                }\n                const transcriptGuid = this.get('transcriptGuid');\n                const medications = this.get('medications');\n                this._withProgress(_medications.default.deleteMedication(medication, transcriptGuid)).then(() => {\n                    medications.removeMedication(medication);\n                    toastr.success('Deleted Medication');\n                    this._unlessDestroyed(() => {\n                        this.sendAction('updateDirty', false);\n                        this._close();\n                    });\n                }).catch(error => this._handleSaveError(error, 'Failed to delete the medication'));\n            },\n\n            discontinueDuplicate(duplicateMedication) {\n                duplicateMedication.set('stopDateTime', new Date(moment(new Date()).format('MM/DD/YYYY')));\n                const currentMedication = this.get('newMedicationFromSearchResult');\n                _medications.default.saveMedication(duplicateMedication, this.get('transcriptGuid')).then(() => {\n                    toastr.success('Duplicate discontinued and changed to historical');\n                    if (currentMedication) {\n                        currentMedication.get('duplicates').removeObject(duplicateMedication);\n                    }\n                }).catch(error => this._handleSaveError(error));\n            },\n\n            doStartDateTimeToToday() {\n                this.set('startDateTime', moment(new Date()).format('MM/DD/YYYY'));\n            },\n\n            doStopDateTimeToToday() {\n                this.set('stopDateTime', moment(new Date()).format('MM/DD/YYYY'));\n            },\n\n            /***\n             * This action is called when we click on a dupe to go an edit a different medication\n             * We replace instead of transitioning to avoid leaving this in the history.\n             * for new meds, we also discard the current changes to avoid saving the dupe.\n             */\n            editMedication(medication) {\n                if (!this.get('isEditing')) {\n                    // Discard changes if this is a new medication and they clicked a dupe, that means they don't want to save it\n                    this.updateDirtyAfterRender(false);\n                }\n                // NOTE: We have to delay this to let the controller update the binding with isDirty so it doesn't avoid the transition\n                Ember.run.later(() => {\n                    const medicationGuid = medication.get('medicationGuid');\n                    const routing = this.get('routing');\n                    const transcriptGuid = this.get('transcriptGuid');\n                    const patientPracticeGuid = medication.get('patientPracticeGuid');\n                    if (transcriptGuid) {\n                        routing.replaceWith(routing.get('currentRouteName'), patientPracticeGuid, transcriptGuid, medicationGuid);\n                    } else {\n                        routing.replaceWith(routing.get('currentRouteName'), patientPracticeGuid, medicationGuid);\n                    }\n                });\n            },\n\n            goToPrescriptionDetails(prescription) {\n                this.sendAction('goToPrescriptionDetails', prescription);\n            },\n\n            loadMedication() {\n                this._loadMedication();\n            },\n\n            newMedicationAssessmentCardRecorded(model) {\n                this.set('newMedicationAssessmentCardModel', model);\n            },\n\n            newMedicationSelected(value) {\n                if (value === undefined) {\n                    return;\n                }\n                this.doNewMedicationSelected(value);\n            },\n\n            openAssessment(token) {\n                // TODO: Open the assessment modal\n                this.set('showAssessmentModal', true);\n                this.set('newMedicationAssessmentModalModel', {\n                    token: token,\n                    isComplete: true\n                });\n            },\n\n            removeAssociatedDiagnosis() {\n                this.set('associatedDiagSearch', null);\n                this.set('selectedDiagnosis', null);\n            },\n\n            reopenAssessment(model) {\n                // TODO: Reopen the assessment modal\n                model = model;\n            },\n\n            restartMedication() {\n                if (this.get('stopDateTime')) {\n                    this.setProperties({\n                        stopDateTime: null,\n                        showDiscontinuedWarning: false\n                    });\n                } else {\n                    this.setProperties({\n                        stopDateTime: moment(new Date()).format('MM/DD/YYYY'),\n                        showDiscontinuedWarning: true\n                    });\n                }\n            },\n\n            saveMedication() {\n                this.get('analytics').track('Record Rx - QTY, Unit, and Days Supply', {\n                    'Entered Quantity': Ember.isPresent(this.get('quantity')),\n                    'Entered Unit': Ember.isPresent(this.get('selectedPrescriptionUnit')),\n                    'Entered Days Supply': Ember.isPresent(this.get('daysSupply'))\n                });\n                this._saveMedication(true, true);\n            },\n\n            selectedAssociatedDiag(value) {\n                this.set('selectedDiagnosis', value);\n                this.set('associatedDiagSearch', null);\n            },\n\n            sigSelected(value) {\n                this.set('selectedSig', value);\n                this.set('sigText', value.labelText);\n            }\n        },\n\n        _close(medication, goToDrugAllergy) {\n            // This is needed to introduce a delay so the isDirtyBinding is updated back (to the controller)\n            // before we retry the transition\n            Ember.run.later(() => this._unlessDestroyed(() => this.sendAction('close', medication, goToDrugAllergy)));\n        },\n\n        _handleSaveError(error, message) {\n            if (Ember.isPresent(this.get('transcriptGuid'))) {\n                const action = _encounter.default.mapSaveErrorToAction(error, 403);\n                if (action) {\n                    this._sendActionUnlessDestroyed('updateDirty', false);\n                    Ember.run.next(this, 'sendAction', action);\n                    return true;\n                }\n            }\n\n            if (message) {\n                toastr.error(message);\n            }\n            return false;\n        },\n\n        _loadMedication() {\n            var _this = this,\n                patientGuid = this.get('patientGuid'),\n                medicationGuid = this.get('editedMedicationGuid');\n            this.set('loadMedicationFailed', false);\n            this._withProgress(_medications.default.loadMedication(patientGuid, medicationGuid)).then(function (medication) {\n                const medicationCodes = {\n                    Ndc: medication.get('ndc'),\n                    RxNormCui: medication.get('rxNormCui'),\n                    MedicationGuid: medication.get('medicationGuid')\n                };\n                _medications.default.loadAssociatedPrograms([medicationCodes]).then(programs => {\n                    if (Ember.isPresent(programs)) {\n                        programs.forEach(program => {\n                            if (Ember.isPresent(medication) && medication.get('medicationGuid') === program.medicationGuid) {\n                                medication.set('associatedProgram', program.worksheetTypes);\n                            }\n                        });\n                    }\n                    _this._unlessDestroyed(function () {\n                        _this.doNewMedicationSelected(medication);\n                    });\n                });\n            }).errorMessage('The medication could not be loaded', { rethrow: true }).catch(function () {\n                _this._unlessDestroyed(function () {\n                    _this.set('loadMedicationFailed', true);\n                });\n            });\n        },\n\n        _medicationSaved(medication, goToDrugAllergy) {\n            // This is needed to introduce a delay so the isDirtyBinding is updated back (to the controller)\n            // before we retry the transition\n            Ember.run.later(() => this._unlessDestroyed(() => {\n                if (this.get('isOrdering')) {\n                    this.sendAction('createOrder', medication.get('medicationGuid'), this.get('quantity'), this.get('selectedPrescriptionUnit.name'), this.get('daysSupply'));\n                } else {\n                    this._close(medication, goToDrugAllergy);\n                }\n            }));\n        },\n\n        _saveMedication(showSuccess, saveAssessment, isPending) {\n            const originalMedication = this.get('newMedicationFromSearchResult');\n            if (!this.get('isDirty')) {\n                this._medicationSaved(originalMedication);\n                return;\n            }\n            this.validate().then(isValid => {\n                // Errors in production have occurred because 'addComment' is called on undefined\n                if (Ember.isEmpty(originalMedication)) {\n                    return;\n                }\n\n                if (!isValid) {\n                    this.set('isOrdering', false);\n                    const errors = this.get('errors');\n                    const { selectedPrescriptionUnit, startDateTime, medicationComment, sigText } = errors;\n                    if (Ember.isEmpty(selectedPrescriptionUnit) && Ember.isEmpty(medicationComment) && Ember.isEmpty(sigText)) {\n                        toastr.warning(startDateTime || 'Please validate the dates before saving a medication');\n                    }\n                    return;\n                }\n\n                originalMedication.addComment(this.get('medicationComment'));\n\n                if (this.get('attachToEncounter')) {\n                    originalMedication.addComment(this.get('encounterComment'), this.get('transcriptGuid'));\n                } else {\n                    originalMedication.detachFromEncounter(this.get('transcriptGuid'));\n                }\n\n                const medicationToSave = JSON.parse(JSON.stringify(originalMedication.get('content')));\n                const providerGuid = _session.default.get('providerGuid');\n                const sig = this.getSig();\n\n                // Set additional\n                Ember.setProperties(medicationToSave, {\n                    diagnosisGuid: this.get('selectedDiagnosis.diagnosisGuid'),\n                    startDateTime: null,\n                    stopDateTime: null,\n                    transcriptMedications: originalMedication.get('transcriptMedications'),\n                    patientPracticeGuid: this.get('patientGuid'),\n                    isPending,\n                    providerGuid,\n                    sig\n                });\n\n                if (this.get('isEditing')) {\n                    // TODO: Seems unnecessary consider removing\n                    medicationToSave.medicationGuid = this.get('newMedicationFromSearchResult.medicationGuid');\n                }\n\n                if (this.get('startDateTime')) {\n                    medicationToSave.startDateTime = new Date(this.get('startDateTime'));\n                }\n\n                if (this.get('stopDateTime')) {\n                    medicationToSave.stopDateTime = new Date(this.get('stopDateTime'));\n                    medicationToSave.medicationDiscontinuedReason = this.get('selectedMedicationDiscontinuedReason');\n                } else {\n                    // If there is no stopdate, we have to clear out the medicationDiscontinuedReason\n                    medicationToSave.medicationDiscontinuedReason = null;\n                }\n\n                this.get('analytics').track('Save Medication');\n\n                const goToDrugAllergy = this.get('goToDrugAllergy');\n                const transcriptGuid = this.get('transcriptGuid');\n                const medications = this.get('medications');\n                this._withProgress(_medications.default.saveMedication(medicationToSave, transcriptGuid).then(medication => {\n                    if (showSuccess) {\n                        if (saveAssessment) {\n                            toastr.success('Medication recorded', '', { timeOut: '1000' });\n                        } else {\n                            toastr.success('Medication recorded');\n                        }\n                    }\n\n                    medications.replaceMedication(medication);\n\n                    this._unlessDestroyed(() => {\n                        if (saveAssessment) {\n                            this._saveAssessment(medication);\n                        }\n\n                        this.sendAction('updateDirty', false);\n                        this._medicationSaved(medication, goToDrugAllergy);\n                    });\n                }, error => {\n                    // NOTE: we don't use catch to intentionally avoid success callback errors\n                    // server error, resets the isDirty so we can retry.\n                    if (!this._handleSaveError(error, 'Failed to save medication')) {\n                        this.sendAction('updateDirty', true);\n                    }\n                }));\n            });\n        },\n        getSig() {\n            const { sigText, selectedSig } = this.getProperties('sigText', 'selectedSig');\n            if (selectedSig) {\n                // Replace the Sig patient description to the Textarea value.\n                Ember.trySet(selectedSig, 'patientDescription', sigText);\n                // Remove this property\n                delete selectedSig.labelText;\n                return selectedSig;\n            }\n            // Lets construct a sig since they didn't select one.\n            return {\n                dose: null,\n                route: null,\n                frequency: null,\n                duration: null,\n                professionalDescription: sigText,\n                patientDescription: sigText\n            };\n        },\n\n        doNewMedicationSelected(medicationSelected) {\n            const transcriptGuid = this.get('transcriptGuid');\n            const isRecordedFromPlan = this.get('isRecordedFromPlan');\n            let medication = _medication.default.wrap(medicationSelected);\n            const transcriptMedication = transcriptGuid ? medication.getTranscriptMedication(transcriptGuid) : null;\n            const defaultTranscriptMedication = medication.getTranscriptMedication() || {};\n            const medications = this.get('medications');\n\n            medication.set('patientPracticeGuid', this.get('patientGuid'));\n            medication = Ember.copy(medication.get('content'), true);\n            medication = _medication.default.wrap(medication);\n            medication.setProperties({\n                startDateTime: medication.get('startDateTime') ? moment.utc(medication.get('startDateTime')).format('MM/DD/YYYY') : '',\n                stopDateTime: medication.get('stopDateTime') ? moment.utc(medication.get('stopDateTime')).format('MM/DD/YYYY') : '',\n                duplicates: medications ? medications.getDuplicatesForMedication(medication) : []\n            });\n\n            this.setProperties({\n                sigText: medication.get('sig.patientDescription'),\n                newMedicationFromSearchResult: medication,\n                medicationComment: defaultTranscriptMedication.comment,\n                encounterComment: (transcriptMedication || {}).comment,\n                attachToEncounter: !!transcriptMedication || isRecordedFromPlan || this.get('isAddingNewMedicationFromEncounter'),\n                newMedicationAssessmentCardToken: null,\n                newMedicationAssessmentCardModel: null\n            });\n            if (this.get('isEditing')) {\n                // We just load this med, isn't really dirty if we're editing.\n                this.updateDirtyAfterRender(false);\n            }\n            this.getSigSearchResult(medication);\n            this.sendAction('refreshMedicationAd', medication.get('ndc'));\n        },\n\n        getSigSearchResult(medication) {\n            _medications.default.loadMedicationReferenceData(medication, this.get('patientGuid'), this.get('store')).then(data => {\n                // TODO: rework this function so it doesn't make the med dirty due to a race condition\n                // this could be called after the med was saved, triggering a new save if it's dirty\n                var medicationDiscontinuedReasons = [],\n                    associatedDiagnosis = [],\n                    sortedDiscontinuedReason = [],\n                    isEditing = this.get('isEditing');\n\n                if (this.get('isDestroyed')) {\n                    return;\n                }\n\n                //lets add property to the sigs\n                if (Ember.isPresent(data.sigs)) {\n                    data.sigs.forEach(function (value) {\n                        value.labelText = value.patientDescription;\n                    });\n                }\n\n                this.set('sigResults', data.sigs);\n\n                //Clean up\n                this.set('patientAssociatedDiagnoses', associatedDiagnosis);\n                this.set('medicationDiscontinuedReasons', medicationDiscontinuedReasons);\n                this.set('selectedSig', null);\n                this.set('selectedMedicationDiscontinuedReason', {\n                    'id': 11,\n                    'description': 'No reason selected'\n                });\n                this.set('prescriptionUnits', data.prescriptionUnits);\n\n                // Default the dispense and unit fields to the most recent prescription\n                if (Ember.isPresent(this.get('newMedicationFromSearchResult.prescriptions'))) {\n                    this.setProperties({\n                        selectedPrescriptionUnit: (data.prescriptionUnits || []).findBy('name', this.get('sortedPrescriptions.firstObject.prescriptionUnit')),\n                        quantity: this.get('sortedPrescriptions.firstObject.quantity')\n                    });\n                }\n\n                if (Ember.isPresent(data.medicationDiscontinuedReasons)) {\n                    sortedDiscontinuedReason = data.medicationDiscontinuedReasons.sortBy('description');\n                }\n\n                //Make sure we put this guy on top.\n                medicationDiscontinuedReasons.push({\n                    'id': 11,\n                    'description': 'No reason selected'\n                });\n\n                sortedDiscontinuedReason.forEach(value => {\n                    if (isEditing) {\n                        if (value.id === this.get('newMedicationFromSearchResult.medicationDiscontinuedReason.id')) {\n                            //Set the default dropdown.\n                            this.set('selectedMedicationDiscontinuedReason', value);\n                            return;\n                        }\n                    } else {\n                        //Skip 'id': 11, 'description': 'No reason selected' since we want this on top.\n                        if (value.id !== 11) {\n                            medicationDiscontinuedReasons.push(value);\n                            return;\n                        }\n                    }\n                });\n\n                if (!isEditing && Ember.isPresent(data.worksheetTokens)) {\n                    this.set('newMedicationAssessmentCardToken', data.worksheetTokens[0].name);\n                }\n\n                this.set('medicationDiscontinuedReasons', sortedDiscontinuedReason);\n\n                _diagnoses.default.getDiagnoses(this.get('patientGuid')).then(diagnoses => {\n                    // Typeahead does not work with EmberObjects\n                    this.set('patientAssociatedDiagnoses', diagnoses);\n\n                    this.set('selectedDiagnosis', this.get('patientAssociatedDiagnoses').findBy('diagnosisGuid', this.get('newMedicationFromSearchResult.diagnosisGuid') || this.get('diagnosisGuid')));\n\n                    this.updateDirtyAfterRender(!isEditing);\n                });\n            });\n        },\n        loadErxProviders: (0, _emberConcurrency.task)(function* () {\n            const providers = yield _erxProvider.default.getErxProviders();\n            this.set('erxProviders', providers);\n        }),\n        _saveAssessment(medication) {\n            let assessment = this.get('newMedicationAssessmentCardModel'),\n                token = this.get('newMedicationAssessmentCardToken'),\n                transcriptGuid = this.get('transcriptGuid'),\n                patientPracticeGuid = this.get('patientGuid');\n\n            if (!assessment && token === 'proliaAesiMedicationHistory') {\n                assessment = _assessment.default.wrap(_proliaAesiMedicationHistory.default, this.get('patientGuid'));\n                this.set('newMedicationAssessmentCardModel', assessment);\n            }\n\n            if (assessment) {\n                assessment.set('medicationGuid', medication.get('medicationGuid'));\n                if (Ember.isPresent(transcriptGuid)) {\n                    assessment.set('transcriptGuid', transcriptGuid);\n                }\n\n                let nextAssessment = assessment.getNextAssessment(assessment.get('isDismissed'));\n                if (nextAssessment) {\n                    this.sendAction('showAssessmentModal', {\n                        token: nextAssessment.token,\n                        source: 'Medication Form',\n                        medicationGuid: medication.get('medicationGuid'),\n                        transcriptGuid: transcriptGuid,\n                        patientPracticeGuid: patientPracticeGuid,\n                        defaults: nextAssessment.defaultSettings\n                    });\n                }\n                return _assessments.default.saveAssessment(assessment);\n            }\n            return Ember.RSVP.resolve();\n        },\n        _checkMedicationStatus(medication) {\n            const ndc = medication.get('ndc');\n\n            if (Ember.isEmpty(ndc)) {\n                // Allow custom medications to be ordered\n                return Ember.RSVP.resolve();\n            }\n            return _medications.default.checkMedicationIsValid(ndc).then(data => {\n                if (!data.isValidMedication) {\n                    this.set('deprecatedMedication', medication);\n                    this.set('deprecatedReason', data.medicationDiscontinuedReason);\n                    this.set('isMedicationDeprecated', true);\n                }\n            });\n        },\n        updateDirtyAfterRender(isDirty) {\n            const scheduledDirtyUpdate = this.get('scheduledDirtyUpdate');\n            const wasDirty = scheduledDirtyUpdate ? scheduledDirtyUpdate.value : this.get('isDirty');\n            if (isDirty !== wasDirty) {\n                if (scheduledDirtyUpdate) {\n                    Ember.run.cancel(scheduledDirtyUpdate.timer);\n                }\n                this.set('scheduledDirtyUpdate', {\n                    value: isDirty,\n                    timer: Ember.run.scheduleOnce('afterRender', () => {\n                        this.set('scheduledDirtyUpdate');\n                        this.sendAction('updateDirty', isDirty);\n                    })\n                });\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/medication-select', ['exports', 'boot/config', 'tyrion/components/single-select'], function (exports, _config, _singleSelect) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _singleSelect.default.extend({\n        includeSearchIcon: true,\n        minChars: 2,\n        openOnFocus: true,\n        optionLabelPath: 'drugName',\n        optionValuePath: 'ndc',\n        placeholder: 'Search for medications',\n        selectType: 'typeahead',\n        sortLabels: false,\n\n        session: Ember.inject.service(),\n\n        currentFacility: Ember.computed('session.facilityGuid', function () {\n            return this.get('store').peekRecord('facility', this.get('session.facilityGuid'));\n        }),\n\n        remoteDataUrl: Ember.computed(function () {\n            return `${_config.default.clinicalBaseURL_v2}Drugs/Search`;\n        }),\n\n        buildUrl() {\n            return `${this.get('remoteDataUrl')}?searchCriteria=${this.get('query')}&locationCode=${this.get('currentFacility.state')}`;\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/medication-sig-typeahead', ['exports', 'tyrion/components/single-select'], function (exports, _singleSelect) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    var lowerCased = function (value) {\n        return (value || '').toLowerCase();\n    };\n\n    exports.default = _singleSelect.default.extend({\n        clearSearchOnSelect: true,\n        includeSearchIcon: true,\n        isShorter: true,\n        openOnFocus: true,\n        optionLabelPath: 'patientDescription',\n        optionValuePath: 'professionalDescription',\n        placeholder: 'Enter shorthand',\n        selectType: 'typeahead',\n\n        matcher(searchText, item) {\n            var query = lowerCased(searchText),\n                patientDescription = lowerCased(item.patientDescription),\n                professionalDescription = lowerCased(item.professionalDescription),\n                searchTerm = lowerCased(item.searchTerm);\n            return patientDescription.indexOf(query) > -1 || professionalDescription.indexOf(query) > -1 || searchTerm.indexOf(query) > -1;\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/medication-typeahead-item', ['exports', 'tyrion/components/multi-source-option'], function (exports, _multiSourceOption) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _multiSourceOption.default.extend({\n        layoutName: 'components/medication-typeahead-item'\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/medication-typeahead', ['exports', 'ember-concurrency', 'tyrion/components/multi-source-select', 'clinical/repositories/medications'], function (exports, _emberConcurrency, _multiSourceSelect, _medications) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _multiSourceSelect.default.extend({\n        classNames: ['medication-typeahead'],\n        // attrs\n        canAddCustom: false,\n        optionLabelPath: 'drugName',\n        optionDescriptionPath: 'drugName',\n        optionValuePath: 'ndc',\n\n        // component overrides\n        optionComponent: 'medication-typeahead-item',\n        prompt: 'Search for medication',\n        isShorter: false,\n        sortLabels: false,\n        includeSearchIcon: true,\n        filterOnSelection: false,\n        canAddCustomItem: false,\n        clearSearchOnFocus: false,\n        clearSearchOnSelect: false,\n        clearSelectOnFocus: false,\n        clearSearchOnBlur: false,\n        setSearchOnSelect: true,\n        minChars: 2,\n        openOnFocus: true,\n        maxSelections: 1,\n        dropdownEnabled: true,\n        includeDropdownFooter: false,\n        hintText: 'Type at least 2 characters to start seeing results',\n        isSendSearchActionOnEnterKeyEnabled: false,\n        useTether: false,\n        includeCancelIcon: false,\n\n        currentFacility: Ember.computed('session.facilityGuid', function () {\n            return this.get('store').peekRecord('facility', this.get('session.facilityGuid'));\n        }),\n\n        remoteDataUrl: Ember.computed('currentFacility', 'query', function () {\n            return `${this.get('config.clinicalBaseURL_v2')}Drugs/Search?locationCode=${this.get('currentFacility.state')}&searchCriteria=`;\n        }),\n\n        onInit: Ember.on('init', Ember.observer('patientGuid', function () {\n            this.get('_loadMedicationLists').perform();\n        })),\n\n        _loadMedicationLists: (0, _emberConcurrency.task)(function* () {\n            const patientGuid = this.get('patientGuid');\n            const tabSources = [];\n            let patientMedications = [];\n            let frequentMedications = [];\n\n            if (Ember.isPresent(patientGuid)) {\n                patientMedications = yield _medications.default.loadMedications(patientGuid).then(data => {\n                    if (Ember.isPresent(data)) {\n                        return data.get('content') || [];\n                    }\n                    return [];\n                });\n            }\n            tabSources.pushObject({\n                category: 'Patient Rx list',\n                noResultsMessage: 'No patient medications recorded',\n                options: patientMedications\n            });\n\n            frequentMedications = yield _medications.default.loadFrequentMedications().then(data => {\n                return data || [];\n            });\n\n            tabSources.pushObject({\n                category: 'Provider Rx list',\n                noResultsMessage: 'No frequent medications recorded',\n                options: frequentMedications\n            });\n            this.set('tabSources', tabSources);\n        }).drop()\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/medications-flyout', ['exports', 'clinical/repositories/medications', 'clinical/models/medication', 'clinical/mixins/with-medications', 'common/mixins/spinner', 'boot/mixins/view-preferences', 'charting/utils/encounter', 'tyrion/mixins/destroyed'], function (exports, _medications, _medication, _withMedications, _spinner, _viewPreferences, _encounter, _destroyed) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_spinner.default, _withMedications.default, _viewPreferences.default, _destroyed.default, {\n        classNames: ['med-flyout-pane', 'flex-grow', 'flex-column'],\n\n        viewPreferencesKey: 'medications-flyout',\n        viewPreferenceProperties: Ember.computed(() => ['currentTab']),\n\n        currentTab: 'frequent-meds',\n        previousMedsSelected: Ember.computed.equal('currentTab', 'previous-meds'),\n        frequentMedsSelected: Ember.computed.equal('currentTab', 'frequent-meds'),\n\n        showSearchInput: false,\n        showSpinner: Ember.computed.alias('isLoading'),\n        patientGuid: '',\n\n        actions: {\n            setCurrentTab(tab) {\n                this.set('currentTab', tab);\n            },\n\n            selectMedication(medicationSelected) {\n                medicationSelected = _medication.default.wrap(medicationSelected.get('content'));\n                const transcriptGuid = this.get('transcriptGuid');\n                const isNewMedication = !medicationSelected.get('medicationGuid');\n                const medications = this.get('medications');\n                let promise;\n\n                if (isNewMedication) {\n                    medicationSelected.set('patientPracticeGuid', this.get('patientGuid'));\n                    medicationSelected.attachToEncounter(transcriptGuid);\n                    promise = _medications.default.saveMedication(medicationSelected);\n                } else {\n                    promise = _medications.default.saveTranscriptMedication(medicationSelected, transcriptGuid);\n                }\n\n                this._withProgress(promise.then(medication => medications.replaceMedication(medication))).catch(error => this.send('saveError', error, 'Failed to save medication'));\n            },\n\n            removeMedication(medicationToRemove) {\n                // Need to get the med since this might be an EncounterMedication\n                medicationToRemove = _medication.default.wrap(medicationToRemove.get('content'));\n                // TODO: dry with medication-list#removeMedication\n                const transcriptGuid = this.get('transcriptGuid');\n                const medications = this.get('medications');\n                let deletePromise;\n\n                if (medicationToRemove.get('transcriptMedications').length === 1) {\n                    deletePromise = _medications.default.deleteMedication(medicationToRemove, transcriptGuid).then(() => medications.removeMedication(medicationToRemove));\n                } else {\n                    deletePromise = _medications.default.deleteTranscriptMedication(medicationToRemove, transcriptGuid).then(updatedMedication => medications.replaceMedication(updatedMedication));\n                }\n\n                this._withProgress(deletePromise).catch(error => this.send('saveError', error, 'Failed to remove medication'));\n            },\n            saveError(error, message) {\n                const action = _encounter.default.mapSaveErrorToAction(error, 409);\n                if (action) {\n                    this._sendActionUnlessDestroyed(action);\n                } else {\n                    toastr.error(message);\n                }\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/medications-grid', ['exports', 'boot/mixins/view-preferences', 'erx/mixins/with-erx-order-drafts', 'clinical/mixins/with-medications'], function (exports, _viewPreferences, _withErxOrderDrafts, _withMedications) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    var DEFAULT_MEDICATION_COLUMNS = [{\n        id: 1,\n        label: 'Medication Comments',\n        flagName: 'showMedicationComments'\n    }, {\n        id: 2,\n        label: 'Encounter Comments',\n        flagName: 'showEncounterComments'\n    }, {\n        id: 3,\n        label: 'Diagnoses',\n        flagName: 'showDiagnosis'\n    }, {\n        id: 4,\n        label: 'Prescriptions',\n        flagName: 'showPrescriptions'\n    }];\n\n    exports.default = Ember.Component.extend(_viewPreferences.default, _withMedications.default, _withErxOrderDrafts.default, {\n        // TODO: Consider deriving this from the component's name.\n        viewPreferencesKey: 'medications-grid',\n        viewPreferenceProperties: Ember.computed(() => ['activeGridPreferences', 'historicalGridPreferences', 'medicationColumnItemsSelection']),\n\n        analytics: Ember.inject.service(),\n\n        actions: {\n            openAssessment(program) {\n                this.attrs.openAssessment(program);\n            },\n            selectPrintOption(value) {\n                if (!value) {\n                    return;\n                }\n                switch (value) {\n                    case 'active':\n                        this.set('showActiveMeds', true);\n                        this.set('showHistoricalMeds', false);\n                        break;\n                    case 'historical':\n                        this.set('showHistoricalMeds', true);\n                        this.set('showActiveMeds', false);\n                        break;\n                    case 'all':\n                        this.set('showActiveMeds', true);\n                        this.set('showHistoricalMeds', true);\n                        break;\n                }\n                this.set('isPrintVisible', true);\n            }\n        },\n\n        activeGridPreferences: Ember.computed(function () {\n            return {\n                sortProperty: 'fullGenericName',\n                sortAscending: true\n            };\n        }),\n        historicalGridPreferences: Ember.computed(function () {\n            return {\n                sortProperty: 'fullGenericName',\n                sortAscending: true\n            };\n        }),\n\n        showOptions: Ember.computed(function () {\n            return DEFAULT_MEDICATION_COLUMNS;\n        }),\n        medicationColumnItemsSelection: Ember.computed(function () {\n            return DEFAULT_MEDICATION_COLUMNS.filterBy('flagName', 'showPrescriptions');\n        }),\n        onMedicationColumnItemsSelection: Ember.observer('medicationColumnItemsSelection', function () {\n            var _this = this;\n            this.get('showOptions').forEach(function (item) {\n                var medicationColumnItemsSelection = _this.get('medicationColumnItemsSelection') || [],\n                    isSelected = !!medicationColumnItemsSelection.findBy('id', item.id);\n                _this.set(item.flagName, isSelected);\n            });\n        }),\n        showMedicationComments: false,\n        showEncounterComments: false,\n        showDiagnosis: false,\n        showPrescriptions: true,\n        showHistoricalMeds: true,\n        showActiveMeds: true,\n\n        patientGuid: null,\n        historicalMedicationsVisible: false,\n\n        printSortProperty: Ember.computed.alias('activeGridPreferences.sortProperty'),\n        printSortAscending: Ember.computed('activeGridPreferences.sortAscending', function () {\n            return this.get('activeGridPreferences.sortAscending') !== false;\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/medications-plan-list-read-only', ['exports', 'clinical/mixins/with-medications'], function (exports, _withMedications) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_withMedications.default, {\n        // attrs:\n        isSigned: undefined,\n        chartNoteMedications: undefined,\n        oneline: true,\n        firstCommentOneLine: true,\n        // NOTE: this flag is meant for the consumer to set it at the component level. It won't override the feature bit configuration.\n        // Today is overriden by print to make sure we don't print those warnings there.\n        showWarningOnDuplicateMedications: true,\n\n        medicationsSortProperty: Ember.computed(() => ['fullGenericName:asc']),\n        sortedMedications: Ember.computed.sort('encounterMedications.inEncounter', 'medicationsSortProperty'),\n\n        displayChartNoteMedications: Ember.computed('isSigned', function () {\n            // for sign chartnotes we always show meds from the ChartNote\n            return this.get('isSigned');\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/medications-plan-list', ['exports', 'clinical/repositories/medications', 'clinical/mixins/with-medications', 'common/mixins/spinner', 'charting/utils/encounter', 'tyrion/mixins/destroyed'], function (exports, _medications, _withMedications, _spinner, _encounter, _destroyed) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_spinner.default, _withMedications.default, _destroyed.default, {\n        patientGuid: '',\n        transcriptGuid: '',\n        classNames: ['medications-plan-list'],\n        classNameBindings: ['hasMedications:with-meds'],\n        hasMedications: Ember.computed.notEmpty('encounterMedications.inEncounter'),\n\n        medicationsSortProperty: Ember.computed(() => ['drugName:asc']),\n        sortedMedications: Ember.computed.sort('encounterMedications.inEncounter', 'medicationsSortProperty'),\n\n        actions: {\n            removeMedication(item) {\n                const medicationToRemove = item.get('content');\n                const transcriptGuid = this.get('transcriptGuid');\n                const medications = this.get('medications');\n                let deletePromise;\n\n                if (medicationToRemove.get('transcriptMedications').length === 1) {\n                    deletePromise = _medications.default.deleteMedication(medicationToRemove, transcriptGuid).then(() => medications.removeMedication(medicationToRemove));\n                } else {\n                    deletePromise = _medications.default.deleteTranscriptMedication(medicationToRemove, transcriptGuid).then(updatedMedication => medications.replaceMedication(updatedMedication));\n                }\n\n                this._withProgress(deletePromise).catch(error => {\n                    const action = _encounter.default.mapSaveErrorToAction(error, 409);\n                    if (action) {\n                        this._sendActionUnlessDestroyed(action);\n                    } else {\n                        toastr.error('Failed to remove medication');\n                    }\n                });\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/medications-summary-list-item', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        attributeBindings: ['dataElement:data-element'],\n        classNameBindings: ['isSelected:is-active'],\n        tagName: 'li',\n\n        dataElement: Ember.computed('medication.medicationGuid', function () {\n            return `medication-summary-list-item-${this.get('medication.medicationGuid')}`;\n        }),\n\n        isSelected: Ember.computed('selectedMedicationGuid', 'medication.medicationGuid', function () {\n            return this.get('selectedMedicationGuid') === this.get('medication.medicationGuid');\n        }),\n        showProliaModalLink: Ember.computed('medication.hasProliaPermanentPlacelink', 'isEntitledToEditMedications', function () {\n            return this.get('medication.hasProliaPermanentPlacelink') && this.get('isEntitledToEditMedications');\n        }),\n        click() {\n            if (this.get('medication')) {\n                this.attrs.editMedicationOnSummary(this.get('medication'));\n            }\n        },\n        actions: {\n            openAssessment(assessmentName) {\n                if (Ember.isPresent(assessmentName)) {\n                    this.attrs.openAssessment(assessmentName);\n                }\n            },\n            stopBubble() {\n                return false;\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/medications-summary-list', ['exports', 'erx/mixins/with-erx-order-drafts', 'clinical/mixins/with-medications'], function (exports, _withErxOrderDrafts, _withMedications) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_withMedications.default, _withErxOrderDrafts.default, {\n        attributeBindings: ['testElement:data-qatest'],\n        classNames: ['medications'],\n\n        routing: Ember.inject.service('pf-routing'),\n\n        patient: null,\n        testElement: 'dashboardpanel',\n        showMedicationsHistorical: true,\n        showMedicationsActive: true,\n        patientGuid: Ember.computed.alias('patient.patientPracticeGuid'),\n        activeMedicationsSortProperty: Ember.computed(() => ['fullGenericName', 'medicationGuid']),\n        sortedActiveMedications: Ember.computed.sort('activePatientMedications', 'activeMedicationsSortProperty'),\n        historicalMedicationsSortProperty: Ember.computed(() => ['fullGenericName', 'medicationGuid']),\n        sortedHistoricalMedications: Ember.computed.sort('historicalPatientMedications', 'historicalMedicationsSortProperty'),\n\n        actions: {\n            openAssessment(info) {\n                let modalInfo;\n\n                switch (info) {\n                    case 'proliaAesiModal':\n                        modalInfo = {\n                            token: { name: 'proliaAesiModal' },\n                            source: 'Prolia Permanent Link',\n                            patientPracticeGuid: this.get('patientGuid'),\n                            defaults: [{ key: 'proliaMedicationHistory', property: 'value', value: 'PreviousHistory' }]\n                        };\n                }\n                this.attrs.sendControllerAction('showAssessmentModal', modalInfo);\n            },\n            editMedicationOnSummary(medication) {\n                if (medication) {\n                    this.get('routing').transitionToRoute('summary.medication', medication.get('patientPracticeGuid'), medication.get('medicationGuid'));\n                }\n            },\n            recordMedicationOnSummary() {\n                this.get('routing').transitionToRoute('summary.medication', 'new');\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/medline-plus-link', ['exports', 'boot/config', 'boot/util/pf-server'], function (exports, _config, _pfServer) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        name: null,\n        useIcon: false,\n        patientPracticeGuid: null,\n\n        click() {\n            var url = [_config.default.labsBaseURL, '/Patients/', this.get('patientPracticeGuid'), '/PatientEducation/Audit?searchString=', encodeURIComponent(this.get('name'))].join('');\n\n            if (this.get('patientPracticeGuid')) {\n                _pfServer.default.promise(url, 'POST');\n            }\n        },\n\n        medlinePlusUrl: Ember.computed('name', function () {\n            var link = '',\n                name = this.get('name');\n            if (name) {\n                link = 'http://vsearch.nlm.nih.gov/vivisimo/cgi-bin/query-meta?v%3Aproject=medlineplus&query=' + encodeURIComponent(name);\n            }\n            return link;\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/monograph-parser', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        ignoreTitle: true,\n        document: null,\n        getReferenceMarkUp(ref) {\n            return ref.attributes['id'].value;\n        },\n        getPubMedId(refId) {\n            return $($.parseXML(this.get('xmlData'))).find(`reference[id=${refId}]`).find('pubmedid').text();\n        },\n        getParagraph(descriptionXML) {\n            var ignoreNodeName = { '#comment': true },\n                _this = this,\n                paragraph = [],\n                z,\n                citeId,\n                pubMedId,\n                value;\n\n            for (z = 0; z < descriptionXML.childNodes.length; z++) {\n                //Only do node names that are not ignored\n                if (!ignoreNodeName[descriptionXML.childNodes[z].nodeName]) {\n                    if (descriptionXML.childNodes[z].tagName === 'referenceref') {\n                        citeId = _this.getReferenceMarkUp(descriptionXML.childNodes[z]);\n                        pubMedId = _this.getPubMedId(citeId);\n                        paragraph.push({\n                            isReference: true,\n                            value: citeId,\n                            citeUrl: pubMedId ? 'http://www.ncbi.nlm.nih.gov/pubmed/' + pubMedId : undefined\n                        });\n                    } else {\n                        value = descriptionXML.childNodes[z].nodeValue.replace(/(\\r\\n|\\n|\\r)/gm, '').replace(/\\s*/, '');\n                        if (!Ember.isEmpty(value)) {\n                            paragraph.push({ isReference: false, value: value });\n                        }\n                    }\n                }\n            }\n\n            return paragraph;\n        },\n        onXmlData: Ember.on('init', Ember.observer('xmlData', function () {\n            if (Ember.isEmpty(this.get('xmlData'))) {\n                return;\n            }\n\n            this.set('document', [{ title: '', description: '' }]);\n\n            const xml = $.parseXML(this.get('xmlData'));\n            const paragraphs = $(xml).find('monograph');\n            const includeList = [];\n            const citations = [];\n            let pubMedId;\n\n            $(xml).find('reference').each((index, item) => {\n                pubMedId = $(item).find('pubmedid').text();\n                citations.push({\n                    refId: item.attributes['id'].value,\n                    citation: $(item).find('citation').text(),\n                    pubMedId,\n                    citeUrl: pubMedId ? `http://www.ncbi.nlm.nih.gov/pubmed/${pubMedId}` : undefined\n                });\n            });\n            paragraphs.children().each((index, item) => {\n                const description = [];\n                const ignoreList = {\n                    alert: true,\n                    references: true,\n                    title: this.get('ignoreTitle'),\n                    managementlevels: true,\n                    documentationlevels: true,\n                    severitylevels: true,\n                    onsets: true,\n                    publishedinteractionlists: true,\n                    labeledavoidancelevels: true\n                };\n                let x;\n\n                // Make sure they are not in the ignore list\n                if (!ignoreList[item.tagName]) {\n                    for (x = 0; x < $(item).find('para').length; x++) {\n                        description.push({ paragraphs: this.getParagraph($(item).find('para')[x]) });\n                    }\n\n                    includeList.push({\n                        title: item.tagName.capitalize(),\n                        description\n                    });\n                }\n            });\n\n            this.set('document', {\n                paragraphs: includeList,\n                citations\n            });\n        })),\n        actions: {\n            scrollToCitations() {\n                var scroller = $('.detail-pane-body-wrapper'),\n                    elementOffset = this.$('.citations').offset();\n                if (!elementOffset) {\n                    return;\n                }\n                scroller.animate({\n                    scrollTop: elementOffset.top + scroller.scrollTop() - scroller.offset().top\n                }, 200);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/new-medication-assessment-card', ['exports', 'clinical/models/assessments/prolia-aesi-medication-history', 'clinical/models/assessment'], function (exports, _proliaAesiMedicationHistory, _assessment) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        classNames: ['new-medication-assessment-card', 'panel'],\n        analytics: Ember.inject.service(),\n        layoutName: Ember.computed('token', {\n            get() {\n                const token = this.get('token');\n                if (Ember.isEmpty(token)) {\n                    return '';\n                }\n                return 'assessments/' + token.dasherize();\n            }\n        }),\n        model: Ember.computed('token', {\n            get() {\n                const patientPracticeGuid = this.get('patientPracticeGuid');\n                if (this.get('token') === 'proliaAesiMedicationHistory') {\n                    return _assessment.default.wrap(_proliaAesiMedicationHistory.default, patientPracticeGuid);\n                }\n            }\n        }),\n        trackingType: Ember.computed('token', {\n            get() {\n                if (this.get('token') === 'proliaAesiMedicationHistory') {\n                    return 'Prolia Adverse Events';\n                }\n            }\n        }),\n        _recordWithStatus(status) {\n            const model = this.get('model');\n            model.set('status', status);\n            this.sendAction('recorded', model);\n        },\n        _trackShown: Ember.on('didInsertElement', function () {\n            this._track('Medication Card Assessment Displayed');\n        }),\n        _track(text, details) {\n            let trackingType = this.get('trackingType');\n            details = details || {};\n            if (Ember.isPresent(trackingType)) {\n                this.get('analytics').track(text, Ember.merge(details, {\n                    'Assessment Type': trackingType,\n                    'Patient Practice Guid': this.get('patientPracticeGuid')\n                }));\n            }\n        },\n        actions: {\n            dismiss() {\n                this._recordWithStatus('Dismissed');\n                this._track('Medication Card Assessment Dismissed');\n            },\n            recorded() {\n                let details = {};\n                if (this.get('token') === 'proliaAesiMedicationHistory') {\n                    details['Assessment Value'] = this.get('model.proliaMedicationHistory.value');\n                }\n                this._recordWithStatus('Completed');\n                this._track('Medication Card Assessment Recorded', details);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/osteoporosis-dexa-modal', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        routing: Ember.inject.service('pf-routing'),\n        analytics: Ember.inject.service(),\n        isVisible: false,\n        isOrderVisible: true,\n        _track(details) {\n            this.get('analytics').track(details);\n        },\n        actions: {\n            goToAddImagingOrder() {\n                this._track('Order DXA Clicked');\n                this.get('routing').transitionToRoute('orders.new', 'imaging');\n                this.set('isVisible', false);\n            },\n            goToAddImagingResult() {\n                this._track('Enter DXA Result Clicked');\n                // Disabling the task given it wasn't included in the MLR\n                this.get('routing').transitionToRoute('results.new', 'imaging', { queryParams: { showOsteoporosisDexaTask: false } });\n                this.set('isVisible', false);\n            },\n            closeOsteoporosisModal() {\n                this.set('isVisible', false);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/patient-alert', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    var PatientAlertComponent = Ember.Component.extend({\n        /**\n         * An patient item that's the model for this component\n         * @type CareProgramPatientNotification\n         */\n        alert: null,\n\n        isResponded: Ember.computed('alert.status', function () {\n            var status = this.get('alert.status');\n            return status && status === 'Responded';\n        }),\n\n        resolveOptions: null,\n\n        canDismissOnly: Ember.computed('resolveOptions.[]', function () {\n            return this.get('resolveOptions.length') === 1 && this.get('resolveOptions')[0].value === 'Dismiss';\n        }),\n\n        defaultAction: Ember.computed(function () {\n            // If there is only dismiss, then defaultAction is dismiss. Otherwise, pick the first non-dismiss action\n            if (this.get('canDismissOnly')) {\n                return this.get('resolveOptions')[0];\n            } else {\n                var nonDismissOptions = this.get('resolveOptions').rejectBy('value', 'Dismiss');\n                if (nonDismissOptions.get('length') > 0) {\n                    return nonDismissOptions[0];\n                }\n            }\n        }),\n\n        _loadOptions: Ember.observer('alert.responseOptions.[]', Ember.on('init', function () {\n            var options = [];\n\n            // Add the other options\n            this.get('alert.responseOptions').forEach(function (option) {\n                var newOption = this._createNewResolveOption(option.get('text'), option.get('value'));\n                options.addObject(newOption);\n            }.bind(this));\n\n            this.set('resolveOptions', options.compact().sortBy('text'));\n        })),\n\n        _createNewResolveOption(text, value) {\n            if (text && value) {\n                return Ember.Object.create({\n                    text: text,\n                    value: value\n                });\n            }\n        },\n\n        // UF-349 Hack to get drop down menu button group to open. However, the button group won't\n        // go away until user clicks on the chevron again or selects a submit\n        didInsertElement() {\n            $('.dropdown-toggle').dropdown();\n            this._hideActionMenu();\n        },\n\n        _hideActionMenu() {\n            var btnGroup = this.$('.patient-alert-btn-group');\n            if (btnGroup && btnGroup.hasClass('open')) {\n                btnGroup.removeClass('open');\n            }\n        },\n        // End of UF-349 hack\n\n        showShortDescription: false,\n\n        showMoreLessDescriptionLinkText: Ember.computed('showShortDescription', function () {\n            if (this.get('alert.hasBodyOverFlow')) {\n                return this.get('showShortDescription') ? 'show more' : 'show less';\n            }\n        }),\n\n        alertDescription: Ember.computed('showShortDescription', function () {\n            return this.get('showShortDescription') ? this.get('alert.shortBody') + '...' : this.get('alert.body');\n        }),\n\n        _initShowShortDescription: Ember.on('init', Ember.observer('alert.shortBody', function () {\n            this.set('showShortDescription', !Ember.isEmpty(this.get('alert.shortBody')));\n        })),\n\n        actions: {\n            submitResponse(response) {\n                Ember.Logger.debug('submit alert response', response);\n                this.sendAction('respond', this.get('alert'), response);\n                this._hideActionMenu();\n                return false;\n            },\n\n            toggleShowShortDescription() {\n                this.toggleProperty('showShortDescription');\n                return false;\n            }\n        }\n    });\n\n    exports.default = PatientAlertComponent;\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/patient-alerts-popover-modal', ['exports', 'common/mixins/spinner', 'boot/models/session'], function (exports, _spinner, _session) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    var PatientAlertsPopoverModalComponent = Ember.Component.extend(_spinner.default, {\n        classNames: ['patient-alerts-component'],\n\n        showSpinner: Ember.computed.alias('isLoading'),\n\n        contentElement: '.patient-alerts-body',\n\n        isComponentEnabled: Ember.computed.notEmpty('patientGuid'),\n\n        isPatientAlertsDisabledByProviderPreference: false,\n\n        isPatientAlertsAllowedForUser: Ember.computed(function () {\n            return !_session.default.get('isStaff');\n        }),\n\n        numAlerts: Ember.computed.alias('alerts.length'),\n\n        hasUnresolvedAlerts: Ember.computed.gt('numUnresolvedAlerts', 0),\n\n        numUnresolvedAlerts: Ember.computed('alerts.@each.status', function () {\n            var alerts = this.get('alerts');\n            if (alerts) {\n                return alerts.filterBy('status', 'Submitted').get('length');\n            } else {\n                return 0;\n            }\n        }),\n\n        patientGuid: null,\n\n        alerts: null,\n\n        store: null,\n\n        showAlertsPopover: false,\n\n        hasFetchAlertErrors: false,\n\n        isLoading: false,\n\n        height: 500,\n\n        setPopoverHeight: Ember.on('didInsertElement', Ember.observer('showAlertsPopover', function () {\n            Ember.run.scheduleOnce('afterRender', () => this.set('height', Math.min(500, $(window).height() - 292)));\n        })),\n        init() {\n            this._super();\n            this.set('alerts', []);\n        },\n\n        actions: {\n            togglePopoverModal() {\n                this.toggleProperty('showAlertsPopover');\n                return false;\n            },\n\n            dismissAllAlerts() {\n                var unresolvedAlerts = this.get('alerts').filterBy('status', 'Submitted');\n                unresolvedAlerts.forEach(function (alert) {\n                    // If dismiss is an option then do dismiss\n                    if (alert.get('responseOptions').getEach('value').includes('Dismiss')) {\n                        this.send('resolveAlert', alert, 'Dismiss');\n                    } else {\n                        this.get('store').unloadRecord(alert);\n                    }\n                }.bind(this));\n\n                return false;\n            },\n\n            refreshAlerts() {\n                this._loadCareProgramAlerts();\n                return false;\n            }\n        }\n    });\n\n    exports.default = PatientAlertsPopoverModalComponent;\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/patient-education-link', ['exports', 'boot/config', 'boot/util/pf-server', 'ember-concurrency'], function (exports, _config, _pfServer, _emberConcurrency) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        // The code used for the query possible values ndc, icd9, loinc\n        codeSet: 'ndc',\n        code: '',\n        searchString: '',\n        useIcon: false,\n        patientPracticeGuid: null,\n        patientSpecificEducationUrl: '',\n\n        click() {\n            const patientSpecificEducationUrl = this.get('patientSpecificEducationUrl');\n            this.get('openPatientSpecificEducationLink').perform(patientSpecificEducationUrl);\n        },\n\n        openPatientSpecificEducationLink: (0, _emberConcurrency.task)(function* (url) {\n            let patientSpecificEducationUrl = url;\n            if (Ember.isEmpty(patientSpecificEducationUrl)) {\n                patientSpecificEducationUrl = yield this.get('generatePatientSpecificEducationLink').perform();\n            }\n            window.open(patientSpecificEducationUrl, '_blank');\n            this.get('auditPatientSpecificEducationLink').perform();\n        }).drop(),\n\n        patientEducationUrl: Ember.computed('config', 'codeSet', 'code', 'searchString', function () {\n            let medlinePlusUrl = `${_config.default.labsBaseURL}/PatientEducation`;\n            const codeSet = this.get('codeSet');\n            const searchString = this.get('searchString');\n            const code = this.get('code');\n\n            if (codeSet) {\n                medlinePlusUrl += `/${encodeURIComponent(codeSet)}`;\n            }\n\n            if (code) {\n                medlinePlusUrl += `/${encodeURIComponent(code.replace(/[\\/:\\+*]/g, ''))}`;\n            }\n\n            if (searchString) {\n                medlinePlusUrl += `?searchString=${encodeURIComponent(searchString.replace(/[\\/:\\+.*]/g, ''))}`;\n            }\n\n            return medlinePlusUrl;\n        }),\n\n        generatePatientSpecificEducationLink: (0, _emberConcurrency.task)(function* () {\n            const patientPracticeGuid = this.get('patientPracticeGuid');\n            if (Ember.isEmpty(patientPracticeGuid)) {\n                return Ember.RSVP.Promise.resolve();\n            }\n            const requestUrl = `${_config.default.clinicalBaseURL}patientEducation/${this.get('patientPracticeGuid')}`;\n            let patient = yield this.store.peekRecord('patient', this.get('patientPracticeGuid'));\n            if (Ember.isEmpty(patient)) {\n                patient = yield this.store.findRecord('patient', this.get('patientPracticeGuid'));\n            }\n            const requestBody = {\n                patientDateOfBirth: patient.get('birthDate'),\n                patientGender: patient.get('gender'),\n                code: this.get('code'),\n                codeSystem: this.get('codeSet'),\n                description: this.get('searchString')\n            };\n\n            // Construct patient specific education link\n            // Default to old patient education url if error\n            const linkBaseUrl = yield this.store.query('practice-preference', { keys: ['Infobutton.BaseUrl'] }).then(preference => {\n                return preference.get('firstObject.value') || _config.default.infobuttonDefaultBaseUrl;\n            });\n            const linkParams = yield _pfServer.default.promise(requestUrl, 'POST', requestBody).catch(() => {\n                return null;\n            });\n            let linkToFollow = this.get('patientEducationUrl');\n            if (Ember.isPresent(linkParams) && Ember.isPresent(linkParams.infobutton) && Ember.isPresent(linkBaseUrl)) {\n                const linkQueryString = linkParams.infobutton.filterBy('paramName').map(param => {\n                    return `${param.paramName}=${param.paramValue}`;\n                }).join('&');\n                linkToFollow = `${linkBaseUrl}?${linkQueryString}`.replace('??', '?');\n            }\n            return this.set('patientSpecificEducationUrl', linkToFollow);\n        }).drop(),\n\n        auditPatientSpecificEducationLink: (0, _emberConcurrency.task)(function* () {\n            const auditUrl = `${_config.default.clinicalBaseURL}patientEducation/${this.get('patientPracticeGuid')}/audit`;\n            const auditBody = {\n                code: this.get('code'),\n                codeSystem: this.get('codeSet'),\n                description: this.get('searchString')\n            };\n            yield _pfServer.default.promise(auditUrl, 'POST', auditBody);\n        }).drop()\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/patient-email-popover', ['exports', 'clinical/repositories/patient'], function (exports, _patient) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    var PatientEmailPopover = Ember.Component.extend({\n        classNames: ['patient-email-popover'],\n        layoutName: 'components/patient-email-popover',\n        patientInfo: null,\n        isPopoverVisible: false,\n        errorMessage: null,\n        patientEmailInfo: Ember.Object.create(),\n        patientHasEmail: Ember.computed.not('patientInfo.isUserOfEmail'),\n        emailAddress: null,\n        isEmailInputDisabled: false,\n        allowDuplicatePatientIdentifier: false,\n        checkEmailInput: Ember.observer('patientEmailAddress', function (value) {\n            if (value.patientEmailAddress.length > 0) {\n                this.set('patientInfo.isUserOfEmail', false);\n            } else {\n                this.set('patientInfo.isUserOfEmail', true);\n            }\n        }),\n        savePatient() {\n            var _this = this,\n                patientGuid = _this.get('patientInfo.guid'),\n                patientEmailAddress = _this.get('patientEmailAddress'),\n                allowDuplicatePatientIdentifier = _this.get('allowDuplicatePatientIdentifier');\n\n            this.get('patientEmailInfo').setProperties({\n                isUserOfEmail: !_this.get('patientInfo.isUserOfEmail'),\n                emailAddress: patientEmailAddress,\n                allowDuplicatePatientIdentifier: allowDuplicatePatientIdentifier\n            });\n\n            _patient.default.updatePatientEmail(_this.get('patientEmailInfo'), patientGuid).then(function () {\n                _this.onPatientEmailUpdateSuccess();\n            }).catch(function (err) {\n                if (err.status === 409 && _this.get('allowDuplicatePatientIdentifier') === false) {\n                    if (window.confirm('Duplicate Patient Record Number. Save anyway?')) {\n                        _this.set('allowDuplicatePatientIdentifier', true);\n                        _this.savePatient();\n                    } else {\n                        toastr.error('Failed to update email address');\n                    }\n                } else if (err.status === 400 && _this.get('patientInfo.isUserOfEmail')) {\n                    _this.set('errorMessage', 'Please enter a valid email.');\n                    _this.set('errorClass', 'error');\n                } else if (err.status === 200) {\n                    _this.onPatientEmailUpdateSuccess();\n                } else {\n                    toastr.error('Failed to update email address');\n                }\n            });\n        },\n        onPatientEmailUpdateSuccess() {\n            var patientEmailAddress = this.get('patientEmailAddress');\n            this.set('isPopoverVisible', false);\n            this.set('patientInfo.emailAddress', patientEmailAddress);\n            toastr.success('Email updated successfully.');\n        },\n        clearEmailFieldErrors: Ember.observer('patientEmailAddress', 'patientInfo.isUserOfEmail', function () {\n            this.set('errorMessage', null);\n            this.set('errorClass', null);\n        }),\n        isValidEmail(s) {\n            var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            return re.test(s);\n        },\n        actions: {\n            toggleEmailPopover() {\n                var isPopoverVisible = this.get('isPopoverVisible');\n                if (isPopoverVisible) {\n                    this.set('isPopoverVisible', false);\n                } else {\n                    this.set('isPopoverVisible', true);\n                    this.set('errorMessage', null);\n                    this.set('errorClass', null);\n                    this.set('patientInfo.isUserOfEmail', true);\n                    this.set('patientEmailAddress', '');\n                }\n            },\n            onSavePatient() {\n                var email = this.get('patientEmailAddress');\n\n                if (this.get('patientInfo.isUserOfEmail') === true) {\n                    this.set('isPopoverVisible', false);\n                }\n                if (this.isValidEmail(email) && this.get('patientHasEmail')) {\n                    //If validEmail Address, save patient.\n                    this.savePatient();\n                } else {\n                    this.set('errorMessage', 'Please enter a valid email.');\n                    this.set('errorClass', 'error');\n                }\n            },\n            onCheckboxSelect() {\n                // Tyrion's Popover-modal component prevents default\n                // on all child elements this is a temporary workaround\n                // to get the checkbox working.\n                var checkboxElement = $('#patientEmailHasAddress');\n                if (!this.get('patientInfo.isUserOfEmail')) {\n                    this.set('isEmailInputDisabled', false);\n                    this.set('patientInfo.isUserOfEmail', true);\n                    checkboxElement.removeAttr('checked');\n                } else {\n                    this.set('isEmailInputDisabled', true);\n                    this.set('patientInfo.isUserOfEmail', false);\n                    checkboxElement.attr('checked', 'checked');\n                }\n            }\n        }\n    });\n\n    exports.default = PatientEmailPopover;\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/patient-header-insurance-info', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        classNames: ['patient-header-insurance-info'],\n        isPopoverVisible: false,\n        targetSelector: Ember.computed('elementId', function () {\n            return '#' + this.get('elementId');\n        }),\n        click(event) {\n            var tagName = event.target.tagName;\n            // Only close when clicking on the original target, the link to profile, or the close button\n            if ($(event.target).is('.ellipses') || tagName === 'A' || tagName === 'BUTTON') {\n                this.toggleProperty('isPopoverVisible');\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/patient-header-phone-column', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        classNames: ['patient-info-column', 'with-right-border'],\n        attributeBindings: ['data-element']\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/patient-header', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        authorization: Ember.inject.service(),\n        classNames: ['patient-header-component'],\n        classNameBindings: ['isExpanded', 'isActive::inactive-patient'],\n        patientImageExists: true,\n        isExpanded: false,\n        isPhrStatusVisible: true,\n        isEntitledToEditHeader: Ember.computed('authorization.entitledFeatures.[]', function () {\n            return this.get('authorization').isEntitledFor('Chart.Header.Edit');\n        }),\n        gender: Ember.computed('patient.genderString', function () {\n            var gender = this.get('patient.genderString');\n            return _.isString(gender) ? gender.charAt(0).toUpperCase() : '';\n        }),\n        isActive: Ember.computed('patient.isActive', function () {\n            return !this.get('patient') || this.get('patient.isActive');\n        }),\n        showPhrStatus: Ember.observer('patient', function () {\n            this.set('isPhrStatusVisible', true);\n        }),\n        actions: {\n            toggleIsExpanded() {\n                this.toggleProperty('isExpanded');\n            },\n            addPhoto() {\n                if (this.get('isEntitledToEditHeader')) {\n                    this.sendAction('addPhoto');\n                }\n            },\n            openPhrEnrollment() {\n                this.sendAction('openPhrEnrollment');\n            },\n            hidePhrStatus() {\n                this.set('isPhrStatusVisible', false);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/patient-health-concern-note', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        classNames: 'patient-health-concern-note',\n        isAllowedToEditHealthConcerns: true,\n        isEditing: false,\n        textAreaValue: Ember.computed('healthConcernNote', function () {\n            if (Ember.isPresent(this.get('healthConcernNote.healthConcernNote'))) {\n                return this.get('healthConcernNote.healthConcernNote');\n            }\n            return '';\n        }),\n        actions: {\n            saveNote() {\n                this.attrs.saveNote(this.get('textAreaValue'));\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/patient-health-concerns-list-section', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        routing: Ember.inject.service('pf-routing'),\n        classNames: ['list', 'list--hover', 'list--selectable'],\n        tagName: 'ul',\n        actions: {\n            edit(healthConcern) {\n                const route = this.get('healthConcernRoute');\n                if (route === 'summary.health-concern') {\n                    this.get('routing').transitionToRoute(route, healthConcern.get('patientPracticeGuid'), healthConcern);\n                } else {\n                    this.get('routing').transitionToRoute(route, healthConcern);\n                }\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/patient-health-concerns-list', ['exports', 'ember-concurrency', 'clinical/repositories/diagnoses', 'clinical/mixins/with-health-concerns', 'charting/mixins/with-patient-print-title'], function (exports, _emberConcurrency, _diagnoses, _withHealthConcerns, _withPatientPrintTitle) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_withHealthConcerns.default, _withPatientPrintTitle.default, {\n        patientService: Ember.inject.service('patient'),\n        authorization: Ember.inject.service(),\n        routing: Ember.inject.service('pf-routing'),\n\n        classNames: ['patient-health-concerns-list'],\n        useIcons: Ember.computed('routing.currentRouteName', {\n            get() {\n                return this.get('routing.currentRouteName').indexOf('encounter') === -1;\n            },\n            set(key, value) {\n                return value;\n            }\n        }),\n        isEditingNote: false,\n        noKnownHealthConcerns: false,\n        showInactiveHealthConcerns: false,\n        healthConcerns: null,\n        patientSummary: Ember.computed.alias('patient'),\n        patientPracticeGuid: Ember.computed.alias('patient.patientPracticeGuid'),\n        displayName: 'Health concerns',\n        printOptions: Ember.computed(() => [{ value: 'all', label: 'All health concerns' }, { value: 'active', label: 'Active health concerns' }, { value: 'inactive', label: 'Inactive health concerns' }]),\n        isAllowedToEditHealthConcerns: Ember.computed('authorization.entitledFeatures.[]', function () {\n            return this.get('authorization').isEntitledFor('Chart.Encounter.Edit');\n        }),\n        isNotAllowedToEditHealthConcerns: Ember.computed.not('isAllowedToEditHealthConcerns'),\n        isLoadingOrError: Ember.computed.or('loadHealthConcerns.isRunning', 'loadHealthConcerns.last.isError'),\n        loadingOrErrorText: Ember.computed('loadHealthConcerns.isRunning', 'loadHealthConcerns.last.isError', function () {\n            if (this.get('loadHealthConcerns.isRunning')) {\n                return 'Loading patient health concerns...';\n            }\n            if (this.get('loadHealthConcerns.last.isError')) {\n                return 'Failed to load health concerns. Try again later.';\n            }\n            return null;\n        }),\n        toggleInactiveText: Ember.computed('showInactiveHealthConcerns', 'inactiveHealthConcerns.[]', function () {\n            if (this.get('showInactiveHealthConcerns')) {\n                return 'Hide inactive';\n            }\n            return `Show inactive (${this.get('inactiveHealthConcerns.length')})`;\n        }),\n        hideAddNoteButton: Ember.computed.or('isLoadingOrError', 'isEditingNote'),\n        addHealthConcernButtonText: Ember.computed('useIcons', function () {\n            if (this.get('useIcons')) {\n                return null;\n            }\n            return 'Add';\n        }),\n        addHealthConcernNoteButtonText: Ember.computed('useIcons', 'healthConcernNote', function () {\n            if (this.get('useIcons')) {\n                return null;\n            }\n            return this.get('healthConcernNote') ? 'Edit note' : 'Note';\n        }),\n        healthConcernRoute: Ember.computed('useIcons', function () {\n            return this.get('useIcons') ? 'summary.health-concern' : 'encounter.health-concern';\n        }),\n        addHealthConcernClass: Ember.computed('useIcons', 'isLoadingOrError', function () {\n            let classNames;\n            if (this.get('useIcons')) {\n                classNames = 'icon icon-add icon--md text-color-placeholder box-margin-Lmd-v2';\n            } else if (this.get('useIcons')) {\n                classNames = 'icon icon-add edit';\n            } else {\n                classNames = 'btn heading-action';\n            }\n            if (this.get('isLoadingOrError')) {\n                return `${classNames} hidden`;\n            }\n            return classNames;\n        }),\n        printDropdownClass: Ember.computed('isLoadingOrError', function () {\n            return this.get('isLoadingOrError') ? 'hidden' : '';\n        }),\n        init() {\n            this._super();\n            this.set('healthConcerns', []);\n            const onRefreshChart = data => {\n                if (data.patientPracticeGuid === this.get('patientPracticeGuid')) {\n                    this.get('onLoadedHealthConcerns').perform(data.healthConcerns || []);\n                }\n            };\n            this.get('patientService').on('refreshChart', onRefreshChart);\n            this.set('onRefreshChart', onRefreshChart);\n        },\n        willDestroyElement() {\n            this.get('patientService').off('refreshChart', this.get('onRefreshChart'));\n        },\n        initHealthConcerns: Ember.on('init', Ember.observer('patientPracticeGuid', function () {\n            this.get('loadHealthConcerns').perform();\n        })),\n        loadHealthConcerns: (0, _emberConcurrency.task)(function* () {\n            const patientPracticeGuid = this.get('patientPracticeGuid');\n            const data = yield this.get('store').query('patient-health-concern', { patientPracticeGuid });\n            yield this.get('onLoadedHealthConcerns').perform(data);\n        }).restartable(),\n        onLoadedHealthConcerns: (0, _emberConcurrency.task)(function* (data) {\n            const healthConcerns = data.toArray();\n            const properties = {\n                noKnownHealthConcerns: data.get('meta.noKnownHealthConcerns'),\n                healthConcerns\n            };\n            yield (0, _emberConcurrency.all)([this.get('loadDiagnosesReferenceItems').perform(healthConcerns), this.get('loadAllergiesReferenceItems').perform(healthConcerns)]);\n            this.setProperties(properties);\n            if (this.attrs.setControllerProperties) {\n                this.attrs.setControllerProperties(properties);\n            } else if (this.attrs.loadedHealthConcerns) {\n                this.attrs.loadedHealthConcerns(properties);\n            }\n        }),\n        loadAllergiesReferenceItems: (0, _emberConcurrency.task)(function* (healthConcerns) {\n            const allergiesHealthConcerns = healthConcerns.filterBy('healthConcernType', 'Allergy');\n            if (Ember.isPresent(allergiesHealthConcerns)) {\n                const allergies = yield this.loadAllergies(this.get('patientPracticeGuid'));\n                allergiesHealthConcerns.forEach(healthConcern => {\n                    const allergy = allergies.findBy('allergyGuid', healthConcern.get('healthConcernReferenceGuid'));\n                    healthConcern.set('healthConcernReferenceItem', allergy);\n                });\n            }\n        }),\n        loadAllergies(patientPracticeGuid) {\n            return this.get('store').query('patient-allergy', { patientPracticeGuid });\n        },\n        loadDiagnosesReferenceItems: (0, _emberConcurrency.task)(function* (healthConcerns) {\n            const diagnosesHealthConcerns = healthConcerns.filterBy('healthConcernType', 'Diagnosis');\n            if (Ember.isPresent(diagnosesHealthConcerns)) {\n                const diagnoses = yield _diagnoses.default.loadDiagnoses(this.get('patientPracticeGuid'), {});\n                diagnosesHealthConcerns.forEach(healthConcern => {\n                    const diagnosis = diagnoses.findBy('diagnosisGuid', healthConcern.get('healthConcernReferenceGuid'));\n                    healthConcern.set('healthConcernReferenceItem', diagnosis);\n                });\n            }\n        }),\n        saveNote: (0, _emberConcurrency.task)(function* (value) {\n            const healthConcern = this.get('healthConcernNote');\n            const text = value ? value.trim() : '';\n            let wasNewNoteSaved;\n            try {\n                if (healthConcern) {\n                    yield this.get('saveExistingNote').perform(healthConcern, text);\n                } else {\n                    wasNewNoteSaved = yield this.get('saveNewNote').perform(text);\n                }\n                this.set('isEditingNote', false);\n                if (wasNewNoteSaved) {\n                    const adapter = this.get('store').adapterFor('patient-health-concern');\n                    adapter.clearNoKnownValue(this.get('patientPracticeGuid'));\n                    this.set('noKnownHealthConcerns', false);\n                }\n            } catch (e) {\n                toastr.error('Failed to save the health concern note');\n                this.$('textarea')[0].focus();\n            }\n        }).drop(),\n        saveExistingNote: (0, _emberConcurrency.task)(function* (healthConcern, text) {\n            if (text === healthConcern.get('healthConcernNote')) {\n                return;\n            }\n            if (Ember.isEmpty(text)) {\n                healthConcern.deleteRecord();\n            } else {\n                healthConcern.set('healthConcernNote', text);\n            }\n            try {\n                yield healthConcern.save();\n                if (Ember.isEmpty(text)) {\n                    this.get('healthConcerns').removeObject(healthConcern);\n                }\n            } catch (e) {\n                healthConcern.rollbackAttributes();\n                throw e;\n            }\n        }),\n        saveNewNote: (0, _emberConcurrency.task)(function* (text) {\n            if (Ember.isEmpty(text)) {\n                return false;\n            }\n            const store = this.get('store');\n            const healthConcern = store.createRecord('patient-health-concern', {\n                healthConcernNote: text,\n                patientPracticeGuid: this.get('patientPracticeGuid'),\n                healthConcernType: 'Note'\n            });\n            try {\n                const newHealthConcern = yield healthConcern.save();\n                this.get('healthConcerns').pushObject(newHealthConcern);\n            } catch (e) {\n                store.unloadRecord(healthConcern);\n                throw e;\n            }\n            return true;\n        }),\n        actions: {\n            editNote() {\n                const healthConcernNote = this.get('healthConcernNote');\n                this.setProperties({\n                    noteText: healthConcernNote ? healthConcernNote.get('healthConcernNote') : '',\n                    isEditingNote: true\n                });\n            },\n            noKnownChecked(value) {\n                const adapter = this.get('store').adapterFor('patient-health-concern');\n                adapter.saveNoKnownValue(this.get('patientPracticeGuid'), value).catch(() => {\n                    this.set('noKnownHealthConcerns', !value);\n                });\n            },\n            saveNote(text) {\n                this.get('saveNote').perform(text);\n            },\n            toggleShowInactive() {\n                this.toggleProperty('showInactiveHealthConcerns');\n            },\n            print(type) {\n                this.get('store').findRecord('patient', this.get('patientPracticeGuid')).then(() => {\n                    let printActiveHealthConcerns = false;\n                    let printInactiveHealthConcerns = false;\n                    if (type === 'inactive') {\n                        printInactiveHealthConcerns = true;\n                    } else if (type === 'active') {\n                        printActiveHealthConcerns = true;\n                    } else {\n                        printActiveHealthConcerns = true;\n                        printInactiveHealthConcerns = true;\n                    }\n                    this.setProperties({\n                        isPrintVisible: true,\n                        printActiveHealthConcerns,\n                        printInactiveHealthConcerns\n                    });\n                    this.sendAction('printAudit', 'PatientHealthConcerns');\n                });\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/patient-image', ['exports', 'boot/config', 'boot/models/session'], function (exports, _config, _session) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    const defaultImageUrl = 'assets/images/default_profile.png';\n\n    exports.default = Ember.Component.extend({\n        tagName: 'img',\n        attributeBindings: ['src'],\n        hasPatientImage: false,\n        src: Ember.computed('hasPatientImage', 'patientImageUrlAuthenticated', function () {\n            if (this.get('hasPatientImage')) {\n                return this.get('patientImageUrlAuthenticated');\n            } else {\n                return defaultImageUrl;\n            }\n        }),\n        patientImageUrl: Ember.computed('patientPracticeGuid', function () {\n            return _config.default.patientImageURL + '/' + this.get('patientPracticeGuid') + '/patientImage';\n        }),\n        patientImageUrlAuthenticated: Ember.computed('patientImageUrl', function () {\n            return `${this.get('patientImageUrl')}?authCookie=${_session.default.get('authCookie')}`;\n        }),\n        _addErrorHandler: Ember.on('didInsertElement', function () {\n            if (this.get('hasPatientImage')) {\n                this.$().on('error', () => Ember.run(() => {\n                    this.set('src', defaultImageUrl);\n                }));\n            }\n        }),\n        _removeErrorHandler: Ember.on('willDestroyElement', function () {\n            this.$().off('error');\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/patient-list-phone-number', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        classNames: ['phone-number'],\n        tagName: 'span',\n        attributeBindings: ['value:title']\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/patient-persistent-navigation', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        classNames: ['persistent-navigation'],\n\n        patient: null\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/patient-pinned-note-provider-section', ['exports', 'ember-concurrency'], function (exports, _emberConcurrency) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        analytics: Ember.inject.service(),\n        classNames: ['pinned-note-section'],\n        disabled: false,\n        expandedNote: true,\n        showViewMoreLink: false,\n        pinnedNote: Ember.computed.alias('model.note'),\n        patientService: Ember.inject.service('patient'),\n        isDisabledOrNewPatient: Ember.computed.or('disabled', 'patient.isNew'),\n        _modelObserver: Ember.observer('patient', 'model', function () {\n            this.loadPinnedNote();\n        }),\n        lastModifiedDate: Ember.computed('model.editedDateTimeUtc', function () {\n            return moment(this.get('model.editedDateTimeUtc')).format('MM/DD/YYYY, h:mm a');\n        }),\n        loadProvider: (0, _emberConcurrency.task)(function* () {\n            if (this.get('model')) {\n                let provider = this.get('store').peekAll('provider-profile').findBy('userGuid', this.get('model.editedByUserGuid'));\n                if (Ember.isEmpty(provider)) {\n                    const providersResult = yield this.get('store').findAll('provider-profile');\n                    provider = providersResult.findBy('userGuid', this.get('model.editedByUserGuid'));\n                }\n                if (provider && !provider.get('isFullProfileLoaded')) {\n                    provider = yield this.get('store').findRecord('provider-profile', provider.get('providerGuid'), { reload: true });\n                }\n                this.set('provider', provider ? provider.get('providerNameWithDegreeAndComma') : '');\n            }\n        }).drop(),\n        calculateDivHeight: Ember.on('didInsertElement', Ember.observer('model.note', 'expandedNote', function () {\n            if (this.get('disabled')) {\n                return;\n            }\n            Ember.run.scheduleOnce('afterRender', this, () => {\n                this.set('showViewMoreLink', $('.pinned-note-body').height() >= 140);\n            });\n        })),\n        init() {\n            this._super();\n            const updatePinnedNote = () => this.loadPinnedNote();\n\n            this.get('patientService').on('updatePinnedNote', updatePinnedNote);\n            this.set('updatePinnedNote', updatePinnedNote);\n            this.loadPinnedNote();\n        },\n        willDestroyElement() {\n            this._super();\n            this.get('patientService').off('updatePinnedNote', this.get('updatePinnedNote'));\n        },\n        loadPinnedNote() {\n            const patientPracticeGuid = this.get('patient.id');\n            const record = patientPracticeGuid && this.get('store').peekRecord('patient-note', patientPracticeGuid);\n            if (record && !record.get('isDeleted')) {\n                this.set('model', record);\n            } else {\n                this.set('model', null);\n            }\n            this.get('loadProvider').perform();\n        },\n        actions: {\n            toggleProperty(propertyName) {\n                this.toggleProperty(propertyName);\n\n                if (propertyName === 'expandedNote') {\n                    this.get('analytics').track('Pinned note - Patient profile - Expand/Collapse Clicked', {\n                        'Expanded': this.get('expandedNote')\n                    });\n                }\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/patient-pinned-note', ['exports', 'ember-concurrency'], function (exports, _emberConcurrency) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        attributeBindings: ['data-element'],\n        patientService: Ember.inject.service('patient'),\n        analytics: Ember.inject.service(),\n        authorization: Ember.inject.service(),\n        classNames: ['patient-previews', 'patient-pinned-note'],\n        popoverConfirmClass: 'pinned-patient-popover popover-with-header',\n        popoverPlacement: 'bottom',\n        isPopoverVisible: false,\n        isDeleteModalVisable: false,\n        shouldShowEditPinnedNoteModal: false,\n        containsScrollableContent: false,\n        model: null,\n        location: null,\n        patientPracticeGuid: null,\n        pinnedNote: Ember.computed.alias('model.note'),\n        isEntitledToEdit: Ember.computed('authorization.entitledFeatures.[]', function () {\n            return this.get('authorization').isEntitledFor('Chart.Header.Edit');\n        }),\n        lastEditedByDateTime: Ember.computed('provider', 'model.editedDateTimeUtc', function () {\n            return moment(this.get('model.editedDateTimeUtc')).format('MM/DD/YYYY, h:mm a');\n        }),\n        learnMoreLink: '',\n        _modelObserver: Ember.observer('model.editedByUserGuid', function () {\n            this.loadPinnedNote();\n        }),\n        loadProvider: (0, _emberConcurrency.task)(function* () {\n            if (this.get('model')) {\n                let provider = this.get('store').peekAll('provider-profile').findBy('userGuid', this.get('model.editedByUserGuid'));\n                if (Ember.isEmpty(provider)) {\n                    const providersResult = yield this.get('store').findAll('provider-profile');\n                    provider = providersResult.findBy('userGuid', this.get('model.editedByUserGuid'));\n                }\n                if (provider && !provider.get('isFullProfileLoaded')) {\n                    provider = yield this.get('store').findRecord('provider-profile', provider.get('providerGuid'), { reload: true });\n                }\n                this.set('lastEditedByProviderName', provider ? provider.get('providerNameWithDegreeAndComma') : '');\n            }\n        }).drop(),\n        init() {\n            this._super();\n            const updatePinnedNote = () => this.loadPinnedNote();\n\n            this.get('patientService').on('updatePinnedNote', updatePinnedNote);\n            this.set('updatePinnedNote', updatePinnedNote);\n        },\n        willDestroyElement() {\n            this._super();\n            this.get('patientService').off('updatePinnedNote', this.get('updatePinnedNote'));\n        },\n        didInsertElement() {\n            this._super();\n            Ember.run.scheduleOnce('afterRender', () => this.set('popoverTarget', `#${this.get('elementId')} .icon-pushpin`));\n        },\n        didReceiveAttrs() {\n            const patientPracticeGuid = this.get('patientId');\n            if (Ember.isPresent(patientPracticeGuid) && patientPracticeGuid !== this.get('patientPracticeGuid')) {\n                this.set('patientPracticeGuid', patientPracticeGuid);\n                this.loadPinnedNote();\n            }\n        },\n        loadPinnedNote() {\n            const record = this.get('store').peekRecord('patient-note', this.get('patientPracticeGuid'));\n            if (record && !record.get('isDeleted')) {\n                this.set('model', record);\n            } else {\n                this.set('model', null);\n            }\n            this.get('loadProvider').perform();\n        },\n        calculateDivHeight: Ember.observer('isPopoverVisible', function () {\n            Ember.run.scheduleOnce('afterRender', this, () => {\n                this.set('containsScrollableContent', $('.pinned-patient-popover .popover-content').height() >= 193);\n            });\n        }),\n        delete: (0, _emberConcurrency.task)(function* () {\n            const model = this.get('model');\n\n            if (model) {\n                try {\n                    yield model.destroyRecord();\n                    this.get('store').unloadRecord(model);\n                    this.get('patientService').updatePinnedNote();\n                    toastr.success('Note deleted.');\n                    this.get('analytics').track('Pinned Note - Successful Delete', {\n                        'Location Source': this.get('location'),\n                        'Delivery Method': 'Popover'\n                    });\n                } catch (e) {\n                    toastr.error('Could not delete note, try again.');\n                    return;\n                }\n            }\n        }).drop(),\n        actions: {\n            toggleProperty(propertyName) {\n                this.toggleProperty(propertyName);\n                if (propertyName === 'isPopoverVisible') {\n                    this.get('analytics').track('Pinned Note - Icon Clicked', {\n                        'Location Source': this.get('location'),\n                        'Note Exists': Ember.isPresent(this.get('pinnedNote'))\n                    });\n                }\n            },\n            delete() {\n                this.get('delete').perform();\n                this.set('isDeleteModalVisable', false);\n                this.set('isPopoverVisible', false);\n            },\n            edit() {\n                this.set('isPopoverVisible', false);\n                this.attrs.editPinnedNote();\n            },\n            toggleDeleteModal(showDeleteModal) {\n                this.set('isPopoverVisible', !showDeleteModal);\n                this.set('isDeleteModalVisable', showDeleteModal);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/patient-preview-encounter', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        classNames: ['preview-pane-content', 'encounter'],\n\n        previewContext: null,\n\n        encounter: Ember.computed.alias('previewContext.encounter'),\n        hasMoreVitals: Ember.computed.alias('previewContext.hasMoreVitals'),\n        vitals: Ember.computed.alias('previewContext.vitals')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/patient-preview-list', ['exports', 'common/mixins/spinner', 'clinical/models/patient/preview', 'flowsheets/repositories/flowsheet-data'], function (exports, _spinner, _preview, _flowsheetData) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_spinner.default, {\n        classNames: ['preview-list-pane'],\n        layoutName: 'components/patient-preview-list',\n        showSpinner: Ember.computed.alias('loading'),\n\n        contentElement: '.preview-list-pane',\n        isVisible: false,\n        loading: false,\n        patientPracticeGuid: null,\n        previews: null,\n        previewTypes: Ember.computed(() => [{ label: 'Show all types', value: 'all' }, { label: 'Encounters', value: 'Encounter' }, { label: 'Lab orders', value: 'LabOrder' }, { label: 'Lab results', value: 'LabResult' }, { label: 'Imaging orders', value: 'ImgOrder' }, { label: 'Imaging results', value: 'ImgResult' }]),\n        previewsModal: null,\n        selectedPreviewType: 'all',\n        previewSortProperty: Ember.computed(() => ['eventDateTimeUtc:desc', 'createdAtDateTime:desc']),\n        sortedPreviews: Ember.computed.sort('previews', 'previewSortProperty'),\n        previewTypeDidChange: Ember.on('init', Ember.observer('patientPracticeGuid', 'selectedPreviewType', 'isVisible', function () {\n            const previewType = this.get('previewTypes').findBy('value', this.get('selectedPreviewType'));\n            this.set('previews', []);\n            if (this.get('isVisible') && this.get('patientPracticeGuid') && previewType) {\n                if (previewType.value === 'all') {\n                    this.loadPreviews(null, 'previews');\n                } else {\n                    this.loadPreviews(previewType.value, previewType.label.toLowerCase());\n                }\n            }\n        })),\n\n        actions: {\n            selectPreview(preview) {\n                this.get('previews').setEach('isSelected', false);\n\n                if (Ember.isPresent(preview)) {\n                    preview.set('isSelected', true);\n                }\n\n                this.attrs.selectPreview(preview);\n            }\n        },\n\n        loadPreviews(filterType, previewLabel) {\n            this.attrs.clearError();\n            this.attrs.selectPreview(null);\n            this.attrs.updateHeader(`Loading ${previewLabel}...`);\n\n            this.set('loading', true);\n\n            _preview.default.findPreviews(this.get('patientPracticeGuid'), filterType).then(previews => {\n                this.set('previews', previews);\n                if (previews.get('length')) {\n                    _flowsheetData.default.loadIsMetric().then(function (isMetric) {\n                        previews.setEach('isMetric', isMetric);\n                    }, function () {\n                        previews.setEach('isMetric', false);\n                    }).finally(function () {\n                        this.initializePreview();\n                    }.bind(this));\n                } else {\n                    this.onError(`No ${previewLabel} for this patient`, `There are no ${previewLabel} for this patient`);\n                }\n            }, () => {\n                this.onError(`Error loading ${previewLabel}`, `Could not load ${previewLabel} for this patients. Try again later.`);\n            }).finally(() => {\n                this.set('loading', false);\n            });\n        },\n\n        initializePreview() {\n            var previews = this.get('previews'),\n                previewType = this.get('previewTypes').findBy('value', this.get('selectedPreviewType'));\n\n            Ember.run.scheduleOnce('afterRender', this, function () {\n                if (previewType.value === 'Encounter' && previews.length > 1) {\n                    this.send('selectPreview', previews.objectAt(1));\n                } else {\n                    this.send('selectPreview', previews.get('firstObject'));\n                }\n            });\n        },\n\n        onError(title, message) {\n            this.attrs.previewError({\n                title: title,\n                message: message\n            });\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/patient-preview-order', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        classNames: ['preview-pane-content', 'order'],\n\n        previewContext: null,\n\n        order: Ember.computed.alias('previewContext.order')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/patient-preview-result', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        classNames: ['preview-pane-content', 'result'],\n\n        isSignersExpanded: false,\n        previewContext: null,\n\n        firstSigner: Ember.computed.alias('previewContext.result.signers.firstObject'),\n        result: Ember.computed.alias('previewContext.result'),\n        resultItems: Ember.computed.alias('result.items'),\n\n        resultItemsWrapper: Ember.computed('resultItems.[]', function () {\n            let resultItems = this.get('resultItems');\n\n            return Ember.isEmpty(resultItems) ? [] : resultItems.map(item => {\n                return Ember.ObjectProxy.create({\n                    content: item,\n                    isExpanded: false\n                });\n            });\n        }),\n\n        actions: {\n            toggleExpansion(resultItem) {\n                resultItem.toggleProperty('isExpanded');\n            },\n\n            toggleMoreLessSigners() {\n                this.toggleProperty('isSignersExpanded');\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/patient-preview', ['exports', 'common/mixins/spinner', 'clinical/models/patient/preview'], function (exports, _spinner, _preview) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    const codeToVitalMap = {\n        '3141-9': 'Weight',\n        '8302-2': 'Height',\n        '39156-5': 'BMI',\n        '55284-4': 'BP',\n        '8310-5': 'Temp',\n        '8867-4': 'Pulse',\n        '9279-1': 'RR',\n        '59408-5': 'O2 Sat',\n        '72514-3': 'Pain',\n        '9843-4': 'Head circ'\n    };\n\n    exports.default = Ember.Component.extend(_spinner.default, {\n        classNames: ['preview-pane'],\n        layoutName: 'components/patient-preview',\n        showSpinner: Ember.computed.alias('loading'),\n\n        contentElement: '.preview-pane',\n        currentPreview: null,\n        errorMessage: '',\n        headerTitle: null,\n        isAbnormal: false,\n        isLocked: false,\n        loading: false,\n        loadingPromise: null,\n        patient: null,\n        previewContext: null,\n\n        currentPreviewChanged: Ember.on('init', Ember.observer('currentPreview', function () {\n            var currentPreview = this.get('currentPreview');\n\n            if (currentPreview) {\n                switch (currentPreview.get('filterType').toLowerCase()) {\n                    case 'encounter':\n                        this.set('loadingPromise', this.setEncounterContext(currentPreview));\n                        break;\n                    case 'laborder':\n                    case 'imgorder':\n                        this.set('loadingPromise', this.setOrderContext(currentPreview));\n                        break;\n                    case 'labresult':\n                    case 'imgresult':\n                        this.set('loadingPromise', this.setResultContext(currentPreview));\n                        break;\n                }\n            }\n        })),\n\n        actions: {\n            closePreviews() {\n                this.attrs.togglePreviews();\n            },\n\n            openPreview() {\n                this.attrs.openPreview();\n            }\n        },\n\n        setEncounterContext(preview) {\n            this.set('loading', true);\n\n            var patient = this.get('patient'),\n                transcriptGuid = preview.get('identifyingGuid'),\n                store = this.get('store'),\n                hasMoreVitals = false,\n                query = { patientPracticeGuid: patient.get('patientPracticeGuid'), transcriptGuid: transcriptGuid },\n                promiseHash = {\n                vitalSets: store.query('encounter-vital-set', query),\n                encounter: store.query('chart-note', query).then(encounters => this._loadEncounterSnapshots(encounters.get('firstObject')))\n            };\n\n            return Ember.RSVP.hash(promiseHash).then(hash => {\n                var encounter = hash.encounter,\n                    dateOfService = encounter.get('dateOfServiceUtc'),\n                    vitals = hash.vitalSets.get('firstObject.filteredVitals') || [],\n                    vitalCodes = Object.keys(codeToVitalMap),\n                    isMetric = preview.get('isMetric');\n\n                encounter.set('ageOnDOS', patient.getAgeOnDate(dateOfService));\n                vitals.setEach('isMetric', isMetric);\n\n                // Remove the head circ vital if the patient is older than 36 months old.\n                if (moment(dateOfService).diff(patient.get('patient.birthDate'), 'months') > 36) {\n                    vitalCodes.removeObject('9843-4');\n                }\n                if (hash.vitalSets.get('length') > 1) {\n                    hasMoreVitals = true;\n                } else {\n                    hasMoreVitals = vitals.any(function (observation) {\n                        var code = observation.get('code');\n                        return !vitalCodes.includes(code);\n                    });\n                }\n                vitals = vitalCodes.map(function (code) {\n                    return {\n                        display: codeToVitalMap[code],\n                        observation: vitals.findBy('code', code)\n                    };\n                });\n\n                this.set('previewContext', Ember.Object.create({\n                    componentName: 'patient-preview-encounter',\n                    encounter: encounter,\n                    vitals: vitals,\n                    hasMoreVitals: hasMoreVitals\n                }));\n\n                if (encounter.get('isSigned')) {\n                    return store.query('encounter-addendum', query).then(function (addenda) {\n                        encounter.set('addenda', addenda);\n                    });\n                }\n            }).catch(() => {\n                this.attrs.previewError({\n                    title: `${preview.get('displayDate')} - ${preview.get('displayText')}`,\n                    message: 'Error loading encounter preview'\n                });\n            }).finally(() => {\n                this.set('loading', false);\n            });\n        },\n        _loadEncounterSnapshots(encounter) {\n            let promises = encounter.getLoadSnapshotPromises(['seenByProviderSnapshot', 'signedByProviderSnapshot']);\n            if (Ember.isEmpty(promises)) {\n                return Ember.RSVP.resolve(encounter);\n            }\n            return Ember.RSVP.all(promises).then(() => encounter);\n        },\n\n        setOrderContext(preview) {\n            var patientPracticeGuid = this.get('patient.patientPracticeGuid');\n\n            this.set('loading', true);\n\n            return _preview.default.findPreview(patientPracticeGuid, preview, 'order').then(orderPreview => {\n                this.set('previewContext', Ember.Object.create({\n                    componentName: 'patient-preview-order',\n                    order: orderPreview\n                }));\n            }).catch(e => {\n                this.attrs.previewError({\n                    title: `${preview.get('displayDate')} - ${preview.get('displayText')}`,\n                    message: e.message\n                });\n            }).finally(() => {\n                this.set('loading', false);\n            });\n        },\n\n        setResultContext(preview) {\n            var patientPracticeGuid = this.get('patient.patientPracticeGuid');\n\n            this.set('loading', true);\n\n            return _preview.default.findPreview(patientPracticeGuid, preview, 'result').then(resultPreview => {\n                resultPreview.set('isSigned', preview.get('isSigned'));\n\n                this.set('previewContext', Ember.Object.create({\n                    componentName: 'patient-preview-result',\n                    result: resultPreview\n                }));\n            }).catch(e => {\n                this.attrs.previewError({\n                    title: `${preview.get('displayDate')} - ${preview.get('displayText')}`,\n                    message: e.message\n                });\n            }).finally(() => {\n                this.set('loading', false);\n            });\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/patient-previews', ['exports', 'common/mixins/spinner'], function (exports, _spinner) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_spinner.default, {\n        analytics: Ember.inject.service(),\n\n        classNames: ['patient-previews'],\n        showSpinner: Ember.computed.alias('loading'),\n\n        arePreviewsVisible: false,\n        contentElement: '.patient-previews .popover-content',\n        currentPreview: null,\n        headerTitle: 'Loading previews ...',\n        loading: false,\n        patient: null,\n        previewErrorMessage: '',\n        showHeaderAbnormal: false,\n        showHeaderLock: false,\n\n        noPreviewSelected: Ember.computed.empty('currentPreview'),\n        patientPracticeGuid: Ember.computed.alias('patient.patientPracticeGuid'),\n\n        openPreviewText: Ember.computed('currentPreview.displayTextLower', 'currentPreview.filterType', function () {\n            var filterType = this.get('currentPreview.filterType').toLowerCase();\n\n            if (filterType === 'encounter') {\n                return `Open this ${filterType}`;\n            } else {\n                return `Open this ${this.get('currentPreview.displayTextLower')}`;\n            }\n        }),\n        didInsertElement() {\n            this._super();\n            Ember.run.scheduleOnce('afterRender', this, 'setPopoverHeight');\n        },\n        setPopoverHeight: Ember.observer('arePreviewsVisible', function () {\n            this.set('height', Math.min(500, $(window).height() - 292));\n        }),\n\n        actions: {\n            clearError() {\n                this.set('previewErrorMessage', null);\n            },\n\n            openPreview() {\n                var currentPreview = this.get('currentPreview');\n\n                if (currentPreview) {\n                    switch (currentPreview.get('filterType').toLowerCase()) {\n                        case 'encounter':\n                            this.transitionToEncounter(currentPreview);\n                            break;\n                        case 'laborder':\n                        case 'imgorder':\n                            this.transitionToOrder(currentPreview);\n                            break;\n                        case 'labresult':\n                        case 'imgresult':\n                            this.transitionToResult(currentPreview);\n                            break;\n                    }\n                }\n            },\n\n            previewError(errorMessage) {\n                this.setProperties({\n                    headerTitle: errorMessage.title,\n                    previewErrorMessage: errorMessage.message,\n                    showHeaderLock: false,\n                    showHeaderAbnormal: false\n                });\n            },\n\n            selectPreview(preview) {\n                if (Ember.isPresent(preview)) {\n                    this.setProperties({\n                        headerTitle: `${preview.get('displayDate')} - ${preview.get('displayText')}`,\n                        currentPreview: preview,\n                        previewErrorMessage: null,\n                        showHeaderLock: preview.get('isSigned'),\n                        showHeaderAbnormal: preview.get('isAbnormal')\n                    });\n                } else {\n                    this.setProperties({\n                        headerTitle: '',\n                        currentPreview: null,\n                        previewErrorMessage: null,\n                        showHeaderLock: false,\n                        showHeaderAbnormal: false\n                    });\n                }\n            },\n\n            togglePreviews() {\n                this.get('analytics').track('Open Patient Preview');\n                this.toggleProperty('arePreviewsVisible');\n                // Unload cached encounters to ensure the latest are fetched each time the preview modal is opened.\n                if (this.get('arePreviewsVisible')) {\n                    var store = this.get('store');\n                    store.unloadAll('chart-note');\n                    store.unloadAll('encounter-addendum');\n                    store.unloadAll('encounter-vital');\n                    store.unloadAll('encounter-vital-set');\n                }\n            },\n\n            updateHeader(headerTitle) {\n                this.setProperties({\n                    headerTitle: headerTitle,\n                    showHeaderLock: false,\n                    showHeaderAbnormal: false\n                });\n            }\n        },\n\n        transitionToEncounter(preview) {\n            this.send('togglePreviews');\n            this.get('patient').transitionToRoute('encounter', preview.get('identifyingGuid'));\n        },\n\n        transitionToOrder(preview) {\n            this.send('togglePreviews');\n            this.get('patient').transitionToRoute('order', this.get('patientPracticeGuid'), preview.get('identifyingGuid'));\n        },\n\n        transitionToResult(preview) {\n            this.send('togglePreviews');\n            this.get('patient').transitionToRoute('result', this.get('patientPracticeGuid'), preview.get('identifyingGuid'));\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/patient-risk-score', ['exports', 'charting/mixins/with-patient-print-title', 'ember-concurrency'], function (exports, _withPatientPrintTitle, _emberConcurrency) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_withPatientPrintTitle.default, {\n        routing: Ember.inject.service('pf-routing'),\n        showAll: false,\n        isPrintPreviewVisible: false,\n        patientPracticeGuid: Ember.computed.alias('patient.patientPracticeGuid'),\n        patientSummary: Ember.computed.alias('patient'),\n        displayName: 'Patient risk score',\n        isLoading: Ember.computed.alias('loadSocialHistory.isRunning'),\n\n        loadSocialHistory: (0, _emberConcurrency.task)(function* () {\n            const store = this.get('store');\n            const patientPracticeGuid = this.get('patientPracticeGuid');\n            try {\n                const socialHistory = yield store.findRecord('social-history', patientPracticeGuid);\n\n                this.setProperties({\n                    patientRiskScore: socialHistory.get('riskScore') || {},\n                    error: false\n                });\n            } catch (err) {\n                this.setProperties({\n                    patientRiskScore: null,\n                    error: true\n                });\n            }\n        }).restartable(),\n\n        loadPatientInfo: Ember.on('init', Ember.observer('patientPracticeGuid', function () {\n            this.get('loadSocialHistory').perform();\n        })),\n\n        actions: {\n            toggleProperty(key) {\n                this.toggleProperty(key);\n            },\n            print() {\n                // Load the patient info first to ensure that it gets rendered on the print preview\n                this.get('store').findRecord('patient', this.get('patientPracticeGuid')).then(() => {\n                    this.sendAction('printAudit', 'PatientRiskScore');\n                    this.set('isPrintPreviewVisible', true);\n                });\n            },\n            edit() {\n                const baseRoute = this.get('transcriptGuid') ? 'encounter' : 'summary';\n                this.get('routing').transitionToRoute(`${baseRoute}.risk-score`);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/patient-search', ['exports', 'tyrion/components/mixins/tooltip-support', 'common/helpers/dates', 'boot/util/pf-string-util', 'ember-concurrency', 'clinical/util/patient-search', 'tyrion/mixins/destroyed'], function (exports, _tooltipSupport, _dates, _pfStringUtil, _emberConcurrency, _patientSearch, _destroyed) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_tooltipSupport.default, _destroyed.default, {\n        init() {\n            this._super();\n\n            this.set('searchType', Ember.Object.create({\n                name: true,\n                nameLF: true,\n                date: true,\n                ssn: true,\n                prn: true\n            }));\n\n            if (!Ember.isEmpty(this.get('searchTerm'))) {\n                this.validateSearchTerm();\n            }\n        },\n\n        isTooltipVisible: true,\n        tooltipTrigger: 'manual',\n        tooltipPlacement: null,\n\n        layoutName: 'components/patient-search',\n\n        classNames: ['search-term-view', 'patient-search-component'],\n        classNameBindings: ['isShorter:is-shorter'],\n\n        showHints: false,\n        showResults: false,\n        focusOnInsert: true,\n        isDisabled: false,\n        isShorter: false,\n        forceSingleSelectPatient: false,\n        hasError: false,\n\n        isSearching: false,\n        isValidatingOnLostFocus: true,\n        /**\n         * The property that the results will be stored in.\n         * Consumers of this component should bind to this property.\n         *\n         * @property results\n         * @type (Array}\n         */\n        results: null,\n\n        /***\n         * When true, the results will display in a dropdown. When selected, patients will display as a pill.\n         */\n        displayResults: false,\n\n        /***\n         * When true, the results will display a footer section.\n         */\n        showFooter: false,\n\n        /**\n         * Selected patients that will appear as a pill.\n         * Consumers of this component should bind to this property to retrieve the selected patients.\n         *\n         * @property results\n         * @type (Array}\n         */\n        selectedPatients: null,\n\n        /***\n         * Max selectable patients\n         */\n        maxSelected: 1,\n\n        click() {\n            if (Ember.isPresent(this.get('tooltipMsg'))) {\n                this.set('tooltipMsg', '');\n            }\n        },\n\n        showInput: Ember.computed('selectedPatients.[]', function () {\n            return !this.get('selectedPatients') || this.get('selectedPatients').length !== this.get('maxSelected');\n        }),\n\n        focusIn(evt) {\n            if ($(evt.target).hasClass('filtered-search-input')) {\n                this.set('showHints', true);\n                this.set('showResults', false);\n            }\n        },\n\n        focusOut(evt) {\n            if (this.get('isValidatingOnLostFocus') && !this.get('isSearching') && !Ember.isEmpty(this.get('searchTerm')) && !this.get('showResults')) {\n                this.set('tooltipMsg', 'This is not a valid patient.');\n            }\n            if ($(evt.target).hasClass('filtered-search-input')) {\n                Ember.run.later(() => {\n                    this._setPropertiesUnlessDestroyed({\n                        showHints: false,\n                        showResults: false\n                    });\n                }, 250);\n            }\n        },\n\n        keyPress(evt) {\n            if ($(evt.target).hasClass('filtered-search-input') && evt.keyCode === 13) {\n                this.send('search');\n            }\n            if (Ember.isEmpty(this.get('searchTerm'))) {\n                this.set('showHints', true);\n            }\n        },\n\n        didInsertElement() {\n            this._super();\n            if (this.get('focusOnInsert')) {\n                this.$('input').focus();\n            }\n        },\n\n        actions: {\n            /**\n             * Handles the search action triggered by view\n             * @method search\n             */\n            search() {\n                this.send('searchWithParams', this.buildSearchQuery());\n            },\n\n            /**\n             * Queries the backend. Searches the patient store for matches. Takes a query object parameter.\n             * On return of payload, assigns results\n             * to model and flags 'hasSearched'\n             *\n             * @method searchWithParams\n             * @param query\n             */\n            searchWithParams(query) {\n                if (Object.keys(query).length) {\n                    this.set('isSearching', true);\n                    this.get('store').query('patient-search', query).then(results => {\n                        this.setProperties({\n                            results: results.filterBy('isActive'),\n                            isSearching: false\n                        });\n                        this.sendAction('didSearch');\n\n                        if (this.get('displayResults')) {\n                            this.set('showResults', true);\n                            this.set('showHints', false);\n                        }\n                    }).catch(error => {\n                        if (!this.get('isDestroyed')) {\n                            this.set('isSearching', false);\n                            this.sendAction('didSearch', error);\n                        }\n                    });\n                }\n            },\n\n            selectPatient(patient) {\n                // Note: preserving existing logic for multiple selectedPatients\n                if (this.attrs.selectPatientResult || !this.get('forceSingleSelectPatient') && this.get('selectedPatients') && this.get('selectedPatients').length > 0) {\n                    if (!this.get('selectedPatients')) {\n                        this.set('selectedPatients', Ember.A([]));\n                    }\n\n                    if (this.get('selectedPatients').length < this.get('maxSelected')) {\n                        this.get('selectedPatients').pushObject(patient);\n                    }\n\n                    this.set('showResults', false);\n                    this.set('searchTerm', '');\n\n                    if (this.attrs.selectPatients) {\n                        this.attrs.selectPatients(this.get('selectPatients'));\n                    }\n\n                    if (this.attrs.selectPatientResult) {\n                        this.attrs.selectPatientResult(patient);\n                    }\n                } else {\n                    this.get('getPatientAndSelect').perform(patient);\n                }\n            },\n\n            removeSelectedPatient(patient) {\n                if (!this.get('isDisabled')) {\n                    this.get('selectedPatients').removeObject(patient);\n                }\n            },\n\n            footerActionLink() {\n                this.set('showResults', false);\n                this.set('searchTerm', '');\n                this.sendAction('footerAction');\n            }\n        },\n\n        getPatientAndSelect: (0, _emberConcurrency.task)(function* (patient) {\n            const patientRecord = yield this.get('store').findRecord('patient', patient.get('id'));\n\n            // The scheduler selectedPatient (single) requires the patient data structure, not the patient-summary data structure.\n            let selectedPatients = this.get('selectedPatients');\n\n            if (this.get('forceSingleSelectPatient') || !selectedPatients) {\n                selectedPatients = [];\n            }\n\n            if (selectedPatients.length < this.get('maxSelected')) {\n                patientRecord.set('hasPatientImage', patient.get('hasPatientImage'));\n                selectedPatients.pushObject(patientRecord);\n            }\n\n            this.set('selectedPatients', selectedPatients);\n            this.set('showResults', false);\n            this.set('searchTerm', '');\n\n            if (this.attrs.selectPatients) {\n                this.attrs.selectPatients(selectedPatients);\n            }\n        }).drop(),\n\n        /**\n         * Builds and returns the Search Query\n         *\n         * @method buildSearchQuery\n         *\n         *  _Returns: String_\n         *\n         */\n        buildSearchQuery() {\n            if (this.get('invalidSearchTerm') || Ember.isEmpty(this.get('searchTerm'))) {\n                return {};\n            }\n            const searchTerm = this.get('searchTerm');\n            const query = {};\n\n            if (this.get('searchType.date')) {\n                if (_dates.default.isValidDate(searchTerm, 'MM/DD/YYYY')) {\n                    query.birthDate = searchTerm;\n                } else {\n                    this.set('searchType.date', false);\n                }\n            }\n            if (this.get('searchType.ssn')) {\n                if (/^\\d{3}-?\\d{2}-?\\d{4}$/.test(searchTerm)) {\n                    query.socialSecurityNumber = searchTerm;\n                    this.set('searchTerm', _pfStringUtil.default.formatSSN(this.get('searchTerm')));\n                } else {\n                    this.set('searchType.ssn', false);\n                }\n            }\n            if (this.get('searchType.name')) {\n                Ember.merge(query, _patientSearch.default.formatNameParameters(searchTerm));\n            }\n            if (this.get('searchType.prn')) {\n                query.patientRecordNumber = searchTerm;\n            }\n            return query;\n        },\n\n        /**\n         * Resets searchTypes to all true\n         *\n         * @method resetSearchType\n         */\n        resetSearchType() {\n            this.set('searchType.name', true);\n            this.set('searchType.nameLF', true);\n            this.set('searchType.date', true);\n            this.set('searchType.ssn', true);\n            this.set('searchType.prn', true);\n        },\n\n        /**\n         * The search type placeholders used in the Search Assist dropdown\n         *\n         * @property searchTypePlaceholder\n         * @type {Object}\n         * @static\n         * @final\n         */\n        searchTypePlaceholder: {\n            name: 'First Last',\n            nameLF: 'Last, First',\n            date: 'MM/DD/YYYY',\n            ssn: '###-##-####',\n            prn: 'AA123456'\n        },\n\n        /**\n         * Denotes if any of the search terms are invalid, thereby removing them from\n         * the Search Assist Dropdown\n         *\n         * _Returns: Boolean_\n         *\n         * _Observes: 'searchType.name', 'searchType.date', 'searchType.ssn'_, 'searchType.nameLF'\n         *\n         * @property invalidSearchTerm\n         * @type {ComputedProperty}\n         */\n        invalidSearchTerm: Ember.computed('searchType.name', 'searchType.date', 'searchType.ssn', 'searchType.prn', function () {\n            return !(this.get('searchType.name') || this.get('searchType.date') || this.get('searchType.ssn') || this.get('searchType.prn'));\n        }),\n\n        /**\n         * Used in the Search Term template to render the possible name field in\n         * the Search Assist Dropdown\n         *\n         * _Returns: String_\n         *\n         * _Observes: searchTerm_\n         *\n         * @property valueName\n         * @type {ComputedProperty\n         */\n        valueName: Ember.computed('searchTerm', function () {\n            var searchTerm = this.get('searchTerm');\n\n            return searchTerm ? searchTerm : this.get('searchTypePlaceholder').name;\n        }),\n\n        /**\n         * Used in the Search Term template to render the possible birth date field in\n         * the Search Assist Dropdown\n         *\n         * _Returns: String_\n         *\n         * _Observes: searchTerm_\n         *\n         * @property valueDate\n         * @type {ComputedProperty\n         */\n        valueDate: Ember.computed('searchTerm', function () {\n            if (this.get('searchType.date')) {\n                var searchTerm = this.get('searchTerm'),\n                    dateFormat = this.get('searchTypePlaceholder').date;\n                if (searchTerm && _dates.default.isValidDate(searchTerm, dateFormat)) {\n                    return _dates.default.formatDate(searchTerm);\n                } else {\n                    return searchTerm ? searchTerm + dateFormat.slice(searchTerm.length) : dateFormat;\n                }\n            }\n        }),\n\n        /**\n         * Used in the Search Term template to render the possible SSN field in\n         * the Search Assist Dropdown\n         *\n         * _Returns: String_\n         *\n         * _Observes: searchTerm_\n         *\n         * @property valueSSN\n         * @type {ComputedProperty}\n         */\n        valueSSN: Ember.computed('searchTerm', function () {\n            if (this.get('searchType.ssn')) {\n                var searchTerm = this.get('searchTerm');\n\n                return searchTerm ? _pfStringUtil.default.formatSSN(searchTerm) : this.get('searchTypePlaceholder').ssn;\n            }\n        }),\n\n        /**\n         * Used in the Search Term template to render the possible PRN field in\n         * the Search Assist Dropdown\n         *\n         * _Returns: String_\n         *\n         * _Observes: searchTerm_\n         *\n         * @property valuePRN\n         * @type {ComputedProperty}\n         */\n        valuePRN: Ember.computed('searchTerm', function () {\n            if (this.get('searchType.prn')) {\n                var searchTerm = this.get('searchTerm');\n\n                return searchTerm ? this.get('searchTerm') : this.get('searchTypePlaceholder').prn;\n            }\n        }),\n\n        /**\n         * Validates the current search term and updates the state of searchType\n         *\n         * _Observes: searchTerm_\n         *\n         * @method validateSearchTerm\n         */\n        validateSearchTerm: Ember.observer('searchTerm', function () {\n            var searchTerm = this.get('searchTerm');\n\n            if (searchTerm) {\n                // Validate Name\n                // As long as it doesn't start with a digit, we consider it a valid name.\n                if (/[^\\A\\d]/.test(searchTerm)) {\n                    this.set('searchType.name', true);\n                } else {\n                    this.set('searchType.name', false);\n                }\n\n                // Validate Date\n                /* jshint -W101 */ /* line too long */\n                if (/^0[1-9]?$|^0[1-9][\\/]$|^0[1-9][\\/][0][1-9]?$|^0[1-9][\\/][0][1-9][\\/]$|^0[1-9][\\/][0][1-9][\\/]1$|^0[1-9][\\/][0][1-9][\\/]19\\d{0,2}$|^0[1-9][\\/][0][1-9][\\/]2$|^0[1-9][\\/][0][1-9][\\/]20\\d{0,2}$|^0[1-9][\\/][1-2]\\d?$|^0[1-9][\\/][1-2]\\d[\\/]$|^0[1-9][\\/][1-2]\\d[\\/]1$|^0[1-9][\\/][1-2]\\d[\\/]19\\d{0,2}$|^0[1-9][\\/][1-2]\\d[\\/]2$|^0[1-9][\\/][1-2]\\d[\\/]20\\d{0,2}$|^0[1-9][\\/][3][0-1]?$|^0[1-9][\\/][3][0-1][\\/]$|^0[1-9][\\/][3][0-1][\\/]1$|^0[1-9][\\/][3][0-1][\\/]19\\d{0,2}$|^0[1-9][\\/][3][0-1][\\/]2$|^0[1-9][\\/][3][0-1][\\/]20\\d{0,2}$|^1[0-2]?$|^1[0-2][\\/]$|^1[0-2][\\/][0][1-9]?$|^1[0-2][\\/][0][1-9][\\/]$|^1[0-2][\\/][0][1-9][\\/]1$|^1[0-2][\\/][0][1-9][\\/]19\\d{0,2}$|^1[0-2][\\/][0][1-9][\\/]2$|^1[0-2][\\/][0][1-9][\\/]20\\d{0,2}$|^1[0-2][\\/][1-2]\\d?$|^1[0-2][\\/][1-2]\\d[\\/]$|^1[0-2][\\/][1-2]\\d[\\/]1$|^1[0-2][\\/][1-2]\\d[\\/]19\\d{0,2}$|^1[0-2][\\/][1-2]\\d[\\/]2$|^1[0-2][\\/][1-2]\\d[\\/]20\\d{0,2}$|^1[0-2][\\/][3][0-1]?$|^1[0-2][\\/][3][0-1][\\/]$|^1[0-2][\\/][3][0-1][\\/]1$|^1[0-2][\\/][3][0-1][\\/]19\\d{0,2}$|^1[0-2][\\/][3][0-1][\\/]2$|^1[0-2][\\/][3][0-1][\\/]20\\d{0,2}$/.test(searchTerm)) {\n                    /* jshint +W101 */\n                    this.set('searchType.date', true);\n                } else {\n                    this.set('searchType.date', false);\n                }\n\n                // Validate SSN\n                if (searchTerm.match(/^\\d{1,9}$|^\\d{3}-$|^\\d{3}-\\d{1,6}$|^\\d{1,3}-\\d{1,2}-$|^\\d{1,3}-\\d{1,2}-\\d{1,4}$|^\\d{5}-$|^\\d{5}-\\d{1,4}$/)) {\n                    this.set('searchType.ssn', true);\n                } else {\n                    this.set('searchType.ssn', false);\n                }\n\n                // Validate PRN\n                this.set('searchType.prn', true);\n            } else {\n                this.resetSearchType();\n            }\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/patient-search2-item', ['exports', 'tyrion/components/single-select-option'], function (exports, _singleSelectOption) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _singleSelectOption.default.extend({\n        layoutName: 'components/patient-search2-item'\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/patient-search2-selected-item', ['exports', 'tyrion/components/multi-select-item'], function (exports, _multiSelectItem) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _multiSelectItem.default.extend({\n        layoutName: 'components/patient-search2-selected-item'\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/patient-search2', ['exports', 'clinical/models/patient-search-options', 'clinical/util/patient-search'], function (exports, _patientSearchOptions, _patientSearch) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        classNames: ['patient-search2'],\n\n        prompt: 'Search',\n\n        // Bound to template\n        searchQuery: '',\n        /***\n         * Filters selects from multi-select\n         */\n        searchFilters: null,\n\n        analytics: Ember.inject.service(),\n\n        optionComponent: 'patient-search2-item',\n        selectionItemComponent: 'patient-search2-selected-item',\n\n        init() {\n            this._super();\n            if (!this.get('searchFilters')) {\n                this.set('searchFilters', []);\n            }\n        },\n\n        allSearchOptions: Ember.computed(function () {\n            return (0, _patientSearchOptions.default)();\n        }),\n\n        _updateOptions() {\n            var searchFilters = this.get('searchFilters') || [],\n                remainingOptions = this.get('allSearchOptions').reject(function (searchOption) {\n                return searchFilters.includes(searchOption);\n            }),\n                availableOptions;\n            remainingOptions.setEach('value', this.get('searchQuery'));\n\n            if (!this.get('searchQuery')) {\n                // No search query, means we should show all the options.\n                availableOptions = remainingOptions;\n            } else {\n                availableOptions = remainingOptions.filterBy('matches');\n            }\n            this.set('searchOptions', availableOptions);\n        },\n        _searchQueryChanged: Ember.observer('searchQuery', 'searchFilters.[]', Ember.on('init', function () {\n            // When selecting an item, the multi-select sets the query to '' before the item is added to the selections. Therefore, we'll delay to the next run\n            // loop to ensure that the selections array has been updated before clearing out the value on each item.\n            if (Ember.isEmpty(this.get('searchQuery'))) {\n                Ember.run.next(() => this._updateOptions());\n            } else {\n                this._updateOptions();\n            }\n        })),\n\n        _searchFilterChanged: Ember.observer('searchFilters.[]', function () {\n            var searchFilters = this.get('searchFilters'),\n                newSearchCriteria = {};\n            if (this._removeDataIfIsPartialToWorkaroundBackendLimitations(searchFilters)) {\n                return;\n            }\n            if (searchFilters.length === 0) {\n                if (Ember.isEmpty(this.get('searchQuery'))) {\n                    this.sendAction('search', null);\n                }\n                return;\n            }\n\n            searchFilters.forEach(function (filter) {\n                newSearchCriteria[filter.property] = filter.value;\n            });\n            newSearchCriteria = this._adjustNameSearchToWorkaroundBackendLimitations(newSearchCriteria);\n            this.patientSearchMixpanelEvent('Patient List Search', searchFilters.length, newSearchCriteria);\n            this.sendAction('search', newSearchCriteria);\n        }),\n\n        patientSearchMixpanelEvent(trackedEvent, numFilters, newSearchCriteria) {\n            this.get('analytics').track(trackedEvent, {\n                'Patient Search Criteria Count': numFilters,\n                'Patient Search By PRN': newSearchCriteria.hasOwnProperty('patientRecordNumber')\n            });\n        },\n\n        _removeDataIfIsPartialToWorkaroundBackendLimitations(searchFilters) {\n            var dateFilter = searchFilters.findBy('property', 'birthDate'),\n                requiredLength = 'dd/mm/yyyy'.length;\n            if (dateFilter && dateFilter.value.length !== requiredLength) {\n                Ember.run.later(function () {\n                    // This needs to be re-scheduled to avoid rendering issues with multi-select\n                    searchFilters.removeObject(dateFilter);\n                });\n                toastr.warning('The DOB is incomplete so it was ignored');\n                return true;\n            }\n            return false;\n        },\n\n        _adjustNameSearchToWorkaroundBackendLimitations(searchCriteria) {\n            const name = searchCriteria.namePropertyUsedToWorkaroundBackendLimitations;\n            if (!name) {\n                return searchCriteria;\n            }\n            // The server doesn't expect 'name' so this will simply be ignored\n            searchCriteria.namePropertyUsedToWorkaroundBackendLimitations = undefined;\n\n            Ember.merge(searchCriteria, _patientSearch.default.formatNameParameters(name));\n            return searchCriteria;\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/pmh-detail', ['exports', 'clinical/mixins/with-pmh', 'boot/util/pf-browser', 'ember-concurrency'], function (exports, _withPmh, _pfBrowser, _emberConcurrency) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_withPmh.default, {\n        analytics: Ember.inject.service(),\n        tunnel: Ember.inject.service(),\n        routing: Ember.inject.service('pf-routing'),\n\n        resizables: null,\n        dirtyObserver: Ember.observer('pastMedicalHistory.hasDirtyAttributes', function () {\n            this.set('isDirty', this.get('pastMedicalHistory.hasDirtyAttributes'));\n        }),\n        autoFocusSectionObserver: Ember.on('init', Ember.observer('pastMedicalHistory.sections', 'autoFocusSection', function () {\n            const key = this.get('autoFocusSection');\n            const pmhSections = this.get('pastMedicalHistory.sections');\n            const section = key && pmhSections ? pmhSections.findBy('key', key) : null;\n\n            if (pmhSections) {\n                pmhSections.setEach('autofocus', false);\n            }\n            if (section) {\n                section.set('autofocus', true);\n            }\n            this.set('resizables', []);\n        })),\n        isChrome: Ember.computed(() => _pfBrowser.default.isChrome()),\n        isOnPatientSummary: Ember.computed.equal('routing.currentRouteName', 'summary.pmh'),\n        visibleSections: Ember.computed('isOnPatientSummary', 'pastMedicalHistory.sections.[]', function () {\n            if (this.get('isOnPatientSummary')) {\n                return (this.get('pastMedicalHistory.sections') || []).filter(section => {\n                    if (section.get('isInSocialAndBehavioralHealth')) {\n                        return false;\n                    }\n\n                    return section.get('isInSummaryV2');\n                });\n            }\n\n            return this.get('pastMedicalHistory.sections');\n        }),\n        save: (0, _emberConcurrency.task)(function* () {\n            (this.get('pastMedicalHistory.sections') || []).forEach(section => {\n                section.set('value', (section.get('value') || '').trim());\n            });\n            if (this.get('pastMedicalHistory.hasDirtyAttributes')) {\n                this.get('analytics').track('Save PMH');\n                try {\n                    yield this.get('pastMedicalHistory').save();\n                    this.get('tunnel').send('social-history', this.getProperties('pastMedicalHistory'));\n                    this._close();\n                } catch (e) {\n                    toastr.error('Failed to save PMH');\n                }\n            } else {\n                this.sendAction('close');\n            }\n        }).drop(),\n        actions: {\n            revert() {\n                this._close();\n            },\n            save() {\n                this.get('save').perform();\n            },\n            pmhAction(action) {\n                this.sendAction('pmhAction', action);\n            }\n        },\n        _close() {\n            const pmh = this.get('pastMedicalHistory');\n            if (pmh.get('hasDirtyAttributes')) {\n                pmh.rollbackAttributes();\n                pmh.notifyPropertyChange('sections');\n            }\n\n            this.sendAction('close');\n        },\n        _closing: Ember.observer('closing', function () {\n            if (!this.get('closing')) {\n                return;\n            }\n            this.set('closing', false);\n            Ember.run.once(this, 'send', 'save');\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/pmh-section', ['exports', 'clinical/mixins/with-pmh', 'charting/mixins/with-patient-print-title'], function (exports, _withPmh, _withPatientPrintTitle) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_withPmh.default, _withPatientPrintTitle.default, {\n        authorization: Ember.inject.service(),\n        routing: Ember.inject.service('pf-routing'),\n\n        card: null,\n        displayName: 'Past medical history',\n        fieldBeingEdited: null,\n        hideEdit: true,\n\n        patientSummary: Ember.computed.alias('patient'),\n        sections: Ember.computed.alias('pastMedicalHistory.sections'),\n\n        cardFields: Ember.computed('card.activeFields.[]', 'sections.[]', 'sections.@each.value', 'fieldBeingEdited', function () {\n            const sectionGroups = _.groupBy(this.get('sections') || [], section => {\n                return Ember.get(section, 'key');\n            });\n\n            const fieldBeingEdited = this.get('fieldBeingEdited');\n\n            return this.get('card.activeFields').filterBy('isVisible').map(field => {\n                const section = sectionGroups[field.get('key')];\n                let value;\n\n                if (section && section[0]) {\n                    value = Ember.get(section[0], 'value');\n                }\n\n                return Ember.Object.create({\n                    title: field.get('displayTitle'),\n                    key: field.get('key'),\n                    content: Ember.isPresent(value) ? [{ 'description': value, id: field.get('key') }] : [],\n                    isEditing: field.get('key') === fieldBeingEdited\n                });\n            }).compact();\n        }),\n        defaultMessage: Ember.computed('isLoading', 'error', 'isEmpty', function () {\n            if (!this.get('isEmpty')) {\n                return null;\n            }\n\n            if (this.get('isLoading')) {\n                return 'Loading past medical history...';\n            }\n\n            if (this.get('error')) {\n                return 'Could not load past medical history. Try again later.';\n            }\n        }),\n        isEditing: Ember.computed('routing.currentRouteName', {\n            get() {\n                const currentRouteName = this.get('routing.currentRouteName');\n\n                return currentRouteName === 'summary.summary-pmh';\n            },\n            set(key, value) {\n                return value;\n            }\n        }),\n        isEmpty: Ember.computed('pastMedicalHistory', 'pastMedicalHistory.areAllEmpty', function () {\n            return Ember.isEmpty(this.get('pastMedicalHistory')) || this.get('pastMedicalHistory.areAllEmpty');\n        }),\n        isNotAllowedToEditPMH: Ember.computed('authorization.entitledFeatures.[]', function () {\n            return !this.get('authorization').isEntitledFor('Chart.Encounter.Edit');\n        }),\n        isAllowedToEdit: Ember.computed.not('isNotAllowedToEditPMH'),\n        useIcons: Ember.computed('routing.currentRouteName', {\n            get() {\n                return this.get('routing.currentRouteName').indexOf('encounter') === -1;\n            },\n            set(key, value) {\n                return value;\n            }\n        }),\n\n        actions: {\n            edit(field) {\n                this.get('routing').transitionToRoute('summary.summary-pmh', field.get('key'));\n                this.attrs.setControllerProperties({\n                    selectedItem: field.get('key')\n                });\n            },\n            create(field) {\n                this.get('routing').transitionToRoute('summary.summary-pmh', field.get('key'));\n                this.attrs.setControllerProperties({\n                    selectedItem: null\n                });\n            },\n            pmhAction(action) {\n                this.sendAction('pmhAction', action);\n            },\n            print() {\n                // Load the patient info first to ensure that it gets rendered on the print preview\n                this.get('store').findRecord('patient', this.get('patientPracticeGuid')).then(() => {\n                    this.sendAction('printAudit', 'PastMedicalHistory');\n                    this.set('isPrintPreviewVisible', true);\n                });\n            },\n            setIsEditing(options) {\n                if (options.isEditing) {\n                    this.set('fieldBeingEdited', options.fieldKey);\n                } else {\n                    this.set('fieldBeingEdited', null);\n                }\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/prescription-item', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        erxProviders: null,\n        prescription: null,\n\n        providerName: Ember.computed('prescription.prescribingProviderGuid', 'erxProviders.[]', function () {\n            let erxProviders = this.get('erxProviders') || [],\n                providerGuid = this.get('prescription.prescribingProviderGuid'),\n                provider;\n\n            if (Ember.isPresent(providerGuid)) {\n\n                // Try to match with an erx provider to obtain vetted degree\n                provider = erxProviders.findBy('providerGuid', providerGuid);\n\n                // Default to unvetted degree\n                if (Ember.isEmpty(provider)) {\n                    provider = this.store.peekRecord('provider', providerGuid);\n\n                    if (Ember.isPresent(provider)) {\n                        return provider.get('providerName');\n                    }\n                } else {\n                    return provider.get('providerNameWithDegree');\n                }\n            }\n\n            return null;\n        }),\n        prescriptionStatusDisplay: Ember.computed('prescription.prescriptionStatus', function () {\n            const status = (this.get('prescription.prescriptionStatus') || '').toLowerCase();\n            if (Ember.isEmpty(status)) {\n                return '';\n            }\n            switch (status) {\n                case 'change requested':\n                    return ' (awaiting response)';\n                case 'refillrequested':\n                    return ' (refill request)';\n                default:\n                    return ` (${status})`;\n            }\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/prescriptions-list', ['exports', 'clinical/mixins/row-height-hack'], function (exports, _rowHeightHack) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_rowHeightHack.default, {\n        isExpanded: false,\n        items: Ember.computed(function () {\n            return [];\n        }),\n        actions: {\n            expand() {\n                this.set('isExpanded', true);\n                this._resizeRowByCell();\n            },\n            collapse() {\n                this.set('isExpanded', false);\n                this._resizeRowByCell();\n            }\n        },\n\n        sortBy: Ember.computed(() => ['prescriptionDate:desc']),\n        sortedItems: Ember.computed.sort('items', 'sortBy'),\n        filteredItems: Ember.computed('sortedItems', function () {\n            if (this.get('expandAll')) {\n                return this.get('sortedItems');\n            }\n            return this.get('sortedItems').slice(1);\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/previous-diagnoses', ['exports', 'clinical/repositories/diagnoses', 'clinical/mixins/with-diagnoses', 'common/mixins/spinner', 'charting/utils/encounter', 'tyrion/mixins/destroyed'], function (exports, _diagnoses, _withDiagnoses, _spinner, _encounter, _destroyed) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_withDiagnoses.default, _spinner.default, _destroyed.default, {\n        actions: {\n            diagnosisSelected(diagnosis) {\n                this._addTranscriptDiagnosis(diagnosis);\n            },\n            diagnosisDeselected(diagnosis) {\n                const transcriptGuid = this.get('transcriptGuid');\n                this._withProgress(_diagnoses.default.deleteTranscriptDiagnosis(diagnosis, transcriptGuid)).catch(error => this._handleSaveError(error, 'Failed to remove diagnosis', diagnosis));\n            },\n\n            addAllDiagnoses() {\n                const transcriptGuid = this.get('transcriptGuid');\n                const diagnosesToAdd = this.get('diagnoses.active').reject(diagnosis => diagnosis.isEncounterDiagnosis(transcriptGuid));\n\n                this._withProgress(_diagnoses.default.addDiagnosesToEncounter(this.get('patientGuid'), diagnosesToAdd, transcriptGuid)).catch(error => this._handleSaveError(error, 'Failed to add diagnoses'));\n            }\n        },\n        _addTranscriptDiagnosis(diagnosis) {\n            const transcriptGuid = this.get('transcriptGuid');\n            this._withProgress(_diagnoses.default.saveTranscriptDiagnosis(diagnosis, transcriptGuid, '')).catch(error => this._handleSaveError(error, 'Failed to save diagnosis', diagnosis));\n        },\n        _handleSaveError(error, message, diagnosis) {\n            let action = _diagnoses.default.mapSaveErrorToAction(error, diagnosis);\n            if (action) {\n                return;\n            }\n            action = _encounter.default.mapSaveErrorToAction(error, 403);\n            if (action) {\n                this._sendActionUnlessDestroyed(action);\n            } else {\n                toastr.error(message);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/previous-diagnosis', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        // Consumer provided properties.\n        transcriptGuid: null,\n        diagnosis: null,\n\n        isEncounterDiagnosis: Ember.computed('diagnosis.transcriptDiagnoses.[]', 'transcriptGuid', function () {\n            return this.get('diagnosis') && this.get('diagnosis').isEncounterDiagnosis(this.get('transcriptGuid'));\n        }),\n\n        actions: {\n            toggleSelection(diagnosis) {\n                var action = this.get('isEncounterDiagnosis') ? 'diagnosisDeselected' : 'diagnosisSelected';\n                this.sendAction(action, diagnosis);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/previous-medication', ['exports', 'clinical/mixins/with-medications', 'clinical/repositories/medications', 'common/mixins/spinner'], function (exports, _withMedications, _medications, _spinner) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_withMedications.default, _spinner.default, {\n        classNames: ['flex-grow', 'flex-column'],\n\n        showSpinner: Ember.computed.alias('isLoading'),\n\n        medicationsSortProperty: Ember.computed(() => ['drugName:asc']),\n        activeMedications: Ember.computed.sort('encounterMedications.active', 'medicationsSortProperty'),\n        historicalMedications: Ember.computed.sort('encounterMedications.historical', 'medicationsSortProperty'),\n\n        actions: {\n            // TODO: consider removing these two actions, they should bubble if setup correctly.\n            selectMedication(medication) {\n                this.sendAction('selectMedication', medication);\n            },\n            deselectMedication(medication) {\n                this.sendAction('deselectMedication', medication);\n            },\n\n            addAllMedications() {\n                var medicationsToAdd = this.get('encounterMedications.active.notInEncounter');\n                this._withProgress(_medications.default.addMedicationsToEncounter(this.get('patientGuid'), medicationsToAdd, this.get('transcriptGuid'))).catch(error => this.sendAction('saveError', error, 'Failed to add medications'));\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/print-allergies-section', ['exports', 'clinical/mixins/with-comments'], function (exports, _withComments) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_withComments.default, {\n        classNames: ['table']\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/print-allergies', ['exports', 'clinical/mixins/with-allergies'], function (exports, _withAllergies) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_withAllergies.default, {\n        attributeBindings: ['data-element'],\n        'data-element': 'print-allergies',\n        includeHeaderAndFooter: true,\n        patientPracticeGuid: Ember.computed.alias('patient.patientPracticeGuid'),\n        title: Ember.computed('patient.fullName', function () {\n            return 'Allergies for ' + this.get('patient.fullName');\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/print-allergy-item', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        classNames: ['row', 'no-stripe']\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/print-device', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        classNames: ['print-device-section'],\n\n        activeDisplay: Ember.computed('device.isActive', function () {\n            return this.get('device.isActive') ? 'Active' : 'Inactive';\n        }),\n\n        notesDisplay: Ember.computed('device.userEnteredInfo.userEnteredNotes', function () {\n            return this.get('device.userEnteredInfo.userEnteredNotes') || 'None';\n        }),\n\n        manufactureDateDisplay: Ember.computed('device.udiInfo.manufactureDate', function () {\n            return this._getDisplayDate(this.get('device.udiInfo.manufactureDate'));\n        }),\n\n        expirationDateDisplay: Ember.computed('device.expirationDate', function () {\n            return this._getDisplayDate(this.get('device.udiInfo.expirationDate'));\n        }),\n\n        implantDateDisplay: Ember.computed('device.expirationDate', function () {\n            return this._getDisplayDate(this.get('device.userEnteredInfo.userEnteredImplantDate'));\n        }),\n\n        lastModifiedDisplay: Ember.computed('device.lastModifiedByUserGuid', 'device.lastModifiedDate', 'users', function () {\n            const users = this.get('users');\n            const user = users.findBy('userGuid', this.get('device.lastModifiedByUserGuid'));\n            const lastModified = this.get('device.lastModifiedDateTimeUtc');\n\n            let formatted = 'Recorded';\n            if (!Ember.isEmpty(user)) {\n                formatted = `${formatted} by ${user.get('providerNameWithDegree')}`;\n            }\n            if (!Ember.isEmpty(lastModified)) {\n                formatted = `${formatted} on ${this._getDisplayDate(lastModified, true)}`;\n            }\n            return formatted;\n        }),\n\n        _getDisplayDate(dateVal, isUtc) {\n            const dateObj = isUtc ? moment.utc(dateVal) : moment(dateVal);\n            if (!dateVal || !dateObj.isValid()) {\n                return 'Unspecified';\n            }\n\n            return dateObj.format('MM/DD/YYYY');\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/print-devices-section', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        classNames: ['table', 'print-devices-section'],\n        sortAscending: false,\n        sortProperty: 'userEnteredInfo.userEnteredImplantDate',\n        users: null,\n        init() {\n            this._super();\n            this.set('users', []);\n        },\n\n        devices: Ember.computed('data', 'sortProperty', function () {\n            if (this.get('sortProperty')) {\n                return this.get('sortedData');\n            }\n            return this.get('data');\n        }),\n\n        sortProperties: Ember.computed('sortProperty', 'sortAscending', function () {\n            const sortProperties = ['isActive', this.get('sortProperty')];\n            if (this.get('sortAscending')) {\n                return sortProperties;\n            }\n            return sortProperties.map(property => `${property}:desc`);\n        }),\n        sortedData: Ember.computed.sort('data', 'sortProperties')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/print-diagnoses', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        classNames: ['print-section', 'diagnoses-print'],\n        attributeBindings: ['data-element'],\n        'data-element': 'print-diagnoses',\n        includeHeaderAndFooter: true,\n        title: Ember.computed('patient.fullName', function () {\n            return 'Diagnoses for ' + this.get('patient.fullName');\n        })\n\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/print-dropdown', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        classNames: ['btn-group', 'print-menu-group'],\n        useIcons: false,\n        attributeBindings: ['data-element'],\n        dataElement: Ember.computed.alias('data-element')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/print-external-image', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        listenForImgLoad: Ember.on('didInsertElement', function () {\n            this.$('img').on('load', function () {\n                var parentFrame = $('#print-modal-frame')[0];\n\n                parentFrame = $(parentFrame);\n                parentFrame.height(parentFrame.height() + this.height);\n            });\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/print-family-health-history-section', ['exports', 'clinical/components/print-family-health-history'], function (exports, _printFamilyHealthHistory) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _printFamilyHealthHistory.default.extend();\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/print-family-health-history', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        classNames: ['print-section'],\n        includeHeaderAndFooter: true,\n        title: Ember.computed('patient.fullName', function () {\n            return 'Family history for ' + this.get('patient.fullName');\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/print-goals-section', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        classNames: ['table']\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/print-goals', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        includeHeaderAndFooter: true,\n        noActiveGoalsText: 'No active goals recorded',\n        noInactiveGoalsText: 'No inactive goals recorded'\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/print-health-concerns', ['exports', 'clinical/mixins/with-health-concerns'], function (exports, _withHealthConcerns) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_withHealthConcerns.default, {\n        attributeBindings: ['data-element'],\n        'data-element': 'print-health-concerns-content',\n        sortProperties: Ember.computed(() => ['sortableDate:desc']),\n        sortedActiveHealthConcerns: Ember.computed.sort('activeHealthConcerns', 'sortProperties'),\n        sortedInactiveHealthConcerns: Ember.computed.sort('inactiveHealthConcerns', 'sortProperties')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/print-immunizations-section', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        includeHeaderAndFooter: true\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/print-medications-section', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        classNames: ['table'],\n        medications: Ember.computed('data', 'sortProperty', function () {\n            if (this.get('sortProperty')) {\n                return this.get('sortedData');\n            }\n            return this.get('data');\n        }),\n        sortProperties: Ember.computed('sortProperty', 'sortAscending', function () {\n            const sortProperty = this.get('sortProperty');\n            if (this.get('sortAscending')) {\n                return [sortProperty];\n            }\n            return [`${sortProperty}:desc`];\n        }),\n        sortedData: Ember.computed.sort('data', 'sortProperties'),\n        anyComments: Ember.computed.or('showComments', 'showEncounterComments', 'showScripts', 'sortProperty', 'sortAscending', 'showHistoricalMeds', 'showActiveMeds')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/print-medications', ['exports', 'clinical/mixins/with-medications'], function (exports, _withMedications) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_withMedications.default, {\n        attributeBindings: ['data-element'],\n        'data-element': 'print-medications',\n        includeHeaderAndFooter: true,\n        patientGuid: Ember.computed.alias('patient.patientPracticeGuid'),\n        classNames: ['print-section'],\n        showHistoricalMeds: true,\n        showActiveMeds: true,\n        title: Ember.computed('patient.fullName', function () {\n            return 'Medications for ' + this.get('patient.fullName');\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/print-patient-sia-section', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        classNames: ['print-section'],\n        includeHeaderAndFooter: true,\n        title: Ember.computed('patient.fullName', function () {\n            return 'Screenings/ Interventions/ Assessments for ' + this.get('patient.fullName');\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/print-social-behavioral-health-section', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        classNames: ['print-section'],\n        includeHeaderAndFooter: true,\n        title: Ember.computed('patient.fullName', function () {\n            return 'Behavioral health for ' + this.get('patient.fullName');\n        }),\n        alcoholUseWorksheet: Ember.computed.alias('content.alcoholUseWorksheet'),\n        tobaccoUse: Ember.computed.alias('content.tobaccoUse'),\n        physicalActivityWorksheet: Ember.computed.alias('content.physicalActivityWorksheet'),\n        nutritionHistory: Ember.computed.alias('content.nutritionHistory'),\n        stressWorksheet: Ember.computed.alias('content.stressWorksheet'),\n        socialIsolationWorksheet: Ember.computed.alias('content.socialIsolationWorksheet'),\n        exposureToViolenceWorksheet: Ember.computed.alias('content.exposureToViolenceWorksheet'),\n        socialHealth: Ember.computed.alias('content.socialHealth'),\n        tobaccoUsePastEntries: Ember.computed('tobaccoUse.[]', function () {\n            if (Ember.isPresent(this.get('tobaccoUse'))) {\n                return this.get('tobaccoUse.content').slice(1);\n            }\n            return [];\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/print-worksheet', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        allOtherQuestions: Ember.computed('worksheet.questions', function () {\n            return this.get('worksheet.questions').rejectBy('label', 'Patient declined to specify on all questions');\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/recent-patient-activity', ['exports', 'ember-concurrency', 'common/mixins/spinner'], function (exports, _emberConcurrency, _spinner) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_spinner.default, {\n        data: null,\n        showSpinner: Ember.computed.alias('loadData.isRunning'),\n        contentElement: '.recent-activity-content',\n        pageIndex: null,\n        didInsertElement() {\n            this._super();\n            this.send('refresh');\n        },\n        loadData: (0, _emberConcurrency.task)(function* () {\n            const { store, pageIndex, totalPages } = this.getProperties('store', 'pageIndex', 'totalPages');\n            const query = {\n                patientPracticeGuid: this.get('patientPracticeGuid'),\n                pageIndex: typeof pageIndex === 'number' ? pageIndex + 1 : 0\n            };\n\n            // Only request data if there are more records available\n            if (query.pageIndex === 0 || query.pageIndex < totalPages || query.startDate) {\n                try {\n                    const results = yield store.query('patient-activity', query);\n                    this.get('data').pushObjects(results.toArray());\n                    this.setProperties(results.get('meta'));\n                } catch (error) {\n                    toastr.error('Could not load recent activity');\n                    this.set('isVisible', false);\n                }\n            }\n        }).drop(),\n        actions: {\n            close() {\n                this.set('isVisible', false);\n            },\n            refresh() {\n                this.setProperties({\n                    refreshTime: moment(new Date()).toISOString(),\n                    data: [],\n                    pageIndex: null\n                });\n                this.get('loadData').perform();\n            },\n            fetchMoreData() {\n                this.get('loadData').perform();\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/risk-score-detail', ['exports', 'common/helpers/validation', 'ember-lgtm/mixins/validatable', 'boot/util/forum-links'], function (exports, _validation, _validatable, _forumLinks) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_validatable.default, {\n        analytics: Ember.inject.service(),\n        resizables: Ember.computed(() => []),\n\n        riskScore: Ember.computed.alias('patientRiskScore.riskScore.riskScore'),\n        riskScoreType: Ember.computed.alias('patientRiskScore.riskScore.optionGuid'),\n        dateAssigned: Ember.computed.alias('patientRiskScore.riskScore.dateAssigned'),\n        dateMax: moment(new Date()).format('MM/DD/YYYY'),\n        canDelete: Ember.computed.notEmpty('persistedRiskScore.optionGuid'),\n        riskScoreHelpHtml: `Document patient risk score for six common risk score types or enter practice-specific risk scores. <a href=\"${_forumLinks.default.getHelpUrlForPath('pf.charts.patients.summary.risk-score')}\" target=\"_blank\">Learn more</a>`,\n        showDeleteConfirm: false,\n        validator: _validation.default.validator().validates('riskScoreType').required('Please select a risk score type').validates('riskScore').required('Please enter a numeric risk score').using(value => {\n            return (/^\\d{1,3}(\\.\\d{0,3})?$/.test(value)\n            );\n        }, 'Scores are limited to positive numbers below 1000 with up to 3 decimal places').validates('dateAssigned').required('Date assigned is required').isDate('Please enter a valid date').using(value => {\n            return moment(value) <= moment();\n        }, 'Cannot select a future date').build(),\n\n        actions: {\n            delete() {\n                this.set('showDeleteConfirm', true);\n                this.sendAction('delete');\n            },\n            showDelete() {\n                this.set('showDeleteConfirm', true);\n            },\n            save() {\n                const patientRiskScore = this.get('patientRiskScore');\n                this.validate().then(isValid => {\n                    if (Ember.isEmpty(patientRiskScore) || !isValid) {\n                        return;\n                    }\n                    this.get('analytics').track('Save Patient Risk Score');\n                    this.sendAction('save');\n                });\n            },\n            cancel() {\n                this.sendAction('cancel');\n            },\n            closeDeleteConfirm() {\n                this.set('showDeleteConfirm', false);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/sia-worksheet/default-v2', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        classNames: ['worksheet-details-v2'],\n        disabled: false,\n        permittedStates: Ember.computed(() => []),\n        statusOptions: Ember.computed('permittedStates.[]', function () {\n            return (this.get('permittedStates') || []).map(option => {\n                return {\n                    label: option,\n                    value: option\n                };\n            });\n        }),\n        reason: null,\n        reasonCode: null,\n        reasonCodes: null,\n        responses: null,\n        selectedStatus: null,\n        selectedStatusOption: Ember.computed('selectedStatus', function () {\n            return { value: this.get('selectedStatus'), label: this.get('selectedStatus') };\n        }),\n\n        actions: {\n            responseChecked(question, option) {\n                const value = option.value.split('-')[0] ? option.value.split('-')[0] : 0;\n                const componentGuid = question.get('componentGuid');\n\n                question.setInternalValue(parseInt(value, 10));\n\n                this.get('responses.questions').forEach(responseQuestion => {\n                    if (responseQuestion.get('isConditionalComponent') && responseQuestion.get('conditionalComponentGuid') === componentGuid) {\n                        responseQuestion.set('conditionalQuestionValue', question.get('value'));\n                    }\n                });\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/sia-worksheet/default', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        classNames: ['side-fixed', 'col-xs-6', 'worksheet-details'],\n\n        disabled: false,\n        permittedStates: null,\n        reason: null,\n        reasonCode: null,\n        reasonCodes: null,\n        responses: null,\n        resizables: Ember.computed(() => []),\n        selectedStatus: null,\n\n        actions: {\n            responseChecked(question, option) {\n                const value = option.value.split('-')[0] ? option.value.split('-')[0] : 0;\n                const componentGuid = question.get('componentGuid');\n\n                question.setInternalValue(parseInt(value, 10));\n\n                this.get('responses.questions').forEach(responseQuestion => {\n                    if (responseQuestion.get('isConditionalComponent') && responseQuestion.get('conditionalComponentGuid') === componentGuid) {\n                        responseQuestion.set('conditionalQuestionValue', question.get('value'));\n                    }\n                });\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/sia-worksheet/depression-phq-2-v2', ['exports', 'clinical/components/sia-worksheet/default-v2'], function (exports, _defaultV) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _defaultV.default.extend({\n        init() {\n            this._super();\n            if (Ember.isEmpty(this.get('selectedStatus'))) {\n                this.set('selectedStatus', 'Performed');\n            }\n            if (Ember.isEmpty(this.get('responses.startDateTimeUtc'))) {\n                this.set('responses.startDateTime', moment.utc(this.get('responses.encounterDateOfService')).format('MM/DD/YYYY hh:mm A'));\n            }\n            this.handleDeclinedToSpecifyChecked(this.get('responses.declinedToSpecifyQuestion'));\n        },\n        actions: {\n            responseChecked(question, option) {\n                question.handleOptionChecked(option);\n            },\n            declineChecked(declinedToSpecifyQuestion) {\n                declinedToSpecifyQuestion.handleDeclinedToSpecifyChecked();\n                this.handleDeclinedToSpecifyChecked(declinedToSpecifyQuestion);\n            },\n            undo(question) {\n                question.undo();\n            }\n        },\n        handleDeclinedToSpecifyChecked(declinedToSpecifyQuestion) {\n            const isChecked = Ember.get(declinedToSpecifyQuestion, 'value') === 1;\n            if (isChecked) {\n                this.get('responses.scorableQuestions').forEach(question => {\n                    Ember.setProperties(question, {\n                        value: null,\n                        selectedOptionValue: null,\n                        isEnabled: false,\n                        isResetByDecline: true\n                    });\n                });\n            } else {\n                this.get('responses.scorableQuestions').forEach(question => {\n                    Ember.setProperties(question, {\n                        isEnabled: true,\n                        isResetByDecline: false\n                    });\n                });\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/sia-worksheet/migraine-v2', ['exports', 'clinical/components/sia-worksheet/default-v2'], function (exports, _defaultV) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _defaultV.default.extend({\n        classNames: ['migraine-worksheet-details'],\n\n        maxInputValue: 92,\n        numericInputValues: Ember.computed('maxInputValue', function () {\n            const maxInputValue = this.get('maxInputValue') || 0;\n            const values = [];\n            for (let i = 0; i <= maxInputValue; i += 1) {\n                values.push({ value: i, label: `${i}` });\n            }\n\n            return values;\n        }),\n\n        actions: {\n            responseEntered(question, response) {\n                const value = parseInt(response, 10);\n                if (isNaN(value)) {\n                    return;\n                }\n                question.set('rangeError', '');\n\n                if (value < 0) {\n                    question.set('rangeError', '0-92 days only.');\n                    return;\n                }\n                if (value > 92) {\n                    question.set('rangeError', '92 days or less only.');\n                    return;\n                }\n\n                question.setInternalValue(value);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/sia-worksheet/migraine', ['exports', 'clinical/components/sia-worksheet/default'], function (exports, _default) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _default.default.extend({\n        classNames: ['migraine-worksheet-details'],\n\n        maxInputValue: 92,\n        score: Ember.computed.alias('responses.score'),\n        midasAssessmentResult: Ember.computed.alias('responses.midasAssessmentResult'),\n\n        numericInputValues: Ember.computed('maxInputValue', function () {\n            const maxInputValue = this.get('maxInputValue') || 0;\n            const values = [];\n            for (let i = 0; i <= maxInputValue; i += 1) {\n                values.push({ value: i, label: `${i}` });\n            }\n\n            return values;\n        }),\n\n        isComplete: Ember.computed.alias('responses.isComplete'),\n\n        actions: {\n            responseEntered(question, response) {\n                const value = parseInt(response, 10);\n                if (isNaN(value)) {\n                    return;\n                }\n                question.set('rangeError', '');\n\n                if (value < 0) {\n                    question.set('rangeError', '0-92 days only.');\n                    return;\n                }\n                if (value > 92) {\n                    question.set('rangeError', '92 days or less only.');\n                    return;\n                }\n\n                question.setInternalValue(value);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/sia-worksheet/transcript-event-fields', ['exports', 'charting/mixins/sia-date'], function (exports, _siaDate) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_siaDate.default, {\n        tooltipClass: Ember.computed('errors', function () {\n            return 'sia-start-date-picker box-margin-Bxs';\n        }),\n        startDateTimeUtc: Ember.computed.alias('responses.startDateTime'),\n        endDateTimeUtc: Ember.computed.alias('responses.endDateTime'),\n        errorChangeObserver: Ember.observer('errors', function () {\n            // when only startDateTime is entered, errors has empty startDateTimeUtc and endDateTimeUtc properties\n            const errors = this.get('errors');\n            if (_.isEmpty(errors) || Ember.isEmpty(errors.startDateTimeUtc) && Ember.isEmpty(errors.endDateTimeUtc)) {\n                this.attrs.setErrors(null);\n            } else {\n                this.attrs.setErrors(errors);\n            }\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/smoking-status-detail-v2', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        tunnel: Ember.inject.service(),\n        analytics: Ember.inject.service(),\n\n        bigHeaderText: Ember.computed('isAllowedToEdit', function () {\n            return this.get('isAllowedToEdit') ? 'Record' : 'Review';\n        }),\n        smallHeaderText: 'Tobacco use',\n        maxDate: moment(new Date()).format('MM/DD/YYYY'),\n        patientPracticeGuid: Ember.computed.alias('smokingStatus.patientPracticeGuid'),\n        showUndo: Ember.computed('selectedValueImage', 'inActiveSmokingStatusType', 'isDirty', function () {\n            // when user change the selection from old options to new options, don't show UNDO\n            if (Ember.isPresent(this.get('inActiveSmokingStatusType'))) {\n                return this.get('isDirty') && this.get('inActiveSmokingStatusType.smokingStatusGuid') !== this.get('selectedValueImage');\n            }\n            return this.get('isDirty');\n        }),\n        disableOldOption: Ember.computed('isNotAllowedToEdit', 'smokingStatus.smokingStatusGuid', 'inActiveSmokingStatusType', function () {\n            if (Ember.isPresent(this.get('inActiveSmokingStatusType'))) {\n                return this.get('isNotAllowedToEdit') || this.get('smokingStatus.smokingStatusGuid') !== this.get('inActiveSmokingStatusType.smokingStatusGuid');\n            }\n        }),\n        isDirty: Ember.computed('smokingStatus.smokingStatusGuid', 'selectedValueImage', function () {\n            return this.get('smokingStatus.smokingStatusGuid') !== this.get('selectedValueImage');\n        }),\n        showSave: Ember.computed.or('smokingStatus.isNew', 'isDirty'),\n        actions: {\n            delete() {\n                this.sendAction('delete');\n            },\n            save() {\n                const sectionTitle = 'Tobacco use';\n                const event = this.get('showSave') ? 'Social Behavioral Health Saved' : 'Social Behavioral Health Reviewed';\n                const properties = this.get('showSave') ? { 'Section': sectionTitle, 'Completed Questionnaire': !this.get('smokingStatus.saveDisabled') } : { 'Section': sectionTitle };\n\n                this.get('tunnel').send('patient-summary-mixpanel-event', { event, properties });\n                this.get('analytics').track('Save Smoking Status');\n                this.sendAction('save');\n            },\n            cancel() {\n                this.get('tunnel').send('patient-summary-mixpanel-event', {\n                    event: 'Social Behavioral Health Cancelled',\n                    properties: {\n                        'Section': 'Tobacco use',\n                        'Completed Questionnaire': !this.get('smokingStatus.saveDisabled')\n                    }\n                });\n                this.sendAction('cancel');\n            },\n            undo() {\n                this.sendAction('undo');\n            },\n            closeDetailPane() {\n                this.sendAction('cancel');\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/smoking-status-detail', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        analytics: Ember.inject.service(),\n        tunnel: Ember.inject.service(),\n        maxDate: moment(new Date()).format('MM/DD/YYYY'),\n        resizables: null,\n        init() {\n            this._super();\n            this.set('resizables', []);\n        },\n        actions: {\n            delete() {\n                this.sendAction('delete');\n            },\n            save() {\n                this.get('analytics').track('Save Smoking Status');\n                this.sendAction('save');\n            },\n            cancel() {\n                this.sendAction('cancel');\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/social-behavioral-health', ['exports', 'charting/mixins/with-patient-print-title', 'ember-concurrency', 'clinical/repositories/worksheets'], function (exports, _withPatientPrintTitle, _emberConcurrency, _worksheets) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    const canHaveMultipleRecord = {\n        'tobaccoUse': true\n    };\n    exports.default = Ember.Component.extend(_withPatientPrintTitle.default, {\n        analytics: Ember.inject.service(),\n        authorization: Ember.inject.service('authorization'),\n        routing: Ember.inject.service('pf-routing'),\n\n        alcoholUse: null,\n        card: null,\n        error: false,\n        fieldBeingEdited: null,\n        exposureToViolence: null,\n        nutritionHistory: null,\n        patient: null,\n        physicalActivity: null,\n        socialHealth: null,\n        socialIsolation: null,\n        stress: null,\n        worksheetResponsesGuids: null,\n\n        isLoading: Ember.computed.or('loadBehavioralHealth.isRunning', 'loadSocialHealth.isRunning'),\n        patientPracticeGuid: Ember.computed.alias('patient.patientPracticeGuid'),\n\n        // give non-empty social history content an ID for highlight purpose\n        education: Ember.computed('socialHealth.education', function () {\n            const content = this.get('socialHealth.education.content');\n            return Ember.isPresent(content) ? { content: Ember.merge({ id: 'education' }, content) } : { content };\n        }),\n        financialResourceStatus: Ember.computed('socialHealth.financialResourceStatus', function () {\n            const content = this.get('socialHealth.financialResourceStatus.content');\n            return Ember.isPresent(content) ? { content: Ember.merge({ id: 'financialResourceStatus' }, content) } : { content };\n        }),\n        genderIdentity: Ember.computed('socialHealth.genderIdentity', function () {\n            const content = this.get('socialHealth.genderIdentity.content');\n            return Ember.isPresent(content) ? { content: Ember.merge({ id: 'genderIdentity' }, content) } : { content };\n        }),\n        sexualOrientation: Ember.computed('socialHealth.sexualOrientation', function () {\n            const content = this.get('socialHealth.sexualOrientation.content');\n            return Ember.isPresent(content) ? { content: Ember.merge({ id: 'sexualOrientation' }, content) } : { content };\n        }),\n        socialHistory: Ember.computed('socialHealth.socialHistory', function () {\n            const content = this.get('socialHealth.socialHistory.content');\n            return Ember.isPresent(content) ? { content: Ember.merge({ id: 'socialHistory' }, content) } : { content };\n        }),\n\n        isAllowedToEdit: Ember.computed('authorization.entitledFeatures.[]', function () {\n            return this.get('authorization').isEntitledFor('Chart.Summary.Edit'); // TODO: Edit when new feature code is added to DB (Chart.BehavioralHealth.Edit)\n        }),\n        cardFields: Ember.computed('card.activeFields.[]', 'alcoholUse', 'tobaccoUse', 'physicalActivity', 'nutritionHistory', 'stress', 'socialIsolation', 'exposureToViolence', 'socialHealth', 'fieldBeingEdited', function () {\n            const fieldBeingEdited = this.get('fieldBeingEdited');\n            return this.get('card.activeFields').filterBy('isVisible').map(field => {\n                const key = field.get('key');\n                return Ember.Object.create({\n                    title: field.get('displayTitle'),\n                    key,\n                    content: this.get(`${key}.isEmpty`) ? [] : this.get(`${key}.content`),\n                    worksheet: this.get(`${key}.worksheet`),\n                    canHaveMultipleRecord: canHaveMultipleRecord[key],\n                    isEditing: key === fieldBeingEdited\n                });\n            });\n        }),\n        printInfo: Ember.computed('alcoholUseWorksheetPrint', 'tobaccoUse.[]', 'physicalActivityWorksheetPrint', 'nutritionHistoryPrint', 'stressWorksheetPrint', 'socialIsolationWorksheetPrint', 'exposureToViolenceWorksheetPrint', 'socialHealth', function () {\n            return {\n                alcoholUseWorksheet: this.get('alcoholUseWorksheetPrint'),\n                tobaccoUse: this.get('tobaccoUse'),\n                physicalActivityWorksheet: this.get('physicalActivityWorksheetPrint'),\n                nutritionHistory: this.get('nutritionHistory'),\n                stressWorksheet: this.get('stressWorksheetPrint'),\n                socialIsolationWorksheet: this.get('socialIsolationWorksheetPrint'),\n                exposureToViolenceWorksheet: this.get('exposureToViolenceWorksheetPrint'),\n                socialHealth: this.get('socialHealth')\n            };\n        }),\n        loadBehavioralHealth: (0, _emberConcurrency.task)(function* ({ patientPracticeGuid, reload }) {\n            if (Ember.isEmpty(patientPracticeGuid)) {\n                patientPracticeGuid = this.get('patientPracticeGuid');\n            }\n            try {\n                const data = yield this.get('store').findRecord('behavioral-health', patientPracticeGuid, { reload });\n\n                if (data) {\n                    if (Ember.isEmpty(data.get('errorMessages'))) {\n                        this.setProperties({\n                            error: false,\n                            alcoholUse: data.get('alcoholUse'),\n                            physicalActivity: data.get('physicalActivity'),\n                            nutritionHistory: data.get('nutritionHistory'),\n                            stress: data.get('stress'),\n                            socialIsolation: data.get('socialIsolation'),\n                            exposureToViolence: data.get('exposureToViolence'),\n                            worksheetResponsesGuids: data.get('worksheetResponsesGuids')\n                        });\n                        const tobaccoUse = yield this.get('store').query('smoking-status', { patientPracticeGuid: this.get('patientPracticeGuid') }, { reload });\n                        this.set('tobaccoUse', {\n                            content: tobaccoUse.toArray().sortBy('effectiveDate').reverse(),\n                            worksheet: data.get('tobaccoUse.worksheet')\n                        });\n                    } else {\n                        throw 'error';\n                    }\n                }\n            } catch (e) {\n                this.setProperties({\n                    error: true,\n                    alcoholUse: null,\n                    tobaccoUse: null,\n                    physicalActivity: null,\n                    nutritionHistory: null,\n                    stress: null,\n                    socialIsolation: null,\n                    exposureToViolence: null\n                });\n            }\n        }).drop(),\n        loadSocialHealth: (0, _emberConcurrency.task)(function* (patientPracticeGuid) {\n            try {\n                const socialHealth = yield this.get('store').findRecord('social-health', patientPracticeGuid);\n                this.set('socialHealth', socialHealth);\n            } catch (e) {\n                this.set('error', true);\n            }\n        }).drop(),\n        loadWorksheet: (0, _emberConcurrency.task)(function* (propertyName, responsesGuid) {\n            try {\n                const responses = yield _worksheets.default.loadResponses(responsesGuid);\n                this.set(propertyName, responses);\n            } catch (e) {\n                this.set('error', true);\n            }\n        }).drop(),\n        loadPrintInfo: (0, _emberConcurrency.task)(function* () {\n            const worksheetResponsesGuids = this.get('worksheetResponsesGuids');\n            for (let worksheet in worksheetResponsesGuids) {\n                if (worksheetResponsesGuids[worksheet]) {\n                    const worksheetGuid = worksheetResponsesGuids[worksheet];\n                    yield this.get('loadWorksheet').perform(`${worksheet}Print`, worksheetGuid);\n                } else {\n                    this.set(`${worksheet}Print`, null);\n                }\n            }\n        }).drop(),\n        print: (0, _emberConcurrency.task)(function* () {\n            yield this.get('loadPrintInfo').perform();\n            yield this.get('store').findRecord('patient', this.get('patientPracticeGuid'));\n\n            this.sendAction('printAudit', 'SocialHistory');\n            this.set('isPrintPreviewVisible', true);\n        }).drop(),\n        init() {\n            this._super();\n            const patientPracticeGuid = this.get('patientPracticeGuid');\n            this.get('loadBehavioralHealth').perform({ patientPracticeGuid });\n            this.get('loadSocialHealth').perform(patientPracticeGuid);\n        },\n        editWorksheet(worksheet, fieldContent) {\n            this.get('routing').transitionToRoute('summary.behavioral', worksheet.worksheetGuid, Ember.isPresent(fieldContent) ? fieldContent.worksheetResponseGuid : 'new');\n        },\n        createSmokingStatus() {\n            const status = this.get('store').createRecord('smoking-status', {\n                effectiveDate: new Date(),\n                patientPracticeGuid: this.get('patientPracticeGuid')\n            });\n            this.get('routing').transitionToRoute('summary.smoking', status.get('patientPracticeGuid'), status);\n        },\n        editSmokingStatus(status) {\n            this.get('routing').transitionToRoute('summary.smoking', status.get('patientPracticeGuid'), status);\n        },\n        editNutritionHistory() {\n            this.get('routing').transitionToRoute('summary.nutrition');\n        },\n        transitionToFieldDetails(field, fieldContent) {\n            const fieldKey = field.get('key');\n            const worksheet = Ember.get(field, 'worksheet') || {};\n\n            switch (fieldKey) {\n                case 'tobaccoUse':\n                    if (Ember.isPresent(fieldContent) && Ember.isPresent(Ember.get(fieldContent, 'smokingStatusGuid'))) {\n                        this.editSmokingStatus(fieldContent);\n                        this.attrs.setControllerProperties({\n                            selectedItem: Ember.get(fieldContent, 'id')\n                        });\n                    } else {\n                        this.createSmokingStatus();\n                        this.attrs.setControllerProperties({\n                            selectedItem: null\n                        });\n                    }\n                    break;\n                case 'nutritionHistory':\n                    this.editNutritionHistory();\n                    this.attrs.setControllerProperties({\n                        selectedItem: 'nutritionHistory'\n                    });\n                    break;\n                case 'education':\n                case 'financialResourceStatus':\n                case 'genderIdentity':\n                case 'sexualOrientation':\n                case 'socialHistory':\n                    this.get('routing').transitionToRoute('summary.social-health', fieldKey);\n                    this.attrs.setControllerProperties({\n                        selectedItem: fieldKey\n                    });\n                    break;\n                default:\n                    if (Ember.isPresent(worksheet.worksheetGuid)) {\n                        this.editWorksheet(worksheet, fieldContent);\n                    }\n                    this.attrs.setControllerProperties({\n                        selectedItem: worksheet.worksheetGuid\n                    });\n                    break;\n            }\n        },\n        actions: {\n            create(field) {\n                this.transitionToFieldDetails(field);\n                this.get('analytics').track('Social Behavioral Health Plus Icon Clicked', {\n                    'Section': Ember.get(field, 'title')\n                });\n            },\n            edit(field, fieldContent) {\n                this.transitionToFieldDetails(field, fieldContent);\n            },\n            refreshSocialHealth() {\n                const socialHealth = this.get('store').peekRecord('social-health', this.get('patientPracticeGuid'));\n                this.set('socialHealth', socialHealth);\n                this.notifyPropertyChange('socialHealth');\n            },\n            setIsEditing(options) {\n                if (options.isEditing) {\n                    this.set('fieldBeingEdited', options.fieldKey);\n                } else {\n                    this.set('fieldBeingEdited', null);\n                }\n            },\n            updateTobaccoUse(options) {\n                this.set('tobaccoUse.content', options.smokingStatuses);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/social-health/field-details', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        isNotAllowedToEdit: false,\n        content: null,\n\n        isNotesDisabled: Ember.computed('isNotAllowedToEdit', 'content.optionGuid', function () {\n            return Ember.isEmpty(this.get('content.optionGuid')) || this.get('isNotAllowedToEdit');\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/social-health/gender-identity-details', ['exports', 'clinical/components/social-health/field-details'], function (exports, _fieldDetails) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _fieldDetails.default.extend();\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/social-health/sexual-orientation-details', ['exports', 'clinical/components/social-health/field-details'], function (exports, _fieldDetails) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _fieldDetails.default.extend();\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/social-history-detail', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        analytics: Ember.inject.service(),\n        authorization: Ember.inject.service(),\n        resizables: Ember.computed(() => []),\n        showDeleteGenderIdentityConfirm: false,\n        showDeleteSexualOrientationConfirm: false,\n\n        selectedGenderIdentity: Ember.computed('socialHistory.genderIdentity', {\n            get() {\n                return this.get('socialHistory.genderIdentity.optionGuid');\n            },\n            set(key, value) {\n                const options = this.get('socialHistoryOptions.genderIdentityOptions');\n                if (Ember.isEmpty(value) || Ember.isEmpty(options)) {\n                    this.set('socialHistory.genderIdentity', null);\n                    return true;\n                }\n                const selected = options.findBy('optionGuid', value);\n                this.set('socialHistory.genderIdentity', {\n                    optionGuid: selected.get('optionGuid'),\n                    description: selected.get('description'),\n                    notes: this.get('socialHistory.genderIdentity.notes')\n                });\n                return true;\n            }\n        }),\n        selectedSexualOrientation: Ember.computed('socialHistory.sexualOrientation', {\n            get() {\n                return this.get('socialHistory.sexualOrientation.optionGuid');\n            },\n            set(key, value) {\n                const options = this.get('socialHistoryOptions.sexualOrientationOptions');\n                if (Ember.isEmpty(value) || Ember.isEmpty(options)) {\n                    this.set('socialHistory.sexualOrientation', null);\n                    return true;\n                }\n                const selected = options.findBy('optionGuid', value);\n                this.set('socialHistory.sexualOrientation', {\n                    optionGuid: selected.get('optionGuid'),\n                    description: selected.get('description'),\n                    notes: this.get('socialHistory.sexualOrientation.notes')\n                });\n                return true;\n            }\n        }),\n        isNoGenderIdentity: Ember.computed('socialHistory.genderIdentity', function () {\n            const genderIdentity = this.get('socialHistory.genderIdentity');\n            return Ember.isEmpty(genderIdentity) || Ember.isEmpty(genderIdentity.optionGuid);\n        }),\n        isNoSexualOrientation: Ember.computed('socialHistory.sexualOrientation', function () {\n            const sexualOrientation = this.get('socialHistory.sexualOrientation');\n            return Ember.isEmpty(sexualOrientation) || Ember.isEmpty(sexualOrientation.optionGuid);\n        }),\n        isGenderIdentityExpanded: Ember.computed('socialHistory.defaultSection', {\n            get() {\n                return this.get('socialHistory.defaultSection') === 'identity';\n            },\n            set(key, value) {\n                if (value) {\n                    this.set('socialHistory.defaultSection', 'identity');\n                }\n                return true;\n            }\n        }),\n        isSexualOrientationExpanded: Ember.computed('socialHistory.defaultSection', {\n            get() {\n                return this.get('socialHistory.defaultSection') === 'orientation';\n            },\n            set(key, value) {\n                if (value) {\n                    this.set('socialHistory.defaultSection', 'orientation');\n                }\n                return true;\n            }\n        }),\n        persistedGenderIdentityGuid: Ember.computed.alias('persistedHistory.genderIdentity.optionGuid'),\n        persistedSexualOrientationGuid: Ember.computed.alias('persistedHistory.sexualOrientation.optionGuid'),\n        isAllowedToEditSocialHistory: Ember.computed('authorization.entitledFeatures.[]', function () {\n            return this.get('authorization').isEntitledFor('Chart.SocialHistory.Edit');\n        }),\n        canDeleteGenderIdentity: Ember.computed.and('persistedGenderIdentityGuid', 'isGenderIdentityExpanded', 'isAllowedToEditSocialHistory'),\n        canDeleteSexualOrientation: Ember.computed.and('persistedSexualOrientationGuid', 'isSexualOrientationExpanded', 'isAllowedToEditSocialHistory'),\n        setPersisted: Ember.on('init', function () {\n            const socialHistory = this.get('socialHistory');\n            this.set('persistedHistory', {\n                genderIdentity: socialHistory.get('genderIdentity'),\n                sexualOrientation: socialHistory.get('sexualOrientation')\n            });\n        }),\n        actions: {\n            deleteGenderIdentity() {\n                this.send('hideDeleteModals');\n                this.sendAction('delete', { name: 'genderIdentity', description: 'Gender identity' });\n                this.set('persistedHistory.genderIdentity', null);\n            },\n            deleteSexualOrientation() {\n                this.send('hideDeleteModals');\n                this.sendAction('delete', { name: 'sexualOrientation', description: 'Sexual orientation' });\n                this.set('persistedHistory.sexualOrientation', null);\n            },\n            showDelete(section) {\n                this.send('hideDeleteModals');\n                if (section === 'genderIdentity') {\n                    this.set('showDeleteGenderIdentityConfirm', true);\n                }\n                if (section === 'sexualOrientation') {\n                    this.set('showDeleteSexualOrientationConfirm', true);\n                }\n            },\n            save() {\n                this.get('analytics').track('Save Social History');\n                this.setPersisted();\n                this.sendAction('save');\n            },\n            cancel() {\n                this.sendAction('cancel');\n            },\n            hideDeleteModals() {\n                this.set('showDeleteGenderIdentityConfirm', false);\n                this.set('showDeleteSexualOrientationConfirm', false);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/summary-devices-list-item', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        attributeBindings: ['data-element'],\n        tagName: 'li',\n        classNameBindings: ['isSelected:is-active'],\n        isSelected: Ember.computed('selectedDeviceGuid', 'device.healthcareDeviceGuid', function () {\n            return this.get('selectedDeviceGuid') === this.get('device.healthcareDeviceGuid');\n        }),\n\n        displayName: Ember.computed.alias('device.userEnteredInfo.userEnteredDeviceTypeName'),\n\n        implantDate: Ember.computed('device.userEntered.implantDate', function () {\n            return this._getDisplayDate(this.get('device.userEnteredInfo.userEnteredImplantDate'));\n        }),\n\n        expirationDate: Ember.computed('device.expirationDate', function () {\n            return this._getDisplayDate(this.get('device.udiInfo.expirationDate'));\n        }),\n\n        click() {\n            this.attrs.editDevice(this.get('device'));\n        },\n        _getDisplayDate(dateVal) {\n            if (!dateVal || !moment(dateVal).isValid) {\n                return 'Unspecified';\n            }\n            return moment(dateVal).utc().format('MM/DD/YYYY');\n        }\n\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/summary-devices-list', ['exports', 'clinical/mixins/with-devices'], function (exports, _withDevices) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_withDevices.default, {\n        classNames: ['devices'],\n        showInactiveDevices: false,\n\n        patient: null,\n        patientGuid: Ember.computed.alias('patient.patientPracticeGuid')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/summary-encounter-list', ['exports', 'ember-concurrency', 'charting/repositories/encounter-summaries'], function (exports, _emberConcurrency, _encounterSummaries) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        patientService: Ember.inject.service('patient'),\n        routing: Ember.inject.service('pf-routing'),\n        classNames: ['encounter-list'],\n        isLoading: Ember.computed.alias('loadEncountersTask.isRunning'),\n\n        patient: null,\n        patientPracticeGuid: Ember.computed.alias('patient.patientPracticeGuid'),\n\n        init() {\n            this._super();\n            const onRefreshChart = () => this.get('loadEncountersTask').perform();\n            this.get('patientService').on('refreshChart', onRefreshChart);\n            this.set('onRefreshChart', onRefreshChart);\n            this.get('loadEncountersTask').perform();\n        },\n        willDestroyElement() {\n            this._super();\n            const onRefreshChart = this.get('onRefreshChart');\n            if (onRefreshChart) {\n                this.get('patientService').off('refreshChart', onRefreshChart);\n            }\n        },\n        loadEncounters: Ember.observer('patientPracticeGuid', function () {\n            this.get('loadEncountersTask').perform();\n        }),\n        loadEncountersTask: (0, _emberConcurrency.task)(function* () {\n            try {\n                const encounters = yield _encounterSummaries.default.loadEncounters(this.get('store'), this.get('patientPracticeGuid'));\n                this.set('error', false);\n                this.set('encounters', encounters);\n            } catch (e) {\n                this.set('error', true);\n                this.set('encounters', null);\n            }\n        }).restartable(),\n        visibleEncounters: Ember.computed('encounters', function () {\n            const encounters = this.get('encounters');\n            if (!encounters) {\n                return null;\n            }\n            return encounters.get('length') > 5 ? encounters.slice(0, 5) : encounters;\n        }),\n        hasMoreEncounters: Ember.computed.gt('encounters.length', 5),\n        actions: {\n            openEncounter(encounter) {\n                this.get('routing').transitionToRoute('encounter', encounter.get('transcriptGuid'));\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/summary-sia-list-item', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        tagName: 'li',\n        classNameBindings: ['isSelected:is-active'],\n        isSelected: Ember.computed('selectedItem', 'sia', function () {\n            return this.get('selectedItem') === this.get('sia.id');\n        }),\n        click() {\n            this.attrs.edit(this.get('sia'));\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/summary-sia-list', ['exports', 'ember-concurrency', 'charting/mixins/with-patient-print-title'], function (exports, _emberConcurrency, _withPatientPrintTitle) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_withPatientPrintTitle.default, {\n        routing: Ember.inject.service('pf-routing'),\n        patientPracticeGuid: Ember.computed.alias('patient.patientPracticeGuid'),\n        isError: false,\n        errorText: null,\n        isLoading: Ember.computed.alias('loadSIA.isRunning'),\n        isPrintPreviewVisible: false,\n        pageNumber: 0,\n        totalItems: 0,\n        patientSummarySIAs: Ember.computed(() => []),\n        printSummarySIAs: Ember.computed(() => []),\n        restSIAsCount: Ember.computed('totalItems', 'patientSummarySIAs.[]', function () {\n            return this.get('totalItems') - this.get('patientSummarySIAs').length;\n        }),\n        showLoadMore: Ember.computed('restSIAsCount', function () {\n            return this.get('restSIAsCount') > 0;\n        }),\n        loadSIAs: (0, _emberConcurrency.task)(function* () {\n            const pageNumber = this.get('pageNumber');\n            const patientPracticeGuid = this.get('patientPracticeGuid');\n            try {\n                const data = yield this.get('store').query('patient-summary-sia', { patientPracticeGuid, pageNumber });\n                const patientSummarySIAs = data.toArray() || [];\n                this.get('patientSummarySIAs').pushObjects(patientSummarySIAs);\n                this.setProperties({\n                    totalItems: data.get('meta.totalItems'),\n                    pageNumber: pageNumber + 1,\n                    isError: false,\n                    errorText: null\n                });\n            } catch (e) {\n                this.setProperties({\n                    isError: true,\n                    errorText: 'Failed to load screening/interventions/assessments. Try again later.'\n                });\n            }\n        }).drop(),\n        init() {\n            this._super();\n            this.setProperties({\n                isError: false,\n                errorText: null\n            });\n            this.get('loadSIAs').perform();\n        },\n        actions: {\n            edit(sia) {\n                if (Ember.isPresent(sia)) {\n                    const transcriptEventGuid = sia.get('transcriptEventGuid');\n                    // TODO: update when the route is complete\n                    this.get('routing').transitionToRoute('summary.sia', transcriptEventGuid);\n                    this.attrs.setControllerProperties({\n                        selectedItem: transcriptEventGuid\n                    });\n                }\n            },\n            print() {\n                const patientPracticeGuid = this.get('patientPracticeGuid');\n                this.get('store').query('patient-summary-sia', { patientPracticeGuid }).then(data => {\n                    const printSummarySIAs = data.toArray();\n                    this.set('printSummarySIAs', printSummarySIAs);\n                    this.sendAction('printAudit', 'PatientSummarySias');\n                    this.set('isPrintPreviewVisible', true);\n                });\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/text-area-counter', ['exports', 'common/components/d-text-area'], function (exports, _dTextArea) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _dTextArea.default.extend({\n        dataElement: 'text-area-counter',\n        canShowCounter: false,\n        isDisabled: false,\n        charactersRemaining: Ember.computed('maxlength', 'textlength', function () {\n            return Math.max(0, this.get('maxlength') - this.get('textlength'));\n        }),\n        // http://stackoverflow.com/questions/10030921/chrome-counts-characters-wrong-in-textarea-with-maxlength-attribute\n        // Chrome and FF count new lines as 2 characters (\\r\\n) for the maxlength attribute.\n        textlength: Ember.computed('value', function () {\n            var value = this.get('value'),\n                newLines,\n                addition;\n            if (value) {\n                newLines = value.match(/(\\r\\n|\\n|\\r)/g);\n                addition = newLines ? newLines.length : 0;\n                return value.length + addition;\n            }\n            return 0;\n        }),\n        didInsertElement() {\n            this._super();\n\n            var _this = this;\n\n            this.$('textarea').focus(function () {\n                _this.set('canShowCounter', true);\n            });\n\n            this.$('textarea').blur(function () {\n                _this.set('canShowCounter', false);\n            });\n        },\n        willDestroyElement() {\n            //Remove all event handlers.\n            this.$('textarea').off();\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/transcript-comment', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend({\n        attributeBindings: ['data-element'],\n        oneline: true,\n        isCollapsible: true,\n        commentText: Ember.computed.or('transcriptComment.comment', 'comment'),\n        providerGuid: Ember.computed.or('transcriptComment.lastModifiedByProviderGuid', 'transcriptComment.lastModifiedProviderGuid'),\n        lastModified: Ember.computed.or('transcriptComment.lastModifiedDateTimeUtc', 'transcriptComment.lastModifiedAt'),\n        date: Ember.computed('transcriptComment.transcriptGuid', 'transcriptComment.lastModified', 'transcriptComment.dateOfService', function () {\n            if (this.get('transcriptComment.transcriptGuid')) {\n                return this.get('transcriptComment.dateOfService');\n            }\n            return this.get('lastModified');\n        }),\n        convertToLocalTime: Ember.computed.bool('transcriptComment.transcriptGuid'),\n        providerName: Ember.computed('providerGuid', function () {\n            var providerGuid = this.get('providerGuid'),\n                provider;\n            if (!Ember.isEmpty(providerGuid)) {\n                provider = this.store.peekRecord('provider', providerGuid);\n                if (provider) {\n                    return provider.get('providerName');\n                }\n            }\n            return null;\n        }),\n        actions: {\n            toggleOneLine() {\n                this.toggleProperty('oneline');\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/components/transcript-comments', ['exports', 'clinical/mixins/row-height-hack'], function (exports, _rowHeightHack) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Component.extend(_rowHeightHack.default, {\n        attributeBindings: ['data-element'],\n        isExpanded: false,\n        isCollapsible: true,\n        oneline: true,\n        firstCommentOneLine: true,\n        patientPracticeGuid: null,\n        items: Ember.computed(function () {\n            return [];\n        }),\n        actions: {\n            expand() {\n                this.set('isExpanded', true);\n                this._resizeRowByCell();\n            },\n\n            collapse() {\n                this.set('isExpanded', false);\n                this._resizeRowByCell();\n            }\n        },\n        filteredItems: Ember.computed('items', function () {\n            if (this.get('expandAll')) {\n                return this.get('items');\n            } else {\n                return this.get('items').slice(1);\n            }\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/allergy', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        queryParams: ['allergenQuery'],\n        actions: {\n            allergyDeleted(allergy) {\n                this.send('removeHealthConcern', allergy.get('allergyGuid'));\n                const allergies = this.get('allergies');\n                if (allergies) {\n                    allergies.removeObject(allergy);\n                }\n            },\n            allergyAdded(allergy) {\n                const allergies = this.get('allergies');\n                if (allergies) {\n                    allergies.pushObject(allergy);\n                }\n            },\n            reloadAllergies() {\n                this.send('reloadCardAllergies');\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/encounter/allergy', ['exports', 'clinical/controllers/allergy'], function (exports, _allergy) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _allergy.default.extend({\n        encounter: Ember.inject.controller(),\n        allergies: Ember.computed.alias('encounter.allergies')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/encounter/diagnosis', ['exports', 'clinical/mixins/encounter-controller'], function (exports, _encounterController) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend(_encounterController.default, {\n        actions: {\n            diagnosisDeleted(diagnosis) {\n                this.send('removeHealthConcern', diagnosis.get('diagnosisGuid'));\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/encounter/health-concern', ['exports', 'clinical/controllers/health-concern'], function (exports, _healthConcern) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _healthConcern.default.extend({\n        encounter: Ember.inject.controller(),\n        healthConcerns: Ember.computed.alias('encounter.healthConcerns')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/encounter/medication', ['exports', 'clinical/mixins/encounter-controller'], function (exports, _encounterController) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend(_encounterController.default);\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/encounter/pmh', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        patientController: Ember.inject.controller('patient'),\n        currentAutoFocusSection: false\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/encounter/risk-score', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend();\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/encounter/smoking', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        patientController: Ember.inject.controller('patient')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/encounter/social', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        patientController: Ember.inject.controller('patient'),\n        allowRollback: false,\n\n        allowRollbackObserver: Ember.observer('model.hasDirtyAttributes', function () {\n            this.set('allowRollback', this.get('model.hasDirtyAttributes'));\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/encounter/worksheet', ['exports', 'charting/controllers/encounter/transcript-event', 'charting/utils/encounter', 'clinical/repositories/worksheets', 'clinical/models/worksheet-responses'], function (exports, _transcriptEvent, _encounter, _worksheets, _worksheetResponses) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _transcriptEvent.default.extend({\n        isDirty: false,\n        worksheetClassNames: Ember.computed('disabled', function () {\n            return this.get('disabled') ? 'side-fixed col-xs-5 type-v2' : 'side-fixed col-xs-6 type-v2';\n        }),\n        eventType: Ember.computed.alias('transcriptEncounterEvent.eventType'),\n        isNegated: Ember.computed.alias('transcriptEncounterEvent.isNegated'),\n        reasonCode: Ember.computed.alias('transcriptEncounterEvent.reasonCode'),\n        selectedStatus: Ember.computed.alias('transcriptEncounterEvent.selectedStatus'),\n        status: Ember.computed.alias('transcriptEncounterEvent.status'),\n        transcriptEncounterEvent: Ember.computed.alias('model.transcriptEncounterEvent'),\n\n        patientController: Ember.inject.controller('patient'),\n\n        // Maps worksheets to ad sub-zones\n        adSubzone: Ember.computed('eventType.eventTypeGuid', function () {\n            switch (this.get('eventType.eventTypeGuid')) {\n                case _worksheetResponses.worksheetEventTypeGuids.adultAsthmaControlTestEventTypeGuid:\n                    return 'asthmascr';\n                default:\n                    return '';\n            }\n        }),\n\n        // Maps worksheets to Ember components\n        worksheetComponent: Ember.computed('eventType.eventTypeGuid', function () {\n            switch (this.get('eventType.eventTypeGuid')) {\n                case _worksheetResponses.worksheetEventTypeGuids.midasAssessmentWorksheetEventTypeGuid:\n                    return 'sia-worksheet/migraine';\n                case _worksheetResponses.worksheetEventTypeGuids.depressionPhq2AssessmentWorksheetEventTypeGuid:\n                    return 'sia-worksheet/depression-phq-2';\n                default:\n                    return 'sia-worksheet/default';\n            }\n        }),\n        isSaveDisabled: Ember.computed('model.isIncomplete', 'model.isNegated', 'model.isQuestionnaireComplete', 'errors', 'hasRangeErrors', function () {\n            if (this.get('eventType.eventTypeGuid') === _worksheetResponses.worksheetEventTypeGuids.depressionPhq2AssessmentWorksheetEventTypeGuid) {\n                return !(this.get('model.isNegated') || this.get('model.isQuestionnaireComplete')) || !_.isEmpty(this.get('errors')) || this.get('hasRangeErrors');\n            }\n            return this.get('model.isIncomplete') || !_.isEmpty(this.get('errors')) || this.get('hasRangeErrors');\n        }),\n        errors: null,\n        hasRangeErrors: Ember.computed.alias('model.hasRangeErrors'),\n        actions: {\n            setErrors(errors) {\n                this.set('errors', errors);\n            },\n            cancelWorksheet() {\n                if (this.get('isEntitledToEditEncounter')) {\n                    const model = this.get('model');\n\n                    if (model) {\n                        if (Ember.isEmpty(model.get('responsesGuid'))) {\n\n                            // This will delete the transcriptEncounterEvent in the cancel 'add new' case\n                            this.deleteResponses();\n                        } else {\n                            model.revert();\n                        }\n                    }\n                }\n\n                this.set('isDirty', false);\n                this.transitionToRoute('encounter');\n            },\n\n            closeWorksheet() {\n                if (this.get('isEntitledToEditEncounter')) {\n                    this.save().finally(() => {\n                        this.setProperties({\n                            isDirty: false,\n                            shouldScrollOnTransition: true\n                        });\n                        this.transitionToRoute('encounter');\n                    });\n                } else {\n                    this.setProperties({\n                        isDirty: false,\n                        shouldScrollOnTransition: true\n                    });\n                    this.transitionToRoute('encounter');\n                }\n            },\n\n            deleteWorksheet() {\n                this.deleteResponses().then(() => {\n                    this.set('isDirty', false);\n                    this.get('encounter').getCdsAlerts();\n                    this.transitionToRoute('encounter');\n                }, () => {\n                    toastr.error('Failed to delete assessment');\n                });\n            },\n\n            saveWorksheet() {\n                this.set('shouldScrollOnTransition', true);\n                this.transitionToRoute('encounter');\n            },\n\n            selectWorksheetReason(reason) {\n                this.set('reason', reason);\n            },\n\n            selectWorksheetStatus(status) {\n                this.set('selectStatus', status);\n            }\n        },\n\n        captureAlreadySignedError(error) {\n            const action = _encounter.default.mapSaveErrorToAction(error);\n\n            if (action) {\n                this.set('isDirty', false);\n\n                if (action === 'refreshChart') {\n                    this.replaceRoute('encounter');\n                }\n\n                this.send(action);\n\n                return true;\n            }\n\n            return false;\n        },\n\n        deleteResponses() {\n            const patientPracticeGuid = this.get('patientController.id');\n            const responses = this.get('model');\n            const transcriptEvents = this.get('encounter.model.events');\n\n            return _worksheets.default.deleteResponses(patientPracticeGuid, responses).then(function () {\n                responses.get('transcriptEncounterEvents').forEach(transcriptEvents.removeEvent.bind(transcriptEvents));\n            }, this.captureAlreadySignedError.bind(this));\n        },\n\n        save() {\n            const patientPracticeGuid = this.get('patientController.id');\n            const responses = this.get('model');\n            const isNew = Ember.isEmpty(responses.get('responsesGuid'));\n            const encounterController = this.get('encounter');\n            const transcriptEvents = encounterController.get('model.events');\n\n            if (this.get('disabled')) {\n                this.set('isDirty', false);\n                return Ember.RSVP.resolve();\n            }\n\n            // Persist the values to the responses object before saving to server.\n            responses.save();\n\n            return _worksheets.default.saveResponses(patientPracticeGuid, responses).then(savedResponses => {\n                this.set('isDirty', false);\n                if (isNew) {\n                    if (savedResponses.get('isComplete')) {\n                        encounterController.getCdsAlerts();\n                    }\n                    savedResponses.get('transcriptEncounterEvents').forEach(transcriptEvents.addEvent.bind(transcriptEvents));\n                }\n            }, error => {\n                if (!this.captureAlreadySignedError(error)) {\n                    toastr.error('Failed to save assessment');\n                }\n                throw error;\n            });\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/health-concern', ['exports', 'common/helpers/validation'], function (exports, _validation) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        validate() {\n            return new Ember.RSVP.Promise((resolve, reject) => {\n                this.validator.validate(this.get('model')).then(result => {\n                    const { errors, valid } = result;\n                    this.set('errors', Ember.Object.create());\n                    if (valid) {\n                        resolve(valid);\n                    } else {\n                        Object.keys(errors).forEach(key => {\n                            this.set(`errors.${key}`, errors[key][0]);\n                        });\n                        reject();\n                    }\n                });\n            });\n        },\n        validator: _validation.default.validator().validates('effectiveDate').required('Enter a date').isDate('Please enter a valid date').isDateAfter1753('Before the allowable range').build(),\n        actions: {\n            cancel() {\n                this.send('cancelHealthConcern');\n            },\n            save(addAnother) {\n                this.send('saveHealthConcern', addAnother);\n            },\n            delete() {\n                this.send('deleteHealthConcern');\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/patient', ['exports', 'common/mixins/navigation-legacy', 'common/helpers/dates', 'clinical/mixins/loading'], function (exports, _navigationLegacy, _dates, _loading) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend(_navigationLegacy.default, _loading.default, {\n        authorization: Ember.inject.service(),\n        analytics: Ember.inject.service(),\n        pfController: Ember.inject.controller('pf'),\n        patientService: Ember.inject.service('patient'),\n        priorAuthService: Ember.inject.service('surescripts-prior-auth'),\n\n        boundedBillingPartnerSettings: Ember.inject.service('getBoundedBillingPartnerSettings'),\n        isPracticePayerListOn: Ember.computed.alias('boundedBillingPartnerSettings.isPracticePayerListOn'),\n        isPracticeManagementSsoOn: Ember.computed.alias('boundedBillingPartnerSettings.isPracticeManagementSsoOn'),\n        isPracticeManagementIFrameOn: Ember.computed.alias('boundedBillingPartnerSettings.isPracticeManagementIFrameOn'),\n\n        patientPracticeGuid: Ember.computed.alias('patient.patientPracticeGuid'),\n        patient: Ember.computed.alias('model'),\n        isLoading: false,\n        isPrintChartVisible: false,\n        isClinicalDocumentPendingModalVisible: false,\n        showPhotoUpload: false,\n        patientMissingMessage: null,\n        patientMissingMessageDetail: null,\n        showPatientLinkCopyModal: false,\n        patientLink: null,\n        showAccessHistory: false,\n        tabActionItems: null,\n        showRecentActivity: false,\n\n        guid: Ember.computed.alias('model.guid'),\n        id: Ember.computed.alias('model.id'),\n        patientRecordNumber: Ember.computed.alias('model.patientRecordNumber'),\n        birthDate: Ember.computed.alias('model.birthDate'),\n        shouldShowDeletedEncounterWarning: false,\n        length: 0,\n        shouldHideNavigation: false,\n        isCreateClinicalDocumentVisible: false,\n\n        persistentNavigationItemsClass: Ember.computed(function () {\n            return Ember.Object.create({\n                componentName: 'patient-persistent-navigation',\n                patient: this\n            });\n        }),\n        isEntitledToEnhancedActions: Ember.computed('authorization.entitledFeatures.[]', function () {\n            return this.get('authorization').isEntitledFor('Chart.Actions.Enhanced');\n        }),\n        isNotEntitledToEnhancedActions: Ember.computed.not('isEntitledToEnhancedActions'),\n\n        navigationPadding: 80,\n        dob: Ember.computed('patient.birthDate', function () {\n            if (this.get('patient.birthDate')) {\n                var momentDob = moment(this.get('patient.birthDate'));\n                if (momentDob.isValid()) {\n                    return momentDob.format('L');\n                }\n            }\n            return null;\n        }),\n        ageInMonths: Ember.computed('patient.birthDate', function () {\n            return moment().diff(this.get('patient.birthDate'), 'months');\n        }),\n        getAgeOnDate(date) {\n            return _dates.default.getAgeOnDate(this.get('patient.birthDate'), date);\n        },\n        fullName: Ember.computed.alias('patient.fullName'),\n        genderString: Ember.computed.alias('patient.genderString'),\n        gender: Ember.computed('patient.genderString', function () {\n            var gender = this.get('patient.genderString');\n            return _.isString(gender) ? gender.charAt(0).toUpperCase() : '';\n        }),\n        patientImageExists: Ember.computed('patient.imageUrlAuthenticated', function () {\n            var patient = this.get('patient');\n            return patient && patient.imageUrlAuthenticated;\n        }),\n        actionsMenuItems: Ember.computed('patient', 'tabActionItems.[]', 'isNotEntitledToEnhancedActions', 'priorAuthService.hasPriorAuthEnabledProviders', function () {\n            const tabActionItems = this.get('tabActionItems');\n            const isEnhancedActionDisabled = this.get('isNotEntitledToEnhancedActions');\n            const isCreatePriorAuthDisabled = !this.get('priorAuthService.canInitiateManualPriorAuth');\n            const actions = [];\n\n            if (tabActionItems) {\n                actions.pushObjects(tabActionItems);\n            }\n\n            if (this.get('patient')) {\n                actions.pushObjects([{ separatorText: 'For this patient' }, { text: 'Add imaging order', action: 'addImagingOrder', isDisabled: isEnhancedActionDisabled }, { text: 'Add lab order', action: 'addLabOrder', isDisabled: isEnhancedActionDisabled }]);\n                if (this.get('priorAuthService.canInitiateManualPriorAuth') && this.get('priorAuthService.hasPriorAuthEnabledProviders')) {\n                    actions.pushObject({ text: 'Add prior authorization', action: 'showSurescriptsInitiateModal', isDisabled: isCreatePriorAuthDisabled });\n                }\n                if (!tabActionItems || !tabActionItems.findBy('text', 'Add referral')) {\n                    actions.pushObject({ text: 'Add referral', action: 'orderReferral', isDisabled: isEnhancedActionDisabled });\n                }\n                actions.pushObjects([{ text: 'Copy link to patient', action: 'copyPatientLink', isDisabled: isEnhancedActionDisabled }, { text: 'Invite to patient portal', action: 'enrollPatientInPHR', isDisabled: isEnhancedActionDisabled }, { text: 'Enter imaging results', action: 'enterImagingResults', isDisabled: isEnhancedActionDisabled }, { text: 'Enter lab results', action: 'enterLabResults', isDisabled: isEnhancedActionDisabled }]);\n\n                actions.pushObject({ text: 'Create clinical document', action: 'createClinicalSummary' });\n\n                actions.pushObjects([{ text: 'Print patient chart', action: 'printChart' }, { text: 'Refresh patient chart', action: 'refreshChart' }, { text: 'View access history', action: 'viewAccessHistory' }, { text: 'Send message', action: 'sendPatientNewMessage', isDisabled: isEnhancedActionDisabled }, { text: 'Create task', action: 'openNewTaskDialog', hotkeys: [{ hotkeyModifier: 'N', hotkey: 'T' }, { hotkeyModifier: 'T', hotkey: 'N' }], isDisabled: isEnhancedActionDisabled }, { text: 'View exported patient records', action: 'listClinicalSummary' }, { text: 'View imaging orders', action: 'viewImagingOrders' }, { text: 'View lab orders', action: 'viewLabOrders' }, { text: 'View recent activity', action: 'viewRecentActivity' }]);\n\n                if (this.get('isPracticeManagementIFrameOn')) {\n                    actions.pushObjects([{ separatorText: 'Billing for this patient' }, { text: 'Enter payment', action: 'openPsPaymentModal' }, { text: 'View financial summary', action: 'openPsFinancialSummaryModal' }, { text: 'View ledger', action: 'openPsLedgerTab' }, { text: 'View statement history', action: 'openPsStatementHistoryTab' }]);\n                }\n            }\n\n            return actions;\n        }),\n        refreshChart() {\n            const patientPracticeGuid = this.get('patientPracticeGuid');\n            return this._withProgress(this.get('patientService').refreshChart(patientPracticeGuid)).then(() => {\n                this.get('patientService').updatePinnedNote();\n            });\n        },\n\n        loadProviders: Ember.on('init', function () {\n            this.get('priorAuthService.loadProviders').perform();\n        }),\n\n        actions: {\n            addPhoto() {\n                this.set('showPhotoUpload', true);\n            },\n            closePracticeSuiteModal() {\n                this.send('closePsModal');\n            },\n            displayPendingClinicalSummaryModal() {\n                this.set('isClinicalDocumentPendingModalVisible', true);\n            },\n            messagePatient() {\n                this.send('messagePatient');\n            },\n            editPinnedNote() {\n                this.send('showEditPinnedNoteModal', 'Patient ribbon');\n            },\n            openPsFinancialSummaryModal() {\n                const modalData = {\n                    fullName: this.get('fullName'),\n                    modalType: 'financial-summary',\n                    patientPracticeGuid: this.get('patientPracticeGuid')\n                };\n                this.send('openPracticeSuiteModal', modalData);\n            },\n            openPsPaymentModal() {\n                const modalData = {\n                    fullName: this.get('fullName'),\n                    modalType: 'payment',\n                    patientPracticeGuid: this.get('patientPracticeGuid')\n                };\n                this.send('openPracticeSuiteModal', modalData);\n            },\n            openPsLedgerTab() {\n                this.send('openPracticeSuiteTab', 'ledger');\n            },\n            openPsStatementHistoryTab() {\n                this.send('openPracticeSuiteTab', 'statement');\n            },\n            openPhrEnrollment() {\n                this.send('openPopup', 'enrollPhr', {\n                    patientPracticeGUID: this.get('patientPracticeGuid')\n                });\n            },\n            showSurescriptsModal(priorAuthGuid, isReinitiate) {\n                this.get('pfController').send('showSurescriptsModal', this.get('patient'), priorAuthGuid, isReinitiate);\n            },\n            showSurescriptsInitiateModal() {\n                this.get('pfController').send('showSurescriptsModal', this.get('patient'), null, false);\n                this.get('analytics').track('Add PA', { Action: 'Action menu' });\n            },\n            goToClinicalSummaryTimeline() {\n                this.send('listClinicalSummary');\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/patient/d-immunizations', ['exports', 'clinical/repositories/immunization', 'clinical/repositories/immunization-registry', 'charting/mixins/with-patient-print-title'], function (exports, _immunization, _immunizationRegistry, _withPatientPrintTitle) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend(_withPatientPrintTitle.default, {\n        authorization: Ember.inject.service(),\n        patientController: Ember.inject.controller('patient'),\n\n        cdsAlerts: null,\n        displayName: 'Immunizations',\n        facilities: null,\n        immunizationRegistries: null,\n        immunizationTransmitPreference: null,\n        isAllowedToEditImmunizations: false,\n        isDownloadImmunizationRecordVisible: false,\n        isPrintPreviewVisible: false,\n        loading: false,\n        practiceProvidersList: null,\n        preloadCode: null,\n        preloadKeyword: null,\n        printPreviewWithComments: false,\n        registryConnections: null,\n        selectedImmunizationRegistry: null,\n        selectedSourceType: null,\n        selectedVaccination: null,\n        selectedVaccinationRow: null,\n        showVaccinationDetails: false,\n        vaccinationDatum: null,\n        vaccinations: null,\n\n        hasNoImmunizations: Ember.computed.empty('vaccinationDatum'),\n        hasTransmittableVaccinations: Ember.computed.notEmpty('transmittableVaccinations'),\n        isElectronicTransmission: Ember.computed.notEmpty('electronicRegistryConnection'),\n        patientPracticeGuid: Ember.computed.alias('patientController.guid'),\n        patientSummary: Ember.computed.alias('patientController.patient'),\n\n        transmitPopOverText: Ember.computed('immunizationTransmitPreference', function () {\n            if (this.get('immunizationTransmitPreference')) {\n                return 'The patient indicated to not transmit and share immunization information. Go to Patient Profile to change immunization registry settings.';\n            } else {\n                return 'You will transmit all vaccination info including administered, historical and refused vaccination records for this patient.';\n            }\n        }),\n\n        electronicRegistryConnection: Ember.computed('registryConnections.@each.immunizationRegistryConnectionStatus', function () {\n            var registryConnections = this.get('registryConnections');\n\n            if (!Ember.isEmpty(registryConnections)) {\n                return registryConnections.findBy('immunizationRegistryConnectionStatus', 'Successfully activated');\n            }\n\n            return null;\n        }),\n\n        lastTransmissionDate: Ember.computed('model.@each.lastTransmissionDateUtc', function () {\n            return _immunizationRegistry.default.getLastPatientTransmissionDate(this.get('model'));\n        }),\n\n        transmittableVaccinations: Ember.computed('registryConnections.@each.immunizationRegistryConnectionStatus', 'vaccinations.@each.facilityGuid', function () {\n\n            return _immunization.default.getTransmittablePatientVaccinations(this.get('model'), this.get('registryConnections'));\n        }),\n\n        actions: {\n            addVaccination() {\n                var selectedVaccination = this.get('selectedVaccination');\n\n                if (selectedVaccination && !selectedVaccination.get('isNew')) {\n                    selectedVaccination.rollbackAttributes();\n\n                    this.setProperties({\n                        selectedSourceType: null,\n                        selectedVaccination: null,\n                        selectedVaccinationRow: null\n                    });\n                }\n\n                this.set('showVaccinationDetails', true);\n            },\n\n            cancelDownloadImmunizationRecord() {\n                this.setProperties({\n                    isDownloadImmunizationRecordVisible: false,\n                    selectedImmunizationRegistry: null\n                });\n            },\n\n            closeVaccinationDetails() {\n                this.setProperties({\n                    selectedSourceType: null,\n                    selectedVaccination: null,\n                    selectedVaccinationRow: null,\n                    showVaccinationDetails: false\n                });\n                this.send('refreshImmunizations');\n            },\n\n            connectToRegistry() {\n                this.set('loading', true);\n                this.get('store').findAll('newSetting').then(data => {\n                    const setting = (data || []).findBy('id', 'IMMUNIZATION-REGISTRY');\n\n                    if (setting) {\n                        this.transitionToRoute(setting.get('destinationInCarbon'));\n                    }\n                }).finally(() => {\n                    this.set('loading', false);\n                });\n            },\n\n            deleteVaccination(vaccination) {\n                var vaccinationGuid = vaccination.get('vaccinationGuid');\n\n                this.set('loading', true);\n\n                Ember.run.scheduleOnce('afterRender', this, function () {\n                    this.get('model').forEach(function (immunization) {\n                        var vaccinationToDelete = (immunization.get('vaccinations') || []).findBy('vaccinationGuid', vaccinationGuid);\n\n                        if (vaccinationToDelete) {\n                            immunization.get('vaccinations').removeObject(vaccinationToDelete);\n                        }\n                    });\n\n                    vaccination.deleteRecord();\n                    vaccination.save().then(function () {\n                        toastr.success('Immunization record deleted');\n                        this.send('updatePatientAdContextCvxCodes');\n                    }.bind(this)).catch(function () {\n                        toastr.error('Failed to delete vaccination.');\n                    }).finally(function () {\n                        this.set('loading', false);\n                        this.send('closeVaccinationDetails');\n                    }.bind(this));\n                });\n            },\n\n            doDownloadImmunizationRecord() {\n                var filename = this.get('patientController.patient.fullName') + '.IIS';\n\n                _immunizationRegistry.default.loadImmunizationRecord(this.get('selectedImmunizationRegistry'), this.get('patientPracticeGuid'), function (response) {\n                    var file = new Blob([response], { type: 'text/plain;charset=utf-8' });\n                    window.saveAs(file, filename);\n                });\n\n                this.setProperties({\n                    isDownloadImmunizationRecordVisible: false,\n                    selectedImmunizationRegistry: null\n                });\n            },\n\n            downloadImmunizationRecord() {\n                if (this.get('model.content.length') === 0) {\n                    toastr.error('This patient has no immunization record');\n                } else if (Ember.isEmpty(this.get('immunizationRegistries'))) {\n                    toastr.error('Could not load immunization registries');\n                } else {\n                    this.set('isDownloadImmunizationRecordVisible', true);\n\n                    _immunizationRegistry.default.loadDownloadPreferences(this.get('store')).then(response => {\n                        const registries = this.get('immunizationRegistries');\n\n                        if (!Ember.isEmpty(response.defaultRegistryId) && !Ember.isEmpty(registries)) {\n                            this.set('selectedImmunizationRegistry', registries.findBy('id', response.defaultRegistryId));\n                        }\n\n                        if (this.get('selectedImmunizationRegistry')) {\n                            this.set('selectedImmunizationRegistry.registryProvider', response.defaultLogin);\n                        }\n                    });\n                }\n            },\n\n            print(args) {\n                this.set('printPreviewWithComments', args.withComments);\n                this.set('isPrintPreviewVisible', true);\n            },\n\n            printVaccinationsWithComments() {\n                this.send('print', { 'withComments': true });\n            },\n\n            printVaccinations() {\n                this.send('print', { 'withComments': false });\n            },\n\n            refreshImmunizations() {\n                const store = this.get('store');\n\n                this.set('loading', true);\n                store.unloadAll('immunization');\n                this.set('model', []);\n\n                store.query('immunization', { patientPracticeGuid: this.get('patientPracticeGuid') }).then(immunizations => Ember.run.scheduleOnce('afterRender', this, 'set', 'model', immunizations)).finally(() => Ember.run.scheduleOnce('afterRender', () => {\n                    this.loadVaccinations();\n                    this.set('loading', false);\n                }));\n            },\n\n            save() {\n                this.saveWithRefresh(true);\n            },\n\n            saveInBackground() {\n                this.saveWithRefresh(false);\n            },\n\n            toggleRegistryPopover(vaccination) {\n                var selectedVaccinationRow = (this.get('vaccinationDatum') || []).findBy('id', vaccination.get('id'));\n\n                selectedVaccinationRow.toggleProperty('isRegistryPopoverVisible');\n            },\n\n            transitionToEditProvider(providerGuid) {\n                this.set('loading', true);\n                this.transitionToRoute('settings.editUser', providerGuid);\n            },\n\n            transmitPatientImmunizations() {\n                var patientPracticeGuid = this.get('patientPracticeGuid'),\n                    facilityGuid = this.get('transmittableVaccinations.0.facilityGuid');\n\n                this.set('loading', true);\n\n                return _immunizationRegistry.default.transmitImmunization(patientPracticeGuid, facilityGuid).then(() => {\n                    toastr.success('Successfully transmitted patient immunizations');\n\n                    this.send('refreshImmunizations');\n                }).catch(() => {\n                    toastr.error('Unable to transmit patient immunizations');\n                }).finally(() => {\n                    this.set('loading', false);\n                });\n            },\n\n            transmitToStateRegistry() {\n                if (this.get('model.length') === 0) {\n                    toastr.error('This patient has no immunization records to transmit');\n                } else {\n                    this.send('transmitPatientImmunizations');\n                }\n            },\n\n            vaccinationDetailsLoading(loading) {\n                this.set('loading', loading);\n            },\n\n            vaccineInventory() {\n                this.transitionToRoute('settings.vaccineinventory');\n            },\n\n            viewVaccinationDetails(vaccinationRow) {\n                var sourceType = vaccinationRow.get('source.sourceType');\n\n                this.setProperties({\n                    loading: true,\n                    selectedSourceType: null\n                });\n\n                Ember.run.scheduleOnce('afterRender', this, function () {\n                    this.setProperties({\n                        selectedSourceType: sourceType,\n                        selectedVaccination: vaccinationRow.get('content'),\n                        selectedVaccinationRow: vaccinationRow,\n                        showVaccinationDetails: true\n                    });\n                });\n            },\n            updatePatientAdContextCvxCodes() {\n                const { store, patientPracticeGuid } = this.getProperties('store', 'patientPracticeGuid');\n                const patientAdContext = store.peekRecord('patient-ad-context', patientPracticeGuid);\n                if (patientAdContext) {\n                    const vaccinations = store.peekAll('vaccination');\n                    const codes = (vaccinations || []).map(vaccination => {\n                        if (vaccination.get('patientPracticeGuid') !== patientPracticeGuid || vaccination.get('source.isRefused')) {\n                            return null;\n                        }\n                        const type = vaccination.get('vaccineType');\n                        return Ember.isPresent(type) ? parseInt(type.get('cvxCode'), 10) : null;\n                    }).compact().uniq();\n                    patientAdContext.set('xc', codes);\n                    this.send('refreshAd', 'immunization');\n                }\n            }\n        },\n\n        load() {\n            this.setProperties({\n                model: [],\n                loading: true,\n                vaccinationDatum: [],\n                vaccinations: [],\n                isAllowedToEditImmunizations: this.get('authorization').isEntitledFor('Chart.Immunizations.Edit')\n            });\n\n            // Move outside of promise all because we want to allow the user to use the screen while this is loading\n            this.loadAlerts();\n\n            Ember.RSVP.Promise.all([this.loadPatientImmunizations(), this.loadFacilities(), this.loadProviderList(), this.loadRegistries(), this.loadRegistryConnections(), this.loadPatientPreference(), this.get('store').findAll('vaccine-lookup-datum')]).finally(() => {\n                this.loadVaccinations();\n                this.loadPatientImmunizationsTab();\n                this.set('loading', false);\n            });\n        },\n\n        loadAlerts(indicateLoading) {\n            if (indicateLoading) {\n                this.set('loading', true);\n            }\n            _immunization.default.getPatientVaccinationAlerts(this.get('patientPracticeGuid')).then(data => {\n                this.set('cdsAlerts', data);\n            }).finally(() => {\n                if (indicateLoading) {\n                    this.set('loading', false);\n                }\n            });\n        },\n\n        loadFacilities() {\n            return this.get('store').findAll('facility').then(facilities => {\n                facilities = facilities.toArray();\n                facilities.unshift(Ember.Object.create({\n                    facilityGuid: '00000000-0000-0000-0000-000000000000',\n                    name: 'Unknown'\n                }));\n\n                this.set('facilities', facilities);\n            });\n        },\n\n        loadPatientImmunizations() {\n            return this.get('store').query('immunization', { patientPracticeGuid: this.get('patientPracticeGuid') }).then(data => {\n                this.set('model', data);\n            });\n        },\n\n        loadPatientImmunizationsTab() {\n            const patientController = this.get('patientController');\n            const actions = [{ separatorText: 'For immunizations' }];\n            const isNotAllowedToEditImmunizations = !this.get('isAllowedToEditImmunizations');\n\n            if (!Modernizr.touch) {\n                actions.pushObject({ text: 'Download immunization record', action: 'downloadImmunizationRecord' });\n            }\n\n            actions.pushObject({ text: 'Manage vaccine inventory', action: 'manageVaccineInventory', isDisabled: isNotAllowedToEditImmunizations });\n\n            actions.pushObjects([{ text: 'Print vaccinations', action: 'printVaccinations' }, { text: 'Print vaccinations with comments', action: 'printVaccinationsWithComments' }]);\n\n            if (this.get('hasTransmittableVaccinations')) {\n                actions.pushObject({ text: 'Transmit to state registry', action: 'transmitToStateRegistry', isDisabled: isNotAllowedToEditImmunizations });\n            }\n\n            patientController.set('tabActionItems', actions);\n\n            patientController.send('openTab', Ember.Object.create({\n                label: 'Immunizations',\n                route: 'patient.immunizations',\n                dismissible: true,\n                noIcon: true\n            }));\n        },\n\n        loadPatientPreference() {\n            return this.store.findRecord('patient', this.get('patientPracticeGuid')).then(data => {\n                this.set('immunizationTransmitPreference', data.get('immunizationProtectionTypeId') === 2);\n            });\n        },\n\n        loadProviderList() {\n            this.set('practiceProvidersList', []);\n\n            return this.get('store').findAll('provider-profile').then(providers => {\n                this.set('practiceProvidersList', providers);\n            });\n        },\n\n        loadRegistries() {\n            return _immunizationRegistry.default.loadActiveRegistries(this.get('store')).then(registries => {\n                this.set('immunizationRegistries', registries);\n            });\n        },\n\n        loadRegistryConnections() {\n            return _immunizationRegistry.default.loadRegistryConnections(this.get('store')).then(registryConnections => {\n                this.set('registryConnections', registryConnections);\n            });\n        },\n\n        loadVaccinations() {\n            this.set('vaccinations', (this.get('model') || []).mapBy('vaccinations'));\n            this.set('vaccinationDatum', _immunization.default.getPatientVaccinationsDeprecated(this.get('model'), this.get('practiceProvidersList'), this.get('registryConnections'), this.get('immunizationRegistries')));\n        },\n\n        preloadVaccinations() {\n            if (this.get('showVaccinationDetails')) {\n                this.send('closeVaccinationDetails');\n            }\n\n            if (this.get('preloadCode') || this.get('preloadKeyword')) {\n                this.send('addVaccination');\n            }\n        },\n\n        saveWithRefresh(shouldRefresh) {\n            if (shouldRefresh) {\n                this.set('loading', true);\n            }\n\n            this.get('selectedVaccination').save().then(function () {\n                if (shouldRefresh) {\n                    this.set('loading', false);\n                    this.send('refreshImmunizations');\n                }\n            }.bind(this)).catch(function () {\n                toastr.error('Failed to save vaccination.');\n                this.set('loading', false);\n            }.bind(this));\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/patient/familyhistory', ['exports', 'ember-concurrency', 'clinical/repositories/family-health-history', 'clinical/models/familyhealthhistory/relative'], function (exports, _emberConcurrency, _familyHealthHistory, _relative) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        patient: Ember.inject.controller(),\n        authorization: Ember.inject.service(),\n\n        isPrintVisible: false,\n        patientPracticeGuid: Ember.computed.alias('patient.patientPracticeGuid'),\n        isLoading: Ember.computed.or('load.isRunning', 'reload.isRunning'),\n        relationshipTypeSortProperties: Ember.computed(() => ['displaySequence']),\n        sortedRelationshipTypes: Ember.computed.sort('relationshipTypes', 'relationshipTypeSortProperties'),\n        printTitle: Ember.computed('patient.fullName', function () {\n            return `Family history for ${this.get('patient.fullName')}`;\n        }),\n        isEntitledForFHH: Ember.computed('authorization.entitledFeatures.[]', function () {\n            return this.get('authorization').isEntitledFor('Chart.FHH.Edit');\n        }),\n        isEntitledAndAllowedToEditFHH: Ember.computed('isEntitledForFHH', 'session.isStaff', function () {\n            return this.get('isEntitledForFHH') && !this.get('session.isStaff');\n        }),\n        isNotAllowedToEditFHH: Ember.computed.not('isEntitledAndAllowedToEditFHH'),\n\n        load: (0, _emberConcurrency.task)(function* (patientPracticeGuid) {\n            this.setProperties({\n                selectedRelative: null,\n                selectedObservation: null\n            });\n            const store = this.get('store');\n            const { relatives, relationshipTypes } = yield _familyHealthHistory.default.loadRelativesAndRelationshipTypes(store, patientPracticeGuid);\n            const condition = yield _familyHealthHistory.default.loadConditions(patientPracticeGuid);\n\n            this.setProperties({\n                condition,\n                relatives,\n                relationshipTypes\n            });\n        }),\n        reload: (0, _emberConcurrency.task)(function* () {\n            const { relationshipTypes, patientPracticeGuid } = this.getProperties('relationshipTypes', 'patientPracticeGuid');\n            const relatives = yield _familyHealthHistory.default.reloadRelatives(patientPracticeGuid, relationshipTypes);\n            const condition = yield _familyHealthHistory.default.loadConditions(patientPracticeGuid);\n            this.setProperties({\n                condition,\n                relatives\n            });\n        }).drop(),\n        actions: {\n            addDiagnosis(relative) {\n                this.setProperties({\n                    selectedRelative: null,\n                    selectedObservation: {\n                        patientPracticeGuid: this.get('patientPracticeGuid'),\n                        relative\n                    }\n                });\n            },\n            addRelative() {\n                this.setProperties({\n                    selectedObservation: null,\n                    selectedRelative: _relative.default.create({\n                        patientPracticeGuid: this.get('patientPracticeGuid')\n                    })\n                });\n            },\n            editDiagnosis(selectedObservation) {\n                this.setProperties({\n                    selectedRelative: null,\n                    selectedObservation\n                });\n            },\n            editRelative(selectedRelative) {\n                this.setProperties({\n                    selectedObservation: null,\n                    selectedRelative\n                });\n            },\n            closeRelativeDetails() {\n                this.set('selectedRelative', null);\n            },\n            removeRelative(relative) {\n                const relatives = this.get('relatives') || [];\n                relatives.removeObject(relative);\n            },\n            closeObservationDetails() {\n                this.set('selectedObservation', null);\n            },\n            removeObservation(observation) {\n                const relativeGuid = Ember.get(observation, 'relative.relativeGuid');\n                const relative = (this.get('relatives') || []).findBy('relativeGuid', relativeGuid);\n                if (relative) {\n                    (Ember.get(relative, 'observations') || []).removeObject(observation);\n                }\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/patient/growth/charts', ['exports', 'charting/models/encounter', 'flowsheets/repositories/flowsheet-data'], function (exports, _encounter, _flowsheetData) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        patientController: Ember.inject.controller('patient'),\n        isLoading: false,\n        actions: {\n            toggleIsMetric() {\n                this.toggleProperty('isMetric');\n                _flowsheetData.default.saveIsMetric(this.get('isMetric'));\n            },\n            newEncounter(noteTypeId) {\n                var patientPracticeGuid = this.get('patientController.patientPracticeGuid'),\n                    store = this.get('store');\n                _encounter.default.createNewEncounter(store, patientPracticeGuid, {\n                    chartNoteTypeId: parseInt(noteTypeId, 0)\n                }, store).then(function (encounter) {\n                    this.transitionToRoute('encounter', patientPracticeGuid, encounter);\n                }.bind(this), function () {\n                    toastr.error('Error creating new encounter');\n                });\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/patient/immunizations', ['exports', 'ember-concurrency', 'clinical/repositories/immunization', 'clinical/repositories/immunization-registry', 'common/utils/scroll-helper'], function (exports, _emberConcurrency, _immunization, _immunizationRegistry, _scrollHelper) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        analytics: Ember.inject.service(),\n        authorization: Ember.inject.service(),\n        patientController: Ember.inject.controller('patient'),\n\n        cdsAlerts: null,\n        facilities: null,\n        immunizationRegistries: null,\n        immunizationTransmitPreference: null,\n        isAllowedToEditImmunizations: false,\n        isPrintPreviewVisible: false,\n        isPrintRegistryRecordEnabled: false,\n        preloadCode: null,\n        preloadKeyword: null,\n        printWithComments: false,\n        registryConnections: null,\n        selectedImmunizationRegistry: null,\n        selectedVaccination: null,\n        isRegistrySearchVisible: false,\n        immunizationList: null,\n        transmissionRequestErrors: null,\n        hasNoImmunizations: Ember.computed.empty('immunizationList'),\n        isConnectedToRegistry: Ember.computed.notEmpty('registryConnections'),\n        isElectronicTransmission: Ember.computed.notEmpty('electronicRegistryConnection'),\n        patient: Ember.computed.alias('patientController.patient'),\n        patientPracticeGuid: Ember.computed.alias('patientController.guid'),\n        immunizationListLoading: Ember.computed.or('loadPatientImmunizations.isRunning', 'transmitPatientImmunizations.isRunning'),\n        isDetailsVisible: Ember.computed.or('isAddingImmunization', 'selectedVaccination'),\n\n        electronicRegistryConnection: Ember.computed('registryConnections.@each.immunizationRegistryConnectionStatus', function () {\n            const registryConnections = Ember.get(this, 'registryConnections') || [];\n            return registryConnections.findBy('immunizationRegistryConnectionStatus', 'Successfully activated');\n        }),\n        lastTransmissionDate: Ember.computed('transmissionStatuses', function () {\n            const transmissions = (Ember.get(this, 'transmissionStatuses') || []).filterBy('hasNoErrors').sortBy('transmissionDateTimeUtc').reverse();\n            if (Ember.isPresent(transmissions)) {\n                return Ember.get(transmissions[0], 'transmissionDateTimeUtc');\n            }\n            return null;\n        }),\n        transmissionErrors: Ember.computed('transmissionStatuses', 'transmissionRequestErrors', 'lastTransmissionDate', function () {\n            const registryErrors = {};\n            const lastSuccessfulTransmission = moment(Ember.get(this, 'lastTransmissionDate'));\n            const newErrorStatuses = (Ember.get(this, 'transmissionStatuses') || []).filter(status => {\n                return Ember.get(status, 'hasErrors') && moment(Ember.get(status, 'transmissionDateTimeUtc')) >= lastSuccessfulTransmission;\n            }).sortBy('transmissionDateTimeUtc').reverse();\n            (newErrorStatuses || []).forEach(status => {\n                const index = moment.utc(status.get('transmissionDateTimeUtc')).format('MM/DD/YYYY');\n                const errors = status.get('transmissionErrorList').map(error => ({ errorMessage: error }));\n                registryErrors[index] = [...(registryErrors[index] || []), ...errors];\n            });\n            const transmissionRequestErrors = (Ember.get(this, 'transmissionRequestErrors') || []).map(error => ({ errorMessage: error }));\n            if (Ember.isPresent(transmissionRequestErrors)) {\n                const today = moment().format('MM/DD/YYYY');\n                registryErrors[today] = [...(registryErrors[today] || []), ...transmissionRequestErrors];\n            }\n            return registryErrors;\n        }),\n        transmitPopOverText: Ember.computed('immunizationTransmitPreference', function () {\n            if (Ember.get(this, 'immunizationTransmitPreference')) {\n                return 'The patient indicated to not transmit and share immunization information. Go to Patient Profile to change immunization registry settings.';\n            }\n            return 'You will transmit all vaccination info including administered, historical and refused vaccination records for this patient.';\n        }),\n\n        connectToRegistryBySetting: (0, _emberConcurrency.task)(function* () {\n            const settings = yield Ember.get(this, 'store').findAll('newSetting');\n            const setting = settings.findBy('id', 'IMMUNIZATION-REGISTRY');\n            if (setting) {\n                this.transitionToRoute(setting.get('destinationInCarbon'));\n            }\n        }).drop(),\n        deletePatientVaccination: (0, _emberConcurrency.task)(function* (vaccination) {\n            const vaccinationGuid = Ember.get(vaccination, 'vaccinationGuid');\n            this.get('patientImmunizations').forEach(immunization => {\n                const vaccinationToDelete = Ember.get(immunization, 'vaccinations').findBy('vaccinationGuid', vaccinationGuid);\n                if (vaccinationToDelete) {\n                    Ember.get(immunization, 'vaccinations').removeObject(vaccinationToDelete);\n                }\n            });\n\n            try {\n                yield vaccination.deleteRecord();\n                yield vaccination.save();\n\n                toastr.success('Immunization record deleted');\n                this.send('updatePatientAdContextCvxCodes');\n            } catch (err) {\n                toastr.error('Failed to delete vaccination.');\n            }\n            this.send('closeDetails');\n        }).drop(),\n        loadAlerts: (0, _emberConcurrency.task)(function* () {\n            const alerts = yield _immunization.default.getPatientVaccinationAlerts(Ember.get(this, 'patientPracticeGuid'));\n            Ember.set(this, 'cdsAlerts', alerts);\n        }).drop(),\n        loadFacilities: (0, _emberConcurrency.task)(function* () {\n            const facilities = yield this.get('store').findAll('facility');\n            Ember.set(this, 'facilities', facilities.toArray() || []);\n        }).drop(),\n        loadLookupData: (0, _emberConcurrency.task)(function* () {\n            const lookup = yield Ember.get(this, 'store').findAll('vaccine-lookup-datum');\n            this.set('immunizationLookupData', lookup);\n        }).drop(),\n        loadPatientImmunizations: (0, _emberConcurrency.task)(function* () {\n            const immunizations = yield Ember.get(this, 'store').query('immunization', {\n                patientPracticeGuid: Ember.get(this, 'patientPracticeGuid')\n            });\n            Ember.set(this, 'patientImmunizations', immunizations);\n            Ember.set(this, 'immunizationList', _immunization.default.getPatientVaccinations(Ember.get(this, 'patientImmunizations'), Ember.get(this, 'practiceProviders'), Ember.get(this, 'registryConnections'), Ember.get(this, 'immunizationRegistries')));\n        }).keepLatest(),\n        loadPatientPreference: (0, _emberConcurrency.task)(function* () {\n            const preferences = yield Ember.get(this, 'store').findRecord('patient', Ember.get(this, 'patientPracticeGuid'));\n            this.set('immunizationTransmitPreference', Ember.get(preferences, 'immunizationProtectionTypeId') === 2);\n        }).drop(),\n        loadProviderList: (0, _emberConcurrency.task)(function* () {\n            Ember.set(this, 'practiceProviders', []);\n            const providers = yield Ember.get(this, 'store').findAll('provider-profile');\n            this.set('practiceProviders', providers);\n        }).drop(),\n        loadRegistries: (0, _emberConcurrency.task)(function* () {\n            const registries = yield _immunizationRegistry.default.loadActiveRegistries(Ember.get(this, 'store'));\n            Ember.set(this, 'immunizationRegistries', registries);\n        }).drop(),\n        loadRegistryConnections: (0, _emberConcurrency.task)(function* () {\n            const connections = yield _immunizationRegistry.default.loadRegistryConnections(Ember.get(this, 'store'));\n            Ember.set(this, 'registryConnections', connections);\n        }).drop(),\n        loadTransmissionStatuses: (0, _emberConcurrency.task)(function* () {\n            const statuses = yield Ember.get(this, 'store').query('immunization-transmission-status', {\n                patientPracticeGuid: Ember.get(this, 'patientPracticeGuid')\n            });\n            Ember.set(this, 'transmissionStatuses', statuses.toArray());\n        }).drop(),\n        transmitPatientImmunizations: (0, _emberConcurrency.task)(function* () {\n            const patientPracticeGuid = Ember.get(this, 'patientPracticeGuid');\n            try {\n                yield _immunizationRegistry.default.transmitImmunizationV2(patientPracticeGuid);\n                Ember.set(this, 'transmissionRequestErrors', null);\n                toastr.success('Successfully transmitted patient immunizations');\n                this.send('refreshImmunizations');\n            } catch (err) {\n                let errorMessages = err;\n                if (!Ember.isArray(errorMessages)) {\n                    errorMessages = ['Unexpected error transmitting to registry'];\n                }\n                Ember.set(this, 'transmissionRequestErrors', errorMessages);\n            }\n            Ember.get(this, 'loadTransmissionStatuses').perform();\n        }).drop(),\n\n        load() {\n            Ember.set(this, 'isAllowedToEditImmunizations', Ember.get(this, 'authorization').isEntitledFor('Chart.Immunizations.Edit'));\n            Ember.get(this, 'loadAlerts').perform();\n            Ember.get(this, 'loadFacilities').perform();\n            Ember.get(this, 'loadProviderList').perform();\n            Ember.get(this, 'loadRegistries').perform();\n            Ember.get(this, 'loadRegistryConnections').perform();\n            Ember.get(this, 'loadPatientPreference').perform();\n            Ember.get(this, 'loadLookupData').perform();\n            Ember.get(this, 'loadPatientImmunizations').perform();\n            Ember.get(this, 'loadTransmissionStatuses').perform();\n            this.loadPatientImmunizationsTab();\n        },\n\n        loadPatientImmunizationsTab() {\n            const patientController = Ember.get(this, 'patientController');\n            const actions = [{ separatorText: 'For immunizations' }];\n            const isNotAllowedToEditImmunizations = !Ember.get(this, 'isAllowedToEditImmunizations');\n\n            if (!Modernizr.touch) {\n                actions.pushObject({ text: 'Download immunization record', action: 'downloadImmunizationRecord' });\n            }\n\n            actions.pushObject({ text: 'Manage vaccine inventory', action: 'manageVaccineInventory', isDisabled: isNotAllowedToEditImmunizations });\n\n            actions.pushObjects([{ text: 'Print vaccinations', action: 'printVaccinations' }, { text: 'Print vaccinations with comments', action: 'printVaccinationsWithComments' }]);\n\n            actions.pushObject({ text: 'Transmit to state registry', action: 'transmitToStateRegistry', isDisabled: isNotAllowedToEditImmunizations });\n\n            Ember.set(patientController, 'tabActionItems', actions);\n\n            patientController.send('openTab', Ember.Object.create({\n                label: 'Immunizations',\n                route: 'patient.immunizations',\n                dismissible: true,\n                noIcon: true\n            }));\n            Ember.set(this, 'isRegistrySearchVisible', false);\n        },\n\n        preloadVaccinations() {\n            Ember.setProperties(this, {\n                isAddingImmunization: Ember.get(this, 'preloadCode') || Ember.get(this, 'preloadKeyword'),\n                selectedVaccination: null\n            });\n        },\n\n        reloadImmunizations: Ember.observer('model.patientPracticeGuid', function () {\n            Ember.get(this, 'loadPatientImmunizations').perform();\n        }),\n\n        actions: {\n            addVaccination() {\n                Ember.setProperties(this, {\n                    isAddingImmunization: true,\n                    selectedVaccination: null\n                });\n                _scrollHelper.default.scrollToTopOfElement($('.immunizations-bidirectional .scrollable-panel'));\n                Ember.get(this, 'analytics').track('Add Vaccine', { isSplitViewOpen: Ember.get(this, 'isRegistrySearchVisible') });\n            },\n            closeDetails() {\n                Ember.setProperties(this, {\n                    selectedVaccination: null,\n                    isAddingImmunization: false,\n                    preloadCode: null,\n                    preloadKeyword: null\n                });\n                this.send('refreshImmunizations');\n            },\n            connectToRegistry() {\n                Ember.get(this, 'connectToRegistryBySetting').perform();\n            },\n            deleteVaccination(vaccination) {\n                Ember.get(this, 'deletePatientVaccination').perform(vaccination);\n            },\n            downloadImmunizationRecord() {\n                Ember.set(this, 'isDownloadVisible', true);\n            },\n            print(withComments) {\n                Ember.setProperties(this, {\n                    printRegistryRecord: false,\n                    printWithComments: withComments,\n                    isPrintPreviewVisible: true\n                });\n            },\n            printRegistryRecord() {\n                Ember.set(this, 'printRegistryRecord', true);\n            },\n            toggleIsRegistryPrintingEnabled(enabled) {\n                Ember.set(this, 'isPrintRegistryRecordEnabled', enabled);\n            },\n            refreshImmunizations() {\n                Ember.get(this, 'store').unloadAll('immunization');\n                Ember.get(this, 'loadPatientImmunizations').perform();\n            },\n            searchInRegistry() {\n                Ember.set(this, 'isRegistrySearchVisible', true);\n                Ember.get(this, 'analytics').track('Search in Registry');\n            },\n            transitionToEditProvider(providerGuid) {\n                this.transitionToRoute('settings.editUser', providerGuid);\n            },\n            transmitToStateRegistry() {\n                Ember.get(this, 'transmitPatientImmunizations').perform();\n            },\n            vaccineInventory() {\n                this.transitionToRoute('settings.vaccineinventory');\n            },\n\n            viewImmunizationDetails(vaccinationRow) {\n                Ember.set(this, 'selectedVaccination', vaccinationRow);\n                _scrollHelper.default.scrollToTopOfElement($('.immunizations-bidirectional .scrollable-panel'));\n            },\n            updatePatientAdContextCvxCodes() {\n                const store = Ember.get(this, 'store');\n                const patientPracticeGuid = Ember.get(this, 'patientPracticeGuid');\n                const patientAdContext = store.peekRecord('patient-ad-context', patientPracticeGuid);\n                if (patientAdContext) {\n                    const vaccinations = store.peekAll('vaccination');\n                    const codes = vaccinations.map(vaccination => {\n                        if (Ember.get(vaccination, 'patientPracticeGuid') !== patientPracticeGuid || Ember.get(vaccination, 'source.isRefused')) {\n                            return null;\n                        }\n                        const type = Ember.get(vaccination, 'vaccineType');\n                        return Ember.isPresent(type) ? parseInt(Ember.get(type, 'cvxCode'), 10) : null;\n                    }).compact().uniq();\n                    Ember.set(patientAdContext, 'xc', codes);\n                    this.send('refreshAd', 'immunization');\n                }\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/patient/summary', ['exports', 'settings/mixins/with-patient-summary-display-settings'], function (exports, _withPatientSummaryDisplaySettings) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend(_withPatientSummaryDisplaySettings.default, {\n        analytics: Ember.inject.service(),\n        authorization: Ember.inject.service(),\n        patientController: Ember.inject.controller('patient'),\n\n        selectedItem: null,\n        isDisplaySettingsVisible: false,\n        shouldCreateNewEncounter: false,\n\n        cards: Ember.computed.alias('displaySettings.cards'),\n        isLoading: Ember.computed.or('loadDisplaySettings.isRunning', 'saveDisplaySettings.isRunning'),\n        patient: Ember.computed.alias('patientController.model'),\n        patientGuid: Ember.computed.alias('patient.patientPracticeGuid'),\n        sortedCards: Ember.computed.sort('visibleCards', 'cardSortProperties'),\n        visibleCards: Ember.computed('cards.@each.isVisible', 'cards.@each.isActive', function () {\n            return (this.get('cards') || []).filter(card => {\n                return card.get('isVisible') && card.get('isActive');\n            });\n        }),\n\n        cardColumns: Ember.computed('sortedCards.[]', function () {\n            return _.groupBy(this.get('sortedCards'), card => {\n                return card.get('column');\n            });\n        }),\n\n        cardColumnSizeClass: Ember.computed('sortedCards.[]', function () {\n            const columnCount = Object.keys(this.get('cardColumns')).length;\n\n            switch (columnCount) {\n                case 3:\n                    return 'col-xs-4';\n                case 2:\n                    return 'col-xs-6';\n                case 0:\n                case 1:\n                    return 'col-xs-12';\n                default:\n                    return 'col-xs-4';\n            }\n        }),\n\n        cardSortProperties: Ember.computed(() => ['column:asc', 'row:asc']),\n\n        goToItems: Ember.computed(() => [{\n            label: 'Family health history',\n            value: 'patient.familyhistory'\n        }, {\n            label: 'Immunizations',\n            value: 'patient.immunizations'\n        }, {\n            label: 'Growth charts',\n            value: 'patient.growth.charts'\n        }]),\n\n        isAllowedToEditSettings: Ember.computed('authorization.entitledFeatures.[]', function () {\n            return this.get('authorization').isEntitledFor('Settings.Edit');\n        }),\n\n        isAllowedToEditSummary: Ember.computed('authorization.entitledFeatures.[]', function () {\n            return this.get('authorization').isEntitledFor('Chart.Summary.Edit');\n        }),\n\n        actions: {\n            cancelDisplaySettings() {\n                this.get('displaySettings').undoChanges();\n                this.set('isDisplaySettingsVisible', false);\n            },\n\n            closeDetailPane() {\n                this.set('selectedItem', null);\n            },\n\n            createAllergy() {\n                this.transitionToRoute('summary.allergy', this.get('patientGuid'), 'new');\n            },\n\n            editMedicationFromDiagnosis(medicationGuid, diagnosisGuid) {\n                this.transitionToRoute('summary.medication', medicationGuid, { queryParams: {\n                        actionType: 'diagnosis',\n                        diagnosisGuid: diagnosisGuid\n                    } });\n            },\n\n            print() {\n                this.send('printChart');\n            },\n\n            recordMedicationFromDiagnosis(diagnosisGuid, searchTerm) {\n                this.transitionToRoute('summary.medication', 'new', { queryParams: {\n                        actionType: 'diagnosis',\n                        diagnosisGuid: diagnosisGuid,\n                        searchTerm: searchTerm\n                    } });\n            },\n\n            selectGoToItem(item) {\n                this.get('analytics').track('Select from Go-to Dropdown', { 'Selection': Ember.String.classify(item.label) });\n                this.transitionToRoute(item.value);\n            },\n\n            sendMessage() {\n                const patient = this.get('patientController');\n\n                this.send('openNewMessage', 'new', {\n                    regardingPatient: {\n                        guid: patient.get('patientPracticeGuid'),\n                        firstName: patient.get('patient.firstName'),\n                        lastName: patient.get('patient.lastName')\n                    }\n                });\n            },\n\n            sendSummaryAction(actionName, options) {\n                this.send(actionName, options);\n            },\n\n            sendPatientSummaryMixpanelEvent({ event, properties }) {\n                this.get('analytics').track(event, properties);\n            },\n\n            toggleDisplaySettings() {\n                this.toggleProperty('isDisplaySettingsVisible');\n            },\n\n            updateProperties(properties) {\n                this.setProperties(properties);\n            }\n        },\n\n        reset() {\n            this.setProperties({\n                displaySettings: null,\n                isDisplaySettingsVisible: false\n            });\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/practice-dashboard/clinical-trials-login-redirect', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        actions: {\n            loginWithEPatientFinder() {\n                window.open(this.get('config.ePatientFinderLoginUrl'));\n                this._navigateBack();\n            },\n            navigateBack() {\n                this._navigateBack();\n            }\n        },\n        _navigateBack() {\n            this.transitionToRoute('practiceDashboard.main');\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/practice-dashboard/clinical-trials', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        analytics: Ember.inject.service(),\n\n        isRegistrationModalVisible: false,\n        isLearnMoreModalVisible: false,\n\n        actions: {\n            toggleProperty(name) {\n                this.toggleProperty(name);\n            },\n            confirmSignup() {\n                this.get('analytics').track('Scenario - Clinical Trials', { 'Scenario Step': 'clickedSignUpOrLearnMore' });\n                this.set('isRegistrationModalVisible', true);\n            },\n            confirmLearnMore() {\n                this.get('analytics').track('Scenario - Clinical Trials', { 'Scenario Step': 'clickedSignUpOrLearnMore' });\n                this.set('isLearnMoreModalVisible', true);\n            },\n            openRegisterUrl() {\n                this.get('analytics').track('Scenario - Clinical Trials', { 'Scenario Step': 'visitedExternalSite' });\n                this.set('isRegistrationModalVisible', false);\n                window.open(this.get('config.ePatientFinderRegisterUrl'));\n            },\n            openLearnMoreUrl() {\n                this.get('analytics').track('Scenario - Clinical Trials', { 'Scenario Step': 'visitedExternalSite' });\n                this.set('isLearnMoreModalVisible', false);\n                window.open(this.get('config.ePatientFinderLearnMore'));\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/settings/favorite-diagnoses', ['exports', 'clinical/repositories/diagnoses', 'clinical/models/favorite-diagnosis'], function (exports, _diagnoses, _favoriteDiagnosis) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n\n        // Set in route as a Provider Preference object\n        sortOrder: null,\n        sortedModel: Ember.computed.sort('model', 'sortProperties'),\n        isRefiningDiagnois: false,\n\n        showByOptions: Ember.computed(() => [{\n            label: 'TERM',\n            value: 'term'\n        }, {\n            label: 'ICD-9',\n            value: 'icd9'\n        }, {\n            label: 'ICD-10',\n            value: 'icd10'\n        }, {\n            label: 'SNOMED CT',\n            value: 'snomed'\n        }]),\n\n        isManuallySorted: Ember.computed.equal('sortOrder.value', 'manual'),\n\n        anyItemsCollapsed: Ember.computed('model.@each.isExpanded', function () {\n            return !this.get('model').isEvery('isExpanded');\n        }),\n\n        showInlineAddDiagnosis: Ember.computed('isAddingInlineDiagnosis', 'model', function () {\n            return Ember.isEmpty(this.get('model')) || this.get('isAddingInlineDiagnosis');\n        }),\n\n        actions: {\n            sortAlphabetically() {\n                this.set('sortProperties', ['name']);\n                this.set('sortAscending', true);\n                this.set('sortOrder.value', 'alpha:asc');\n            },\n\n            sortDescending() {\n                this.set('sortAscending', false);\n                this.set('sortProperties', ['name:desc']);\n                this.set('sortOrder.value', 'alpha:desc');\n            },\n\n            sortAscending() {\n                this.set('sortAscending', true);\n                this.set('sortProperties', ['name']);\n                this.set('sortOrder.value', 'alpha:asc');\n            },\n\n            reorderItems(group) {\n                group.forEach((diagnosis, index) => {\n                    this.store.findRecord('favoriteDiagnosis', diagnosis.get('id')).then(diagnosis => {\n                        diagnosis.set('sortIndex', index + 1);\n                        diagnosis.save();\n                    });\n                });\n                this.set('sortProperties', ['sortIndex']);\n                this.set('sortAscending', true);\n                this.set('sortOrder.value', 'manual');\n            },\n\n            addFavoriteDiagnosis(diagnosis) {\n                if ((0, _favoriteDiagnosis.isDuplicate)(diagnosis, this.get('model'))) {\n                    toastr.error('This diagnosis has already been added to your diagnoses list.');\n\n                    return false;\n                } else {\n                    this.setProperties({\n                        diagnosis: null,\n                        query: '',\n                        addQuery: ''\n                    });\n\n                    //Bubble up to the route's addFavoriteDiagnosis handler to save the new diagnosis\n                    return true;\n                }\n            },\n            addNewDiagnosisInline() {\n                this.set('isAddingInlineDiagnosis', true);\n                Ember.run.later(() => {\n                    const scrollElement = $('.my-list-icd10');\n                    if (scrollElement) {\n                        scrollElement.scrollTop(scrollElement[0].scrollHeight + 30);\n                    }\n                    $('[data-element=\"diagnosis-search-input\"]').focus();\n                }, 200);\n            },\n            addFavoriteDiagnosisInline(diagnosis) {\n                this.set('isAddingInlineDiagnosis', false);\n                this.set('relatedDiagnoses', []);\n                this.set('isRefiningDiagnosis', false);\n                this.set('showRefineFacets', false);\n                if (diagnosis.get('needsIcd10Refinement')) {\n                    _diagnoses.default.loadIcd10RelatedDiagnoses(diagnosis).then(icd10Diagnoses => {\n                        this.set('relatedDiagnoses', icd10Diagnoses);\n                    }).errorMessage('Can\\'t load related diagnoses. Try again later.');\n                    this.set('isRefiningDiagnosis', true);\n                    this.set('showRefineFacets', true);\n                    this.set('diagnosisToRefine', diagnosis);\n                } else {\n                    if (Ember.isPresent(diagnosis) && Ember.isEmpty(diagnosis.get('name'))) {\n                        diagnosis.set('name', this.get('diagnosisToRefine.name'));\n                    }\n                    this.set('diagnosisToRefine', null);\n                    this.send('addFavoriteDiagnosis', diagnosis);\n                }\n            },\n            cancelAddInline() {\n                this.set('isAddingInlineDiagnosis', false);\n                this.set('relatedDiagnoses', []);\n                this.set('isRefiningDiagnosis', false);\n                this.set('showRefineFacets', false);\n            },\n            toggleExpand(item) {\n                item.toggleProperty('isExpanded');\n            },\n            toggleExpandAll(newValue) {\n                this.get('model').forEach(item => {\n                    item.set('isExpanded', newValue);\n                });\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/summary/allergy', ['exports', 'clinical/controllers/allergy'], function (exports, _allergy) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _allergy.default.extend({\n        // TODO: Remove after standardizing card contract\n        summary: Ember.inject.controller('patient.summary'),\n        allergies: Ember.computed('summary.allergies', function () {\n            return this.get('summary.allergies');\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/summary/behavioral', ['exports', 'clinical/repositories/worksheets', 'ember-concurrency'], function (exports, _worksheets, _emberConcurrency) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        authorization: Ember.inject.service('authorization'),\n        tunnel: Ember.inject.service(),\n        patientController: Ember.inject.controller('patient'),\n\n        questions: Ember.computed.alias('model.questions'),\n        isDirty: Ember.computed('questions.@each.isDirty', 'isNew', function () {\n            return this.get('questions').isAny('isDirty') && !this.get('isNew');\n        }),\n        isNew: false,\n        showSave: Ember.computed.or('isNew', 'isDirty'),\n        isComplete: Ember.computed('question.@each.value', 'isDeclinedChecked', function () {\n            if (this.get('isDeclinedChecked')) {\n                return true;\n            }\n            const allOtherQuestions = this.get('questions').rejectBy('label', 'Patient declined to specify on all questions');\n            return allOtherQuestions.rejectBy('shouldBeExcludedInScoring', true).filterBy('value', null).length === 0;\n        }),\n        disableSave: Ember.computed.or('hasValidationError', 'isEmpty'),\n        hasValidationError: Ember.computed.alias('model.hasRangeErrors'),\n        isEmpty: Ember.computed('questions.@each.value', 'isDeclinedChecked', function () {\n            if (this.get('isDeclinedChecked')) {\n                return false;\n            }\n            const allOtherQuestions = this.get('questions').rejectBy('label', 'Patient declined to specify on all questions');\n\n            const nonEmptyQuestion = allOtherQuestions.filter(question => {\n                const isNotEmpty = Ember.typeOf(question.value) === 'string' ? Ember.isPresent(question.value.trim()) : Ember.isPresent(question.value);\n                if (isNotEmpty) {\n                    return question;\n                }\n            });\n            return nonEmptyQuestion.length === 0;\n        }),\n        isAllowedToEdit: Ember.computed('authorization.entitledFeatures.[]', function () {\n            return this.get('authorization').isEntitledFor('Chart.Summary.Edit');\n        }),\n        isNotAllowedToEdit: Ember.computed.not('isAllowedToEdit'),\n        bigHeaderText: Ember.computed('isAllowedToEdit', function () {\n            return this.get('isAllowedToEdit') ? 'Record' : 'Review';\n        }),\n        smallHeaderText: Ember.computed.alias('model.worksheet.title'),\n        isDeclinedChecked: Ember.computed.alias('model.isDeclinedChecked'),\n        disableAllQuestions: Ember.observer('isDeclinedChecked', 'isAllowedToEdit', 'questions', function () {\n            const allOtherQuestions = this.get('questions').rejectBy('label', 'Patient declined to specify on all questions');\n            if (this.get('isDeclinedChecked') && this.get('isAllowedToEdit')) {\n                allOtherQuestions.setEach('isDisabledByDecline', true); // disable questions\n                allOtherQuestions.setEach('value', null); // remove all selections and values\n                allOtherQuestions.setEach('selectedOptionValue', null);\n                allOtherQuestions.setEach('isResetByDecline', true); // prevent showing undo link when value and selection are set to null\n            } else if (!this.get('isAllowedToEdit')) {\n                this.get('questions').setEach('isEnabled', false); // disable all questions\n            } else {\n                allOtherQuestions.setEach('isDisabledByDecline', false); // enable questions\n            }\n        }),\n        saveWorksheet: (0, _emberConcurrency.task)(function* () {\n            const patientPracticeGuid = this.get('patientController.id');\n            const responses = this.get('model');\n            try {\n                if (this.get('disabled')) {\n                    return Ember.RSVP.resolve();\n                }\n                responses.save();\n                yield _worksheets.default.saveResponses(patientPracticeGuid, responses, { isEncounterRelated: false });\n                this.get('tunnel').send('behavioral-health-refresh', { patientPracticeGuid, reload: true });\n                this.send('close');\n            } catch (e) {\n                toastr.error('Failed to save assessment');\n            }\n        }).drop(),\n        deleteWorksheet: (0, _emberConcurrency.task)(function* () {\n            const patientPracticeGuid = this.get('patientController.id');\n            const responses = this.get('model');\n            try {\n                yield _worksheets.default.deleteResponses(patientPracticeGuid, responses);\n                this.get('tunnel').send('behavioral-health-refresh', { patientPracticeGuid, reload: true });\n                this.send('close');\n            } catch (e) {\n                toastr.error('Failed to delete assessment');\n            }\n        }).drop(),\n        actions: {\n            responseEntered(question, response) {\n                const value = parseInt(response, 10);\n                const inputMin = parseInt(question.get('inputMin') || '0', 10);\n                let rangeError = null;\n                if (Ember.isPresent(question.get('inputMax'))) {\n                    const inputMax = parseInt(question.get('inputMax'), 10);\n                    if (value > inputMax || value < inputMin) {\n                        rangeError = `${inputMin} - ${inputMax} only`;\n                    }\n                } else {\n                    if (value < inputMin) {\n                        rangeError = `${inputMin} or greater only`;\n                    }\n                }\n                question.set('rangeError', rangeError);\n            },\n            closeDetailPane() {\n                this.get('tunnel').send('patient-summary-mixpanel-event', {\n                    event: 'Social Behavioral Health Cancelled',\n                    properties: {\n                        'Section': this.get('smallHeaderText'),\n                        'Completed Questionnaire': this.get('isComplete')\n                    }\n                });\n                this.send('close');\n            },\n            save() {\n                const sectionTitle = this.get('smallHeaderText');\n                const event = this.get('showSave') ? 'Social Behavioral Health Saved' : 'Social Behavioral Health Reviewed';\n                const properties = this.get('showSave') ? { 'Section': sectionTitle, 'Completed Questionnaire': this.get('isComplete') } : { 'Section': sectionTitle };\n\n                this.get('tunnel').send('patient-summary-mixpanel-event', { event, properties });\n                this.get('saveWorksheet').perform();\n            },\n            delete() {\n                this.get('deleteWorksheet').perform();\n            },\n            undo(item) {\n                item.set('selectedOptionValue', Ember.isPresent(item.get('imageSelection')) ? item.get('imageSelection') : undefined);\n                item.set('value', Ember.isPresent(item.get('imageValue')) ? item.get('imageValue') : undefined);\n            },\n            responseChecked(question, option) {\n                const value = option.value.split('-')[0] ? option.value.split('-')[0] : 0;\n                question.setInternalValue(parseInt(value, 10));\n            },\n            toggleCheckbox(question) {\n                const value = !question.value;\n                question.setInternalValue(value + false); // convert boolean to int, because response value cannot be boolean\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/summary/device', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend();\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/summary/diagnosis', ['exports', 'clinical/mixins/summary-controller'], function (exports, _summaryController) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend(_summaryController.default, {\n        actions: {\n            diagnosisDeleted(diagnosis) {\n                this.send('removeHealthConcern', diagnosis.get('diagnosisGuid'));\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/summary/family-health-history', ['exports', 'ember-concurrency'], function (exports, _emberConcurrency) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        analytics: Ember.inject.service(),\n        authorization: Ember.inject.service(),\n        isNotAllowedToEdit: Ember.computed.not('isAllowedToEdit'),\n        isAllowedToEdit: Ember.computed('authorization.entitledFeatures.[]', function () {\n            return this.get('authorization').isEntitledFor('Chart.Encounter.Edit');\n        }),\n        smallHeaderText: Ember.computed('isAllowedToEdit', function () {\n            return this.get('isAllowedToEdit') ? 'Record' : 'Review';\n        }),\n\n        actions: {\n            cancel() {\n                this.get('model').rollbackAttributes();\n                this.send('close');\n            }\n        },\n\n        save: (0, _emberConcurrency.task)(function* () {\n            if (this.get('model.hasDirtyAttributes')) {\n                this.get('analytics').track('Save PMH');\n                try {\n                    yield this.get('model').save();\n                    this.send('close');\n                } catch (e) {\n                    toastr.error('Failed to save family health history');\n                }\n            } else {\n                this.send('close');\n            }\n        }).drop()\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/summary/goal', ['exports', 'common/helpers/validation', 'ember-lgtm/mixins/validatable'], function (exports, _validation, _validatable) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend(_validatable.default, {\n        isValid: true,\n        validGoal() {\n            const goal = this.get('model');\n\n            return this.validator.validate(goal).then(result => {\n                const { errors, valid } = result;\n                let error;\n\n                this.set('errors', Ember.Object.create());\n                if (!valid) {\n                    for (error in errors) {\n                        if (errors[error].length) {\n                            this.get('errors').set(error, errors[error][0]);\n                        }\n                    }\n                }\n                this.set('isValid', valid);\n                return valid;\n            });\n        },\n\n        validator: _validation.default.validator().validates('description').required('Enter a goal').validates('effectiveDate').required('Enter a date').isDate('Please enter a valid date').isDateAfter1753('Before the allowable range').build()\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/summary/health-concern', ['exports', 'clinical/controllers/health-concern'], function (exports, _healthConcern) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _healthConcern.default.extend({\n        // TODO: Remove after standardizing card contract\n        summary: Ember.inject.controller('patient.summary'),\n        healthConcerns: Ember.computed('summary.healthConcerns', function () {\n            return this.get('summary.healthConcerns');\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/summary/medication', ['exports', 'clinical/mixins/summary-controller'], function (exports, _summaryController) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend(_summaryController.default);\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/summary/nutrition', ['exports', 'ember-concurrency'], function (exports, _emberConcurrency) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        authorization: Ember.inject.service('authorization'),\n        tunnel: Ember.inject.service(),\n        isAllowedToEdit: Ember.computed('authorization.entitledFeatures.[]', function () {\n            return this.get('authorization').isEntitledFor('Chart.Summary.Edit');\n        }),\n        isLoading: Ember.computed.or('load.isRunning', 'save.isRunning'),\n        isNotAllowedToEdit: Ember.computed.not('isAllowedToEdit'),\n        isDirty: Ember.computed('nutritionHistoryImage', 'nutritionHistory', function () {\n            return this.get('nutritionHistoryImage').trim() !== this.get('nutritionHistory').trim();\n        }),\n        nutritionHistory: '',\n        patientPracticeGuid: Ember.computed.alias('model.patientPracticeGuid'),\n        isNew: Ember.computed('nutritionHistory', 'nutritionHistoryImage', function () {\n            return Ember.isEmpty((this.get('nutritionHistoryImage') || '').trim());\n        }),\n        disableSave: Ember.computed('nutritionHistory', function () {\n            return Ember.isEmpty((this.get('nutritionHistory') || '').trim());\n        }),\n        load: (0, _emberConcurrency.task)(function* () {\n            try {\n                const behavioralHealth = yield this.get('store').findRecord('behavioral-health', this.get('model.patientPracticeGuid'));\n                this.setProperties({\n                    nutritionHistory: behavioralHealth.get('nutritionHistory.content.description'),\n                    nutritionHistoryImage: behavioralHealth.get('nutritionHistory.content.description'),\n                    error: false\n                });\n            } catch (e) {\n                toastr.error('Failed to load nutrition history');\n            }\n        }).drop(),\n        save: (0, _emberConcurrency.task)(function* () {\n            try {\n                if (this.get('isDirty')) {\n                    const personalMedicalHistory = yield this.get('store').findRecord('personal-medical-History', this.get('patientPracticeGuid'));\n                    personalMedicalHistory.set('nutritionHistory', this.get('nutritionHistory'));\n                    personalMedicalHistory.save().then(() => {\n                        this.get('tunnel').send('behavioral-health-refresh', { patientPracticeGuid: this.get('patientPracticeGuid'), reload: true });\n                        this.send('close');\n                    }, e => {\n                        throw e;\n                    });\n                } else {\n                    this.send('close');\n                }\n            } catch (e) {\n                toastr.error('Failed to save nutrition history');\n            }\n        }).drop(),\n        delete: (0, _emberConcurrency.task)(function* () {\n            try {\n                const personalMedicalHistory = yield this.get('store').findRecord('personal-medical-History', this.get('patientPracticeGuid'));\n                personalMedicalHistory.set('nutritionHistory', '');\n                personalMedicalHistory.save().then(() => {\n                    this.get('tunnel').send('behavioral-health-refresh', { patientPracticeGuid: this.get('patientPracticeGuid'), reload: true });\n                    this.send('close');\n                }, e => {\n                    throw e;\n                });\n            } catch (e) {\n                toastr.error('Failed to delete nutrition history');\n            }\n        }).drop(),\n        actions: {\n            save() {\n                const sectionTitle = 'Nutrition history';\n                const event = 'Social Behavioral Health Saved';\n                const properties = { 'Section': sectionTitle, 'Completed Questionnaire': !!this.get('nutritionHistory') };\n                this.get('tunnel').send('patient-summary-mixpanel-event', { event, properties });\n                this.get('save').perform();\n            },\n            delete() {\n                this.get('delete').perform();\n            },\n            closeDetailPane() {\n                this.get('tunnel').send('patient-summary-mixpanel-event', {\n                    event: 'Social Behavioral Health Cancelled',\n                    properties: {\n                        'Section': 'Nutrition history',\n                        'Completed Questionnaire': !!this.get('nutritionHistory')\n                    }\n                });\n                this.send('close');\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/summary/pmh', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        patientController: Ember.inject.controller('patient')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/summary/risk-score', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend();\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/summary/sia', ['exports', 'charting/controllers/encounter/transcript-event', 'charting/repositories/encounter-summaries', 'clinical/models/worksheet-responses', 'ember-concurrency'], function (exports, _transcriptEvent, _encounterSummaries, _worksheetResponses, _emberConcurrency) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _transcriptEvent.default.extend({\n        analytics: Ember.inject.service(),\n        transcriptGuid: Ember.computed.alias('model.transcriptGuid'),\n        encounterAndNoteType: '',\n        dateOfService: '',\n        comments: Ember.computed.alias('model.comments'),\n        selectedStatus: Ember.computed.alias('model.selectedStatus'),\n        startDateTimeUtc: Ember.computed('model.startDateTimeUtc', function () {\n            const startDateTimeUtc = this.get('model.startDateTimeUtc');\n            return Ember.isPresent(startDateTimeUtc) ? moment.utc(startDateTimeUtc).format('L LT') : null;\n        }),\n        endDateTimeUtc: Ember.computed('model.endDateTimeUtc', function () {\n            const endDateTimeUtc = this.get('model.endDateTimeUtc');\n            return Ember.isPresent(endDateTimeUtc) ? moment.utc(endDateTimeUtc).format('L LT') : null;\n        }),\n        responses: Ember.computed.alias('model.worksheetResponses'),\n        siaComponent: Ember.computed('eventType.worksheetGuid', 'eventType.eventTypeGuid', function () {\n            if (Ember.isEmpty(this.get('eventType.worksheetGuid'))) {\n                return 'sia-detail';\n            }\n            switch (this.get('eventType.eventTypeGuid')) {\n                case _worksheetResponses.worksheetEventTypeGuids.midasAssessmentWorksheetEventTypeGuid:\n                    return 'sia-worksheet/migraine-readonly';\n                case _worksheetResponses.worksheetEventTypeGuids.depressionPhq2AssessmentWorksheetEventTypeGuid:\n                    return 'sia-worksheet/depression-phq-2-readonly';\n                default:\n                    return 'sia-worksheet/default-readonly';\n            }\n        }),\n        loadEncounterText: (0, _emberConcurrency.task)(function* () {\n            const store = this.get('store');\n            const transcriptGuid = this.get('transcriptGuid');\n            let encounter = store.peekRecord('encounter-summary', transcriptGuid);\n\n            if (Ember.isEmpty(encounter)) {\n                const encounters = yield _encounterSummaries.default.loadEncounters(store, this.get('model.patientPracticeGuid'));\n                encounter = encounters.findBy('transcriptGuid', transcriptGuid);\n            }\n\n            if (Ember.isPresent(encounter)) {\n                this.setProperties({\n                    'encounterAndNoteType': encounter.get('encounterAndNoteType'),\n                    'dateOfService': encounter.get('dateOfService')\n                });\n            }\n        }).drop(),\n        actions: {\n            closeDetailPane() {\n                this.send('close');\n            },\n            openEncounterClicked() {\n                this.send('openEncounter', this.get('transcriptGuid'));\n                this.get('analytics').track('View Encounter From Summary SIA');\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/summary/smoking', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        patientController: Ember.inject.controller('patient')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/summary/social-health', ['exports', 'ember-concurrency'], function (exports, _emberConcurrency) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        authorization: Ember.inject.service('authorization'),\n        tunnel: Ember.inject.service(),\n\n        demographicOptions: null,\n        displaySetting: null,\n        socialHealth: null,\n\n        disableSave: Ember.computed('socialHealthField.content', function () {\n            return Ember.isEmpty(this.get('socialHealthField.content'));\n        }),\n        isLoading: Ember.computed.or('load.isRunning', 'save.isRunning'),\n        isNotAllowedToEdit: Ember.computed.not('isAllowedToEdit'),\n\n        headerText: Ember.computed('model.socialHealthFieldKey', 'socialHealthCardField.title', 'isAllowedToEdit', function () {\n            const suffix = this.get('isAllowedToEdit') ? 'Record' : 'Review';\n            let prefix = this.get('socialHealthCardField.title');\n\n            if (this.get('model.socialHealthFieldKey') === 'socialHistory') {\n                prefix = 'Social history (free-text)';\n            }\n\n            return `${prefix} > ${suffix}`;\n        }),\n\n        isAllowedToEdit: Ember.computed('authorization.entitledFeatures.[]', function () {\n            return this.get('authorization').isEntitledFor('Chart.Summary.Edit');\n        }),\n\n        isUsingOptionGuidToDelete: Ember.computed('model.socialHealthFieldKey', function () {\n            const key = this.get('model.socialHealthFieldKey');\n\n            return key === 'education' || key === 'financialResourceStatus';\n        }),\n\n        socialHealthCardField: Ember.computed('model.socialHealthFieldKey', 'displaySetting', function () {\n            const displaySetting = this.get('displaySetting');\n\n            if (Ember.isPresent(displaySetting)) {\n                const card = displaySetting.get('cards').findBy('componentName', 'social-behavioral-health');\n\n                if (Ember.isPresent(card)) {\n                    return card.get('fields').findBy('key', this.get('model.socialHealthFieldKey'));\n                }\n            }\n        }),\n\n        socialHealthField: Ember.computed('socialHealth', 'model.socialHealthFieldKey', function () {\n            const socialHealth = this.get('socialHealth');\n\n            if (Ember.isPresent(socialHealth)) {\n                return Ember.get(socialHealth, this.get('model.socialHealthFieldKey'));\n            }\n        }),\n\n        socialHealthFieldComponent: Ember.computed('socialHealthCardField.title', function () {\n            const socialHealthCardField = this.get('socialHealthCardField');\n\n            if (Ember.isPresent(socialHealthCardField)) {\n                const titleCode = socialHealthCardField.get('title').dasherize();\n                return `social-health/${titleCode}-details`;\n            }\n        }),\n\n        actions: {\n            cancel() {\n                const fieldName = this.get('model.socialHealthFieldKey');\n                this.get('tunnel').send('patient-summary-mixpanel-event', {\n                    event: 'Social Behavioral Health Cancelled',\n                    properties: {\n                        'Section': this.get('socialHealthCardField.title'),\n                        'Completed Questionnaire': this.get(`socialHealth.${fieldName}.isComplete`)\n                    }\n                });\n\n                const socialHealth = this.get('socialHealth');\n\n                if (Ember.isPresent(socialHealth)) {\n                    socialHealth.undoChanges();\n                }\n\n                this.transitionToRoute('patient.summary', this.get('model.patientPracticeGuid'));\n                this.send('resetSelectedItem');\n            },\n\n            selectOption(demographicOption) {\n                const fieldOption = Ember.getProperties(demographicOption, ['optionGuid', 'description']);\n                this.get('socialHealthField').setProperties(fieldOption);\n            },\n\n            undo(content) {\n                content.undoSelect();\n            }\n        },\n\n        delete: (0, _emberConcurrency.task)(function* () {\n            const field = this.get('socialHealthField');\n            const saveOptions = {\n                operation: 'delete',\n                optionGuid: this.get('isUsingOptionGuidToDelete') ? field.get('optionGuid') : undefined\n            };\n            field.clear();\n            yield this.get('save').perform(saveOptions);\n        }).drop(),\n\n        save: (0, _emberConcurrency.task)(function* (options) {\n            const saveOperation = options.operation === 'delete' ? options.operation : 'save';\n            const fieldName = this.get('model.socialHealthFieldKey');\n            const sectionTitle = this.get('socialHealthCardField.title');\n            const canMarkAsReviewed = this.get(`socialHealth.${fieldName}.canMarkAsReviewed`);\n            const event = canMarkAsReviewed ? 'Social Behavioral Health Reviewed' : 'Social Behavioral Health Saved';\n            const properties = canMarkAsReviewed ? { 'Section': sectionTitle } : { 'Section': sectionTitle, 'Completed Questionnaire': this.get(`socialHealth.${fieldName}.isComplete`) };\n\n            this.get('tunnel').send('patient-summary-mixpanel-event', { event, properties });\n\n            try {\n                if (this.get('socialHealthField.supportsEffectiveDate')) {\n                    this.set('socialHealthField.effectiveDate', moment.utc().toISOString());\n                }\n                yield this.get('socialHealth').save({\n                    adapterOptions: {\n                        fieldName,\n                        isDelete: options.operation === 'delete',\n                        optionGuid: options.optionGuid\n                    }\n                });\n                this.get('tunnel').send('social-health-refresh');\n                this.transitionToRoute('patient.summary', this.get('model.patientPracticeGuid'));\n                this.send('resetSelectedItem');\n            } catch (e) {\n                toastr.error(`Unable to ${saveOperation} ${this.get('socialHealthCardField.title').toLowerCase()} information`);\n            }\n        }).drop(),\n\n        load: (0, _emberConcurrency.task)(function* () {\n            const store = this.get('store');\n\n            try {\n                const socialHealth = yield store.findRecord('social-health', this.get('model.patientPracticeGuid'));\n                const displaySetting = yield store.findRecord('patient-summary-display-setting', this.get('session.userGUID'));\n                const demographicOptions = yield store.queryRecord('profile-demographics-option', {\n                    optionKeys: ['gi', 'so', 'ed', 'frs']\n                });\n\n                this.setProperties({\n                    socialHealth,\n                    displaySetting,\n                    demographicOptions\n                });\n                this.get('socialHealthField').setInitValues();\n            } catch (e) {\n                toastr.error('Unable to load social history details');\n                this.transitionToRoute('patient.summary', this.get('model.patientPracticeGuid'));\n            }\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/summary/social', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend({\n        patientController: Ember.inject.controller('patient'),\n        allowRollback: false,\n\n        allowRollbackObserver: Ember.observer('model.hasDirtyAttributes', function () {\n            this.set('allowRollback', this.get('model.hasDirtyAttributes'));\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/controllers/summary/summary-pmh', ['exports', 'clinical/mixins/with-pmh', 'ember-concurrency'], function (exports, _withPmh, _emberConcurrency) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Controller.extend(_withPmh.default, {\n        patientController: Ember.inject.controller('patient'),\n        authorization: Ember.inject.service('authorization'),\n\n        tunnel: Ember.inject.service(),\n        routing: Ember.inject.service('pf-routing'),\n\n        isAllowedToEdit: Ember.computed('authorization.entitledFeatures.[]', function () {\n            return this.get('authorization').isEntitledFor('Chart.Summary.Edit');\n        }),\n        isNotAllowedToEdit: Ember.computed.not('isAllowedToEdit'),\n\n        isLoading: Ember.computed.or('save.isRunning', 'loadDisplaySetting.isRunning'),\n        displaySetting: null,\n\n        pmhCardField: Ember.computed('model.section', 'displaySetting', function () {\n            const displaySetting = this.get('displaySetting');\n\n            if (Ember.isPresent(displaySetting)) {\n                const card = displaySetting.get('cards').findBy('componentName', 'pmh-section');\n\n                if (Ember.isPresent(card)) {\n                    return card.get('fields').findBy('key', this.get('model.section'));\n                }\n            }\n        }),\n        headerText: Ember.computed('pmhCardField', 'isAllowedToEdit', function () {\n            const suffix = this.get('isAllowedToEdit') ? 'Record' : 'Review';\n            let prefix = this.get('pmhCardField.title');\n\n            return `${prefix} > ${suffix}`;\n        }),\n        title: Ember.computed.alias('pmhCardField.displayTitle'),\n        placeholderText: Ember.computed('pmhCardField.title', function () {\n            return `Enter ${(this.get('pmhCardField.title') || 'past medical history').toLowerCase()}`;\n        }),\n        pmhField: Ember.computed('model.section', 'pastMedicalHistory', function () {\n            const pastMedicalHistory = this.get('pastMedicalHistory');\n\n            if (Ember.isPresent(pastMedicalHistory)) {\n                return (this.get('pastMedicalHistory.sections') || []).findBy('key', this.get('model.section'));\n            }\n        }),\n\n        loadDisplaySetting: (0, _emberConcurrency.task)(function* () {\n            try {\n                const displaySetting = yield this.get('store').findRecord('patient-summary-display-setting', this.get('session.userGUID'));\n                this.set('displaySetting', displaySetting);\n            } catch (e) {\n                toastr.error('Failed to load display setting');\n                this.transitionToRoute('patient.summary', this.get('model.patientPracticeGuid'));\n            }\n        }).drop(),\n\n        save: (0, _emberConcurrency.task)(function* (isDelete) {\n            if (isDelete) {\n                (this.get('pastMedicalHistory.sections') || []).findBy('key', this.get('model.section')).set('value', null);\n            } else {\n                const pmhField = (this.get('pmhField.value') || '').trim();\n                (this.get('pastMedicalHistory.sections') || []).findBy('key', this.get('model.section')).set('value', pmhField);\n            }\n            const text = isDelete ? 'delete' : 'save';\n\n            if (this.get('pastMedicalHistory.hasDirtyAttributes')) {\n                try {\n                    yield this.get('pastMedicalHistory').save();\n                    this._close();\n                } catch (e) {\n                    toastr.error(`Failed to ${text} ${(this.get('pmhCardField.title') || 'past medical history').toLowerCase()}`);\n                }\n            } else {\n                this.transitionToRoute('patient.summary', this.get('model.patientPracticeGuid'));\n            }\n        }).drop(),\n        _close() {\n            const pmh = this.get('pastMedicalHistory');\n            if (pmh.get('hasDirtyAttributes')) {\n                pmh.rollbackAttributes();\n                pmh.notifyPropertyChange('sections');\n            }\n\n            this.transitionToRoute('patient.summary', this.get('model.patientPracticeGuid'));\n            this.send('resetSelectedItem');\n        },\n        actions: {\n            cancel() {\n                this._close();\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/helpers/age-on-date', ['exports', 'common/helpers/dates'], function (exports, _dates) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.ageOnDate = undefined;\n    const ageOnDate = exports.ageOnDate = ([birthDate, targetDate, defaultText]) => {\n        const ageOnDate = _dates.default.getAgeOnDate(birthDate, targetDate, true);\n        const areDatesValid = moment().isValid(birthDate) && moment().isValid(targetDate) && ageOnDate !== 'NaN yrs';\n        return !areDatesValid && Ember.isPresent(defaultText) ? defaultText : ageOnDate;\n    };\n\n    exports.default = Ember.Helper.helper(ageOnDate);\n});","define('cute-cats-tanisha/templates/components/clinical/addon/helpers/user-session-cache', ['exports', 'boot/models/session'], function (exports, _session) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.clearUserSessionCache = clearUserSessionCache;\n\n    exports.default = function (options) {\n        var configurationArguments = arguments,\n            cacheKeyFunction,\n            loadFunction,\n            defaultFunction,\n            cacheWrapper;\n\n        if (arguments.length === 2) {\n            cacheKeyFunction = function () {\n                return configurationArguments[0];\n            };\n            loadFunction = arguments[1];\n            defaultFunction = arguments[3] || $.noop;\n        } else {\n            cacheKeyFunction = options.cacheKeyFunction;\n            loadFunction = options.loadFunction;\n            defaultFunction = options.defaultFunction || $.noop;\n        }\n\n        cacheWrapper = function () {\n            var cacheKey = cacheKeyFunction.apply(this, arguments),\n                cacheHash = getSessionCache(),\n                args = Array.prototype.slice.call(arguments),\n                currentResult = cacheHash[cacheKey],\n                options = arguments[arguments.length - 1] || {},\n                currentPromise;\n\n            if (!options.hasOwnProperty('forceReload')) {\n                options = {};\n                args.push(options);\n            }\n            options.cachedPromise = currentResult || Ember.RSVP.resolve(defaultFunction.apply(this, arguments));\n            if (!currentResult || currentResult._willReload || options.forceReload) {\n                currentPromise = loadFunction.apply(this, args);\n                cacheHash[cacheKey] = currentPromise;\n            }\n            return Ember.RSVP.resolve(cacheHash[cacheKey]).catch(function (error) {\n                if (currentPromise) {\n                    currentPromise._failed = true;\n                }\n                // currentResult is either null if it was the first time or the previous successful promise\n                cacheHash[cacheKey] = currentResult && currentResult._failed ? undefined : currentResult;\n                throw error;\n            });\n        };\n        cacheWrapper.expire = function () {\n            var cacheKey = cacheKeyFunction.apply(this, arguments),\n                cachedPromise = getSessionCache()[cacheKey] || {};\n            cachedPromise._willReload = true;\n        };\n        /***\n         * Returns a promise with the cached data or a promise with the default results\n         * We make sure the data is reload if someone calls the cacheWrapper directly, but even default\n         * results will be cached so we always get the same response\n         */\n        cacheWrapper.getCachedData = function () {\n            var cacheKey = cacheKeyFunction.apply(this, arguments),\n                cacheHash = getSessionCache(),\n                cachedPromise = cacheHash[cacheKey],\n                defaultResult;\n            if (cachedPromise) {\n                return cachedPromise;\n            }\n\n            defaultResult = defaultFunction.apply(this, arguments);\n            defaultResult = Ember.RSVP.resolve(defaultResult);\n            defaultResult._willReload = true;\n            cacheHash[cacheKey] = defaultResult;\n            return defaultResult;\n        };\n        return cacheWrapper;\n    };\n\n    var _userSessionHash = {},\n        getSessionCache = function () {\n        var userGuid = _session.default.get('userGUID'),\n            cache = _userSessionHash[userGuid] = _userSessionHash[userGuid] || {};\n        return cache;\n    };\n\n    function clearUserSessionCache() {\n        _userSessionHash = {};\n    }\n\n    /***\n     * Creates a function wrapper that will cache the results from the inner function.\n     * This has two overloads userSessionCache(cacheKeyFunction, loadFunction, [defaultFunction])\n     * Or userSessionCache(options) where options is an object with a cacheKeyFunction, loadFunction and defaultFunction\n     * @param {function} cacheKeyFunction the optional function will take all the arguments called when calling the resulting wrapper\n     * @param {function} loadFunction the function will take all the arguments called when calling the resulting wrapper\n     *     and it will always contain an options object with an (optional) forceReload flag and a cachedPromise with either the results of\n     *     a previous call, the default values (returned by defaultFunction) or undefined\n     *     @param {object} options last argument {forceReload: {boolean}, cachedPromise: {RSVP.Promise}}\n     * @param {function} defaultFunction the optional function will take all the arguments called when calling the resulting wrapper\n     * @returns {function} a function to load the data that is cached aware. The last argument of this function accepts an\n     *     options object with a flag to `forceReload` like `loadData(param1, param2, {forceReload: true})`\n     */\n});","define('cute-cats-tanisha/templates/components/clinical/addon/mixins/allergies-controller', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Mixin.create({\n        isEditingAllergy: false,\n        showAllergyDetails(allergy) {\n            const transcriptGuid = this.get('transcriptGuid');\n            const patientPracticeGuid = allergy ? allergy.get('patientPracticeGuid') : this.get('patientGuid');\n            const allergyGuid = allergy ? allergy.get('allergyGuid') : 'new';\n\n            if (transcriptGuid) {\n                this.transitionToRoute('encounter.allergy', patientPracticeGuid, transcriptGuid, allergyGuid);\n            } else {\n                this.transitionToRoute('summary.allergy', patientPracticeGuid, allergyGuid);\n            }\n        },\n        actions: {\n            createAllergy() {\n                this.showAllergyDetails();\n            },\n            editAllergy(allergy) {\n                this.showAllergyDetails(allergy);\n            },\n            closeAllergyPane() {\n                if (this.get('currentDetailsPaneProperty') === 'isEditingAllergy') {\n                    this.set('currentDetailsPaneProperty', null);\n                }\n            },\n            loadedAllergies(allergies) {\n                this.set('allergies', allergies);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/mixins/encounter-controller', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Mixin.create({\n        encounter: Ember.inject.controller(),\n        patient: Ember.inject.controller(),\n        transcriptGuid: Ember.computed.alias('encounter.transcriptGuid'),\n        transcriptDate: Ember.computed.alias('encounter.displayDate'),\n        patientPracticeGuid: Ember.computed.alias('patient.patientPracticeGuid'),\n        isDirty: false,\n        closing: false\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/mixins/encounter-route', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Mixin.create({\n        delegatingController: 'encounter',\n        _defaultTransition: 'encounter',\n        getDefaultTransitionArgs() {\n            const controller = this.controllerFor(this.get('delegatingController'));\n            const args = [this.get('_defaultTransition')];\n            if (controller) {\n                const { patientGuid, transcriptGuid } = controller.getProperties('patientGuid', 'transcriptGuid');\n                args.pushObjects([patientGuid, transcriptGuid]);\n                args.compact();\n            }\n            return args;\n        },\n        actions: {\n            saveEncounter() {\n                return this.bubbleAfterSave('saveEncounter');\n            },\n            signEncounter() {\n                if (this.bubbleAfterSave('signEncounter')) {\n                    this.replaceWith(...this.getDefaultTransitionArgs());\n                    return true;\n                }\n                return false;\n            },\n            refreshChartWithoutSave() {\n                this.replaceWith(...this.getDefaultTransitionArgs());\n                this.send('refreshChart');\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/mixins/immunizations-tooltip-support', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Mixin.create({\n        tooltipMessage: null,\n\n        didInsertElement() {\n            this._super();\n            this.showTooltip();\n        },\n\n        showTooltip: Ember.observer('tooltipMessage', function () {\n            var message = this.get('tooltipMessage'),\n                $group = this.$().parents('.form-group');\n\n            if (message) {\n                // Acting on the parents here is not great\n                $group.tooltip('destroy');\n                $group.tooltip({\n                    title: message,\n                    placement: 'top',\n                    trigger: 'manual'\n                });\n                $group.tooltip('show');\n                $group.addClass('error');\n            } else {\n                $group.tooltip('destroy');\n                $group.removeClass('error');\n            }\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/mixins/loading', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Mixin.create({\n        __loadingCounter: 0,\n        isLoading: Ember.computed.gt('__loadingCounter', 0),\n        /***\n         * Evaluates a promise while setting up a loading indicator to show progress\n         */\n        _withProgress(promise) {\n            var _this = this;\n            this.incrementProperty('__loadingCounter');\n            if (Ember.isPresent(promise)) {\n                return promise.finally(function () {\n                    if (!_this.get('isDestroyed')) {\n                        _this.decrementProperty('__loadingCounter');\n                        if (_this.get('__loadingCounter') === 0 && _this.get('isLoading')) {\n                            _this.notifyPropertyChange('isLoading');\n                        }\n                    }\n                });\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/mixins/patient-list-data', ['exports', 'ember-data/attr'], function (exports, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Mixin.create({\n        patientName: (0, _attr.default)('string'),\n        patientFirstName: (0, _attr.default)('string'),\n        patientMiddleName: (0, _attr.default)('string'),\n        patientLastName: (0, _attr.default)('string'),\n        dateOfBirth: (0, _attr.default)('string'),\n        age: (0, _attr.default)('string'),\n        gender: (0, _attr.default)('string'),\n        patientRecordNumber: (0, _attr.default)('string'),\n        patientPhoneNumbers: (0, _attr.default)('array'),\n        patientAddress: (0, _attr.default)('string'),\n        patientIsActive: (0, _attr.default)('boolean'),\n        // TODO: Remove defaultValue once endpoints support this attribute.\n        hasPatientImage: (0, _attr.default)('boolean', { defaultValue: true }),\n        homePhoneNumber: Ember.computed('patientPhoneNumbers.[]', function () {\n            return this._getPhoneNumber('Home');\n        }),\n        mobilePhoneNumber: Ember.computed('patientPhoneNumbers.[]', function () {\n            return this._getPhoneNumber('Mobile');\n        }),\n        genderString: Ember.computed('gender', function () {\n            if (this.get('gender') === 'M') {\n                return 'Male';\n            } else if (this.get('gender') === 'F') {\n                return 'Female';\n            }\n            return 'Unknown';\n        }),\n        _getPhoneNumber(type) {\n            const phoneNumbers = this.get('patientPhoneNumbers');\n            const phoneNumber = phoneNumbers ? phoneNumbers.findBy('type', type) : null;\n            return phoneNumber ? phoneNumber.phoneNumber : null;\n        },\n        updateDemographics(patient) {\n            const { fullName, firstName, middleName, lastName, birthDate, patientRecordNumber, mobilePhone, homePhone, streetAddress1, streetAddress2, postalCode, city, state, isActive } = patient.getProperties('fullName', 'firstName', 'lastName', 'middleName', 'birthDate', 'patientRecordNumber', 'mobilePhone', 'homePhone', 'streetAddress1', 'streetAddress1', 'streetAddress2', 'postalCode', 'city', 'state', 'isActive');\n            const patientPhoneNumbers = [];\n            let patientAddress = [streetAddress1, streetAddress2, city, state].filter(item => Ember.isPresent(item)).join(', ');\n            if (mobilePhone) {\n                patientPhoneNumbers.pushObject({ type: 'Mobile', phoneNumber: mobilePhone });\n            }\n            if (homePhone) {\n                patientPhoneNumbers.pushObject({ type: 'Home', phoneNumber: homePhone });\n            }\n            if (postalCode) {\n                patientAddress += ` ${postalCode}`;\n            }\n            this.setProperties({\n                patientName: fullName,\n                patientFirstName: firstName,\n                patientMiddleName: middleName,\n                patientLastName: lastName,\n                dateOfBirth: birthDate,\n                patientIsActive: isActive,\n                gender: patient.get('gender'),\n                patientAddress,\n                patientRecordNumber,\n                patientPhoneNumbers\n            });\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/mixins/pmh-controller', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Mixin.create({\n        currentPMHSection: Ember.computed('isEditingPMH', 'currentAutoFocusSection', function () {\n            return this.get('isEditingPMH') ? this.get('currentAutoFocusSection') : null;\n        }),\n        isEditingSocialHistoryFreeText: Ember.computed.equal('currentPMHSection', 'socialHistory'),\n        scrollToPMH: () => {},\n        isEditingPMH: false,\n        actions: {\n            editPMHSection(key) {\n                var baseRoute = this.get('transcriptGuid') ? 'encounter' : 'summary';\n                this.transitionToRoute(baseRoute + '.pmh', { section: key || 'all' });\n            },\n            pmhAction(action) {\n                var pmh = this.get('pastMedicalHistory');\n                if (pmh && pmh.get('hasDirtyAttributes')) {\n                    pmh.save().then(function () {\n                        this.send(action);\n                    }.bind(this)).errorMessage('Failed to save PMH');\n                } else {\n                    this.send(action);\n                }\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/mixins/row-height-hack', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Mixin.create({\n        // HACK: to fix the row height when its content height changes\n        _resizeRowByCell() {\n            var cell = this.$().parents('.data-grid-cell');\n            Ember.run.scheduleOnce('afterRender', this, function () {\n                var index = cell.index() + 1,\n                    dataGrid = cell.parents('.data-grid'),\n                    cellsOnSameRow = dataGrid.find('.data-grid-cell:nth-child(' + index + ')'),\n                    newRowHeight = cell.children().first().outerHeight();\n                cellsOnSameRow.height(newRowHeight);\n            });\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/mixins/social-history-controller', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Mixin.create({\n        scrollToSocialHistory() {\n            // Override in the implementing controller if desired.\n        },\n        actions: {\n            editSmokingStatus(status) {\n                const transcriptGuid = this.get('transcriptGuid');\n                const patientPracticeGuid = status.get('patientPracticeGuid');\n                if (transcriptGuid) {\n                    this.transitionToRoute('encounter.smoking', patientPracticeGuid, transcriptGuid, status);\n                } else {\n                    this.transitionToRoute('summary.smoking', patientPracticeGuid, status);\n                }\n            },\n            editSocialHistory(section) {\n                const baseRoute = this.get('transcriptGuid') ? 'encounter' : 'summary';\n                this.transitionToRoute(`${baseRoute}.social`, section);\n            },\n            editPatientRiskScore() {\n                const baseRoute = this.get('transcriptGuid') ? 'encounter' : 'summary';\n                this.transitionToRoute(`${baseRoute}.risk-score`);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/mixins/summary-controller', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Mixin.create({\n        patient: Ember.inject.controller(),\n        patientPracticeGuid: Ember.computed.alias('patient.patientPracticeGuid'),\n        transcriptGuid: null,\n        isDirty: false,\n        closing: false\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/mixins/summary-route', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Mixin.create({\n        delegatingController: 'patient/summary',\n        _defaultTransition: 'patient.summary',\n        actions: {\n            validateNewEncounter() {\n                return this.bubbleAfterSave('validateNewEncounter');\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/mixins/vaccination-form', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Mixin.create({\n        classNames: ['vaccination-form'],\n\n        facilities: null,\n        selectedFacility: null,\n        errors: null,\n        isNotAllowedToEditImmunizations: true,\n        isVaccinationPersisted: false,\n        patientPracticeGuid: null,\n        providers: null,\n        vaccination: null,\n        vaccineInventories: null,\n        vaccineManufacturers: null,\n        vaccineSearchQuery: null,\n\n        isVaccineLoaded: Ember.computed.notEmpty('vaccination.vaccineType'),\n\n        init() {\n            this._super();\n\n            Ember.run.scheduleOnce('afterRender', this, () => {\n                this.set('errors', null);\n\n                if (Ember.isEmpty(this.get('vaccination.vaccinationGuid'))) {\n                    this.sendAction('createVaccinationRecord');\n                } else {\n                    this.loadVaccinationDetails();\n                }\n            });\n        },\n\n        willDestroyElement() {\n            var vaccination = this.get('vaccination');\n\n            if (vaccination && vaccination.get('isNew')) {\n                this.sendAction('deleteVaccination', true);\n            }\n\n            this.set('errors', null);\n        },\n\n        onFacilityGuidChanged: Ember.observer('vaccination.facilityGuid', function () {\n            var facilityGuid = this.get('vaccination.facilityGuid'),\n                facilities = this.get('facilities') || [],\n                facilityMatch = facilities.findBy('facilityGuid', facilityGuid);\n\n            if (this.get('selectedFacility.facilityGuid') !== facilityGuid && !Ember.isEmpty(facilityMatch)) {\n                this.set('selectedFacility', facilityMatch);\n            }\n        }).on('init'),\n\n        actions: {\n            selectFacility(facility) {\n                this.set('vaccination.facilityGuid', facility.get('facilityGuid'));\n            },\n\n            selectVaccine(immunizationSearchResult) {\n                var searchQuery = {\n                    searchGuid: immunizationSearchResult.get('searchGuid'),\n                    searchTypeCode: immunizationSearchResult.get('searchTypeCode')\n                },\n                    searchResultName = immunizationSearchResult.get('name'),\n                    vaccineInventory;\n\n                this.sendAction('vaccinationFormLoading', true);\n\n                this.set('errors', null);\n                this.get('store').queryRecord('vaccine-type', searchQuery).then(vaccineType => {\n                    if (vaccineType) {\n                        if (vaccineType.get('isCustom')) {\n                            vaccineType.set('name', searchResultName);\n\n                            if (vaccineType.get('sortedVaccineInventories.length') > 0) {\n                                vaccineType.get('sortedVaccineInventories.firstObject').setProperties({\n                                    customVaccinationTypeName: searchResultName,\n                                    isHidden: true,\n                                    isDeleted: false\n                                });\n                            }\n                        }\n\n                        if (vaccineType.get('sortedVaccineInventories.length')) {\n                            vaccineInventory = vaccineType.get('sortedVaccineInventories.firstObject');\n\n                            this.set('vaccination.vaccineInventory', vaccineInventory);\n                            this.set('vaccination.immunizationFundingSource', vaccineInventory.get('immunizationFundingSource'));\n                        }\n\n                        this.setProperties({\n                            'vaccination.administeredByProviderGuid': vaccineType.get('providerGuid'),\n                            'vaccination.orderingProviderGuid': vaccineType.get('providerGuid'),\n                            'vaccination.vaccineType': vaccineType,\n                            'vaccineInventories': vaccineType.get('sortedVaccineInventories'),\n                            'vaccineManufacturers': vaccineType.get('manufacturers')\n                        });\n                    }\n                }, () => {\n                    toastr.error('Failed to load vaccination details.');\n\n                    this.sendAction('closeVaccinationDetails');\n                }).finally(() => {\n                    this.sendAction('vaccinationFormLoading', false);\n                });\n            }\n        },\n\n        loadVaccinationDetails() {\n            var vaccination = this.get('vaccination'),\n                searchQuery = {\n                searchGuid: vaccination.get('vaccineType.vaccineTypeGuid'),\n                searchTypeCode: 'vaccineType'\n            };\n\n            this.set('errors', null);\n\n            this.get('store').query('vaccineType', searchQuery).then(function (vaccineType) {\n                vaccineType = vaccineType.get('firstObject');\n\n                this.setProperties({\n                    vaccineInventories: vaccineType.get('sortedVaccineInventories'),\n                    vaccineManufacturers: vaccineType.get('manufacturers')\n                });\n            }.bind(this), function () {\n                toastr.error('Failed to load vaccination details.');\n\n                this.sendAction('closeVaccinationDetails');\n            }.bind(this)).finally(function () {\n                this.sendAction('vaccinationFormLoading', false);\n            }.bind(this));\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/mixins/with-allergies', ['exports', 'tyrion/mixins/destroyed', 'clinical/models/allergies-array', 'ember-concurrency'], function (exports, _destroyed, _allergiesArray, _emberConcurrency) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Mixin.create(_destroyed.default, {\n        tunnel: Ember.inject.service(),\n\n        allergies: null,\n        loadAllergiesFailed: false,\n        patientPracticeGuidMismatch: false,\n        isLoading: Ember.computed.alias('loadAllergies.isRunning'),\n        allergiesError: Ember.computed.or('loadAllergiesFailed', 'patientPracticeGuidMismatch'),\n        noKnownAllergies: Ember.computed.alias('allergies.noKnownAllergies'),\n        _loadAllergiesOnInit: Ember.on('init', Ember.observer('patientPracticeGuid', function () {\n            this.get('loadAllergies').perform();\n        })),\n        drugAllergies: Ember.computed('allergies.drug.[]', 'patientPracticeGuid', function () {\n            return this.filterPatientAllergies(this.get('allergies.drug'));\n        }),\n        foodAllergies: Ember.computed('allergies.food.[]', 'patientPracticeGuid', function () {\n            return this.filterPatientAllergies(this.get('allergies.food'));\n        }),\n        environmentalAllergies: Ember.computed('allergies.environmental.[]', 'patientPracticeGuid', function () {\n            return this.filterPatientAllergies(this.get('allergies.environmental'));\n        }),\n        inactiveAllergies: Ember.computed('allergies.inactive.[]', 'patientPracticeGuid', function () {\n            return this.filterPatientAllergies(this.get('allergies.inactive'));\n        }),\n        filterPatientAllergies(allergies) {\n            const patientPracticeGuid = this.get('patientPracticeGuid');\n            if (Ember.isEmpty(patientPracticeGuid) || Ember.isEmpty(allergies)) {\n                return [];\n            }\n            return _allergiesArray.default.create({\n                content: allergies.filterBy('patientPracticeGuid', patientPracticeGuid)\n            });\n        },\n        loadAllergies: (0, _emberConcurrency.task)(function* (forceReload) {\n            const patientPracticeGuid = this.get('patientPracticeGuid');\n\n            if (!patientPracticeGuid) {\n                return;\n            }\n\n            this.setProperties({\n                loadAllergiesFailed: false,\n                allergies: _allergiesArray.default.create({ content: [] })\n            });\n\n            const data = yield this.get('store').query('patient-allergy', { patientPracticeGuid, forceReload });\n\n            this.setAllergies(patientPracticeGuid, _allergiesArray.default.create({\n                content: data.toArray(),\n                noKnownAllergies: data.get('meta.noKnownAllergies')\n            }));\n        }).restartable(),\n        setAllergies(patientPracticeGuid, allergies) {\n            if (this.get('patientPracticeGuid') === patientPracticeGuid) {\n                this._unlessDestroyed(() => {\n                    this.setProperties({\n                        patientPracticeGuidMismatch: Ember.isPresent(allergies) && allergies.every(allergy => allergy.get('patientPracticeGuid') !== patientPracticeGuid),\n                        allergies\n                    });\n                    if (this.attrs.loadedAllergies) {\n                        this.attrs.loadedAllergies(allergies);\n                    }\n                    this.get('tunnel').send('allergies-list', allergies);\n                });\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/mixins/with-comments', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Mixin.create({\n        visibleComments: null,\n        init() {\n            this._super();\n            this.set('visibleComments', []);\n        },\n        showComments: Ember.computed('visibleComments', function () {\n            return this.areCommentsVisible('showComments');\n        }),\n        showEncounterComments: Ember.computed('visibleComments', function () {\n            return this.areCommentsVisible('showEncounterComments');\n        }),\n        areCommentsVisible(key) {\n            var visibleComments = this.get('visibleComments');\n            if (this.get('showAllComments')) {\n                return true;\n            }\n            if (Ember.isEmpty(visibleComments)) {\n                return false;\n            }\n            return visibleComments.isAny('key', key);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/mixins/with-devices', ['exports', 'clinical/repositories/devices', 'charting/mixins/with-patient-print-title', 'boot/models/session', 'ember-concurrency'], function (exports, _devices, _withPatientPrintTitle, _session, _emberConcurrency) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Mixin.create(_withPatientPrintTitle.default, {\n        routing: Ember.inject.service('pf-routing'),\n        selectedDeviceGuid: Ember.computed('selectedItem', {\n            get() {\n                return this.get('selectedItem');\n            },\n            set(value) {\n                return value;\n            }\n        }),\n        actions: {\n            loadDevices() {\n                this.get('_loadDevices').perform();\n            },\n            editDevice(device) {\n                if (device) {\n                    this.get('routing').transitionToRoute('summary.device', device.patientPracticeGuid, device.healthcareDeviceGuid);\n                    this.attrs.setControllerProperties({\n                        selectedItem: device.healthcareDeviceGuid\n                    });\n                }\n            },\n            recordDevice() {\n                this.get('routing').transitionToRoute('summary.device', 'new');\n                this.attrs.setControllerProperties({\n                    selectedItem: undefined\n                });\n            },\n            toggleInactiveDevices() {\n                this.toggleProperty('showInactiveDevices');\n            },\n            print() {\n                // Load the patient info first to ensure that it gets rendered on the print preview\n                this.get('store').findRecord('patient', this.get('patientGuid')).then(() => {\n                    this.sendAction('printAudit', 'Devices');\n                    this.set('isPrintVisible', true);\n                });\n            }\n        },\n\n        noImplantableDevices: false,\n        devices: undefined,\n        practiceUsers: null,\n        sortProperties: Ember.computed(() => ['userEnteredInfo.userEnteredImplantDate:desc']),\n        sortedDevices: Ember.computed.sort('devices', 'sortProperties'),\n        activeDevices: Ember.computed.filterBy('sortedDevices', 'isActive', true),\n        inactiveDevices: Ember.computed.filterBy('sortedDevices', 'isActive', false),\n        isLoading: Ember.computed.alias('_loadDevices.isRunning'),\n        loadDevicesFailed: Ember.computed.alias('_loadDevices.last.isError'),\n\n        selectedDevice: Ember.computed('selectedDeviceGuid', 'devices.@each.healthcareDeviceGuid', {\n            get() {\n                return this.getWithDefault('devices', []).findBy('healthcareDeviceGuid', this.get('selectedDeviceGuid'));\n            },\n            set(key, value) {\n                this.set('selectedDeviceGuid', Ember.get(value || {}, 'deviceGuid'));\n            }\n        }),\n\n        canRecordDevice: Ember.computed('loadDevicesFailed', 'isLoading', function () {\n            return _session.default.get('canEditChart') && !this.get('loadDevicesFailed') && !this.get('isLoading');\n        }),\n\n        _loadDevicesOnInit: Ember.on('init', Ember.observer('patientGuid', function () {\n            this.set('practiceUsers', []);\n            this.get('_loadDevices').perform();\n            this.get('_loadUsers').perform();\n        })),\n\n        _loadDevices: (0, _emberConcurrency.task)(function* () {\n            const patientGuid = this.get('patientGuid');\n            if (!patientGuid) {\n                if (DEBUG) {\n                    window.console.error('This is designed to be used with a patientGuid. Are you missing something?');\n                }\n                return;\n            }\n            const results = yield _devices.default.loadDevices(patientGuid);\n            this.set('devices', results.Devices);\n            this.set('noImplantableDevices', results.noImplantableDevicesFlag);\n            this.set('updateDevice', null);\n        }).restartable(),\n\n        _loadUsers: (0, _emberConcurrency.task)(function* () {\n            const data = yield this.store.findAll('provider-profile');\n            this.set('practiceUsers', data);\n        }).drop(),\n\n        isNoDevicesChecked: Ember.computed('noImplantableDevices', {\n            get() {\n                return !!this.get('noImplantableDevices');\n            },\n            set(key, value) {\n                this.get('setNoDevices').perform(value);\n                return value;\n            }\n        }),\n        setNoDevices: (0, _emberConcurrency.task)(function* (value) {\n            this.set('noImplantableDevices', value);\n            try {\n                yield _devices.default.recordNoDevices(this.get('patientGuid'), value);\n            } catch (error) {\n                toastr.error('Failed to record no implantable devices status');\n                // revert to the previous value if we couldn't update it.\n                this.set('noImplantableDevices', !value);\n            }\n        }),\n\n        patientSummary: Ember.computed.alias('patient'),\n        displayName: 'Implantable device',\n\n        updatingDevice: Ember.observer('updateDevice', function () {\n            if (!Ember.isEmpty(this.get('updateDevice'))) {\n                this.get('_loadDevices').perform();\n            }\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/mixins/with-diagnoses', ['exports', 'clinical/repositories/diagnoses', 'clinical/models/diagnoses-array', 'clinical/mixins/loading', 'boot/models/session', 'tyrion/mixins/destroyed'], function (exports, _diagnoses, _diagnosesArray, _loading, _session, _destroyed) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Mixin.create(_loading.default, _destroyed.default, {\n        actions: {\n            loadDiagnoses() {\n                this._loadDiagnoses();\n            },\n            reloadDiagnoses() {\n                this._loadDiagnoses(true);\n            },\n            editDiagnosis(diagnosis) {\n                this.sendAction('editDiagnosis', diagnosis);\n            },\n            recordDiagnoses() {\n                this.sendAction('recordDiagnoses');\n            },\n            toggleProperty(key) {\n                this.toggleProperty(key);\n            },\n            print() {\n                this.get('store').findRecord('patient', this.get('patientGuid')).then(() => {\n                    this.sendAction('printAudit', 'Diagnoses');\n                    this.set('isPrintVisible', true);\n                });\n            }\n        },\n\n        authorization: Ember.inject.service('authorization'),\n        diagnoses: undefined,\n        patientGuidMismatch: false,\n        noKnownDiagnoses: Ember.computed.alias('diagnoses.noKnownDiagnoses'),\n        isPrintVisible: false,\n        diagnosesError: Ember.computed.or('loadDiagnosesFailed', 'patientGuidMismatch'),\n        activeDiagnoses: Ember.computed.alias('diagnoses.active'),\n        historicalDiagnoses: Ember.computed.alias('diagnoses.historical'),\n        chronicActiveDiagnoses: Ember.computed.alias('activeDiagnoses.chronic'),\n        chronicHistoricalDiagnoses: Ember.computed.alias('historicalDiagnoses.chronic'),\n        acuteActiveDiagnoses: Ember.computed.alias('activeDiagnoses.acute'),\n        acuteHistoricalDiagnoses: Ember.computed.alias('historicalDiagnoses.acute'),\n        unspecifiedActiveDiagnoses: Ember.computed.alias('activeDiagnoses.unspecified'),\n        activePatientDiagnoses: Ember.computed('activeDiagnoses.[]', 'patientGuid', function () {\n            return this.filterPatientDiagnoses(this.get('activeDiagnoses'));\n        }),\n        historicalPatientDiagnoses: Ember.computed('historicalDiagnoses.[]', 'patientGuid', function () {\n            return this.filterPatientDiagnoses(this.get('historicalDiagnoses'));\n        }),\n        chronicActivePatientDiagnoses: Ember.computed('chronicActiveDiagnoses.[]', 'patientGuid', function () {\n            return this.filterPatientDiagnoses(this.get('chronicActiveDiagnoses'));\n        }),\n        chronicHistoricalPatientDiagnoses: Ember.computed('chronicHistoricalDiagnoses.[]', 'patientGuid', function () {\n            return this.filterPatientDiagnoses(this.get('chronicHistoricalDiagnoses'));\n        }),\n        acuteActivePatientDiagnoses: Ember.computed('acuteActiveDiagnoses.[]', 'patientGuid', function () {\n            return this.filterPatientDiagnoses(this.get('acuteActiveDiagnoses'));\n        }),\n        acuteHistoricalPatientDiagnoses: Ember.computed('acuteHistoricalDiagnoses.[]', 'patientGuid', function () {\n            return this.filterPatientDiagnoses(this.get('acuteHistoricalDiagnoses'));\n        }),\n        unspecifiedActivePatientDiagnoses: Ember.computed('unspecifiedActiveDiagnoses.[]', 'patientGuid', function () {\n            return this.filterPatientDiagnoses(this.get('unspecifiedActiveDiagnoses'));\n        }),\n        filterPatientDiagnoses(diagnoses) {\n            const patientGuid = this.get('patientGuid');\n            if (Ember.isEmpty(patientGuid) || Ember.isEmpty(diagnoses)) {\n                return [];\n            }\n            return diagnoses.filterBy('patientPracticeGuid', patientGuid);\n        },\n\n        unsortedEncounterDiagnoses: Ember.computed('diagnoses.@each.eachTranscriptDiagnoses', 'transcriptGuid', function () {\n            var transcriptGuid = this.get('transcriptGuid');\n            return transcriptGuid ? this.get('diagnoses').getEncounterDiagnoses(transcriptGuid) : [];\n        }),\n        encounterDiagnosesSortProperties: Ember.computed(() => ['sortOrder']),\n        encounterDiagnoses: Ember.computed.sort('unsortedEncounterDiagnoses', 'encounterDiagnosesSortProperties'),\n\n        _loadDiagnosesOnInit: Ember.on('init', Ember.observer('patientGuid', function () {\n            this._loadDiagnoses();\n        })),\n\n        _loadDiagnoses(forceReload) {\n            const patientGuid = this.get('patientGuid');\n\n            if (!patientGuid) {\n                if (DEBUG) {\n                    window.console.error('This is designed to be used with a patientGuid. Are you missing something?');\n                }\n                return;\n            }\n            this.setProperties({\n                diagnoses: _diagnosesArray.default.create({ content: [] }),\n                loadDiagnosesFailed: false,\n                patientGuidMismatch: false\n            });\n            this._withProgress(_diagnoses.default.loadDiagnoses(patientGuid, { forceReload }).then(diagnoses => {\n                // Make sure the patientGuid hasn't changed since the call was initiated.\n                // TODO: Refactor to use ember-concurrency\n                if (this.get('patientGuid') === patientGuid) {\n                    this._setPropertiesUnlessDestroyed({\n                        patientGuidMismatch: Ember.isPresent(diagnoses) && diagnoses.every(diagnosis => diagnosis.get('patientPracticeGuid') !== patientGuid),\n                        diagnoses\n                    });\n                }\n            })).catch(() => {\n                // Make sure the patientGuid hasn't changed since the call was initiated.\n                // TODO: Refactor to use ember-concurrency\n                if (this.get('patientGuid') === patientGuid) {\n                    this._setUnlessDestroyed('loadDiagnosesFailed', true);\n                    toastr.error('Failed to load diagnoses');\n                }\n            });\n        },\n\n        canRecordDiagnoses: Ember.computed('loadDiagnosesFailed', 'isLoading', 'authorization.entitledFeatures.[]', function () {\n            return _session.default.get('canEditChart') && !this.get('loadDiagnosesFailed') && !this.get('isLoading') && this.get('authorization').isEntitledFor('Chart.Diagnoses.Edit');\n        }),\n\n        isNoKnownChecked: Ember.computed('noKnownDiagnoses', {\n            get() {\n                return this.get('noKnownDiagnoses');\n            },\n            set(key, value) {\n                const patientGuid = this.get('patientGuid');\n                this.set('noKnownDiagnoses', value);\n                _diagnoses.default.recordNoKnownDiagnoses(patientGuid, value).errorMessage('Failed to record no active diagnoses status', { rethrow: true }).catch(error => {\n                    // revert to the previous value if we couldn't update it.\n                    this._setUnlessDestroyed('noKnownDiagnoses', !value);\n                    throw error;\n                });\n                return value;\n            }\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/mixins/with-health-concerns', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Mixin.create({\n        sortProperties: Ember.computed(() => ['sortableDate:desc']),\n        sortedHealthConcerns: Ember.computed.sort('healthConcerns', 'sortProperties'),\n        clinicalHealthConcerns: Ember.computed.filterBy('sortedHealthConcerns', 'healthConcernReferenceGuid'),\n        activeHealthConcerns: Ember.computed.filterBy('clinicalHealthConcerns', 'isActive', true),\n        inactiveHealthConcerns: Ember.computed.filterBy('clinicalHealthConcerns', 'isActive', false),\n        healthConcernNote: Ember.computed('healthConcerns.@each.healthConcernType', function () {\n            const healthConcerns = this.get('healthConcerns') || [];\n            return healthConcerns.findBy('healthConcernType', 'Note');\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/mixins/with-medications', ['exports', 'clinical/repositories/medications', 'clinical/models/medications-array', 'clinical/mixins/loading', 'tyrion/mixins/destroyed', 'charting/mixins/with-patient-print-title', 'boot/models/session'], function (exports, _medications, _medicationsArray, _loading, _destroyed, _withPatientPrintTitle, _session) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Mixin.create(_loading.default, _destroyed.default, _withPatientPrintTitle.default, {\n        analytics: Ember.inject.service(),\n        authorization: Ember.inject.service(),\n        printOptions: Ember.computed(() => [{ value: 'all', label: 'All medications' }, { value: 'active', label: 'Active medications' }, { value: 'historical', label: 'Historical medications' }]),\n        selectedMedicationGuid: Ember.computed('selectedItem', {\n            get() {\n                return this.get('selectedItem');\n            },\n            set(value) {\n                return value;\n            }\n        }),\n        actions: {\n            loadMedications() {\n                this._loadMedications();\n            },\n            reloadMedications() {\n                this._loadMedications(true);\n            },\n            editMedication(medication, event) {\n                if (Ember.isPresent(event) && ($(event.target).hasClass('prolia-modal-open-link') || $(event.target).hasClass('icon-assessment-info'))) {\n                    return;\n                }\n                this.sendAction('editMedication', medication);\n            },\n            recordMedication() {\n                this.sendAction('recordMedication');\n            },\n            toggleHistoricalMedications() {\n                this.toggleProperty('historicalMedicationsVisible');\n            },\n\n            print(option) {\n                // Load the patient info first to ensure that it gets rendered on the print preview\n                switch (option) {\n                    case 'active':\n                        this.setProperties({\n                            'showMedicationsActive': true,\n                            'showMedicationsHistorical': false\n                        });\n                        break;\n                    case 'historical':\n                        this.setProperties({\n                            'showMedicationsActive': false,\n                            'showMedicationsHistorical': true\n                        });\n                        break;\n                    case 'all':\n                        this.setProperties({\n                            'showMedicationsActive': true,\n                            'showMedicationsHistorical': true\n                        });\n                        break;\n                }\n\n                this.get('store').findRecord('patient', this.get('patientGuid')).then(function () {\n                    this.sendAction('printAudit', 'Medications');\n                    this.set('isPrintVisible', true);\n                }.bind(this));\n            }\n        },\n\n        loadMedicationsFailed: false,\n        patientGuidMismatch: false,\n        medications: undefined,\n        noKnownMedications: Ember.computed.alias('medications.noKnownMedications'),\n        showMedicationsHistorical: true,\n        showMedicationsActive: true,\n        medicationsError: Ember.computed.or('loadMedicationsFailed', 'patientGuidMismatch'),\n        activeMedications: Ember.computed.alias('medications.active'),\n        activePatientMedications: Ember.computed('activeMedications.[]', 'patientGuid', function () {\n            return this.filterPatientMedications(this.get('activeMedications'));\n        }),\n        historicalMedications: Ember.computed.alias('medications.historical'),\n        historicalPatientMedications: Ember.computed('historicalMedications.[]', 'patientGuid', function () {\n            return this.filterPatientMedications(this.get('historicalMedications'));\n        }),\n        filterPatientMedications(medications) {\n            const patientGuid = this.get('patientGuid');\n            if (Ember.isEmpty(patientGuid) || Ember.isEmpty(medications)) {\n                return [];\n            }\n            return medications.filterBy('patientPracticeGuid', patientGuid);\n        },\n\n        selectedMedication: Ember.computed('selectedMedicationGuid', 'medications.@each.medicationGuid', {\n            get() {\n                return this.getWithDefault('medications', []).findBy('medicationGuid', this.get('selectedMedicationGuid'));\n            },\n            set(key, value) {\n                this.set('selectedMedicationGuid', Ember.get(value || {}, 'medicationGuid'));\n                return this.getWithDefault('medications', []).findBy('medicationGuid', this.get('selectedMedicationGuid'));\n            }\n        }),\n\n        isEntitledToEditMedications: Ember.computed('authorization.entitledFeatures.[]', function () {\n            return this.get('authorization').isEntitledFor('Chart.Medications.Edit');\n        }),\n\n        canRecordMedication: Ember.computed('loadMedicationsFailed', 'isLoading', 'isEntitledToEditMedications', function () {\n            return _session.default.get('canEditChart') && !this.get('loadMedicationsFailed') && !this.get('isLoading') && this.get('isEntitledToEditMedications');\n        }),\n\n        _loadMedicationsOnInit: Ember.on('didInsertElement', Ember.observer('patientGuid', function () {\n            this._loadMedications();\n        })),\n\n        _loadMedications(forceReload) {\n            const patientGuid = this.get('patientGuid');\n\n            if (!patientGuid) {\n                if (DEBUG) {\n                    window.console.error('This is designed to be used with a patientGuid. Are you missing something?');\n                }\n                return;\n            }\n            this.setProperties({\n                loadMedicationsFailed: false,\n                patientGuidMismatch: false,\n                medications: _medicationsArray.default.create({ content: [] })\n            });\n            this._withProgress(_medications.default.loadMedications(patientGuid, { forceReload }).then(medications => {\n                this._unlessDestroyed(() => {\n                    // Make sure the patientGuid hasn't changed since the call was initiated.\n                    // TODO: Refactor to use ember-concurrency\n                    if (this.get('patientGuid') === patientGuid) {\n                        this.setProperties({\n                            patientGuidMismatch: Ember.isPresent(medications) && medications.every(medication => medication.get('patientPracticeGuid') !== patientGuid),\n                            medications\n                        });\n                    }\n\n                    const medicationAssociatedProgramsBody = medications.map(medication => {\n                        return {\n                            Ndc: medication.get('ndc'),\n                            RxNormCui: medication.get('rxNormCui'),\n                            MedicationGuid: medication.get('medicationGuid')\n                        };\n                    });\n                    _medications.default.loadAssociatedPrograms(medicationAssociatedProgramsBody).then(programs => {\n                        if (Ember.isPresent(programs)) {\n                            programs.forEach(program => {\n                                const currentMedications = this.get('medications') || [];\n                                const medication = currentMedications.findBy('medicationGuid', program.medicationGuid);\n                                if (Ember.isPresent(medication)) {\n                                    medication.set('associatedProgram', program.worksheetTypes);\n                                }\n                            });\n                        }\n                    });\n                });\n            })).catch(() => {\n                // Make sure the patientGuid hasn't changed since the call was initiated.\n                // TODO: Refactor to use ember-concurrency\n                if (this.get('patientGuid') === patientGuid) {\n                    this._setUnlessDestroyed('loadMedicationsFailed', true);\n                }\n            });\n        },\n\n        encounterMedications: Ember.computed('medications.[]', 'transcriptGuid', 'patientGuid', function () {\n            const transcriptGuid = this.get('transcriptGuid');\n            if (transcriptGuid) {\n                const medications = this.get('medications');\n                if (medications) {\n                    const patientMedications = _medicationsArray.default.create({ content: this.filterPatientMedications(medications) });\n                    return patientMedications.encounterMedications(transcriptGuid);\n                }\n            }\n            return [];\n        }),\n\n        isNoKnownChecked: Ember.computed('noKnownMedications', {\n            get() {\n                return this.get('noKnownMedications');\n            },\n            set(key, value) {\n                const patientGuid = this.get('patientGuid');\n                this.set('noKnownMedications', value);\n                _medications.default.recordNoKnownMedications(patientGuid, value).errorMessage('Failed to record no active medications status', {\n                    rethrow: true\n                }).catch(error => {\n                    // revert to the previous value if we couldn't update it.\n                    this._setUnlessDestroyed('noKnownMedications', !value);\n                    throw error;\n                });\n                return value;\n            }\n        }),\n\n        patientSummary: Ember.computed.alias('patient'),\n        displayName: 'Medications'\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/mixins/with-pmh', ['exports', 'ember-concurrency'], function (exports, _emberConcurrency) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Mixin.create({\n        patientPracticeGuid: Ember.computed.alias('patient.patientPracticeGuid'),\n        isLoading: Ember.computed.alias('loadPMH.isRunning'),\n        onPMHReload: Ember.observer('pastMedicalHistory.isReloading', function () {\n            if (this.get('pastMedicalHistory.isReloading')) {\n                this.set('shouldReloadPMH', true);\n            } else if (this.get('shouldReloadPMH')) {\n                this.set('shouldReloadPMH', false);\n                // Explicitly notify that the sections changed since there\n                // is only 1-way binding on the pmhSections -> pastMedicalHistory.\n                this.notifyPropertyChange('pmhSections');\n            }\n        }),\n        patientPracticeGuidDidChange: Ember.on('init', Ember.observer('patientPracticeGuid', function () {\n            const patientPracticeGuid = this.get('patientPracticeGuid');\n\n            if (patientPracticeGuid) {\n                this.get('loadPMH').perform(patientPracticeGuid);\n            }\n        })),\n        loadPMH: (0, _emberConcurrency.task)(function* (patientPracticeGuid) {\n            const store = this.get('store');\n            let pastMedicalHistory;\n\n            try {\n                pastMedicalHistory = yield store.findRecord('personal-medical-history', patientPracticeGuid);\n\n                this.setProperties({\n                    error: false,\n                    pastMedicalHistory\n                });\n            } catch (e) {\n                pastMedicalHistory = store.peekRecord('personal-medical-history', patientPracticeGuid);\n\n                if (pastMedicalHistory) {\n                    store.unloadRecord(pastMedicalHistory);\n                }\n\n                this.setProperties({\n                    error: false,\n                    pastMedicalHistory: null\n                });\n            }\n        }).restartable(),\n        loadPMHIfEverUndefined: Ember.observer('pastMedicalHistory', function () {\n            const patientPracticeGuid = this.get('patientPracticeGuid');\n\n            if (this.get('pastMedicalHistory') === undefined && patientPracticeGuid) {\n                this.get('loadPMH').perform(patientPracticeGuid);\n            }\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/advanced-directive', ['exports', 'ember-data/model', 'ember-data/attr'], function (exports, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        patientPracticeGuid: (0, _attr.default)('string'),\n        dateOfService: (0, _attr.default)('date'),\n        comments: (0, _attr.default)('string'),\n\n        saveDisabled: Ember.computed('comments', 'dateOfService', function () {\n            return !this.get('comments.length') || !moment(this.get('dateOfService')).isValid();\n        }),\n\n        formattedDate: Ember.computed('dateOfService', {\n            get() {\n                return moment.utc(this.get('dateOfService')).format('MM/DD/YYYY');\n            },\n            set(key, value) {\n                this.set('dateOfService', moment(value).toDate());\n                return value;\n            }\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/allergen', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    const ALLERGEN_TYPE_MAP = {\n        Class: { display: 'Class', sort: 1 },\n        PackagedDrug: { display: 'Product', sort: 4 },\n        GenericDrug: { display: 'Generic', sort: 3 },\n        MedicalSupply: { display: 'Medical Supply', sort: 5 },\n        ingredient: { display: 'Ingredient', sort: 2 }\n    };\n\n    exports.default = Ember.Object.extend({\n        group: Ember.computed('allergenType', 'isIngredient', function () {\n            const type = this.get('allergenType');\n            if (type === 'Class' && this.get('isIngredient')) {\n                return ALLERGEN_TYPE_MAP.ingredient;\n            }\n            return ALLERGEN_TYPE_MAP[type];\n        }),\n        id: Ember.computed('allergenType', 'isIngredient', 'rxNormCui', 'name', function () {\n            const { allergenType, isIngredient, rxNormCui, name } = this.getProperties('allergenType', 'isIngredient', 'rxNormCui', 'name');\n            return `${allergenType}-${name}-${isIngredient}-${rxNormCui}`;\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/allergies-array', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    const AllergyArray = Ember.ArrayProxy.extend({\n        active: Ember.computed('@each.isActive', function () {\n            return AllergyArray.create({\n                content: this.filterBy('isActive')\n            });\n        }),\n        inactive: Ember.computed('@each.isActive', function () {\n            return AllergyArray.create({\n                content: this.rejectBy('isActive')\n            });\n        }),\n        drug: Ember.computed('@each.type', function () {\n            return AllergyArray.create({\n                content: this.filterBy('type', 'drug')\n            });\n        }),\n        environmental: Ember.computed('@each.type', function () {\n            return AllergyArray.create({\n                content: this.filterBy('type', 'environmental')\n            });\n        }),\n        food: Ember.computed('@each.type', function () {\n            return AllergyArray.create({\n                content: this.filterBy('type', 'food')\n            });\n        }),\n        severitySorted: Ember.computed('@each.severitySortOrder', function () {\n            return AllergyArray.create({\n                content: this.sortBy('severitySortOrder', 'allergenText')\n            });\n        }),\n        noKnownAllergies: false,\n        updateNoKnownAllergies: Ember.observer('drug.@each.isActive', function () {\n            // If the content of the array changed we reset this back to false\n            if (Ember.isPresent(this.get('drug.active'))) {\n                this.set('noKnownAllergies', false);\n            }\n        }),\n        /**\n         * Replaces the allergy if one with the same allergyGuid already exists or adds one if not\n         */\n        replaceAllergy(allergy) {\n            var content = this.get('content'),\n                allergyToReplace = content.findBy('allergyGuid', allergy.get('allergyGuid')),\n                allergyToReplaceIndex = content.indexOf(allergyToReplace);\n\n            if (allergyToReplaceIndex !== -1) {\n                allergyToReplace.set('content', allergy.get('content'));\n            } else {\n                content.pushObject(allergy);\n            }\n        },\n        removeAllergy(allergy) {\n            var content = this.get('content'),\n                allergyToDelete = content.findBy('allergyGuid', allergy.get('allergyGuid'));\n            content.removeObject(allergyToDelete);\n        }\n    });\n\n    exports.default = AllergyArray;\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/allergy-reaction', ['exports', 'ember-data/model', 'ember-data/attr'], function (exports, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        title: Ember.computed.alias('id'),\n        reactionGroupTitle: (0, _attr.default)('string'),\n        displaySequence: (0, _attr.default)('number'),\n        isActive: (0, _attr.default)('boolean')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/allergy-substance', ['exports', 'ember-data/model', 'ember-data/attr'], function (exports, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        title: Ember.computed.alias('id'),\n        groupTitle: (0, _attr.default)('string'),\n        isCustom: (0, _attr.default)('boolean'),\n        isActive: (0, _attr.default)('boolean')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/appointment', ['exports', 'clinical/mixins/patient-list-data', 'ember-data/model', 'ember-data/attr'], function (exports, _patientListData, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend(_patientListData.default, {\n        patientPracticeGuid: (0, _attr.default)('string'),\n        lastSeenDate: (0, _attr.default)('string'),\n        appointmentDateAndTime: (0, _attr.default)('string'),\n        visitType: (0, _attr.default)('string'),\n        chiefComplaint: (0, _attr.default)('string'),\n        appointmentStatus: (0, _attr.default)('string'),\n        isActive: Ember.computed.alias('patientIsActive')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/assessment', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    var Assessment = Ember.ObjectProxy.extend({\n        status: 'NotStarted',\n        source: 'Unspecified',\n        questionKeys: null,\n        _init: Ember.on('init', function () {\n            const content = this.get('content');\n            this.set('questionKeys', content ? Object.keys(content).removeObject('assessmentToken').removeObject('nextAssessment') : []);\n        }),\n        isDismissed: Ember.computed.equal('status', 'Dismissed'),\n        isComplete: Ember.computed.equal('status', 'Complete'),\n\n        toAssessmentObject() {\n            let obj = this.getProperties('assessmentToken', 'status', 'source', 'patientPracticeGuid', 'transcriptGuid', 'medicationGuid', 'cdsAlertEventGuid');\n            obj.responses = this.getResponses();\n            return obj;\n        },\n        getResponses() {\n            return this.get('questionKeys').map(key => {\n                let response = this.get(key),\n                    answerToken;\n\n                if (response.type === 'yesNo') {\n                    answerToken = [response.isSelected ? 'yes' : 'no'];\n                } else {\n                    let tokenValue = response.value || (response.selection ? response.selection.value : null);\n                    answerToken = tokenValue ? [tokenValue] : null;\n                }\n\n                if (answerToken) {\n                    return {\n                        answerToken: answerToken,\n                        questionToken: response.questionToken || key\n                    };\n                }\n                return null;\n            }).compact();\n        },\n        getNextAssessment(triggerIfDismissed) {\n            let assessment = this.get('content.nextAssessment'),\n                conditions = this.get('content.nextAssessment.triggerConditions'),\n                defaultKeys = this.get('content.nextAssessment.defaultKeys');\n\n            if (!assessment || !assessment.token) {\n                return null;\n            }\n\n            // Match conditions - multiple conditions are AND, values for each ar OR\n            if (!triggerIfDismissed || !this.get('isDismissed')) {\n                if (conditions && conditions.length > 0) {\n                    let meetsConditions = conditions.map(condition => {\n                        let triggerProperty = this.get(`content.${condition.property}`),\n                            triggerValue = triggerProperty.type === 'yesNo' ? triggerProperty.isSelected : triggerProperty.value;\n                        return condition.values.indexOf(triggerValue) > -1;\n                    });\n                    if (!meetsConditions.every(condition => condition)) {\n                        return null;\n                    }\n                }\n            }\n\n            return {\n                token: assessment.token,\n                defaultSettings: defaultKeys.map(key => {\n                    let response = this.get(key);\n                    if (!response) {\n                        return null;\n                    }\n                    if (response.type === 'yesNo') {\n                        return {\n                            key: key,\n                            property: 'isSelected',\n                            value: response.isSelected\n                        };\n                    }\n                    return {\n                        key: key,\n                        property: 'value',\n                        value: response.value\n                    };\n                }).compact()\n            };\n        }\n    });\n\n    Assessment.reopenClass({\n        wrap(modelTemplate, patientPracticeGuid, defaults) {\n            return Assessment.create({\n                content: Ember.copy(this.setDefaults(modelTemplate, defaults), true),\n                patientPracticeGuid: patientPracticeGuid\n            });\n        },\n        setDefaults(model, defaults) {\n            if (Ember.isPresent(defaults)) {\n                defaults.forEach(setting => {\n                    if (model[setting.key]) {\n\n                        model[setting.key][setting.property] = setting.value;\n                        if (setting.property === 'value') {\n                            let options = model[setting.key].options;\n                            if (options && options.length > 0) {\n                                model[setting.key].selection = options.find(option => {\n                                    return option.value === setting.value;\n                                });\n                            }\n                        }\n                    }\n                });\n            }\n            return model;\n        }\n    });\n\n    exports.default = Assessment;\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/assessments/prolia-aesi-medication-history', ['exports', 'boot/config', 'clinical/models/assessments/prolia-aesi-select-options'], function (exports, _config, _proliaAesiSelectOptions) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = {\n        assessmentToken: {\n            name: 'proliaAesiMedicationHistory',\n            version: 0.01\n        },\n        nextAssessment: {\n            token: {\n                name: 'proliaAesiModal',\n                version: 0.01\n            },\n            triggerConditions: [{\n                property: 'proliaMedicationHistory',\n                values: [null, 'PreviousHistory']\n            }],\n            defaultKeys: ['proliaMedicationHistory']\n        },\n        proliaMedicationHistory: {\n            options: _proliaAesiSelectOptions.default,\n            value: null,\n            selection: null,\n            type: 'patientHistory',\n            questionToken: 'proliaMedicationHistory',\n            popoverContent: `<div>Your participation helps improve the long-term safety of patients on Prolia.</div><a href=\"${_config.default.proliaLearnMoreUrl}\" target=\"_blank\">Learn more</a>`\n        }\n    };\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/assessments/prolia-aesi-modal', ['exports', 'clinical/models/assessments/prolia-aesi-select-options'], function (exports, _proliaAesiSelectOptions) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = {\n        assessmentToken: {\n            name: 'proliaAesiModal',\n            version: 0.01\n        },\n        proliaMedicationHistory: {\n            options: _proliaAesiSelectOptions.default,\n            value: null,\n            selection: null,\n            type: 'patientHistory',\n            questionToken: 'proliaMedicationHistory'\n        },\n        proliaAnyAesi: {\n            isSelected: false,\n            type: 'yesNo',\n            questionToken: 'proliaAnyAesi'\n        },\n        proliaAesiHypocalcemia: {\n            isSelected: false,\n            type: 'yesNo',\n            questionToken: 'proliaAesiHypocalcemia'\n        },\n        proliaAesiOsteonecrosisOfTheJaw: {\n            isSelected: false,\n            type: 'yesNo',\n            questionToken: 'proliaAesiOsteonecrosisOfTheJaw'\n        },\n        proliaAesiAtypicalFemoralFractures: {\n            isSelected: false,\n            type: 'yesNo',\n            questionToken: 'proliaAesiAtypicalFemoralFractures'\n        },\n        proliaAesiSeriousInfections: {\n            isSelected: false,\n            type: 'yesNo',\n            questionToken: 'proliaAesiSeriousInfections'\n        },\n        proliaAesiDermatologicReactions: {\n            isSelected: false,\n            type: 'yesNo',\n            questionToken: 'proliaAesiDermatologicReactions'\n        },\n        proliaLinkClicked: {\n            isSelected: false,\n            type: 'yesNo',\n            questionToken: 'proliaLinkClicked',\n            isVisible: false\n        }\n    };\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/assessments/prolia-aesi-select-options', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = [{ property: 'proliaMedicationHistory', group: 'Prolia History', label: 'Past and/or current medication', value: 'PreviousHistory', showAdverseEffects: true, launchNextAssessment: true }, { property: 'proliaMedicationHistory', group: 'Prolia History', label: 'New medication for patient', value: 'NoPreviousHistory', statusText: 'No assessment needed. Patient has no Prolia history.' }, { property: 'proliaMedicationHistory', group: 'Other Options', label: 'Patient unsure', value: 'UnsureHistory', statusText: 'No assessment needed. Patient must be sure of Prolia history.' }, { property: 'proliaMedicationHistory', group: 'Other Options', label: 'Provider declined to ask', value: 'HistoryNotAsked', statusText: 'Patient\\'s Prolia history is required to complete assessment.' }, { property: 'proliaMedicationHistory', group: 'Other Options', label: 'Historical data present, Prolia never taken', value: 'HistoryInvalid', statusText: 'No assessment needed. Patient has no Prolia history.' }];\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/assessments/prolia-aesi-task', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = {\n        assessmentToken: {\n            name: 'proliaAesiTask',\n            version: 0.01\n        },\n        proliaLinkClicked: {\n            isSelected: true,\n            type: 'yesNo',\n            questionToken: 'proliaLinkClicked'\n        }\n    };\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/behavioral-health', ['exports', 'ember-data/model', 'ember-data/attr'], function (exports, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        patientPracticeGuid: Ember.computed.alias('id'),\n        alcoholUse: (0, _attr.default)(),\n        tobaccoUse: (0, _attr.default)(),\n        physicalActivity: (0, _attr.default)(),\n        nutritionHistory: (0, _attr.default)(),\n        stress: (0, _attr.default)(),\n        socialIsolation: (0, _attr.default)(),\n        exposureToViolence: (0, _attr.default)(),\n        worksheetResponsesGuids: Ember.computed('alcoholUse', 'physicalActivity', 'stress', 'socialIsolation', 'exposureToViolence', function () {\n            return {\n                alcoholUseWorksheet: this.get('alcoholUse.content') ? this.get('alcoholUse.content.worksheetResponseGuid') : null,\n                physicalActivityWorksheet: this.get('physicalActivity.content') ? this.get('physicalActivity.content.worksheetResponseGuid') : null,\n                stressWorksheet: this.get('stress.content') ? this.get('stress.content.worksheetResponseGuid') : null,\n                socialIsolationWorksheet: this.get('socialIsolation.content') ? this.get('socialIsolation.content.worksheetResponseGuid') : null,\n                exposureToViolenceWorksheet: this.get('exposureToViolence.content') ? this.get('exposureToViolence.content.worksheetResponseGuid') : null\n            };\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/care-team-member', ['exports', 'boot/config', 'boot/util/pf-server', 'ember-data/model', 'ember-data/attr'], function (exports, _config, _pfServer, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        // FK to parent\n        patientPracticeGuid: (0, _attr.default)('string'),\n        // Used to derive the patient profile\n        profileGuid: (0, _attr.default)('string'),\n        profile: (0, _attr.default)('object'),\n        relationships: (0, _attr.default)('array', { defaultValue() {\n                return [];\n            } }),\n\n        // Aliases\n        isDirectoryContact: Ember.computed.alias('profile.isDirectoryContact'),\n        isProviderProfile: Ember.computed.alias('profile.isProviderProfile'),\n        // HACK: Override the ember data save since this api is so wrong to begin with.\n        save() {\n            const data = this.serialize();\n            const patientPracticeGuid = this.get('patientPracticeGuid');\n            const url = `${_config.default.defaultHost}/${_config.default.patientNamespace}/patient/${patientPracticeGuid}/careTeam/provider`;\n            return _pfServer.default.promise(url, 'PUT', data);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/care-team', ['exports', 'ember-data/model', 'ember-data/relationships'], function (exports, _model, _relationships) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        // id: maps to patientPracticeGuid\n        members: (0, _relationships.hasMany)('care-team-member', { async: false }),\n        preferredProvider: Ember.computed('members.@each.relationships', function () {\n            return this.get('members').find(function (member) {\n                return member.get('relationships').isAny('careTeamMemberType', 'PreferredProvider');\n            });\n        }),\n        primaryProvider: Ember.computed('members.@each.relationships', function () {\n            return this.get('members').find(function (member) {\n                return member.get('relationships').isAny('careTeamMemberType', 'PrimaryCareProvider');\n            });\n        }),\n        preferredProviderGuid: Ember.computed.readOnly('preferredProvider.profile.providerProfile.providerGuid')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/ccda-document-type', ['exports', 'ember-data/model', 'ember-data/attr'], function (exports, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        code: Ember.computed.alias('id'),\n        name: (0, _attr.default)('string'),\n        isActive: (0, _attr.default)('boolean')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/ccda-template-component', ['exports', 'ember-data/model', 'ember-data/attr'], function (exports, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        code: Ember.computed.alias('id'),\n        isActive: (0, _attr.default)('boolean'),\n        name: (0, _attr.default)('string'),\n        isRequired: (0, _attr.default)('boolean'),\n        isOptional: Ember.computed.not('isRequired')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/clinical-document', ['exports', 'ember-data/model', 'ember-data/attr', 'ember-data/relationships'], function (exports, _model, _attr, _relationships) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        patientGuid: (0, _attr.default)('string'),\n        practiceGuid: (0, _attr.default)('string'),\n        providerGuid: (0, _relationships.belongsTo)('provider', { async: false }),\n        requestedByProvider: Ember.computed.alias('providerGuid'),\n        documentGuid: Ember.computed.alias('id'),\n        createdTimeUtc: (0, _attr.default)('string'),\n        lastModifiedTimeUtc: (0, _attr.default)('string'),\n        clinicalDocumentStatus: (0, _attr.default)('string'),\n        clinicalDocumentTypeCode: (0, _attr.default)('string'),\n        // Timeline properties\n        type: 'clinicaldocuments',\n        isComplete: Ember.computed.equal('clinicalDocumentStatus', 'Completed'),\n        isPending: Ember.computed.not('isComplete'),\n        clinicalSummaryParams: Ember.computed('documentGuid', 'patientGuid', 'clinicalDocumentTypeCode', function () {\n            return {\n                docGUID: this.get('documentGuid'),\n                patientGUID: this.get('patientGuid'),\n                fromCCDAlist: false,\n                doctype: this.get('clinicalDocumentTypeCode')\n            };\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/contact-to-profile-adapter', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Object.extend({\n        directoryContact: null,\n        isDirectoryContact: true,\n\n        // Aliases\n        id: Ember.computed.alias('directoryContact.id'),\n        firstName: Ember.computed.alias('directoryContact.profile.firstName'),\n        lastName: Ember.computed.alias('directoryContact.profile.lastName'),\n        fullProviderName: Ember.computed.alias('directoryContact.fullProviderName'),\n        specialtyName: Ember.computed.alias('directoryContact.profile.specialization.classification'),\n        specialtyId: Ember.computed.alias('directoryContact.profile.specialization.specializationId'),\n\n        specialty: Ember.computed('directoryContact.profile.specialization', {\n            get() {\n                return !this.get('specialtyId') ? null : {\n                    id: this.get('specialtyId'),\n                    specializationName: this.get('specialtyName')\n                };\n            },\n            set(key, value) {\n                value = value || {};\n                this.set('directoryContact.profile.specialization', {\n                    specializationId: Ember.get(value, 'id'),\n                    classification: Ember.get(value, 'specializationName')\n                });\n                return value;\n            }\n        }),\n\n        officePhone: Ember.computed.alias('directoryContact.profile.frontOfficePhone'),\n        fax: Ember.computed.alias('directoryContact.profile.officeFax'),\n        email: Ember.computed.alias('directoryContact.profile.emailAddress')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/demographic-option', ['exports', 'ember-data/model', 'ember-data/attr'], function (exports, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        optionGuid: Ember.computed.alias('id'),\n        description: (0, _attr.default)('string'),\n        displayOrder: (0, _attr.default)('number'),\n        isActive: (0, _attr.default)('boolean'),\n        optionElement: Ember.computed('optionGuid', function () {\n            return `option-${this.get('optionGuid')}`;\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/diagnoses-array', ['exports', 'clinical/models/diagnosis'], function (exports, _diagnosis) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    const TranscriptDiagnosis = Ember.Object.extend({\n        sortOrder: Ember.computed.alias('transcriptDiagnosis.sortOrder')\n    });\n\n    /**\n     * A proxy array for Diagnosis instances that provides helper functions to modify array\n     */\n    const DiagnosesArray = Ember.ArrayProxy.extend({\n        /**\n         * Replaces the content of the diagnosis matching the diagnosisGuid if it exists, otherwise\n         * inserts a new one.\n         * This method is useful when saving or loading diagnosis to keep the collection in sync\n         */\n\n        replaceDiagnosis(diagnosis) {\n            var existingDiagnosis;\n            if (diagnosis instanceof _diagnosis.default) {\n                return this.replaceDiagnosis(diagnosis.get('content'));\n            }\n\n            existingDiagnosis = this.findBy('diagnosisGuid', diagnosis.diagnosisGuid);\n            if (existingDiagnosis) {\n                existingDiagnosis.set('content', diagnosis);\n                return existingDiagnosis;\n            } else {\n                diagnosis = _diagnosis.default.wrap(diagnosis);\n                this.pushObject(diagnosis);\n                return diagnosis;\n            }\n        },\n        removeDiagnosis(diagnosis) {\n            var diagnosisToDelete = this.findBy('diagnosisGuid', diagnosis.get('diagnosisGuid'));\n            this.removeObject(diagnosisToDelete);\n        },\n\n        getEncounterDiagnoses(transcriptGuid) {\n            let zeroSortOrderCount = 0;\n            let maxSortOrder = 0;\n            let encounterDiagnoses = [];\n            if (transcriptGuid) {\n                encounterDiagnoses = this.map(diagnosis => {\n                    // Dummy get to make the observer work.\n                    diagnosis.get('eachTranscriptDiagnoses');\n                    const transcriptDiagnosis = diagnosis.getTranscriptDiagnosis(transcriptGuid);\n                    if (transcriptDiagnosis) {\n                        const sortOrder = Ember.get(transcriptDiagnosis, 'sortOrder');\n                        if (Ember.get(transcriptDiagnosis, 'sortOrder') === 0) {\n                            zeroSortOrderCount++;\n                        } else {\n                            maxSortOrder = Math.max(sortOrder, maxSortOrder);\n                        }\n                        return TranscriptDiagnosis.create({ transcriptDiagnosis, diagnosis });\n                    }\n                    return null;\n                }).compact();\n                // Add temporary fake sort orders to the transcriptDx's with sortOrder === 0.\n                if (zeroSortOrderCount > 1) {\n                    encounterDiagnoses.filterBy('transcriptDiagnosis.sortOrder', 0).forEach(dx => {\n                        Ember.set(dx.transcriptDiagnosis, 'sortOrder', maxSortOrder++);\n                    });\n                }\n            }\n            return encounterDiagnoses;\n        },\n\n        active: Ember.computed('@each.isHistorical', function () {\n            return DiagnosesArray.createArray(this.rejectBy('isHistorical'));\n        }),\n        historical: Ember.computed('@each.isHistorical', function () {\n            return DiagnosesArray.createArray(this.filterBy('isHistorical'));\n        }),\n\n        acute: Ember.computed('@each.isAcute', function () {\n            return DiagnosesArray.createArray(this.filterBy('isAcute'));\n        }),\n        chronic: Ember.computed('@each.isAcute', function () {\n            // In the original logic, both Unspecified and Chronic are considered as Chronic diagnoses\n            return DiagnosesArray.createArray(this.filter(diagnosis => diagnosis.content.acuity ? diagnosis.content.acuity.toLowerCase() === 'chronic' : false));\n        }),\n        unspecified: Ember.computed('@each.acuity', function () {\n            return DiagnosesArray.createArray(this.filter(diagnosis => diagnosis.content.acuity ? diagnosis.content.acuity.toLowerCase() === 'unspecified' : true));\n        }),\n        unique: Ember.computed('@each.diagnosisCodes.[]', function () {\n            const isSortedFlag = false;\n            // NOTE: we get the content, since _.isArray doesn't work with Ember's ArrayProxy and it's used by _.unique indirectly\n            let uniqueDiagnoses = _.unique(this.get('content'), isSortedFlag, function (diagnosis) {\n                return diagnosis.get('codesIdentifier');\n            });\n            return DiagnosesArray.createArray(uniqueDiagnoses);\n        }),\n\n        updateNoKnownDiagnoses: Ember.observer('content.[]', function () {\n            // If the content of the array changed we reset this back to false\n            this.set('noKnownDiagnoses', false);\n        }),\n\n        /**\n         * Returns an Array of [{group: 'Encounter Type', facets: [{value: 'Initial', diagnoses: DiagnosesArray}, {...}]\n         */\n        facets: Ember.computed('@each.attributes', function () {\n            var indexedFacets = {},\n                // Let's start with an object like {'name': {'value': [dx]}}\n            facets = []; // then we project it into an array to make it easier to consume\n            this.forEach(function (diagnosis) {\n                diagnosis.get('attributes').forEach(function (diagnosisAttribute) {\n                    indexedFacets[diagnosisAttribute.name] = indexedFacets[diagnosisAttribute.name] || {};\n                    indexedFacets[diagnosisAttribute.name][diagnosisAttribute.value] = indexedFacets[diagnosisAttribute.name][diagnosisAttribute.value] || DiagnosesArray.createArray([]);\n                    indexedFacets[diagnosisAttribute.name][diagnosisAttribute.value].pushObject(diagnosis);\n                });\n            });\n            Object.keys(indexedFacets).forEach(function (facetKey) {\n                var group = indexedFacets[facetKey],\n                    constraints = [];\n                Object.keys(group).forEach(function (constraintKey) {\n                    var diagnoses = group[constraintKey];\n                    constraints.pushObject({ id: facetKey + '-' + constraintKey, name: constraintKey, diagnoses: diagnoses });\n                });\n                facets.pushObject({ id: facetKey, name: facetKey, constraints: constraints });\n            });\n            return facets;\n        })\n    });\n\n    DiagnosesArray.reopenClass({\n        createArray(content) {\n            return DiagnosesArray.create({ content: content });\n        }\n    });\n\n    exports.default = DiagnosesArray;\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/diagnosis', ['exports', 'clinical/models/diagnoses-array', 'clinical/util/transcript-comments', 'clinical/repositories/medications'], function (exports, _diagnosesArray, _transcriptComments, _medications) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    const PromiseArray = Ember.ArrayProxy.extend(Ember.PromiseProxyMixin);\n\n    function dateToISOString(date) {\n        return Ember.isEmpty(date) ? null : moment.utc(moment(date).format('MM/DD/YYYY')).startOf('day').toISOString();\n    }\n    function getFormattedDate(isoDateString) {\n        return Ember.isEmpty(isoDateString) ? '' : moment.utc(isoDateString).startOf('day').format('MM/DD/YYYY');\n    }\n\n    const Diagnosis = Ember.ObjectProxy.extend({\n        isNew: Ember.computed.empty('diagnosisGuid'),\n\n        /***\n         * Generated key used to compare diagnoses for equivalence. Useful for deduping and identifyign selections\n         * @property codesIdentifier\n         */\n        codesIdentifier: Ember.computed('code', 'diagnosisCodes.[]', function () {\n            // If we don't have diagnosisCodes, fallsback to diagnosis.code (no codeSystem works)\n            let diagnosisCodes = this.get('diagnosisCodes') || [{ code: this.get('code') }];\n            return _.map(diagnosisCodes, function (codeObject) {\n                return codeObject.codeSystem + '-' + codeObject.code;\n            }).sort().join('&');\n        }),\n\n        // HACK: intermediate property to get nested each to work (ember.js/issues/541)\n        eachTranscriptDiagnoses: Ember.computed('transcriptDiagnoses.[]', function () {\n            return this.get('transcriptDiagnoses');\n        }),\n        description: Ember.computed('icd10Code', 'icd9Code', 'snomedCode', 'customCode', 'icd10Description', 'icd9Description', 'snomedDescription', 'customDescription', 'diagnosisCodes.[]', function () {\n            var hasIcd9AndSnomed = !!this.get('icd9Code') && this.get('snomedCode'),\n                customCode = this.get('customCode') || 'No associated code';\n            if (this.get('icd10Description')) {\n                return this.get('icd10Description');\n            }\n            if (hasIcd9AndSnomed) {\n                return '(' + this.get('icd9Code') + ') ' + this.get('snomedDescription') + ': ' + this.get('icd9Description');\n            }\n            if (this.get('icd9Code')) {\n                return '(' + this.get('icd9Code') + ') ' + this.get('icd9Description');\n            }\n            if (this.get('isCustom')) {\n                return '(' + customCode + ') ' + this.get('customDescription');\n            }\n\n            return this.get('name');\n        }),\n\n        needsIcd10Refinement: Ember.computed('icd10Codes', 'snomedCodes', 'icd9Codes', 'isCustom', function () {\n            if (Ember.isEmpty(this.get('icd10Codes')) && this.get('snomedCode') && Ember.isEmpty(this.get('icd9Codes'))) {\n                return false;\n            }\n            return !this.get('icd10Code') && !this.get('isCustom');\n        }),\n        needsIcd9Refinement: Ember.computed('icd9Code', 'isCustom', function () {\n            return !this.get('icd9Code') && !this.get('isCustom');\n        }),\n\n        isHistorical: Ember.computed('stopDate', function () {\n            const stopDate = this.get('stopDate');\n            return !!stopDate && moment(stopDate).isBefore(moment());\n        }),\n        isCustom: Ember.computed('diagnosisCodes.@each.codeSystem', function () {\n            const diagnosisCodes = this.getWithDefault('diagnosisCodes', []);\n            return !!diagnosisCodes.findBy('codeSystem', 'Custom');\n        }),\n        customCode: Ember.computed('diagnosisCodes.@each.codeSystem', {\n            get() {\n                const diagnosisCodes = this.getWithDefault('diagnosisCodes', []);\n                const customDiagnosisCode = diagnosisCodes.findBy('codeSystem', 'Custom');\n                return customDiagnosisCode && Ember.get(customDiagnosisCode, 'code');\n            },\n            set(key, value) {\n                const diagnosisCodes = this.getWithDefault('diagnosisCodes', []);\n                let customDiagnosisCode = diagnosisCodes.findBy('codeSystem', 'Custom');\n                if (customDiagnosisCode) {\n                    Ember.set(customDiagnosisCode, 'code', value);\n                } else {\n                    customDiagnosisCode = { code: value, codeSystem: 'Custom' };\n                    diagnosisCodes.push(customDiagnosisCode);\n                }\n                return value;\n            }\n        }),\n\n        icd9Code: Ember.computed('diagnosisCodes.@each.codeSystem', function () {\n            return this._getCodeByCodeSystem('Icd9').code;\n        }),\n        snomedCode: Ember.computed('diagnosisCodes.@each.codeSystem', function () {\n            return this._getCodeByCodeSystem('Snomed').code;\n        }),\n        icd10Code: Ember.computed('diagnosisCodes.@each.codeSystem', function () {\n            return this._getCodeByCodeSystem('Icd10').code;\n        }),\n        icd9Description: Ember.computed('diagnosisCodes.@each.codeSystem', function () {\n            return this._getCodeByCodeSystem('Icd9').description;\n        }),\n        snomedDescription: Ember.computed('diagnosisCodes.@each.codeSystem', function () {\n            return this._getCodeByCodeSystem('Snomed').description;\n        }),\n        icd10Description: Ember.computed('diagnosisCodes.@each.codeSystem', function () {\n            return this._getCodeByCodeSystem('Icd10').description;\n        }),\n        customDescription: Ember.computed('diagnosisCodes.@each.codeSystem', function () {\n            return this._getCodeByCodeSystem('Custom').description;\n        }),\n\n        icd10OrSnomedCode: Ember.computed('icd10Code', 'snomedCode', function () {\n            return this.get('icd10Code') || this.get('snomedCode');\n        }),\n        icd10OrSnomedDescription: Ember.computed('icd10description', 'snomedDescription', function () {\n            return this.get('icd10Description') || this.get('snomedDescription');\n        }),\n        ic10orIcd9Code: Ember.computed('icd10Code', 'icd9Code', function () {\n            const icd10 = this.get('icd10Code');\n            const icd9 = this.get('icd9Code');\n            if (!icd10 && !icd9) {\n                return null;\n            }\n            return {\n                code: Ember.isPresent(icd10) ? icd10 : this.get('icd9Code'),\n                description: Ember.isPresent(icd10) ? this.get('icd10Description') : this.get('icd10Description'),\n                codeSet: Ember.isPresent(icd10) ? 'icd10' : 'icd9'\n            };\n        }),\n        //End single use\n\n        //Use these to get multiple codes\n        icd9Codes: Ember.computed('diagnosisCodes', 'diagnosisCodes.[]', function () {\n            return this._getCodesByCodeSystem('icd9');\n        }),\n        icd10Codes: Ember.computed('diagnosisCodes', 'diagnosisCodes.[]', function () {\n            return this._getCodesByCodeSystem('icd10');\n        }),\n        snomedCodes: Ember.computed('diagnosisCodes', 'diagnosisCodes.[]', function () {\n            return this._getCodesByCodeSystem('snomed');\n        }),\n\n        /**\n         * Returns an Array of objects [{name: '', value: ''}, {...}]\n         */\n        attributes: Ember.computed('_eachDiagnosisCode.facets.[]', function () {\n            // TODO: return the facets based on codes.@each.facets\n            return _.flatten(this.get('_eachDiagnosisCode').mapBy('attributes'));\n        }),\n        // HACK: intermediate property to get nested each to work (ember.js/issues/541)\n        _eachDiagnosisCode: Ember.computed('diagnosisCodes.[]', function () {\n            return this.get('diagnosisCodes') || [];\n        }),\n\n        isEncounterDiagnosis(transcriptGuid) {\n            return transcriptGuid && !!this.getTranscriptDiagnosis(transcriptGuid);\n        },\n\n        /**\n         * Adds a comment to the TranscriptDiagnosis specified\n         * if no transcript diagnosis exists it will create a new one\n         * if no transcriptGuid is specified, it will use the default one\n         */\n        addComment(comment, transcriptGuid) {\n            var transcriptDiagnosis = transcriptGuid ? this.attachToEncounter(transcriptGuid) : this.createDefaultTranscriptDiagnosis();\n            Ember.set(transcriptDiagnosis, 'comment', comment);\n        },\n        getTranscriptDiagnosis(transcriptGuid) {\n            var transcriptDiagnoses = this.getWithDefault('transcriptDiagnoses', []);\n            if (!transcriptGuid) {\n                transcriptGuid = null;\n            }\n            return transcriptDiagnoses.findBy('transcriptGuid', transcriptGuid);\n        },\n        createDefaultTranscriptDiagnosis() {\n            return this._createTranscriptDiagnosis();\n        },\n        attachToEncounter(transcriptGuid) {\n            if (Ember.isEmpty(transcriptGuid)) {\n                return;\n            }\n            return this._createTranscriptDiagnosis(transcriptGuid);\n        },\n        detachFromEncounter(transcriptGuid) {\n            // delete the transcriptDiagnosis to detach\n            // TODO: Review with Danny how to do this.\n            if (Ember.isEmpty(transcriptGuid)) {\n                return;\n            }\n            var transcriptDiagnosis = this.getTranscriptDiagnosis(transcriptGuid);\n            this.get('transcriptDiagnoses').removeObject(transcriptDiagnosis);\n        },\n\n        diagnosisComment: Ember.computed('transcriptDiagnoses.@each.transcriptGuid', function () {\n            return this.getTranscriptDiagnosis();\n        }),\n        filteredEncounterComments: Ember.computed('transcriptDiagnoses.[]', 'diagnosisComment', function () {\n            const diagnosisComment = this.get('diagnosisComment');\n            return this.getWithDefault('transcriptDiagnoses', []).reject(transcriptDiagnosis => transcriptDiagnosis === diagnosisComment);\n        }),\n        encounterCommentsSortProperties: Ember.computed(() => ['dateOfService:desc']),\n        encounterComments: Ember.computed.sort('filteredEncounterComments', 'encounterCommentsSortProperties'),\n        encounterCommentsWithComment: Ember.computed('encounterComments.@each.comment', function () {\n            return this.get('encounterComments').filterBy('comment');\n        }),\n        diagnosesByDateOfService: Ember.computed.sort('transcriptDiagnoses.[]', 'encounterCommentsSortProperties'),\n\n        allExistingComments: Ember.computed('diagnosesByDateOfService', 'diagnosisComment', function () {\n            return this.getWithDefault('diagnosesByDateOfService', []).filterBy('comment');\n        }),\n\n        associateMedication(medication) {\n            medication.set('diagnosisGuid', this.get('diagnosisGuid'));\n            return _medications.default.saveMedication(medication);\n        },\n        disassociateMedication(medication) {\n            medication.set('diagnosisGuid', undefined);\n            return _medications.default.saveMedication(medication);\n        },\n        medications: Ember.computed('diagnosisGuid', '_allMedications.@each.diagnosisGuid', function () {\n            var diagnosisGuid = this.get('diagnosisGuid');\n            return this.get('_allMedications').filter(function (medication) {\n                return !!diagnosisGuid && medication.get('diagnosisGuid') === diagnosisGuid;\n            });\n        }),\n\n        _allMedications: Ember.computed('patientPracticeGuid', function () {\n            const medicationsPromise = _medications.default.getMedications(this.get('patientPracticeGuid'));\n            return PromiseArray.create({ promise: medicationsPromise });\n        }),\n\n        _createTranscriptDiagnosis(transcriptGuid) {\n            var transcriptDiagnoses = this.getWithDefault('transcriptDiagnoses', []),\n                transcriptDiagnosis = this.getTranscriptDiagnosis(transcriptGuid);\n            if (!transcriptGuid) {\n                // We need to be explicit about null for consistency with what the server is doing (not undefined)\n                transcriptGuid = null;\n            }\n            if (Ember.isEmpty(transcriptDiagnosis)) {\n                transcriptDiagnosis = { transcriptGuid: transcriptGuid };\n                transcriptDiagnoses.pushObject(transcriptDiagnosis);\n            }\n            this.set('transcriptDiagnoses', transcriptDiagnoses);\n\n            return transcriptDiagnosis;\n        },\n\n        isDirty: false,\n        _markDirty: Ember.observer('customCode', 'content.startDate', 'content.stopDate', 'content.isAcute', 'content.acuity', 'content.isTerminal', 'transcriptDiagnoses.@each.comment', 'diagnosisCodes.[]', function () {\n            this.set('isDirty', true);\n        }),\n\n        _getCodeByCodeSystem(codeSystem) {\n            codeSystem = codeSystem.toLowerCase();\n            var diagnosisCodes = this.getWithDefault('diagnosisCodes', []),\n                codeObject = diagnosisCodes.find(function (code) {\n                return code.codeSystem.toLowerCase() === codeSystem;\n            });\n            // TODO: add support for combinatory codes by concatenating the codes frmo the same codeSystem\n            return codeObject || {};\n        },\n\n        _getCodesByCodeSystem(codeSystem) {\n            codeSystem = codeSystem.toLowerCase();\n\n            return this.getWithDefault('diagnosisCodes', []).filter(function (dx) {\n                return dx.codeSystem.toLowerCase() === codeSystem;\n            });\n        },\n\n        startDate: Ember.computed('content.startDate', {\n            get() {\n                return getFormattedDate(this.get('content.startDate'));\n            },\n            set(key, value) {\n                this.set('content.startDate', dateToISOString(value));\n                return value;\n            }\n        }),\n        stopDate: Ember.computed('content.stopDate', {\n            get() {\n                return getFormattedDate(this.get('content.stopDate'));\n            },\n            set(key, value) {\n                this.set('content.stopDate', dateToISOString(value));\n                return value;\n            }\n        }),\n        startDateUtc: Ember.computed.alias('content.startDate'),\n        stopDateUtc: Ember.computed.alias('content.stopDate'),\n\n        addCodesFrom(referenceDiagnosis) {\n            this.set('diagnosisCodes', this.get('diagnosisCodes').concat(referenceDiagnosis.get('diagnosisCodes')));\n        },\n\n        acuityDisplay: Ember.computed('content.acuity', 'content.isAcute', function () {\n            const acuity = this.get('content.acuity') || '';\n            const diagnosisIsAcute = this.get('content.isAcute');\n            if (acuity.toLowerCase() === 'acute' || diagnosisIsAcute) {\n                return 'Acute';\n            }\n            if (acuity.toLowerCase() === 'chronic') {\n                return 'Chronic';\n            }\n            return '';\n        })\n    });\n\n    Diagnosis.reopenClass({\n        wrap(objectOrArray) {\n            if (objectOrArray instanceof Diagnosis) {\n                return objectOrArray;\n            } else if (Ember.isArray(objectOrArray)) {\n                objectOrArray = objectOrArray.map(function (item) {\n                    return Diagnosis.wrap(item);\n                });\n                return _diagnosesArray.default.create({ content: objectOrArray });\n            } else {\n                _transcriptComments.default.setTranscriptCommentDates(Ember.get(objectOrArray, 'patientPracticeGuid'), Ember.get(objectOrArray, 'transcriptDiagnoses') || []);\n                Ember.set(objectOrArray, 'transcriptDiagnoses', objectOrArray.transcriptDiagnoses || []);\n                return Diagnosis.create({ content: objectOrArray });\n            }\n        },\n        unwrap(diagnosis) {\n            let deserializedDiagnosis = diagnosis.get('content');\n            if (deserializedDiagnosis instanceof Diagnosis) {\n                return Diagnosis.unwrap(diagnosis);\n            }\n            deserializedDiagnosis = JSON.parse(JSON.stringify(deserializedDiagnosis));\n            return deserializedDiagnosis;\n        },\n        unwrapAndRemoveLastModified(diagnosis) {\n            const deserializedDiagnosis = Diagnosis.unwrap(diagnosis);\n            const { transcriptDiagnoses } = deserializedDiagnosis;\n            if (Ember.isPresent(transcriptDiagnoses)) {\n                transcriptDiagnoses.forEach(transcriptDiagnosis => {\n                    delete transcriptDiagnosis.lastModifiedByProviderGuid;\n                });\n            }\n            return deserializedDiagnosis;\n        }\n    });\n\n    exports.default = Diagnosis;\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/dx-search-result', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Object.extend({\n        getCodesFor(codeSystem) {\n            codeSystem = codeSystem.toLowerCase();\n\n            var dxCodes = this.get('diagnosisCodes'),\n                codes = [],\n                i;\n            // TODO: change to use filter\n            for (i = 0; i < dxCodes.length; i += 1) {\n                if (dxCodes[i][0].codeSystem.toLowerCase() === codeSystem) {\n                    codes.push(dxCodes[i]);\n                }\n            }\n\n            return codes;\n        },\n\n        icd9Codes: Ember.computed('diagnosisCodes', function () {\n            return this.getCodesFor('icd9');\n        }),\n\n        icd10Code: Ember.computed('icd10Codes.[]', function () {\n            const icd10Codes = _.flatten(this.get('icd10Codes') || []);\n\n            if (icd10Codes.length === 1) {\n                return Ember.get(icd10Codes, 'firstObject');\n            }\n        }),\n\n        icd10Codes: Ember.computed('diagnosisCodes', function () {\n            return this.getCodesFor('icd10');\n        }),\n\n        snomedCodes: Ember.computed('diagnosisCodes', function () {\n            return this.getCodesFor('snomed');\n        }),\n\n        getCodeTextFor(codeSystem) {\n            return this.get(codeSystem + 'Codes').map(function (codes) {\n                if (codes.length === 1) {\n                    return codes[0].code;\n                } else {\n                    return codes.map(function (code) {\n                        return code.code;\n                    }).join('&');\n                }\n            }).join(',');\n        },\n        getCondensedCodeText() {\n            let multipleIndicator = '';\n            let array = this.get('icd10Codes');\n            if (Ember.isEmpty(array)) {\n                array = this.get('snomedCodes');\n            }\n            const codeArray = array.map(function (codes) {\n                if (codes.length > 0) {\n                    return codes[0].code;\n                }\n            });\n            if (codeArray.length > 1) {\n                multipleIndicator = '...';\n            }\n            return Ember.isPresent(codeArray) ? `${codeArray[0]}${multipleIndicator}` : null;\n        },\n        icd9CodesText: Ember.computed('icd9Codes', function () {\n            return this.getCodeTextFor('icd9');\n        }),\n\n        icd10CodesText: Ember.computed('icd10Codes', function () {\n            return this.getCondensedCodeText();\n        }),\n\n        codeToRefine: Ember.computed('icd10Codes', 'icd9Codes', function () {\n            const icd9CodeCount = this.get('icd9Codes').length;\n            const icd10CodeCount = this.get('icd10Codes').length;\n\n            if (icd10CodeCount === 1) {\n                return '';\n            }\n\n            if (icd10CodeCount > 1 && icd9CodeCount > 1) {\n                return 'both';\n            } else if (icd10CodeCount > 1) {\n                return 'icd10';\n            } else if (icd9CodeCount > 1) {\n                return 'icd9';\n            } else {\n                return '';\n            }\n        }),\n\n        optionalRefine: Ember.computed('diagnosisCodes', function () {\n            var icd10Codes = this.get('icd10Codes');\n\n            return icd10Codes.length === 1 && !Ember.isEmpty(icd10Codes[0][0].refinementFilter);\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/ethnicity-option', ['exports', 'ember-data/model', 'ember-data/attr', 'ember-data/relationships'], function (exports, _model, _attr, _relationships) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        optionGuid: Ember.computed.alias('id'),\n        description: (0, _attr.default)('string'),\n        isDefault: (0, _attr.default)('boolean'),\n        isExclusive: (0, _attr.default)('boolean'),\n        subOptions: (0, _relationships.hasMany)('subDemographicOption', { async: false })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/familyhealthhistory/familyhealthhistory', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Object.extend({\n        diagnoses: null,\n        relatives: null,\n        observations: null\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/familyhealthhistory/observation', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Object.extend({\n        observationGuid: null,\n        patientPracticeGuid: null,\n        relative: null,\n        diagnosis: null,\n        onsetDate: null,\n        comment: null\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/familyhealthhistory/relative', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Object.extend({\n        relativeGuid: null,\n        patientPracticeGuid: null,\n        firstName: null,\n        lastName: null,\n        relationshipType: null,\n        dateOfBirth: null,\n        isDeceased: false,\n        comment: '',\n        observation: null\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/favorite-diagnoses-settings', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    function getPropertyForSortOrder(value) {\n        const map = {\n            alpha: 'name',\n            manual: 'sortIndex'\n        };\n\n        return map[value];\n    }\n\n    function buildSortOrderObjectFromValue(preference) {\n        const value = preference.get('value');\n\n        if (value.indexOf(':') !== -1) {\n            const sortPair = value.split(':');\n\n            return Ember.Object.create({\n                property: getPropertyForSortOrder(sortPair[0]),\n                sortAscending: sortPair[1] === 'asc',\n                preference\n            });\n        } else {\n            return Ember.Object.create({\n                property: getPropertyForSortOrder(value),\n                sortAscending: true,\n                preference\n            });\n        }\n    }\n\n    function findPreference(store, key) {\n        return store.query('provider-preference', { keys: [key] }).then(result => {\n            if (result.get('length') === 1) {\n                return result.get('firstObject');\n            } else {\n                const lowerKey = key.toLowerCase();\n                return result.find(preference => {\n                    const type = preference.get('type');\n                    return type && type.toLowerCase() === lowerKey;\n                });\n            }\n        });\n    }\n\n    const FavoriteDiagnosesSettings = Ember.Object.extend(Ember.Observable, {\n        getSortOrder(store, forceFetch) {\n            let sortOrder = this.get('sortOrder');\n\n            if (sortOrder === undefined || forceFetch) {\n                return findPreference(store, 'Charting.FavoriteDiagnosesSortOrder').then(preference => {\n                    preference.set('autoSave', true);\n                    sortOrder = buildSortOrderObjectFromValue(preference);\n                    this.set('sortOrder', sortOrder);\n                    return sortOrder;\n                });\n            } else {\n                return Ember.RSVP.resolve(sortOrder);\n            }\n        },\n\n        updateSortOrderObjectWhenValueChanges: Ember.observer('sortOrder.preference.value', function () {\n            let newSortOrderValues = buildSortOrderObjectFromValue(this.get('sortOrder.preference'));\n\n            this.set('sortOrder.property', newSortOrderValues.get('property'));\n            this.set('sortOrder.sortAscending', newSortOrderValues.get('sortAscending'));\n        }),\n\n        getDisplayCodeSystem() {\n            return Ember.RSVP.resolve('icd10');\n        }\n    });\n\n    exports.default = FavoriteDiagnosesSettings.create();\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/favorite-diagnosis', ['exports', 'ember-data/model', 'ember-data/attr'], function (exports, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.isDuplicate = isDuplicate;\n    exports.default = _model.default.extend({\n        name: (0, _attr.default)('string'),\n        code: (0, _attr.default)('string'),\n        diagnosisCodes: (0, _attr.default)('array'),\n        sortIndex: (0, _attr.default)('number'),\n\n        displayCodeSystem: 'icd10',\n\n        displayDiagnosisCodes: Ember.computed('displayCodeSystem', 'sortedDiagnosisCodes', function () {\n            const displayCodeSystem = this.get('displayCodeSystem');\n\n            const filteredDiagnosisCodes = this.get('sortedDiagnosisCodes').filter(function (diagnosis) {\n                return diagnosis.codeSystem.toLowerCase() === displayCodeSystem;\n            });\n\n            if (!Ember.isEmpty(filteredDiagnosisCodes)) {\n                return filteredDiagnosisCodes;\n            } else {\n                return [Ember.Object.create({\n                    description: this.get('name'),\n                    code: '-'\n                })];\n            }\n        }),\n        sortedDiagnosisCodes: Ember.computed.sort('diagnosisCodes', function (a, b) {\n            if (a.codeSystem === b.codeSystem) {\n                return a.code < b.code ? -1 : 1;\n            }\n\n            const aType = a.codeSystem.toLowerCase();\n            if (aType === 'icd10') {\n                return -1;\n            }\n            if (aType === 'snomed') {\n                return 1;\n            }\n            if (b.codeSystem.toLowerCase() === 'icd10') {\n                return 1;\n            }\n            return -1;\n        }),\n        icd10SortProperty: Ember.computed(() => ['icd10SortOrder']),\n        sortableICD10DiagnosisCodes: Ember.computed('diagnosisCodes', function () {\n            return this.get('diagnosisCodes').map(diagnosisCode => {\n                let sortOrder = 0;\n                if (diagnosisCode.codeSystem) {\n                    if (diagnosisCode.codeSystem.toLowerCase() === 'icd10') {\n                        sortOrder = -1;\n                    } else if (diagnosisCode.codeSystem.toLowerCase() === 'icd9') {\n                        sortOrder = 1;\n                    }\n                }\n                diagnosisCode.icd10SortOrder = sortOrder;\n                return diagnosisCode;\n            });\n        }),\n        sortedICD10DiagnosisCodes: Ember.computed.sort('sortableICD10DiagnosisCodes', 'icd10SortProperty'),\n        preferredIcd10Code: Ember.computed('diagnosisCodes', function () {\n            return this.get('sortedICD10DiagnosisCodes.firstObject');\n        }),\n        icd10Code: Ember.computed('diagnosisCodes', function () {\n            const codes = this.get('diagnosisCodes');\n            if (Ember.isPresent(codes)) {\n                let foundCode = codes.find(code => {\n                    return code.codeSystem && code.codeSystem.toLowerCase() === 'icd10';\n                });\n                if (!foundCode) {\n                    foundCode = codes.find(code => {\n                        return code.codeSystem && code.codeSystem.toLowerCase() === 'custom';\n                    });\n                }\n                return foundCode || codes.get('firstObject');\n            }\n            return null;\n        }),\n        icd10CodesText: Ember.computed('icd10Code', function () {\n            return this.get('icd10Code.code');\n        }),\n        term: Ember.computed('icd10Code', function () {\n            return this.get('icd10Code.description');\n        }),\n        isSnomedCodeOnly: Ember.computed('diagnosisCodes.@each.codeSystem', function () {\n            return this.get('diagnosisCodes').isEvery('codeSystem', 'SNOMED');\n        }),\n        isNotSnomedCodeOnly: Ember.computed.not('isSnomedCodeOnly')\n    });\n    function isDuplicate(newDiagnosis, diagnoses) {\n        let name = newDiagnosis.get('name'),\n            diagnosisCodes = newDiagnosis.get('diagnosisCodes');\n\n        return !!diagnoses.find(item => {\n            if (item.get('name') !== name || item.get('diagnosisCodes.length') !== diagnosisCodes.get('length')) {\n                return false;\n            }\n\n            for (let i = 0; i < diagnosisCodes.get('length'); i += 1) {\n                let dxCode = diagnosisCodes.objectAt(i);\n\n                let foundMatchingDxCode = item.get('diagnosisCodes').find(itemDxCode => {\n                    return dxCode.code === itemDxCode.code && dxCode.description === itemDxCode.description && dxCode.codeSystem.toLowerCase() === itemDxCode.codeSystem.toLowerCase();\n                });\n\n                if (!foundMatchingDxCode) {\n                    return false;\n                }\n            }\n\n            return true;\n        });\n    }\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/immunization-drug', ['exports', 'ember-data/attr', 'ember-data/relationships', 'ember-data/model'], function (exports, _attr, _relationships, _model) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        immunizationDrugGuid: Ember.computed.alias('id'),\n\n        activeIngredients: (0, _attr.default)('array'),\n        doseForm: (0, _attr.default)('string'),\n        drugDose: (0, _attr.default)('string'),\n        isActive: (0, _attr.default)('boolean'),\n        isPublished: (0, _attr.default)('boolean'),\n        nationalDrugCode: (0, _attr.default)('string'),\n        packagedDrugName: (0, _attr.default)('string'),\n        route: (0, _attr.default)('string'),\n        routedDrugName: (0, _attr.default)('string'),\n        vaccineManufacturerGuid: (0, _attr.default)('string'),\n        vaccineTypeGuid: (0, _attr.default)('string'),\n\n        vaccinationSites: (0, _relationships.hasMany)('vaccination-site', { async: false })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/immunization-funding-source', ['exports', 'ember-data/model', 'ember-data/attr'], function (exports, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        conceptCode: Ember.computed.alias('id'),\n\n        codeSystem: (0, _attr.default)(),\n        conceptName: (0, _attr.default)(),\n        isActive: (0, _attr.default)('boolean'),\n        preferredConceptName: (0, _attr.default)()\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/immunization-option-notification', ['exports', 'ember-data/attr', 'ember-data/model'], function (exports, _attr, _model) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        notificationPreferenceCode: Ember.computed.alias('id'),\n\n        codingSystem: (0, _attr.default)('string'),\n        codingSystemDescription: (0, _attr.default)('string'),\n        immunizationRegistryNotificationPreferenceDescription: (0, _attr.default)('string'),\n        isActive: (0, _attr.default)('boolean'),\n\n        immunizationRegistryNotificationPreferenceId: Ember.computed('notificationPreferenceCode', function () {\n            return parseInt(Ember.get(this, 'notificationPreferenceCode'));\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/immunization-option-protection', ['exports', 'ember-data/attr', 'ember-data/model'], function (exports, _attr, _model) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        immunizationProtectionTypeCode: (0, _attr.default)('string'),\n        immunizationProtectionTypeDescription: (0, _attr.default)('string'),\n        isActive: (0, _attr.default)('boolean'),\n\n        displayOrder: Ember.computed('immunizationProtectionTypeId', function () {\n            const typeId = Ember.get(this, 'immunizationProtectionTypeId') || '1000';\n            const idOrder = parseInt(typeId);\n            if (idOrder === 1) {\n                return 10;\n            }\n            return idOrder;\n        }),\n        immunizationProtectionTypeId: Ember.computed('id', function () {\n            return parseInt(Ember.get(this, 'id'));\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/immunization-option-status', ['exports', 'ember-data/attr', 'ember-data/model'], function (exports, _attr, _model) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        immunizationRegistryPatientStatusDescription: (0, _attr.default)('string'),\n        immunizationRegistryPatientStatusHl7Code: (0, _attr.default)('string'),\n        isActive: (0, _attr.default)('boolean'),\n\n        immunizationRegistryPatientStatusId: Ember.computed('id', function () {\n            return parseInt(Ember.get(this, 'id'));\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/immunization-registry-connection-property', ['exports', 'ember-data/model', 'ember-data/attr'], function (exports, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        immunizationRegistryConnectionPropertyGuid: Ember.computed.alias('id'),\n\n        ironBridgePropertyId: (0, _attr.default)('string'),\n        ironBridgePropertyValue: (0, _attr.default)('string')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/immunization-registry-connection', ['exports', 'ember-data/model', 'ember-data/attr', 'ember-data/relationships'], function (exports, _model, _attr, _relationships) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        immunizationRegistryConnectionGuid: Ember.computed.alias('id'),\n\n        facilityGuid: (0, _attr.default)('string'),\n        immunizationRegistryGuid: (0, _attr.default)('string'),\n        immunizationRegistryConnectionStatus: (0, _attr.default)('string'),\n        isLive: (0, _attr.default)('boolean'),\n        lastUpdatedByUserGuid: (0, _attr.default)('string'),\n        lastModifiedDateTimeUtc: (0, _attr.default)('string'),\n        practiceGuid: (0, _attr.default)('string'),\n        providerGuid: (0, _attr.default)('string'),\n\n        properties: (0, _relationships.hasMany)('immunization-registry-connection-property', { async: false })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/immunization-registry-filter', ['exports', 'ember-data/attr', 'ember-data/model'], function (exports, _attr, _model) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        address1: (0, _attr.default)('string'),\n        address2: (0, _attr.default)('string'),\n        birthOrder: (0, _attr.default)('number'),\n        city: (0, _attr.default)('string'),\n        dateOfBirth: (0, _attr.default)('string'),\n        firstName: (0, _attr.default)('string'),\n        gender: (0, _attr.default)('string'),\n        isMultipleBirth: (0, _attr.default)('boolean'),\n        lastName: (0, _attr.default)('string'),\n        middleName: (0, _attr.default)('string'),\n        mothersMaidenName: (0, _attr.default)('string'),\n        patientRecordNumber: (0, _attr.default)('string'),\n        phoneNumber: (0, _attr.default)('string'),\n        postalCode: (0, _attr.default)('string'),\n        state: (0, _attr.default)('string'),\n\n        fullName: Ember.computed('firstName', 'middleName', 'lastName', function () {\n            const middleName = Ember.get(this, 'middleName');\n            const middleNameSpace = Ember.isPresent(middleName) ? ' ' : '';\n            return `${Ember.get(this, 'firstName')}${middleNameSpace}${middleName} ${Ember.get(this, 'lastName')}`;\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/immunization-registry-notification-preference', ['exports', 'ember-data/model', 'ember-data/attr'], function (exports, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        code: Ember.computed.alias('id'),\n\n        codingSystemDescription: (0, _attr.default)(),\n        codingSystemName: (0, _attr.default)(),\n        description: (0, _attr.default)(),\n        isActive: (0, _attr.default)('boolean')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/immunization-registry-option', ['exports', 'ember-data/relationships', 'ember-data/model'], function (exports, _relationships, _model) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        immunizationRegistryNotificationOptions: (0, _relationships.hasMany)('immunization-option-notification', { async: false }),\n        immunizationRegistryStatusOptions: (0, _relationships.hasMany)('immunization-option-status', { async: false }),\n        immunizationRegistryProtectionOptions: (0, _relationships.hasMany)('immunization-option-protection', { async: false })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/immunization-registry-property', ['exports', 'ember-data/model', 'ember-data/attr'], function (exports, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        ironBridgePropertyId: Ember.computed.alias('id'),\n\n        description: (0, _attr.default)('string'),\n        ironBridgeFacilityRegistryPropertyId: (0, _attr.default)('number'),\n        ironBridgeRegistryId: (0, _attr.default)('number'),\n        isRequired: (0, _attr.default)('boolean'),\n        name: (0, _attr.default)('string'),\n        type: (0, _attr.default)('string'),\n        value: (0, _attr.default)('string')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/immunization-registry-result', ['exports', 'ember-data/attr', 'ember-data/model', 'ember-data/relationships'], function (exports, _attr, _model, _relationships) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    const RegistryResult = _model.default.extend({\n        resultId: Ember.computed.alias('id'),\n\n        forecastVaccines: (0, _attr.default)('array'),\n        historyVaccines: (0, _attr.default)('array'),\n        schedule: (0, _attr.default)('string'),\n\n        patientFilters: (0, _relationships.belongsTo)('immunization-registry-filter', { async: false }),\n\n        forecast: Ember.computed.sort('forecastVaccines', 'forecastSortProperties'),\n        forecastSortProperties: Ember.computed(() => ['dueDate']),\n\n        history: Ember.computed('historyVaccines', function () {\n            const historyVaccines = Ember.get(this, 'historyVaccines') || [];\n            const groups = historyVaccines.mapBy('vaccineGroup').uniq();\n\n            return groups.map(group => {\n                return Ember.Object.create({\n                    name: group,\n                    vaccines: historyVaccines.filterBy('vaccineGroup', group).sortBy('vaccineAdministered')\n                });\n            });\n        })\n    });\n    exports.default = RegistryResult;\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/immunization-registry', ['exports', 'ember-data/model', 'ember-data/attr'], function (exports, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        immunizationRegistryGuid: Ember.computed.alias('id'),\n\n        displayName: (0, _attr.default)('string'),\n        isActive: (0, _attr.default)('boolean'),\n        isIronBridgeEnabled: (0, _attr.default)('boolean'),\n        location: (0, _attr.default)(),\n        name: (0, _attr.default)(),\n        region: (0, _attr.default)('string'),\n        systemAcronym: (0, _attr.default)('string')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/immunization-search', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    const administered = exports.administered = 'administered';\n    const historical = exports.historical = 'historical';\n\n    exports.default = Ember.Object.extend({\n        id: null,\n        isActive: null,\n        matchedAlternateName: null,\n        name: null,\n        searchGuid: null,\n        searchTypeCode: null,\n        sourceType: null,\n        vaccineSearchType: null,\n\n        isAdministered: Ember.computed.equal('sourceType', 'Administered'),\n        isCustomOrFromInventory: Ember.computed.or('isCustom', 'isFromInventory'),\n        isDynamic: Ember.computed.equal('searchTypeCode', 'DynamicVaccine'),\n        isInactive: Ember.computed.not('isActive'),\n\n        displayName: Ember.computed('name', 'isActive', 'matchedAlternateName', function () {\n            var displayName = '',\n                matchedAlternateName = this.get('matchedAlternateName');\n\n            if (Ember.isPresent(matchedAlternateName)) {\n                displayName += matchedAlternateName + ' / ';\n            }\n\n            if (this.get('isActive')) {\n                displayName += this.get('name');\n            } else {\n                displayName += this.get('name') + ' (discontinued)';\n            }\n\n            return displayName;\n        }),\n\n        isCustom: Ember.computed('vaccineSearchType', 'searchTypeCode', function () {\n            var searchTypeCode = this.get('searchTypeCode');\n\n            return this.get('vaccineSearchType') === 3 || searchTypeCode === 'CustomVaccine';\n        }),\n\n        isFromInventory: Ember.computed('vaccineSearchType', 'searchTypeCode', function () {\n            return this.get('vaccineSearchType') === 5 || this.get('searchTypeCode') === 'VaccineInventory';\n        }),\n\n        isGroup: Ember.computed('vaccineSearchType', 'searchTypeCode', function () {\n            return this.get('vaccineSearchType') === 1 || this.get('searchTypeCode') === 'ImmunizationGroup';\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/immunization-transmission-status', ['exports', 'ember-data/attr', 'ember-data/model'], function (exports, _attr, _model) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        immunizationTransmissionHistoryGuid: Ember.computed.alias('id'),\n\n        immunizationRegistryConnectionGuid: (0, _attr.default)('string'),\n        transmissionStatusCode: (0, _attr.default)('string'),\n        transmissionErrorList: (0, _attr.default)('array'),\n        transmissionVaccinationGuidList: (0, _attr.default)('array'),\n        transmissionDateTimeUtc: (0, _attr.default)('string'),\n\n        hasErrors: Ember.computed.notEmpty('transmissionErrorList'),\n        hasNoErrors: Ember.computed.not('hasErrors')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/immunization', ['exports', 'ember-data/model', 'ember-data/attr', 'ember-data/relationships'], function (exports, _model, _attr, _relationships) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        immunizationGroupGuid: Ember.computed.alias('id'),\n\n        description: (0, _attr.default)(),\n        isActive: (0, _attr.default)('boolean'),\n        name: (0, _attr.default)(),\n        vaccinations: (0, _relationships.hasMany)('vaccination', { async: false }),\n\n        hasVaccinations: Ember.computed.notEmpty('sortedVaccinations.[]'),\n        isUnknown: Ember.computed.equal('name', 'Unknown'),\n\n        lastTransmissionDateUtc: Ember.computed('vaccinations.@each.immunizationTransmissionHistorySummary', function () {\n            let transmissionHistoryEntries = this.get('vaccinations').map(immunization => {\n                const transmissionHistoryEntry = immunization.get('immunizationTransmissionHistorySummary');\n\n                if (Ember.isPresent(transmissionHistoryEntry)) {\n                    return Ember.ObjectProxy.create({\n                        content: transmissionHistoryEntry,\n                        lastTransmissionDateUtc: new Date(transmissionHistoryEntry.lastModifiedDateTimeUtc)\n                    });\n                }\n                return null;\n            });\n\n            transmissionHistoryEntries = transmissionHistoryEntries.compact();\n\n            if (Ember.isPresent(transmissionHistoryEntries)) {\n                transmissionHistoryEntries = transmissionHistoryEntries.sortBy('lastTransmissionDateUtc');\n                return transmissionHistoryEntries.get('lastObject.lastTransmissionDateUtc');\n            }\n            return null;\n        }),\n        sortProperties: Ember.computed(() => ['vaccinationDateValue']),\n        sortedVaccinations: Ember.computed.sort('vaccinations', 'sortProperties')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/medication-encounter', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    const MedicationEncounter = Ember.ObjectProxy.extend({\n        transcriptGuid: '',\n        isEncounterMed: Ember.computed('content.transcriptMedications.[]', function () {\n            const transcriptGuid = this.get('transcriptGuid');\n            return this.get('transcriptMedications').isAny('transcriptGuid', transcriptGuid);\n        })\n    });\n\n    const MedicationEncounterArray = Ember.ArrayProxy.extend({\n        // TODO: consider patching ember to fix issue with ArrayProxy or override replaceContent\n        // objectAtContent: function (idx) {\n        //     var medication = this.get('content').objectAt(idx);\n        //     return MedicationEncounter.wrap(medication, this.get('transcriptGuid'));\n        // },\n        // replaceContent: function (idx, amt, objects) {\n        //     objects = objects ? objects.mapBy('content') : objects;\n        //     this.get('content').replace(idx, amt, objects);\n        // },\n        inEncounter: Ember.computed('@each.isEncounterMed', function () {\n            return MedicationEncounter.wrap(this.filterBy('isEncounterMed'));\n        }),\n        notInEncounter: Ember.computed('@each.isEncounterMed', function () {\n            return MedicationEncounter.wrap(this.rejectBy('isEncounterMed'));\n        }),\n        active: Ember.computed('@each.isHistorical', function () {\n            return MedicationEncounter.wrap(this.rejectBy('isHistorical'));\n        }),\n\n        historical: Ember.computed('@each.isHistorical', function () {\n            return MedicationEncounter.wrap(this.filterBy('isHistorical'));\n        }),\n\n        _refreshContent: Ember.on('init', function () {\n            const originalContent = this.get('originalContent') || [];\n            const transcriptGuid = this.get('transcriptGuid');\n            this.set('content', originalContent.map(medication => MedicationEncounter.wrap(medication, transcriptGuid)));\n        }).observes('originalContent.[]')\n    });\n\n    MedicationEncounter.reopenClass({\n        wrap(objectOrArray, transcriptGuid) {\n            if (objectOrArray instanceof MedicationEncounter) {\n                return objectOrArray;\n            } else if (Ember.isArray(objectOrArray)) {\n                return MedicationEncounterArray.create({\n                    content: [],\n                    originalContent: objectOrArray,\n                    transcriptGuid\n                });\n            }\n            return MedicationEncounter.create({ content: objectOrArray, transcriptGuid });\n        }\n    });\n\n    exports.default = MedicationEncounter;\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/medication', ['exports', 'clinical/models/medications-array', 'clinical/util/transcript-comments', 'clinical/repositories/diagnoses'], function (exports, _medicationsArray, _transcriptComments, _diagnoses) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    const LIQUID_DOSE_FORMS = ['Liquid', 'Solution', 'Elixir', 'Syrup', 'Suspension', 'Controlled Release Liquid', 'Extended Release Liquid', 'Pediatric Liquid', 'Sustained Release Oral Liquid', 'Oral Solution', 'Solution for Reconstitution', 'Reconstituted Oral Solution', 'Extended Release Suspension', 'Oral Reconstituted Suspension', 'Oral Suspension', 'Oral Suspension Final', 'Suspension 12 Hour Sustained Release', 'Suspension for Reconstitution', 'Suspension Reconstituted', 'Reconstituted Suspension'];\n\n    const PromiseObject = Ember.ObjectProxy.extend(Ember.PromiseProxyMixin);\n\n    const Medication = Ember.ObjectProxy.extend({\n        isHistorical: Ember.computed('stopDateTime', function () {\n            const stopDate = this.get('stopDateTime');\n            return !!stopDate && moment(stopDate).isBefore(moment());\n        }),\n        isFuture: Ember.computed('startDateTime', function () {\n            const startDate = this.get('startDateTime');\n            return !!startDate && moment(startDate).isAfter(moment());\n        }),\n        isCurrent: Ember.computed('isHistorical', 'isFuture', function () {\n            return !this.get('isHistorical') && !this.get('isFuture');\n        }),\n\n        isCustom: Ember.computed.empty('ndc'),\n\n        hasProliaPermanentPlacelink: Ember.computed('associatedProgram', function () {\n            const associatedProgram = this.get('associatedProgram');\n            if (associatedProgram && associatedProgram.findBy('name', 'proliaAesiMedicationHistory')) {\n                return true;\n            }\n            return false;\n        }),\n        /**\n         * Adds a comment to the TranscriptMedication specified\n         * if no transcript medication exists it will create a new one\n         * if no transcriptGuid is specified, it will use the default one\n         */\n        addComment(comment, transcriptGuid) {\n            const transcriptMedication = transcriptGuid ? this.attachToEncounter(transcriptGuid) : this.createDefaultTranscriptMedication();\n            Ember.set(transcriptMedication, 'comment', comment);\n        },\n        getTranscriptMedication(transcriptGuid) {\n            const transcriptMedications = this.getWithDefault('transcriptMedications', []);\n\n            if (!transcriptGuid) {\n                return transcriptMedications.find(transcriptMedication => {\n                    const guid = Ember.get(transcriptMedication, 'transcriptGuid');\n                    return guid === null || guid === undefined;\n                });\n            }\n            return transcriptMedications.findBy('transcriptGuid', transcriptGuid);\n        },\n        attachToEncounter(transcriptGuid) {\n            if (Ember.isEmpty(transcriptGuid)) {\n                return;\n            }\n            return this._createTranscriptMedication(transcriptGuid);\n        },\n        createDefaultTranscriptMedication() {\n            return this._createTranscriptMedication();\n        },\n        detachFromEncounter(transcriptGuid) {\n            // delete the transcriptMedication to detach\n            // TODO: Review with Danny how to do this.\n            if (Ember.isEmpty(transcriptGuid)) {\n                return;\n            }\n            const transcriptMedication = this.getTranscriptMedication(transcriptGuid);\n            this.get('transcriptMedications').removeObject(transcriptMedication);\n        },\n\n        isEncounterMed(transcriptGuid) {\n            return this.get('transcriptMedications').isAny('transcriptGuid', transcriptGuid);\n        },\n\n        medicationComment: Ember.computed('transcriptMedications.@each.transcriptGuid', function () {\n            return this.getTranscriptMedication();\n        }),\n        filteredEncounterComments: Ember.computed('transcriptMedications.[]', 'medicationComment', function () {\n            const medicationComment = this.get('medicationComment');\n            return this.getWithDefault('transcriptMedications', []).reject(transcriptMedication => transcriptMedication === medicationComment);\n        }),\n        encounterCommentsSortProperties: Ember.computed(() => ['dateOfService:desc']),\n        encounterComments: Ember.computed.sort('filteredEncounterComments', 'encounterCommentsSortProperties'),\n        encounterCommentsWithComment: Ember.computed('encounterComments.@each.comment', function () {\n            return this.get('encounterComments').filterBy('comment');\n        }),\n\n        /**\n         * Consider using fullGenericName instead. Only use this if you need to fomat differently the name and the individual\n         * components (strength, route, dose).\n         * Returns GenericName (TradeName)\n         */\n        genericAndTradeName: Ember.computed('tradeName', 'genericName', 'isGeneric', 'isMedicalSupply', function () {\n            const tradeName = this.get('tradeName');\n            const genericName = this.get('genericName');\n            if (this.get('isGeneric') || this.get('isMedicalSupply') || !genericName || genericName === tradeName) {\n                return tradeName;\n            }\n            return `${genericName} (${tradeName})`;\n        }),\n\n        fullGenericName: Ember.computed('tradeName', 'productStrength', 'route', 'doseForm', function () {\n            return [this.get('genericAndTradeName'), this.get('productStrength'), this.get('route'), this.get('doseForm')].join(' ');\n        }),\n\n        // SIN-2883 - Filter oral, liquid medications so that only mL allowed\n        isOralLiquidMedication: Ember.computed('route', 'doseForm', function () {\n            const routeIsOral = this.get('route') && this.get('route').toLowerCase() === 'oral';\n            const doseForm = this.get('doseForm');\n            const doseFormIsLiquid = LIQUID_DOSE_FORMS.some(form => doseForm === form);\n            return routeIsOral && doseFormIsLiquid;\n        }),\n\n        _createTranscriptMedication(transcriptGuid) {\n            const transcriptMedications = this.getWithDefault('transcriptMedications', []);\n            let transcriptMedication = this.getTranscriptMedication(transcriptGuid);\n            if (Ember.isEmpty(transcriptMedication)) {\n                transcriptMedication = { transcriptGuid };\n                transcriptMedications.pushObject(transcriptMedication);\n            }\n            this.set('transcriptMedications', transcriptMedications);\n\n            return transcriptMedication;\n        },\n\n        diagnosis: Ember.computed('diagnosisGuid', function () {\n            const diagnosisGuid = this.get('diagnosisGuid');\n            const diagnosisPromise = _diagnoses.default.getDiagnoses(this.get('patientPracticeGuid')).then(diagnoses => diagnoses.findBy('diagnosisGuid', diagnosisGuid));\n\n            return PromiseObject.create({ promise: diagnosisPromise });\n        }),\n\n        duplicates: Ember.computed(() => []),\n        updateDuplicates(duplicates) {\n            const oldDuplicates = this.get('duplicates');\n            if (Ember.isEmpty(oldDuplicates) && Ember.isEmpty(duplicates)) {\n                return;\n            }\n            this.set('duplicates', duplicates);\n        }\n    });\n\n    Medication.reopenClass({\n        wrap(objectOrArray) {\n            if (objectOrArray instanceof Medication) {\n                return objectOrArray;\n            } else if (Ember.isArray(objectOrArray)) {\n                objectOrArray = objectOrArray.map(item => Medication.wrap(item));\n                return _medicationsArray.default.create({ content: objectOrArray });\n            } else {\n                _transcriptComments.default.setTranscriptCommentDates(Ember.get(objectOrArray, 'patientPracticeGuid'), Ember.get(objectOrArray, 'transcriptMedications') || []);\n                Ember.set(objectOrArray, 'transcriptMedications', objectOrArray.transcriptMedications || []);\n                return Medication.create({ content: objectOrArray });\n            }\n        }\n    });\n\n    exports.default = Medication;\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/medications-array', ['exports', 'clinical/models/medication-encounter'], function (exports, _medicationEncounter) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    /**\n     * Wraps every object in a MedicationModel and provides helper functions to modify the array\n     */\n    const MedicationsArray = Ember.ArrayProxy.extend({\n        /**\n         * Replaces the medication if one with the same medicationGuid already exists or adds one if not\n         */\n        replaceMedication(medication) {\n            const content = this.get('content');\n            const medicationToReplace = content.findBy('medicationGuid', medication.get('medicationGuid'));\n            const medicationToReplaceIndex = content.indexOf(medicationToReplace);\n\n            if (medicationToReplaceIndex !== -1) {\n                content.replace(medicationToReplaceIndex, 1, [medication]);\n            } else {\n                content.pushObject(medication);\n            }\n        },\n        removeMedication(medication) {\n            const content = this.get('content');\n            const medicationToDelete = content.findBy('medicationGuid', medication.get('medicationGuid'));\n            content.removeObject(medicationToDelete);\n        },\n\n        encounterMedications(transcriptGuid) {\n            return _medicationEncounter.default.wrap(this, transcriptGuid);\n        },\n        active: Ember.computed('@each.isHistorical', function () {\n            return this.rejectBy('isHistorical');\n        }),\n        historical: Ember.computed('@each.isHistorical', function () {\n            return this.filterBy('isHistorical');\n        }),\n        withoutDiagnosis: Ember.computed('@each.diagnosisGuid', function () {\n            return MedicationsArray.create({ content: this.rejectBy('diagnosisGuid') });\n        }),\n\n        noKnownMedications: false,\n        updateNoKnownMedications: Ember.observer('content.[]', function () {\n            // If the content of the array changed we reset this back to false\n            this.set('noKnownMedications', false);\n        }),\n\n        /**\n         * Object of groups of current meds keyed by ndc\n         */\n        currentByNdc: Ember.computed('@each.ndc', '@each.isCurrent', function () {\n            return _.groupBy(this.filterBy('isCurrent').rejectBy('isCustom'), med => med.get('ndc'));\n        }),\n        /**\n         * Array of array of all the groups with duplicates (more than 1 by NDC)\n         */\n        groupOfDuplicates: Ember.computed('currentByNdc.[]', function () {\n            const groupedMedsByNdcObject = this.get('currentByNdc');\n            const arrayOfDuplicates = Object.keys(groupedMedsByNdcObject).map(key =>\n            // It's only a dup if we have more than 1.\n            groupedMedsByNdcObject[key].length > 1 ? groupedMedsByNdcObject[key] : null);\n            return arrayOfDuplicates.compact();\n        }),\n        updateDuplicates: Ember.on('init', Ember.observer('content', 'currentByNdc.[]', function () {\n            const currentByNdc = this.get('currentByNdc');\n            this.forEach(medication => medication.updateDuplicates(this.getDuplicatesForMedication(medication, currentByNdc)));\n        })),\n        getDuplicatesForMedication(medication, groupedMedsByNdc) {\n            if (medication.get('isCurrent')) {\n                const currentByNdc = groupedMedsByNdc || this.get('currentByNdc');\n                const sameNdc = currentByNdc[medication.get('ndc')] || [];\n                // Removes itself from the list of duplicates.\n                return sameNdc.rejectBy('medicationGuid', medication.get('medicationGuid'));\n            }\n            return [];\n        }\n    });\n\n    exports.default = MedicationsArray;\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/past-medical-history-section', ['exports', 'boot/config'], function (exports, _config) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    const PastMedicalHistorySection = Ember.Object.extend({\n        pmh: null,\n        key: null,\n        title: null,\n        structuredInstructions: null,\n        structuredRoute: null,\n        structuredAction: null,\n        isFreeTextDisabled: false,\n        value: Ember.computed({\n            get() {\n                const key = this.get('key');\n                return this.get(`pmh.${key}`);\n            },\n            set(property, value) {\n                const key = this.get('key');\n                this.set(`pmh.${key}`, value);\n                return value;\n            }\n        }),\n        placeholder: Ember.computed('title', function () {\n            const title = this.get('title');\n            return title ? 'Enter ' + title.toLowerCase() : 'Enter text';\n        }),\n        isInSummaryV2: false,\n        isInSocialAndBehavioralHealth: false\n    });\n    PastMedicalHistorySection.definitions = [{ key: 'events', title: 'Major events', isInSummaryV2: true }, { key: 'ongoingMedicalProblems', title: 'Ongoing medical problems', isInSummaryV2: true }, {\n        key: 'allergies',\n        title: 'Allergies',\n        structuredInstructions: 'Use structured allergies to receive interaction alerts',\n        showStructuredWarningInSummary: true,\n        structuredAction: 'createAllergy',\n        isFreeTextDisabled: true,\n        isInSummaryV2: true\n    }, {\n        key: 'familyHealthHistory',\n        title: 'Family health history',\n        structuredInstructions: 'Use structured family health history',\n        structuredRoute: 'patient.familyhistory'\n    }, { key: 'preventativeCare', title: 'Preventive care', isInSummaryV2: true }, { key: 'socialHistory', title: 'Social history', isInSummaryV2: true, isInSocialAndBehavioralHealth: true }, { key: 'nutritionHistory', title: 'Nutrition history', isInSummaryV2: true, isInSocialAndBehavioralHealth: true }, { key: 'developmentalHistory', title: 'Developmental history', isInSummaryV2: true }];\n    PastMedicalHistorySection.reopenClass({\n        createSections(pmh) {\n            let definitions = PastMedicalHistorySection.definitions;\n\n            return definitions.map(definition => {\n                const isFreeTextDisabled = Ember.isPresent(definition.isFreeTextDisabled) ? definition.isFreeTextDisabled : false;\n\n                return PastMedicalHistorySection.create({\n                    key: definition.key,\n                    title: definition.title,\n                    structuredInstructions: definition.structuredInstructions,\n                    structuredRoute: definition.structuredRoute,\n                    structuredAction: definition.structuredAction,\n                    showStructuredWarningInSummary: definition.showStructuredWarningInSummary,\n                    pmh,\n                    isFreeTextDisabled,\n                    isInSummaryV2: definition.isInSummaryV2,\n                    isInSocialAndBehavioralHealth: definition.isInSocialAndBehavioralHealth\n                });\n            });\n        }\n    });\n    exports.default = PastMedicalHistorySection;\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/patient-allergy', ['exports', 'ember-data/model', 'ember-data/attr'], function (exports, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    const SEVERITY_SORT_MAP = {\n        Severe: 0,\n        Moderate: 1,\n        Mild: 2,\n        'Very Mild': 3\n    };\n\n    exports.default = _model.default.extend({\n        patientAllergyGuid: Ember.computed.alias('id'),\n        allergyGuid: Ember.computed.alias('id'),\n        patientPracticeGuid: (0, _attr.default)('string'),\n        allergySeverityTitle: (0, _attr.default)('string'),\n        allergenSubstanceType: (0, _attr.default)('string'),\n        onsetDate: (0, _attr.default)('string'),\n        onsetType: (0, _attr.default)('string'),\n        comments: (0, _attr.default)('string'),\n        isActive: (0, _attr.default)('boolean'),\n        drugInteractionAlert: (0, _attr.default)('boolean'),\n        allergyReactions: (0, _attr.default)('array'),\n        substance: (0, _attr.default)('object'),\n        medication: (0, _attr.default)('object'),\n        class: (0, _attr.default)('object'),\n        isCustom: Ember.computed.alias('substance.isCustom'),\n        allergySeverity: Ember.computed.alias('allergySeverityTitle'),\n        severityText: Ember.computed.alias('allergySeverityTitle'),\n        severityClass: Ember.computed('allergySeverityTitle', function () {\n            const severity = this.get('allergySeverityTitle');\n\n            switch (severity) {\n                case 'Severe':\n                    return 'icon-color-error';\n                case 'Moderate':\n                    return 'icon-color-warning';\n                default:\n                    return 'icon-color-mild';\n            }\n        }),\n        severitySortOrder: Ember.computed('allergySeverityTitle', function () {\n            return SEVERITY_SORT_MAP[this.get('allergySeverityTitle')];\n        }),\n        allergenText: Ember.computed('medication.name', 'substance.title', 'class.title', function () {\n            return this.get('medication.name') || this.get('substance.title') || this.get('class.title');\n        }),\n        reactionsText: Ember.computed('allergyReactions.[]', function () {\n            return this.get('allergyReactions').mapBy('title').join(', ');\n        }),\n        onsetText: Ember.computed('onsetDate', 'onsetType', function () {\n            const { onsetType, onsetDate } = this.getProperties('onsetType', 'onsetDate');\n            if (!Ember.isEmpty(onsetType)) {\n                return onsetType;\n            }\n            return onsetDate ? moment.utc(onsetDate).format('MM/DD/YYYY') : '-';\n        }),\n        type: Ember.computed('allergenSubstanceType', 'substance.groupTitle', function () {\n            const allergenSubstanceType = this.get('allergenSubstanceType');\n            if (allergenSubstanceType === 'Medication' || allergenSubstanceType === 'Class') {\n                return 'drug';\n            }\n            const groupTitle = this.get('substance.groupTitle') || '';\n            return groupTitle.toLowerCase();\n        }),\n        setDrugAllergen(allergen) {\n            const allergenType = allergen.get('allergenType');\n            if (allergenType === 'Class') {\n                this.setProperties({\n                    allergenSubstanceType: 'Class',\n                    class: {\n                        title: allergen.get('name'),\n                        isIngredient: allergen.get('isIngredient'),\n                        rxNormCui: allergen.get('rxNormCui')\n                    },\n                    medication: undefined,\n                    substance: undefined\n                });\n            } else {\n                this.setProperties({\n                    allergenSubstanceType: 'Medication',\n                    class: undefined,\n                    medication: allergen.getProperties('name', 'ndc', 'rxNormCui', 'rollupRxNormCui'),\n                    substance: undefined\n                });\n            }\n        },\n        setSubstance(substance) {\n            this.setProperties({\n                allergenSubstanceType: 'Substance',\n                class: undefined,\n                medication: undefined,\n                substance: Ember.getProperties(substance, 'title', 'groupTitle', 'isCustom')\n            });\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/patient-goal', ['exports', 'ember-data/model', 'ember-data/attr'], function (exports, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        patientGoalGuid: Ember.computed.alias('id'),\n        patientPracticeGuid: (0, _attr.default)('string'),\n        isActive: (0, _attr.default)('boolean'),\n        effectiveDate: (0, _attr.default)('formatted-date'),\n        description: (0, _attr.default)('string'),\n        sortableDate: Ember.computed('effectiveDate', function () {\n            return new Date(this.get('effectiveDate'));\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/patient-health-concern', ['exports', 'ember-data/model', 'ember-data/attr'], function (exports, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        patientHealthConcernGuid: Ember.computed.alias('id'),\n        patientPracticeGuid: (0, _attr.default)('string'),\n        effectiveDate: (0, _attr.default)('formatted-date'),\n        /**\n         * Indicates whether the health concern (not the clinical item) is active\n         */\n        isActive: (0, _attr.default)('boolean'),\n        /**\n         * Indicates whether this health concern is an Allergy, Diagnosis, or Note.\n         */\n        healthConcernType: (0, _attr.default)('string'),\n        /**\n         * The allergyGuid or diagnosisGuid of the clinical item that this health concern points to.\n        */\n        healthConcernReferenceGuid: (0, _attr.default)('string'),\n        /**\n         * The narrative text for a Note type health concern.\n         * Only valid for Note type health concern.\n         */\n        healthConcernNote: (0, _attr.default)('string'),\n        /**\n         * The clinical item (allergy or dianosis) that the health concern points to\n         */\n        healthConcernReferenceItem: null,\n        title: Ember.computed('healthConcernReferenceItem', 'healthConcernType', function () {\n            const { healthConcernType, healthConcernReferenceItem } = this.getProperties('healthConcernType', 'healthConcernReferenceItem');\n            if (healthConcernReferenceItem) {\n                if (healthConcernType === 'Allergy') {\n                    return healthConcernReferenceItem.get('allergenText');\n                }\n                return this.getDiagnosisDescription(healthConcernReferenceItem);\n            }\n            return null;\n        }),\n        getDiagnosisDescription(diagnosis) {\n            const system = diagnosis.get('icd10Code') ? 'icd10' : 'icd9';\n            const codes = diagnosis._getCodesByCodeSystem(system);\n            if (Ember.isEmpty(codes)) {\n                return diagnosis.get('name');\n            }\n            return codes.map(code => `(${code.code}) ${code.description}`).join('\\n');\n        },\n        sortableDate: Ember.computed('effectiveDate', function () {\n            return new Date(this.get('effectiveDate'));\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/patient-search-options', ['exports', 'common/helpers/dates'], function (exports, _dates) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    var notStartWithDigit = function (value) {\n        return (/[^\\d]/.test(value)\n        );\n    },\n        SEARCH_OPTIONS = [\n    // NOTE: This is at the top so it shows up before the name\n    Ember.Object.extend({\n        label: 'DOB',\n        property: 'birthDate',\n        valuePlaceHolder: Ember.computed('value', function () {\n            var value = this.get('value'),\n                dateFormat = 'MM/DD/YYYY';\n            if (value && _dates.default.isValidDate(value, dateFormat)) {\n                return _dates.default.formatDate(value);\n            } else {\n                return value + dateFormat.slice(value.length);\n            }\n        }),\n        matches: Ember.computed('value', function () {\n            /* jshint -W101 */ /* line too long */\n            return (/^0[1-9]?$|^0[1-9][\\/]$|^0[1-9][\\/][0][1-9]?$|^0[1-9][\\/][0][1-9][\\/]$|^0[1-9][\\/][0][1-9][\\/]1$|^0[1-9][\\/][0][1-9][\\/]19\\d{0,2}$|^0[1-9][\\/][0][1-9][\\/]2$|^0[1-9][\\/][0][1-9][\\/]20\\d{0,2}$|^0[1-9][\\/][1-2]\\d?$|^0[1-9][\\/][1-2]\\d[\\/]$|^0[1-9][\\/][1-2]\\d[\\/]1$|^0[1-9][\\/][1-2]\\d[\\/]19\\d{0,2}$|^0[1-9][\\/][1-2]\\d[\\/]2$|^0[1-9][\\/][1-2]\\d[\\/]20\\d{0,2}$|^0[1-9][\\/][3][0-1]?$|^0[1-9][\\/][3][0-1][\\/]$|^0[1-9][\\/][3][0-1][\\/]1$|^0[1-9][\\/][3][0-1][\\/]19\\d{0,2}$|^0[1-9][\\/][3][0-1][\\/]2$|^0[1-9][\\/][3][0-1][\\/]20\\d{0,2}$|^1[0-2]?$|^1[0-2][\\/]$|^1[0-2][\\/][0][1-9]?$|^1[0-2][\\/][0][1-9][\\/]$|^1[0-2][\\/][0][1-9][\\/]1$|^1[0-2][\\/][0][1-9][\\/]19\\d{0,2}$|^1[0-2][\\/][0][1-9][\\/]2$|^1[0-2][\\/][0][1-9][\\/]20\\d{0,2}$|^1[0-2][\\/][1-2]\\d?$|^1[0-2][\\/][1-2]\\d[\\/]$|^1[0-2][\\/][1-2]\\d[\\/]1$|^1[0-2][\\/][1-2]\\d[\\/]19\\d{0,2}$|^1[0-2][\\/][1-2]\\d[\\/]2$|^1[0-2][\\/][1-2]\\d[\\/]20\\d{0,2}$|^1[0-2][\\/][3][0-1]?$|^1[0-2][\\/][3][0-1][\\/]$|^1[0-2][\\/][3][0-1][\\/]1$|^1[0-2][\\/][3][0-1][\\/]19\\d{0,2}$|^1[0-2][\\/][3][0-1][\\/]2$|^1[0-2][\\/][3][0-1][\\/]20\\d{0,2}$/.test(this.get('value'))\n            );\n            /* jshint +W101 */\n        })\n    }),\n    // TODO: first and lastName didn't work...\n    // EmberObject.extend({\n    //     label: 'First name',\n    //     property: 'firstName',\n    //     valuePlaceHolder: alias('value'),\n    //     matches: function () {\n    //         return notStartWithDigit(this.get('value'));\n    //     }.property('value')\n    // }),\n    // EmberObject.extend({\n    //     label: 'Last name',\n    //     property: 'lastName',\n    //     valuePlaceHolder: alias('value'),\n    //     matches: function () {\n    //         return notStartWithDigit(this.get('value'));\n    //     }.property('value')\n    // }),\n    // EmberObject.extend({\n    //     label: 'Name',\n    //     property: 'firstOrLastName',\n    //     valuePlaceHolder: alias('value'),\n    //     matches: function () {\n    //         return notStartWithDigit(this.get('value'));\n    //     }.property('value')\n    // }),\n    Ember.Object.extend({\n        label: 'Name',\n        property: 'namePropertyUsedToWorkaroundBackendLimitations',\n        valuePlaceHolder: Ember.computed.alias('value'),\n        matches: Ember.computed('value', function () {\n            return notStartWithDigit(this.get('value'));\n        })\n    }), Ember.Object.extend({\n        label: 'SSN',\n        property: 'socialSecurityNumber',\n        valuePlaceHolder: Ember.computed.alias('value'),\n        matches: Ember.computed('value', function () {\n            return (/^\\d{1,9}$|^\\d{3}-$|^\\d{3}-\\d{1,6}$|^\\d{1,3}-\\d{1,2}-$|^\\d{1,3}-\\d{1,2}-\\d{1,4}$|^\\d{5}-$|^\\d{5}-\\d{1,4}$/.test(this.get('value'))\n            );\n        })\n    }), Ember.Object.extend({\n        label: 'PRN',\n        property: 'patientRecordNumber',\n        valuePlaceHolder: Ember.computed.alias('value'),\n        matches: Ember.computed('value', function () {\n            // No validation for PRN since it's free text\n            return this.get('value').length;\n        })\n    })],\n        searchOptions = function () {\n        return SEARCH_OPTIONS.map(function (Constructor) {\n            return Constructor.create();\n        });\n    };\n    exports.default = searchOptions;\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/patient-summary-sia', ['exports', 'ember-data/model', 'ember-data/attr'], function (exports, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        transcriptEventGuid: Ember.computed.alias('id'),\n        patientPracticeGuid: (0, _attr.default)('string'),\n        transcriptGuid: (0, _attr.default)('string'),\n        status: (0, _attr.default)('string'),\n        resultCode: (0, _attr.default)(),\n        isNegated: (0, _attr.default)('boolean'),\n        displayName: Ember.computed('resultCode', function () {\n            if (Ember.isPresent(this.get('resultCode'))) {\n                return this.get('resultCode.displayName');\n            }\n        }),\n        displayStatus: Ember.computed('status', 'isNegated', function () {\n            return this.get('isNegated') ? `Not ${this.get('status')}` : this.get('status');\n        }),\n        startDateTimeUtc: (0, _attr.default)('string'),\n        startDate: Ember.computed('startDateTimeUtc', function () {\n            return this.get('startDateTimeUtc') ? moment.utc(this.get('startDateTimeUtc')).format('MM/DD/YYYY') : '-';\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/patient-summary', ['exports', 'ember-data/model', 'ember-data/attr', 'ember-data/relationships'], function (exports, _model, _attr, _relationships) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        patientPracticeGuid: Ember.computed.alias('id'),\n\n        patientId: (0, _attr.default)(),\n\n        firstName: (0, _attr.default)('string'),\n        middleName: (0, _attr.default)('string'),\n        lastName: (0, _attr.default)('string'),\n        nickname: (0, _attr.default)('string'),\n\n        fullName: Ember.computed('firstName', 'middleName', 'lastName', function () {\n            const names = [];\n            if (this.get('firstName')) {\n                names.push(this.get('firstName'));\n            }\n            if (this.get('middleName')) {\n                names.push(this.get('middleName'));\n            }\n            if (this.get('lastName')) {\n                names.push(this.get('lastName'));\n            }\n            return names.join(' ');\n        }),\n\n        birthDate: (0, _attr.default)(),\n        genderString: (0, _attr.default)(),\n        emailAddress: (0, _attr.default)(),\n        isUserOfEmail: (0, _attr.default)(),\n        homePhone: (0, _attr.default)(),\n        mobilePhone: (0, _attr.default)(),\n        workPhone: (0, _attr.default)(),\n        workPhoneExtension: (0, _attr.default)(),\n        practiceGuid: (0, _attr.default)(),\n        patientRecordNumber: (0, _attr.default)(),\n        age: (0, _attr.default)(), // 27 years\n        imageUrl: (0, _attr.default)(),\n        suffix: (0, _attr.default)(),\n        gender: (0, _attr.default)('number'),\n        genderOption: (0, _relationships.belongsTo)('gender-option', { async: true }),\n        genderDescription: Ember.computed.alias('genderOption.gender'),\n        officePhone: (0, _attr.default)(),\n        officePhoneExtension: (0, _attr.default)(),\n        hasPatientImage: (0, _attr.default)('boolean'),\n        primaryInsurancePlan: (0, _attr.default)('object'),\n        isActive: (0, _attr.default)('boolean'),\n        displayName: Ember.computed('fullName', 'isActive', function () {\n            const name = this.get('fullName');\n            if (this.get('isActive')) {\n                return name;\n            }\n            return `(Inactive) ${name}`;\n        }),\n        pinnedPatientNote: (0, _relationships.belongsTo)('patient-note', { async: false })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/patient/activity-segment', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Object.extend({\n        display: null,\n        type: null,\n        isLink: Ember.computed.equal('type', 'chartnote'),\n        identifier: null,\n        route: Ember.computed('isLink', function () {\n            return this.get('isLink') ? 'encounter' : null;\n        }),\n        isCurrentRoute: Ember.computed('route', 'identifier', function () {\n            var hash = window.location.hash,\n                route = this.get('route'),\n                identifier = this.get('identifier');\n\n            if (Ember.isEmpty(route) || Ember.isEmpty(identifier)) {\n                return false;\n            }\n            return hash.indexOf(route) !== -1 && hash.indexOf(identifier) !== -1;\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/patient/order-preview', ['exports', 'labs/models/order'], function (exports, _order) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Object.extend({\n        labDisplayName: null,\n        orderGuid: null,\n        orderNumber: null,\n        preview: null,\n        requestingProviderName: null,\n        tests: Ember.computed(() => []),\n        history: Ember.computed(() => []),\n\n        currentStatus: Ember.computed.alias('history.0.statusDisplayText'),\n\n        isDiagnostic: Ember.computed('preview.filterType', function () {\n            var filterType = this.get('preview.filterType');\n\n            return filterType && filterType.toLowerCase() === 'laborder';\n        }),\n\n        labDescription: Ember.computed('isDiagnostic', function () {\n            return this.get('isDiagnostic') ? 'Laboratory' : 'Imaging Center';\n        }),\n\n        serviceDescription: Ember.computed('isDiagnostic', function () {\n            return this.get('isDiagnostic') ? 'Tests' : 'Studies';\n        }),\n\n        load() {\n            return _order.default.getOrderHistory(this.get('orderGuid')).then(function (history) {\n                this.set('history', history);\n                return this;\n            }.bind(this));\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/patient/preview', ['exports', 'boot/config', 'boot/util/pf-server', 'clinical/models/patient/order-preview', 'clinical/models/patient/result-preview'], function (exports, _config, _pfServer, _orderPreview, _resultPreview) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    var PatientPreview = Ember.Object.extend({\n        eventDateTimeUtc: null,\n        filterType: null,\n        identifyingGuid: null,\n        isAbnormal: false,\n        isMetric: false,\n        isSelected: false,\n        isSigned: false,\n        primaryEventType: null,\n        secondaryEventType: null,\n        isEncounter: Ember.computed.equal('filterType', 'Encounter'),\n\n        displayDate: Ember.computed('eventDateTimeUtc', 'isEncounter', function () {\n            if (this.get('isEncounter')) {\n                return moment.utc(this.get('eventDateTimeUtc')).format('MM/DD/YYYY');\n            } else {\n                return moment.utc(this.get('eventDateTimeUtc')).local().format('MM/DD/YYYY');\n            }\n        }),\n\n        displayText: Ember.computed('primaryEventType', 'secondaryEventType', function () {\n            var primaryEventType = this.get('primaryEventType');\n\n            return primaryEventType ? primaryEventType : this.get('secondaryEventType');\n        }),\n\n        displayTextLower: Ember.computed('displayText', function () {\n            return this.get('displayText').toLowerCase();\n        })\n    });\n\n    PatientPreview.reopenClass({\n        findPreviews(patientPracticeGuid, filterType) {\n            var url = [_config.default.patientPreviewBaseURL, '/patientEvents/', patientPracticeGuid];\n\n            if (filterType) {\n                url.push('/' + filterType);\n            }\n\n            return _pfServer.default.promise(url.join(''), 'GET').then(function (previews) {\n                return previews.map(function (preview) {\n                    return PatientPreview.create(preview);\n                });\n            });\n        },\n\n        findPreview(patientPracticeGuid, preview, previewType) {\n            var previewModel = null,\n                url = [_config.default.labsBaseURL, '/patientPreview/', patientPracticeGuid, '/', previewType, '/', preview.get('identifyingGuid')].join('');\n\n            return _pfServer.default.promise(url, 'GET').then(function (previewData) {\n                previewData.preview = preview;\n\n                if (previewType === 'order') {\n                    previewModel = _orderPreview.default.create(previewData).load();\n                } else if (previewType === 'result') {\n                    previewModel = _resultPreview.default.create(previewData).load();\n                }\n\n                return previewModel;\n            }, function () {\n                throw new Error(`Unable to open ${previewType} preview`);\n            });\n        }\n    });\n\n    exports.default = PatientPreview;\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/patient/result-preview', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Object.extend({\n        comment: null,\n        items: null,\n        labAccessionNumber: null,\n        labDisplayName: null,\n        medicalDirector: null,\n        preview: null,\n        requestingProviderName: null,\n        resultOrderGuid: null,\n        signers: null,\n        isSigned: false,\n\n        hasMultipleSigners: Ember.computed.gt('signers.length', 1),\n\n        isDiagnostic: Ember.computed('preview.filterType', function () {\n            var filterType = this.get('preview.filterType');\n\n            return filterType && filterType.toLowerCase() === 'labresult';\n        }),\n\n        labDescription: Ember.computed('isDiagnostic', function () {\n            return this.get('isDiagnostic') ? 'Laboratory' : 'Imaging Center';\n        }),\n\n        serviceDescription: Ember.computed('isDiagnostic', function () {\n            return this.get('isDiagnostic') ? 'Tests' : 'Studies';\n        }),\n\n        load() {\n            var items = this.get('items'),\n                signers = [];\n\n            if (!Ember.isEmpty(items)) {\n                items.forEach(function (item) {\n                    if (!Ember.isEmpty(item.observations)) {\n                        item.observations.forEach(function (observation) {\n                            var abnormalFlags = observation.abnormalFlags.rejectBy('code', 'N');\n\n                            if (observation.observationValue) {\n\n                                // Imaging observation values use a tag, \\.br\\, to indicate where a line break should occur.\n                                observation.observationValue = Ember.Handlebars.Utils.escapeExpression(observation.observationValue).replace(/\\\\.br\\\\/g, '<br>');\n                            }\n\n                            observation.isAbnormal = false;\n                            observation.abnormalFlag = null;\n\n                            if (!Ember.isEmpty(abnormalFlags)) {\n                                observation.isAbnormal = true;\n                                observation.abnormalFlag = abnormalFlags[0].description;\n                            }\n\n                            if (!Ember.isEmpty(observation.signedByProviderFirstName)) {\n                                signers.addObject({\n                                    signedBy: observation.signedByProviderFirstName + ' ' + observation.signedByProviderLastName,\n                                    signedOn: moment(new Date(observation.signedAtDateTimeOffset)).format('MM/DD/YYYY hh:mm a')\n                                });\n                            }\n                        });\n                        item.isAbnormal = item.observations.isAny('isAbnormal');\n                    }\n                });\n            }\n\n            this.set('signers', this.loadSignedInfo(signers));\n\n            return this;\n        },\n\n        loadSignedInfo(signers) {\n            var uniqueSignedStatusInformation = [];\n\n            if (signers.length) {\n                signers.forEach(function (signedInfo) {\n                    if (!uniqueSignedStatusInformation.any(function (uniqueSignedInfo) {\n                        return uniqueSignedInfo.signedBy === signedInfo.signedBy && uniqueSignedInfo.signedOn === signedInfo.signedOn;\n                    })) {\n                        uniqueSignedStatusInformation.addObject(signedInfo);\n                    }\n                });\n            }\n\n            return uniqueSignedStatusInformation;\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/personal-medical-history', ['exports', 'clinical/models/past-medical-history-section', 'boot/config', 'boot/util/pf-server', 'ember-data/model', 'ember-data/attr'], function (exports, _pastMedicalHistorySection, _config, _pfServer, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    const PersonalMedicalHistory = _model.default.extend({\n        patientPracticeGuid: Ember.computed.alias('id'),\n        events: (0, _attr.default)('string'),\n        allergies: (0, _attr.default)('string'),\n        allergiesPmhGuid: (0, _attr.default)('string'),\n        ongoingMedicalProblems: (0, _attr.default)('string'),\n        familyHealthHistory: (0, _attr.default)('string'),\n        preventativeCare: (0, _attr.default)('string'),\n        socialHistory: (0, _attr.default)('string'),\n        nutritionHistory: (0, _attr.default)('string'),\n        developmentalHistory: (0, _attr.default)('string'),\n        areAllEmpty: Ember.computed('events', 'allergies', 'ongoingMedicalProblems', 'familyHealthHistory', 'preventativeCare', 'socialHistory', 'nutritionHistory', 'developmentalHistory', function () {\n            let keys = ['events', 'ongoingMedicalProblems', 'preventativeCare', 'developmentalHistory'];\n\n            const properties = this.getProperties(keys);\n            return keys.every(key => {\n                return Ember.isEmpty(properties[key]);\n            });\n        }),\n        sections: Ember.computed(function () {\n            return _pastMedicalHistorySection.default.createSections(this);\n        })\n    });\n\n    PersonalMedicalHistory.reopenClass({\n        find(store, patientPracticeGuid) {\n            return new Ember.RSVP.Promise(function (resolve, reject) {\n                store.findRecord('personal_medical_history', patientPracticeGuid).then(function (pmh) {\n                    resolve(pmh);\n                }).catch(function (error) {\n                    var pmh = store.peekRecord('personal_medical_history', patientPracticeGuid);\n                    if (pmh) {\n                        store.unloadRecord(pmh);\n                    }\n                    reject(error);\n                });\n            });\n        },\n        reload(store, patientPracticeGuid) {\n            var pmh = store.peekRecord('personal_medical_history', patientPracticeGuid);\n            if (!pmh) {\n                return this.find(store, patientPracticeGuid);\n            }\n            return pmh.reload().then(function () {\n                // HACK: make sure we recreate the sections.\n                // NOTE: we should move this to the UI so we can use the objects directly without needing this abstraction\n                pmh.propertyDidChange('sections');\n            });\n        },\n        deleteAllergies(store, personalMedicalHistory) {\n            let patientPracticeGuid = personalMedicalHistory.get('patientPracticeGuid'),\n                deleteAllergiesUrl = _config.default.defaultHost + '/' + _config.default.clinicalNamespace_v2 + '/PersonalMedicalHistory/' + patientPracticeGuid + '/' + personalMedicalHistory.get('allergiesPmhGuid');\n\n            return _pfServer.default.promise(deleteAllergiesUrl, 'DELETE').then(() => {\n                return PersonalMedicalHistory.reload(store, patientPracticeGuid);\n            });\n        }\n    });\n\n    exports.default = PersonalMedicalHistory;\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/provider-profile-to-profile-adapter', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Object.extend({\n        providerProfile: null,\n        specialties: null,\n        isProviderProfile: true,\n\n        // Aliases\n        id: Ember.computed.alias('providerProfile.profileGuid'),\n        // NOTE: intentionally didn't use computed.alias to make the props immutable\n        firstName: Ember.computed('providerProfile.firstName', function () {\n            return this.get('providerProfile.firstName');\n        }),\n        lastName: Ember.computed('providerProfile.lastName', function () {\n            return this.get('providerProfile.lastName');\n        }),\n        fullProviderName: Ember.computed('providerProfile.fullProviderName', function () {\n            return this.get('providerProfile.fullProviderName');\n        }),\n        specialty: Ember.computed('providerProfile.primarySpecialization', 'specialties', function () {\n            const specialtyId = this.get('providerProfile.primarySpecialization');\n            if (Ember.isEmpty(specialtyId)) {\n                return null;\n            }\n            return this.get('specialties').findBy('id', specialtyId.toString());\n        }),\n        specialtyId: Ember.computed('specialty', function () {\n            return this.get('specialty.id');\n        }),\n        specialtyName: Ember.computed('specialty', function () {\n            return this.get('specialty.specializationName');\n        }),\n        officePhone: Ember.computed('providerProfile.officePhone', function () {\n            return this.get('providerProfile.officePhone');\n        }),\n        fax: '',\n        email: Ember.computed('providerProfile.email', function () {\n            return this.get('providerProfile.email');\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/race-option', ['exports', 'ember-data/model', 'ember-data/attr', 'ember-data/relationships'], function (exports, _model, _attr, _relationships) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        optionGuid: Ember.computed.alias('id'),\n        description: (0, _attr.default)('string'),\n        isDefault: (0, _attr.default)('boolean'),\n        isExclusive: (0, _attr.default)('boolean'),\n        subOptions: (0, _relationships.hasMany)('subDemographicOption', { async: false })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/recent-patient', ['exports', 'clinical/mixins/patient-list-data', 'ember-data/model', 'ember-data/attr'], function (exports, _patientListData, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend(_patientListData.default, {\n        patientPracticeGuid: Ember.computed.alias('id'),\n        lastAccessDateTime: (0, _attr.default)('string'),\n        isActive: Ember.computed.alias('patientIsActive')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/relationshiptype', ['exports', 'ember-data/model', 'ember-data/attr'], function (exports, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        description: (0, _attr.default)(),\n        conceptCode: (0, _attr.default)(),\n        conceptName: (0, _attr.default)(),\n        displaySequence: (0, _attr.default)('number'),\n        selectionSequence: (0, _attr.default)('number')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/smoking-status-type', ['exports', 'ember-data/model', 'ember-data/attr'], function (exports, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    const SmokingStatusType = _model.default.extend({\n        smokingStatusGuid: Ember.computed.alias('id'),\n        description: (0, _attr.default)('string'),\n        isActive: (0, _attr.default)('boolean'),\n        version: (0, _attr.default)('number')\n    });\n\n    SmokingStatusType.reopenClass({\n        getTypes(store) {\n            const types = store.peekAll('smoking_status_type');\n            // Return the loaded smoking status types if they have already\n            // been cached using ember data.\n            if (Ember.isPresent(types)) {\n                return Ember.RSVP.resolve(types);\n            }\n            return store.findAll('smoking_status_type');\n        }\n    });\n\n    exports.default = SmokingStatusType;\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/smoking-status', ['exports', 'common/helpers/dates', 'ember-data/model', 'ember-data/attr'], function (exports, _dates, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        patientSmokingStatusGuid: Ember.computed.alias('id'),\n        patientPracticeGuid: (0, _attr.default)('string'),\n        smokingStatusId: (0, _attr.default)('number'),\n        description: (0, _attr.default)('string'),\n        effectiveDate: (0, _attr.default)('date'),\n        smokingStatusGuid: (0, _attr.default)('string'),\n\n        saveDisabled: Ember.computed('smokingStatusIdString', 'effectiveDate', function () {\n            const effectiveDate = this.get('effectiveDate');\n            return !this.get('smokingStatusIdString') || !_dates.default.isDateInRange(effectiveDate, '1753-01-01', new Date());\n        }),\n        smokingStatusIdString: Ember.computed.alias('smokingStatusGuid'),\n        formattedDate: Ember.computed('effectiveDate', {\n            get() {\n                return moment(this.get('effectiveDate')).format('MM/DD/YYYY');\n            },\n            set(key, value) {\n                this.set('effectiveDate', moment(moment(value).format('MM/DD/YYYY')).toDate());\n                return value;\n            }\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/social-health-field', ['exports', 'ember-data/model', 'ember-data/attr'], function (exports, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        description: (0, _attr.default)('string'),\n        effectiveDate: (0, _attr.default)('string'),\n        notes: (0, _attr.default)('string'),\n        optionGuid: (0, _attr.default)('string'),\n        supportsEffectiveDate: (0, _attr.default)('boolean'),\n\n        isComplete: Ember.computed.notEmpty('description'),\n\n        canMarkAsReviewed: Ember.computed('effectiveDate', 'hasDirtyAttributes', function () {\n            return Ember.isPresent(this.get('effectiveDate')) && !this.get('hasDirtyAttributes');\n        }),\n\n        showUndo: Ember.computed('description', 'descriptionImage', function () {\n            const description = (this.get('description') || '').trim();\n            const descriptionImage = (this.get('descriptionImage') || '').trim();\n            return Ember.isPresent(description) && description !== descriptionImage;\n        }),\n        content: Ember.computed('description', 'effectiveDate', function () {\n            if (Ember.isEmpty(this.get('description'))) {\n                return null;\n            }\n\n            return this.getProperties(['description', 'effectiveDate']);\n        }),\n        setInitValues() {\n            this.setProperties({\n                'descriptionImage': this.get('description'),\n                'optionGuidImage': this.get('optionGuid')\n            });\n        },\n        clear() {\n            this.setProperties({\n                description: '',\n                effectiveDate: '',\n                notes: '',\n                optionGuid: ''\n            });\n        },\n        undoSelect() {\n            this.setProperties({\n                'description': this.get('descriptionImage'),\n                'optionGuid': this.get('optionGuidImage')\n            });\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/social-health', ['exports', 'ember-data/model', 'ember-data/relationships'], function (exports, _model, _relationships) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        patientPracticeGuid: Ember.computed.alias('id'),\n        education: (0, _relationships.belongsTo)('social-health-field', { async: false }),\n        financialResourceStatus: (0, _relationships.belongsTo)('social-health-field', { async: false }),\n        genderIdentity: (0, _relationships.belongsTo)('social-health-field', { async: false }),\n        sexualOrientation: (0, _relationships.belongsTo)('social-health-field', { async: false }),\n        socialHistory: (0, _relationships.belongsTo)('social-health-field', { async: false }),\n\n        hasDirtyFields: Ember.computed.or('education.hasDirtyAttributes', 'financialResourceStatus.hasDirtyAttributes', 'genderIdentity.hasDirtyAttributes', 'sexualOrientation.hasDirtyAttributes', 'socialHistory.hasDirtyAttributes'),\n\n        undoChanges() {\n            this.eachRelationship(fieldName => {\n                this.get(fieldName).rollbackAttributes();\n            });\n            this.rollbackAttributes();\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/social-history-option', ['exports', 'ember-data/model', 'ember-data/relationships'], function (exports, _model, _relationships) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        genderIdentityOptions: (0, _relationships.hasMany)('demographic-option', { async: false }),\n        sexualOrientationOptions: (0, _relationships.hasMany)('demographic-option', { async: false }),\n        riskScoreOptions: (0, _relationships.hasMany)('demographic-option', { async: false })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/social-history', ['exports', 'ember-data/model', 'ember-data/attr'], function (exports, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        patientPracticeGuid: Ember.computed.alias('id'),\n        education: (0, _attr.default)(),\n        financialResourceStatus: (0, _attr.default)(),\n        genderIdentity: (0, _attr.default)(),\n        sexualOrientation: (0, _attr.default)(),\n        riskScore: (0, _attr.default)()\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/sortable-array', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.ArrayProxy.extend();\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/sub-demographic-option', ['exports', 'ember-data/model', 'ember-data/attr'], function (exports, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        optionGuid: Ember.computed.alias('id'),\n        description: (0, _attr.default)('string')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/vaccination-indication', ['exports', 'ember-data/model', 'ember-data/attr'], function (exports, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        scheduleSpecialIndicationGuid: Ember.computed.alias('id'),\n\n        conceptCode: (0, _attr.default)('string'),\n        hl7Code: (0, _attr.default)('string'),\n        isActive: (0, _attr.default)('boolean'),\n        loincCode: (0, _attr.default)('string'),\n        scheduleSpecialIndicationDefinition: (0, _attr.default)('string'),\n        scheduleSpecialIndicationName: (0, _attr.default)('string')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/vaccination-reaction', ['exports', 'ember-data/model', 'ember-data/attr'], function (exports, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        adverseReactionGuid: Ember.computed.alias('id'),\n\n        adverseReactionDefinition: (0, _attr.default)('string'),\n        conceptCode: (0, _attr.default)('string'),\n        conceptName: (0, _attr.default)('string'),\n        hl7Code: (0, _attr.default)('string'),\n        isActive: (0, _attr.default)('boolean'),\n        loincCode: (0, _attr.default)('string')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/vaccination-rejection', ['exports', 'ember-data/model', 'ember-data/attr'], function (exports, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        nipName: Ember.computed.alias('id'),\n\n        isActive: (0, _attr.default)('boolean'),\n        isExpirable: (0, _attr.default)('boolean'),\n        nipCodeSystem: (0, _attr.default)(),\n        nipCode: (0, _attr.default)(),\n        rejectionReason: (0, _attr.default)(),\n        rejectionReasonName: (0, _attr.default)()\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/vaccination-route', ['exports', 'ember-data/model', 'ember-data/attr'], function (exports, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        code: Ember.computed.alias('id'),\n\n        description: (0, _attr.default)(),\n        isActive: (0, _attr.default)('boolean'),\n        name: (0, _attr.default)(),\n\n        isSiteIrrelevant: Ember.computed('code', function () {\n            const routeCode = (Ember.get(this, 'code') || '').toLowerCase();\n            return routeCode === 'po' || routeCode === 'ns';\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/vaccination-site', ['exports', 'ember-data/model', 'ember-data/attr'], function (exports, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        code: Ember.computed.alias('id'),\n\n        description: (0, _attr.default)(),\n        isActive: (0, _attr.default)('boolean'),\n        name: (0, _attr.default)()\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/vaccination-source', ['exports', 'ember-data/model', 'ember-data/attr'], function (exports, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        vaccinationSourceName: Ember.computed.alias('id'),\n\n        description: (0, _attr.default)(),\n        isActive: (0, _attr.default)('boolean'),\n        nipCode: (0, _attr.default)('string'),\n        nipCodeSystem: (0, _attr.default)('string'),\n        nipName: (0, _attr.default)('string'),\n        sourceType: (0, _attr.default)(),\n\n        isAdministered: Ember.computed.equal('sourceType', 'Administered'),\n        isAdministeredActive: Ember.computed.and('isAdministered', 'isActive'),\n        isHistorical: Ember.computed.equal('sourceType', 'Historical'),\n        isHistoricalActive: Ember.computed.and('isHistorical', 'isActive'),\n        isRefused: Ember.computed.equal('sourceType', 'Refused'),\n        isRefusedActive: Ember.computed.and('isRefused', 'isActive')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/vaccination-unit', ['exports', 'ember-data/model', 'ember-data/attr'], function (exports, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        code: Ember.computed.alias('id'),\n\n        isActive: (0, _attr.default)('boolean')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/vaccination', ['exports', 'ember-data/attr', 'ember-data/model', 'ember-data/relationships'], function (exports, _attr, _model, _relationships) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        vaccinationGuid: Ember.computed.alias('id'),\n\n        administeredAmount: (0, _attr.default)('number'),\n        administeredByProviderGuid: (0, _attr.default)('string'),\n        administeredUnits: (0, _attr.default)(),\n        comment: (0, _attr.default)(),\n        createdByProfileGuid: (0, _attr.default)(),\n        createdDateTimeUtc: (0, _attr.default)(),\n        dosesFromInventory: (0, _attr.default)('number'),\n        facilityGuid: (0, _attr.default)('string'),\n        immunizationTransmissionHistorySummary: (0, _attr.default)('object'),\n        isPartiallyComplete: (0, _attr.default)('boolean'),\n        isDeleted: (0, _attr.default)('boolean'),\n        lastModifiedByProfileGuid: (0, _attr.default)(),\n        lastModifiedDateTimeUtc: (0, _attr.default)(),\n        ndc: (0, _attr.default)('string'),\n        orderingProviderGuid: (0, _attr.default)('string'),\n        patientPracticeGuid: (0, _attr.default)(),\n        practiceGuid: (0, _attr.default)(),\n        rejectionReasonExpirationDate: (0, _attr.default)('string'),\n        vaccinationAdverseReactionGuid: (0, _attr.default)('string'),\n        vaccinationDate: (0, _attr.default)(),\n        vaccinationOrderStatusName: (0, _attr.default)(),\n        vaccinationScheduleSpecialIndicationGuid: (0, _attr.default)('string'),\n        vaccinationTime: (0, _attr.default)(),\n        vaccineLotExpirationDate: (0, _attr.default)(),\n        vaccineLotNumber: (0, _attr.default)(),\n        visVersionDate: (0, _attr.default)(),\n        visConceptGuidList: (0, _attr.default)('array'),\n\n        immunizationFundingSource: (0, _relationships.belongsTo)('immunization-funding-source', { async: false }),\n        immunizationRegistryNotificationPreference: (0, _relationships.belongsTo)('immunization-registry-notification-preference', { async: false }),\n        manufacturer: (0, _relationships.belongsTo)('vaccine-manufacturer', { async: false }),\n        rejectionReason: (0, _relationships.belongsTo)('vaccination-rejection', { async: false }),\n        route: (0, _relationships.belongsTo)('vaccination-route', { async: false }),\n        site: (0, _relationships.belongsTo)('vaccination-site', { async: false }),\n        source: (0, _relationships.belongsTo)('vaccination-source', { async: false }),\n        vaccineInventory: (0, _relationships.belongsTo)('vaccine-inventory', { async: false }),\n        vaccineType: (0, _relationships.belongsTo)('vaccine-type', { async: false }),\n        vfcStatus: (0, _relationships.belongsTo)('vfc-status', { async: false }),\n\n        description: null,\n\n        isVisConceptRequired: Ember.computed.alias('vaccineType.isVisConceptRequired'),\n\n        administeredByText: Ember.computed('description', 'source.vaccinationSourceName', function () {\n            return Ember.get(this, 'description') || Ember.get(this, 'source.vaccinationSourceName');\n        }),\n        isVaccineLotExpired: Ember.computed('vaccineLotExpirationDate', function () {\n            return moment().isAfter(this.get('vaccineLotExpirationDate'), 'day');\n        }),\n\n        lastTransmissionDate: Ember.computed('immunizationTransmissionHistorySummary', function () {\n            const transmissionHistory = Ember.get(this, 'immunizationTransmissionHistorySummary');\n\n            if (Ember.isPresent(transmissionHistory)) {\n                return moment.utc(new Date(transmissionHistory.lastModifiedDateTimeUtc)).format('MM/DD/YY');\n            } else {\n                return 'Not transmitted';\n            }\n        }),\n\n        manufacturerName: Ember.computed('manufacturer.name', 'vaccineInventory.customVaccineManufacturerName', 'vaccineInventory.vaccineManufacturer.name', function () {\n\n            const vaccineManufacturerName = Ember.get(this, 'manufacturer.name');\n            const customVaccineManufacturerName = Ember.get(this, 'vaccineInventory.customVaccineManufacturerName');\n            const inventoryManufacturerName = Ember.get(this, 'vaccineInventory.vaccineManufacturer.name');\n\n            return vaccineManufacturerName || customVaccineManufacturerName || inventoryManufacturerName || 'Unknown';\n        }),\n\n        vaccinationDateValue: Ember.computed('vaccinationDate', function () {\n            const vaccinationDate = Ember.get(this, 'vaccinationDate');\n\n            return Ember.isPresent(vaccinationDate) ? moment(vaccinationDate).toDate() : null;\n        }),\n\n        vaccineExpirationDate: Ember.computed('vaccineLotExpirationDate', 'vaccineInventory.vaccineExpirationDate', 'source.isAdministered', function () {\n            if (Ember.get(this, 'source.isAdministered')) {\n                return Ember.get(this, 'vaccineInventory.vaccineExpirationDate') || Ember.get(this, 'vaccineLotExpirationDate');\n            }\n\n            return '';\n        }),\n\n        vaccineInventoryLotNumber: Ember.computed('vaccineLotNumber', 'vaccineInventory.vaccineLotNumber', 'source.isAdministered', function () {\n            if (Ember.get(this, 'source.isAdministered')) {\n                return Ember.get(this, 'vaccineInventory.vaccineLotNumber') || Ember.get(this, 'vaccineLotNumber');\n            }\n\n            return '';\n        }),\n\n        vaccineName: Ember.computed('vaccineType.name', 'vaccineType.isCustom', 'vaccineInventory.customVaccinationTypeName', function () {\n            const vaccineType = Ember.get(this, 'vaccineType');\n\n            if (vaccineType) {\n                if (Ember.get(vaccineType, 'isCustom')) {\n                    return Ember.get(this, 'vaccineInventory.customVaccinationTypeName') || 'Unknown';\n                }\n\n                return Ember.get(vaccineType, 'name');\n            }\n\n            return '';\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/vaccine-inventory', ['exports', 'ember-data/model', 'ember-data/attr', 'ember-data/relationships'], function (exports, _model, _attr, _relationships) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        vaccineInventoryGuid: Ember.computed.alias('id'),\n\n        customVaccinationTypeName: (0, _attr.default)(),\n        customVaccineManufacturerName: (0, _attr.default)(),\n        isActive: (0, _attr.default)('boolean'),\n        isDeleted: (0, _attr.default)('boolean'),\n        isHidden: (0, _attr.default)('boolean'),\n        practiceId: (0, _attr.default)('number'),\n        practiceGuid: (0, _attr.default)(),\n        remainingDoseCount: (0, _attr.default)('number'),\n        totalDoseCount: (0, _attr.default)('number'),\n        vaccinationTypeId: (0, _attr.default)('number'),\n        vaccineExpirationDate: (0, _attr.default)(),\n        vaccineLotNumber: (0, _attr.default)(),\n        ndc: (0, _attr.default)('string'),\n\n        immunizationFundingSource: (0, _relationships.belongsTo)('immunization-funding-source', { async: false }),\n        vaccineManufacturer: (0, _relationships.belongsTo)('vaccine-manufacturer', { async: false }),\n        vaccineType: (0, _relationships.belongsTo)('vaccine-type', { async: false }),\n\n        displayName: Ember.computed('vaccineType.isCustom', 'vaccineType.name', 'customVaccinationTypeName', function () {\n            return this.get('vaccineType.isCustom') ? this.get('customVaccinationTypeName') : this.get('vaccineType.name');\n        }),\n\n        displayValue: Ember.computed('vaccineLotNumber', 'vaccineExpirationDate', function () {\n            var lotNum = this.get('vaccineLotNumber');\n\n            return '' + lotNum + ' - ' + this.get('vaccineExpirationDate');\n        }),\n\n        isExpired: Ember.computed('vaccineExpirationDate', function () {\n            return moment().isAfter(this.get('vaccineExpirationDate'), 'day');\n        }),\n\n        vaccineExpirationDateValue: Ember.computed('vaccineExpirationDate', function () {\n            return moment(this.get('vaccineExpirationDate')).toDate();\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/vaccine-lookup-datum', ['exports', 'ember-data/model', 'ember-data/relationships'], function (exports, _model, _relationships) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        immunizationFundingSources: (0, _relationships.hasMany)('immunization-funding-source', { async: false }),\n        notificationPreferences: (0, _relationships.hasMany)('immunization-registry-notification-preference', { async: false }),\n        rejectionReasons: (0, _relationships.hasMany)('vaccination-rejection', { async: false }),\n        routes: (0, _relationships.hasMany)('vaccination-route', { async: false }),\n        sites: (0, _relationships.hasMany)('vaccination-site', { async: false }),\n        sources: (0, _relationships.hasMany)('vaccination-source', { async: false }),\n        vaccinationAdverseReactions: (0, _relationships.hasMany)('vaccination-reaction', { async: false }),\n        vaccinationScheduleSpecialIndications: (0, _relationships.hasMany)('vaccination-indication', { async: false }),\n        vaccinationUnits: (0, _relationships.hasMany)('vaccination-unit', { async: false }),\n        vfcStatuses: (0, _relationships.hasMany)('vfc-status', { async: false }),\n        visConcepts: (0, _relationships.hasMany)('vis-concept', { async: false })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/vaccine-lot-usage', ['exports', 'ember-data/model', 'ember-data/attr'], function (exports, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        administeredByProviderGuid: (0, _attr.default)('string'),\n        administeredDateTime: (0, _attr.default)('date'),\n        comment: (0, _attr.default)('string'),\n        dosesFromInventory: (0, _attr.default)('number'),\n        patientEmailAddress: (0, _attr.default)('string'),\n        patientFirstName: (0, _attr.default)('string'),\n        patientGuid: (0, _attr.default)('string'),\n        patientLastName: (0, _attr.default)('string'),\n        patientPhoneNumber: (0, _attr.default)('string'),\n        patientPracticeGuid: (0, _attr.default)('string'),\n        practiceGuid: (0, _attr.default)('string'),\n        vaccinationDate: (0, _attr.default)('string'),\n        vaccinationGuid: (0, _attr.default)('string'),\n\n        formattedDate: Ember.computed('administeredDateTime', {\n            get() {\n                return moment.utc(this.get('administeredDateTime')).format('MM/DD/YYYY');\n            },\n            set(key, value) {\n                this.set('administeredDateTime', moment(value).toDate());\n                return value;\n            }\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/vaccine-manufacturer', ['exports', 'ember-data/model', 'ember-data/attr'], function (exports, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        vaccineManufacturerGuid: Ember.computed.alias('id'),\n\n        name: (0, _attr.default)(),\n        mvxCode: (0, _attr.default)()\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/vaccine-type', ['exports', 'ember-data/attr', 'ember-data/model', 'ember-data/relationships'], function (exports, _attr, _model, _relationships) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        vaccineTypeGuid: (0, _attr.default)('string'),\n\n        cvxCode: (0, _attr.default)('string'),\n        description: (0, _attr.default)('string'),\n        isActive: (0, _attr.default)('boolean'),\n        isCustom: (0, _attr.default)('boolean'),\n        name: (0, _attr.default)('string'),\n        providerGuid: (0, _attr.default)('string'),\n        isVisConceptRequired: (0, _attr.default)('boolean'),\n\n        immunizationDrugs: (0, _relationships.hasMany)('immunization-drug', { async: false }),\n        manufacturers: (0, _relationships.hasMany)('vaccine-manufacturer', { async: false }),\n        vaccineInventories: (0, _relationships.hasMany)('vaccine-inventory', { async: false }),\n\n        filteredVaccineInventories: Ember.computed('vaccineInventories', function () {\n            const inventories = Ember.get(this, 'vaccineInventories') || [];\n            const vaccineInventoryGuid = Ember.get(this, 'vaccineInventories.firstObject.vaccineInventoryGuid');\n\n            // If not new inventory, filter only active inventories\n            if (vaccineInventoryGuid && vaccineInventoryGuid !== '00000000-0000-0000-0000-000000000000') {\n                return inventories.filterBy('isActive');\n            }\n\n            return inventories;\n        }),\n        filteredImmunizationDrugs: Ember.computed('immunizationDrugs', function () {\n            return (Ember.get(this, 'immunizationDrugs') || []).rejectBy('nationalDrugCode', null);\n        }),\n        sortImmunizationDrugsProperties: Ember.computed(() => ['nationalDrugCode']),\n        sortedImmunizationDrugs: Ember.computed.sort('filteredImmunizationDrugs', 'sortImmunizationDrugsProperties'),\n        sortProperties: Ember.computed(() => ['vaccineExpirationDateValue']),\n        sortedVaccineInventories: Ember.computed.sort('filteredVaccineInventories', 'sortProperties')\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/vfc-status', ['exports', 'ember-data/model', 'ember-data/attr'], function (exports, _model, _attr) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        code: Ember.computed.alias('id'),\n\n        description: (0, _attr.default)(),\n        isActive: (0, _attr.default)('boolean'),\n        name: (0, _attr.default)()\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/vis-concept', ['exports', 'ember-data/attr', 'ember-data/model'], function (exports, _attr, _model) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _model.default.extend({\n        editionDate: (0, _attr.default)('string'),\n        hl7Code: (0, _attr.default)('string'),\n        isActive: (0, _attr.default)('boolean'),\n        visConceptCode: (0, _attr.default)('string'),\n        visConceptGuid: Ember.computed.alias('id'),\n        visConceptName: (0, _attr.default)('string'),\n        label: Ember.computed('editionDate', 'visConceptName', function () {\n            const { editionDate, visConceptName } = Ember.getProperties(this, 'editionDate', 'visConceptName');\n            return `${moment.utc(editionDate).format('MM/DD/YYYY')} - ${visConceptName}`;\n        })\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/worksheet-question', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    const SOCIAL_HISTORY_WORKSHEETS = {\n        '9c18e2bf-85a3-4935-813c-547d47fcff53': {\n            inputMax: '7'\n        },\n        '2f15f071-4015-4af4-8550-ce4a80b09864': {\n            inputMax: '1440'\n        }\n    };\n\n    exports.default = Ember.ObjectProxy.extend({\n        conditionalQuestionValue: null,\n        isEnabled: Ember.computed('conditionalQuestionValue', 'isConditionalComponent', 'conditionalComponentActionOption', function () {\n            if (this.get('isConditionalComponent') && this.get('conditionalComponentActionOption') === 'enable') {\n                return this.get('conditionalQuestionValue') > 0;\n            }\n            return true;\n        }),\n        isVisible: Ember.computed('conditionalQuestionValue', 'isConditionalComponent', 'conditionalComponentActionOption', function () {\n            if (this.get('isConditionalComponent') && this.get('conditionalComponentActionOption') !== 'enable') {\n                return this.get('conditionalQuestionValue') > 0;\n            }\n            return true;\n        }),\n        selectedOptionValue: null,\n        isDirty: Ember.computed('value', 'imageValue', 'selectedOptionValue', 'imageSelection', function () {\n            return this.get('value') !== this.get('imageValue') || this.get('selectedOptionValue') !== this.get('imageSelection');\n        }),\n        isDisabled: Ember.computed('isEnabled', 'isDisabledByDecline', function () {\n            return !this.get('isEnabled') || this.get('isDisabledByDecline');\n        }),\n        rangeError: null,\n        inputMax: Ember.computed('componentGuid', function () {\n            return Ember.isPresent(SOCIAL_HISTORY_WORKSHEETS[this.get('componentGuid')]) ? SOCIAL_HISTORY_WORKSHEETS[this.get('componentGuid')]['inputMax'] : null;\n        }),\n        inputMin: Ember.computed('componentGuid', function () {\n            return Ember.isPresent(SOCIAL_HISTORY_WORKSHEETS[this.get('componentGuid')]) ? SOCIAL_HISTORY_WORKSHEETS[this.get('componentGuid')]['inputMin'] : '0';\n        }),\n        isHorizontalRadioType: Ember.computed.equal('componentType', 'horizontalradio'),\n        isRadioQuestion: Ember.computed.or('isRadioType', 'isHorizontalRadioType'),\n        isCheckboxQuestion: Ember.computed.equal('componentType', 'checkbox'),\n        isRadioType: Ember.computed.equal('componentType', 'radio'),\n        isNumericType: Ember.computed.equal('componentType', 'numeric'),\n        isSeparator: Ember.computed.equal('componentType', 'separator'),\n        isTextSeparator: Ember.computed('isSeparator', 'label', function () {\n            return this.get('isSeparator') && Ember.isPresent(this.get('label'));\n        }),\n        isShowing: Ember.computed.or('isVisible', 'isEnabled'),\n        isDisabledByDecline: false,\n        isResetByDecline: false,\n        isAnswered: Ember.computed('value', 'rangeError', function () {\n            const value = this.get('value');\n            return !Ember.isNone(value) && Ember.isPresent((value + '').trim()) && Ember.isEmpty(this.get('rangeError'));\n        }),\n        isComplete: Ember.computed('value', 'isRequired', 'options.[]', 'rangeError', function () {\n            return Ember.isEmpty(this.get('rangeError')) && (Ember.isPresent(this.get('value')) || !this.get('isRequired') || Ember.isEmpty(this.get('options')));\n        }),\n        shouldBeExcludedInScoring: Ember.computed.equal('label', 'Patient declined to specify on all questions'),\n        showUndo: Ember.computed('imageSelection', 'selectedOptionValue', 'isResetByDecline', function () {\n            if (Ember.isEmpty(this.get('imageSelection')) && Ember.isEmpty(this.get('selectedOptionValue'))) {\n                return false;\n            }\n            return this.get('imageSelection') !== this.get('selectedOptionValue') && !this.get('isResetByDecline');\n        }),\n        showUpdatedDate: Ember.computed('value', 'responseText', function () {\n            return Ember.isPresent(this.get('value')) || Ember.computed(this.get('responseText'));\n        }),\n        options: Ember.computed('content.options', 'componentGuid', function () {\n            const options = this.get('content.options') || [];\n            const componentGuid = this.get('componentGuid');\n\n            return options.map(function (option, index) {\n                return {\n                    label: option.label,\n                    value: option.value + '-' + index,\n                    displayValue: option.value,\n                    showValue: Ember.isEmpty(option.showValue) || option.showValue,\n                    id: componentGuid + '-' + index\n                };\n            });\n        }),\n\n        response: Ember.computed('componentGuid', 'value', 'enteredAt', function () {\n            const response = this.getProperties(['componentGuid', 'value', 'enteredAt']);\n            const selectedOptionValue = this.get('selectedOptionValue');\n\n            if (selectedOptionValue && this.get('isRadioQuestion')) {\n                response.value = selectedOptionValue;\n            }\n            return response;\n        }),\n\n        responseText: Ember.computed('response', 'options', function () {\n            const responseValue = this.get('response.value');\n            const selectedOption = this.get('options').findBy('value', responseValue);\n            if (Ember.isPresent(selectedOption)) {\n                if (selectedOption.showValue) {\n                    return `${selectedOption.label} (${selectedOption.displayValue})`;\n                } else {\n                    return `${selectedOption.label}`;\n                }\n            }\n            return '';\n        }),\n        textFieldValue: Ember.computed('value', {\n            get() {\n                const value = this.get('value');\n                return Ember.isPresent(value) ? value : '';\n            },\n            set(key, value) {\n                this.set('value', value);\n                return value;\n            }\n        }),\n\n        setInternalValue(value) {\n            this.setProperties({\n                value,\n                enteredAt: moment().toISOString()\n            });\n        },\n\n        init() {\n            this._super();\n            this.setProperties({\n                'imageSelection': this.get('selectedOptionValue'),\n                'imageValue': this.get('value')\n            });\n        },\n\n        undo() {\n            this.set('selectedOptionValue', Ember.isPresent(this.get('imageSelection')) ? this.get('imageSelection') : undefined);\n            this.set('value', Ember.isPresent(this.get('imageValue')) ? this.get('imageValue') : undefined);\n        },\n\n        handleOptionChecked(option) {\n            const optionPrefix = (Ember.get(option, 'value') || '').split('-');\n            const value = optionPrefix[0] ? optionPrefix[0] : 0;\n            this.setInternalValue(parseInt(value, 10));\n        },\n\n        handleDeclinedToSpecifyChecked() {\n            const value = !Ember.get(this, 'value');\n            this.setInternalValue(value + false);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/models/worksheet-responses', ['exports', 'charting/models/transcript-event', 'clinical/models/worksheet-question'], function (exports, _transcriptEvent, _worksheetQuestion) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.midasResultCategories = exports.worksheetEventTypeGuids = undefined;\n    const worksheetEventTypeGuids = exports.worksheetEventTypeGuids = {\n        adultAsthmaControlTestEventTypeGuid: 'ed4c88e0-9083-492d-930b-5d9c1552b924',\n        midasAssessmentWorksheetEventTypeGuid: '9fc12137-0078-442a-9120-d5270b71463f',\n        depressionPhq2AssessmentWorksheetEventTypeGuid: 'c6f1e72a-6312-49f4-b85c-cb93277873f1'\n    };\n\n    const midasResultCategories = exports.midasResultCategories = {\n        gradeI: { id: 6, description: 'Grade I, little or no disability' },\n        gradeII: { id: 7, description: 'Grade II, mild disability' },\n        gradeIII: { id: 8, description: 'Grade III, moderate disability' },\n        gradeIV: { id: 9, description: 'Grade IV, severe disability' }\n    };\n\n    const socialHistory = {\n        socialIsolation: 'd26a18f7-3bc6-4658-a68b-f1457d568694',\n        alcoholUse: '071a8fd1-425b-4596-ad86-c19adfa53dc6',\n        exposureToViolence: 'd6b09429-0ec1-4c82-be76-5c8e943075df',\n        stress: '56294fd9-c3d8-47bb-8433-7f7165e6f1ee',\n        physicalActivity: '25b76f00-067e-4916-94f2-1a8f40eaaa88'\n    };\n\n    const stressCategories = {\n        '1-0': { description: 'Not at all' },\n        '2-1': { description: 'Only a little' },\n        '3-2': { description: 'To some extent' },\n        '4-3': { description: 'Rather much' },\n        '5-4': { description: 'Very much' },\n        '0-5': { description: 'Patient declined to specify' }\n    };\n\n    /**\n     * TODO:\n     * Worksheets are becoming less maintainable as new worksheets are added with custom requirements.\n     * The next time a custom worksheet is incepted, it would be beneficial to include in the sizing room to refactor\n     * the worksheets and transcript encounter event code.\n     */\n    const WorksheetResponses = Ember.ObjectProxy.extend({\n        isDirty: false,\n        transcriptEncounterEvents: null,\n        encounterDateOfService: null,\n\n        hasConditionalQuestions: Ember.computed.notEmpty('conditionalQuestions.[]'),\n\n        hasRangeErrors: Ember.computed('questions.@each.rangeError', function () {\n            return !this.get('questions').every(question => {\n                return Ember.isEmpty(question.get('rangeError'));\n            });\n        }),\n\n        conditionalQuestions: Ember.computed('questions.@each.isConditionalComponent', function () {\n            return this.get('questions').filterBy('isConditionalComponent');\n        }),\n\n        transcriptEncounterEvent: Ember.computed.alias('transcriptEncounterEvents.firstObject'),\n\n        eventTypeGuid: Ember.computed.alias('transcriptEncounterEvent.eventType.eventTypeGuid'),\n\n        displaySecondarySummary: Ember.computed('score', function () {\n            if (this.get('worksheet.secondaryConditionOption') === 'gte') {\n                return this.get('score') >= this.get('worksheet.secondaryScoreBoundary');\n            }\n\n            if (this.get('worksheet.secondaryConditionOption') === 'lt') {\n                return this.get('score') < this.get('worksheet.secondaryScoreBoundary');\n            }\n\n            return true;\n        }),\n\n        displaySummary: Ember.computed('score', 'isMidasAssessment', 'isPhq2Assessment', 'isComplete', function () {\n            if (this.get('isMidasAssessment') && this.get('isComplete')) {\n                return true;\n            }\n\n            if (this.get('isPhq2Assessment')) {\n                return false;\n            }\n\n            if (this.get('worksheet.conditionOption') === 'gte') {\n                return this.get('score') >= this.get('worksheet.scoreBoundary');\n            } else {\n                return true;\n            }\n        }),\n\n        isPhq2Assessment: Ember.computed.equal('eventTypeGuid', worksheetEventTypeGuids.depressionPhq2AssessmentWorksheetEventTypeGuid),\n\n        isMidasAssessment: Ember.computed.equal('eventTypeGuid', worksheetEventTypeGuids.midasAssessmentWorksheetEventTypeGuid),\n\n        midasAssessmentResult: Ember.computed('midasAssessmentResultCategory', function () {\n            return this.get('midasAssessmentResultCategory.description') || '';\n        }),\n\n        midasAssessmentResultCategory: Ember.computed('score', 'isIncomplete', 'isMidasAssessment', function () {\n            if (this.get('isIncomplete') || !this.get('isMidasAssessment')) {\n                return null;\n            }\n\n            const score = this.get('score');\n\n            if (score <= 5) {\n                return midasResultCategories.gradeI;\n            }\n            if (score <= 10) {\n                return midasResultCategories.gradeII;\n            }\n            if (score <= 20) {\n                return midasResultCategories.gradeIII;\n            }\n            if (score > 20) {\n                return midasResultCategories.gradeIV;\n            }\n\n            return null;\n        }),\n\n        resultCode: Ember.computed('midasAssessmentResultCategory', 'transcriptEncounterEvent.resultCode', 'transcriptEncounterEvent.isNegated', function () {\n\n            const midasAssessmentResultCategory = this.get('midasAssessmentResultCategory');\n\n            if (!this.get('transcriptEncounterEvent.isNegated')) {\n\n                if (Ember.isPresent(midasAssessmentResultCategory)) {\n                    return { id: midasAssessmentResultCategory.id };\n                }\n                return this.get('transcriptEncounterEvent.resultCode');\n            }\n        }),\n\n        scoreLabel: Ember.computed('score', 'isMidasAssessment', function () {\n            if (this.get('isMidasAssessment')) {\n                return 'Score:';\n            }\n            return 'Total score:';\n        }),\n\n        socialHistoryKey: Ember.computed('worksheetGuid', function () {\n            const worksheetGuid = this.get('worksheetGuid');\n            return Object.keys(socialHistory).find(key => {\n                return socialHistory[key] === worksheetGuid;\n            });\n        }),\n\n        summaryLabel: Ember.computed('score', 'isMidasAssessment', function () {\n            if (this.get('isMidasAssessment')) {\n                return ' -';\n            }\n            return 'Result:';\n        }),\n\n        assessmentSummary: Ember.computed('score', 'isMidasAssessment', function () {\n            if (this.get('isMidasAssessment')) {\n                return this.get('midasAssessmentResult');\n            }\n            return this.get('worksheet.summary');\n        }),\n\n        isComplete: Ember.computed('questions.@each.isComplete', 'isDeclinedChecked', function () {\n            return this.get('isDeclinedChecked') || this.get('questions').isEvery('isComplete');\n        }),\n\n        isIncomplete: Ember.computed('transcriptEncounterEvent.isNegated', 'isComplete', function () {\n            if (this.get('transcriptEncounterEvent.isNegated')) {\n                return false;\n            }\n\n            return !this.get('isComplete');\n        }),\n\n        isNegated: Ember.computed.alias('transcriptEncounterEvent.isNegated'),\n\n        isSelected: Ember.computed('transcriptEncounterEvents.@each.isSelected', {\n            get() {\n                return this.get('transcriptEncounterEvents').isEvery('isSelected', true);\n            },\n            set(key, value) {\n                this.get('transcriptEncounterEvents').setEach('isSelected', value);\n\n                return value;\n            }\n        }),\n\n        questions: Ember.computed('responses.[]', 'isMidasAssessment', function () {\n            const responses = this.get('responses') || [];\n            const components = this.get('worksheet.components') || [];\n\n            return components.map(component => {\n                const response = responses.findBy('componentGuid', component.componentGuid);\n                let selectedOptionValue = null;\n                let value = null;\n                let enteredAt = null;\n\n                if (Ember.isPresent(response)) {\n                    selectedOptionValue = response.value;\n                    enteredAt = response.enteredAt;\n\n                    if (Ember.isPresent(response.value)) {\n                        // respone.value should always be of format \"4-2\" (value-index) or a number literal\n                        // parseInt should stop at the first non-numeric character i.e. parseInt(\"4-2\") === 4\n                        value = parseInt(response.value, 10);\n                    }\n                }\n\n                const question = _worksheetQuestion.default.create({\n                    content: component,\n                    selectedOptionValue,\n                    value,\n                    enteredAt\n                });\n                if (this.get('isMidasAssessment') && question.get('isNumericType')) {\n                    question.set('options', [{ label: 0, value: 0 }, { label: 92, value: 92 }]);\n                }\n                return question;\n            });\n        }),\n\n        scorableQuestions: Ember.computed('questions.@each.shouldBeExcludedInScoring', function () {\n            return (this.get('questions') || []).rejectBy('shouldBeExcludedInScoring');\n        }),\n\n        declinedToSpecifyQuestion: Ember.computed('questions.@each.shouldBeExcludedInScoring', function () {\n            return (this.get('questions') || []).findBy('shouldBeExcludedInScoring');\n        }),\n\n        isDeclinedChecked: Ember.computed('declinedToSpecifyQuestion.value', function () {\n            const declinedToSpecifyQuestion = this.get('declinedToSpecifyQuestion');\n\n            // patient declined to answer is checked, value is 1\n            return Ember.isPresent(declinedToSpecifyQuestion) ? Ember.get(declinedToSpecifyQuestion, 'value') === 1 : false;\n        }),\n\n        isQuestionnaireComplete: Ember.computed('isDeclinedChecked', 'questions.@each.value', function () {\n            if (this.get('isDeclinedChecked')) {\n                return true;\n            }\n\n            return this.get('scorableQuestions').isEvery('isAnswered');\n        }),\n\n        isWorksheetThatRequiresCompletionToScore: Ember.computed('worksheetGuid', 'eventTypeGuid', function () {\n            switch (this.get('worksheetGuid')) {\n                case socialHistory.alcoholUse:\n                case socialHistory.socialIsolation:\n                case socialHistory.exposureToViolence:\n                    return true;\n            }\n\n            return this.get('eventTypeGuid') === worksheetEventTypeGuids.depressionPhq2AssessmentWorksheetEventTypeGuid;\n        }),\n\n        scoreMethod: Ember.computed('worksheet.scoreMethod', 'worksheet.showScore', 'isDeclinedChecked', 'isPhq2Assessment', function () {\n            if (this.get('isDeclinedChecked') && this.get('isPhq2Assessment')) {\n                return false;\n            }\n            return this.get('worksheet.scoreMethod') !== 'none' && this.get('worksheet.showScore');\n        }),\n\n        score: Ember.computed('questions.@each.value', 'worksheet.scoreMethod', 'transcriptEncounterEvent.isNegated', 'worksheet.worksheetGuid', function () {\n            const questions = this.get('scorableQuestions');\n            let score = 0;\n\n            if (this.get('worksheet.scoreMethod') === 'sum') {\n                if (this.get('worksheet.worksheetGuid') === socialHistory.socialIsolation) {\n                    score = this._calculatesocialIsolationScore(questions, score);\n                } else if (!this.get('transcriptEncounterEvent.isNegated')) {\n                    questions.forEach(question => {\n                        if (question.get('isVisible') || question.get('isEnabled')) {\n                            if (this.get('isMidasAssessment') && !question.get('isRequired')) {\n                                return;\n                            }\n                            const value = Number(question.get('value'));\n\n                            if (value > 0) {\n                                score += value;\n                            }\n                        }\n                    });\n                }\n            }\n\n            return score;\n        }),\n\n        // scoreText property is used to override score and isComplete functions for social history worksheets\n        scoreText: Ember.computed('score', 'isQuestionnaireComplete', 'isWorksheetThatRequiresCompletionToScore', function () {\n            const hasNoScore = this.get('worksheetGuid') === socialHistory.stress || this.get('worksheetGuid') === socialHistory.physicalActivity;\n            if (hasNoScore) {\n                // prevent set score to be 0 as default\n                return null;\n            }\n            if (this.get('isWorksheetThatRequiresCompletionToScore')) {\n                // Some worksheets doesn't show score untill all questions are answered\n                return this.get('isQuestionnaireComplete') && !this.get('isDeclinedChecked') ? this.get('score').toString() : null;\n            }\n            return this.get('score');\n        }),\n\n        /**\n         * resultDescription property is used to override isComplete functions and generate resultSummary text for social history\n         * worksheets\n         */\n        resultDescription: Ember.computed('isQuestionnaireComplete', 'worksheet.showScore', 'isDeclinedChecked', function () {\n            const isComplete = this.get('isQuestionnaireComplete');\n            if (this.get('isDeclinedChecked')) {\n                return 'Patient declined to specify';\n            }\n            if (this.get('worksheetGuid') === socialHistory.physicalActivity && isComplete) {\n                return 'Recorded';\n            }\n            if (this.get('worksheetGuid') === socialHistory.stress && isComplete) {\n                return stressCategories[this.get('responses.firstObject.value')]['description'];\n            }\n            if (!isComplete) {\n                return 'Partially completed';\n            }\n        }),\n\n        instructionText: Ember.computed('worksheetGuid', function () {\n            const worksheetGuid = this.get('worksheetGuid');\n            const hasInstructionText = worksheetGuid === socialHistory.alcoholUse || worksheetGuid === socialHistory.socialIsolation || worksheetGuid === socialHistory.exposureToViolence;\n            if (hasInstructionText) {\n                return 'Complete questionnaire to generate a score.';\n            }\n            return null;\n        }),\n\n        comments: Ember.computed('transcriptEncounterEvents.@each.comments', {\n            get() {\n                return (this.get('transcriptEncounterEvents') || []).get('firstObject.comments');\n            },\n            set(key, value) {\n                (this.get('transcriptEncounterEvents') || []).setEach('comments', value);\n                return value;\n            }\n        }),\n\n        endDateTime: Ember.computed('endDateTimeUtc', {\n            get() {\n                const dateTimeUtc = this.get('endDateTimeUtc');\n                return Ember.isPresent(dateTimeUtc) ? moment.utc(dateTimeUtc).local().format('MM/DD/YYYY hh:mm A') : '';\n            },\n            set(key, value) {\n                const dateTimeUtc = Ember.isPresent(value) ? moment(value).utc().toISOString() : '';\n                (this.get('transcriptEncounterEvents') || []).setEach('endDateTimeUtc', dateTimeUtc);\n                return value;\n            }\n        }),\n\n        endDateTimeUtc: Ember.computed('transcriptEncounterEvents.@each.endDateTimeUtc', function () {\n            return (this.get('transcriptEncounterEvents') || []).get('firstObject.endDateTimeUtc');\n        }),\n\n        startDateTime: Ember.computed('startDateTimeUtc', {\n            get() {\n                const dateTimeUtc = this.get('startDateTimeUtc');\n                return Ember.isPresent(dateTimeUtc) ? moment.utc(dateTimeUtc).local().format('MM/DD/YYYY hh:mm A') : '';\n            },\n            set(key, value) {\n                const dateTimeUtc = Ember.isPresent(value) ? moment(value).utc().toISOString() : '';\n                (this.get('transcriptEncounterEvents') || []).setEach('startDateTimeUtc', dateTimeUtc);\n                return value;\n            }\n        }),\n\n        startDateTimeUtc: Ember.computed('transcriptEncounterEvents.@each.startDateTimeUtc', function () {\n            return (this.get('transcriptEncounterEvents') || []).get('firstObject.startDateTimeUtc');\n        }),\n\n        _calculatesocialIsolationScore(questions, score) {\n            const Q1 = questions.findBy('componentGuid', '5fa95ebe-b80a-480d-8e37-cd8d3b59f71e');\n            const Q2 = questions.findBy('componentGuid', '15beb0f7-83f9-44d0-928e-7081842c32b3');\n            const Q3 = questions.findBy('componentGuid', '3a3f517a-8b24-4267-a602-fb01b94c5c86');\n            let partialScore = Number(Q1.get('value')) + Number(Q2.get('value')) > 6 ? 1 : 0;\n            partialScore += Number(Q3.get('value')) > 4 ? 1 : 0;\n            const rest = questions.rejectBy('componentGuid', '5fa95ebe-b80a-480d-8e37-cd8d3b59f71e').rejectBy('componentGuid', '15beb0f7-83f9-44d0-928e-7081842c32b3').rejectBy('componentGuid', '3a3f517a-8b24-4267-a602-fb01b94c5c86');\n            rest.forEach(question => {\n                if (question.get('isVisible') || question.get('isEnabled')) {\n                    const value = Number(question.get('value'));\n                    if (value > 0) {\n                        score += value;\n                    }\n                }\n            });\n            score += partialScore;\n            return score;\n        },\n\n        revert() {\n            this.notifyPropertyChange('responses');\n            this._transcriptEncounterEventsObserver();\n        },\n\n        save() {\n            var transcriptEncounterEvents = this.get('transcriptEncounterEvents') || [];\n            this.set('responses', this.get('questions').mapBy('response'));\n            this.set('content.transcriptEncounterEvents', transcriptEncounterEvents.mapBy('content'));\n            this.set('calculatedScore', this.get('scoreText'));\n            this.set('resultSummary', this.get('resultDescription'));\n        },\n\n        _transcriptEncounterEventsObserver: Ember.on('init', Ember.observer('content.transcriptEncounterEvents.[]', function () {\n            const oldEvents = this.get('transcriptEncounterEvents');\n            let events = this.get('content.transcriptEncounterEvents') || [];\n\n            events = _transcriptEvent.default.wrap(events);\n\n            // Don't overwrite the existing transcriptEncounterEvents if they have already been set.\n            if (Ember.isPresent(oldEvents)) {\n                events.forEach(function (newEvent) {\n                    let transcriptEvent = oldEvents.findBy('eventType.eventTypeGuid', newEvent.get('eventType.eventTypeGuid'));\n\n                    if (transcriptEvent) {\n                        transcriptEvent.setProperties(newEvent.getProperties('transcriptEventGuid', 'status', 'isNegated', 'reasonCode'));\n                    }\n                });\n\n                return;\n            }\n\n            this.set('transcriptEncounterEvents', events);\n\n            events.setEach('worksheetResponses', this);\n        }))\n\n    });\n\n    WorksheetResponses.reopenClass({\n        wrap(object) {\n            if (object instanceof WorksheetResponses) {\n                return object;\n            } else {\n                return WorksheetResponses.create({\n                    content: object\n                });\n            }\n        },\n        createFromWorksheetAndEvent(worksheet, patientPracticeGuid, transcriptEvent) {\n            const content = {\n                worksheetGuid: worksheet.worksheetGuid,\n                patientGuid: patientPracticeGuid,\n                responses: worksheet.components.mapBy('componentGuid'),\n                worksheet: worksheet,\n                transcriptEncounterEvents: [transcriptEvent],\n                transcriptEncounterEventGuids: [Ember.get(transcriptEvent, 'transcriptEventGuid')]\n            };\n\n            return WorksheetResponses.create({\n                content: content\n            });\n        },\n        createFromWorksheet(worksheet, patientPracticeGuid) {\n            const content = {\n                worksheetGuid: worksheet.worksheetGuid,\n                patientGuid: patientPracticeGuid,\n                responses: worksheet.components.mapBy('componentGuid'),\n                worksheet: worksheet,\n                transcriptEncounterEvents: [],\n                transcriptEncounterEventGuids: [],\n                calculatedScore: '',\n                resultSummary: ''\n            };\n\n            return WorksheetResponses.create({\n                content: content\n            });\n        }\n    });\n\n    exports.default = WorksheetResponses;\n});","define('cute-cats-tanisha/templates/components/clinical/addon/repositories/assessments', ['exports', 'clinical/models/assessment', 'boot/config', 'boot/util/pf-server'], function (exports, _assessment, _config, _pfServer) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = {\n        saveAssessment(assessment) {\n            (true && !('You must pass an Assessment instance to the saveAssessment function') && Ember.assert(assessment instanceof _assessment.default, 'You must pass an Assessment instance to the saveAssessment function'));\n\n            let method = 'POST',\n                guid = assessment.get('worksheetInstanceGuid'),\n                url = _config.default.clinicalBaseURL + 'Worksheet';\n\n            if (Ember.isPresent(guid)) {\n                url += '/' + guid;\n                method = 'PUT';\n            }\n            return _pfServer.default.promise(url, method, assessment.toAssessmentObject()).then(data => {\n                assessment.set('worksheetInstanceGuid', data.worksheetInstanceGuid);\n                return assessment;\n            });\n        }\n    };\n});","define('cute-cats-tanisha/templates/components/clinical/addon/repositories/ccda-preview', ['exports', 'boot/config', 'boot/util/pf-server'], function (exports, _config, _pfServer) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = {\n        loadCcda(params) {\n            const isOutboundCcda = params.isOutbound;\n            let url = `${_config.default.clinicalDocumentBaseURL}/ccda/${params.documentGuid}`;\n\n            if (!isOutboundCcda) {\n                url = `${_config.default.defaultHost}${_config.default.clinicalDocumentBaseURL_v2}/incomingCcda/${params.documentGuid}`;\n            } else {\n                url = `${_config.default.defaultHost}${_config.default.clinicalDocumentBaseURL_v2}/ccda/${params.documentGuid}`;\n            }\n            if (params.threadGuid) {\n                url += `/${params.threadGuid}`;\n            }\n            if (params.patientPracticeGuid) {\n                url += `?patientPracticeGuid=${params.patientPracticeGuid}`;\n            }\n\n            return _pfServer.default.promise(url).then(data => {\n                const ccda = data.clinicalDocument || {};\n                const components = ccda.components || [];\n\n                components.forEach(component => {\n                    component.dataElement = 'ccda-component-' + component.title.replace(/\\W/g, '');\n                    component.dataElementToc = 'ccda-toc-component-' + component.title.replace(/\\W/g, '');\n                    component.dataElementClass = `.${component.dataElement}`;\n                    // For PF generated outbound ccdas, show all components by default\n                    component.isDisplayActive = component.isDisplayActive || isOutboundCcda;\n\n                    const sortingTemplateOid = component.sortingTemplateOid;\n                    component.sortingTemplateOid = sortingTemplateOid;\n                    component.isChild = Ember.isPresent(sortingTemplateOid) && sortingTemplateOid !== component.templateOid;\n                    if (component.isChild) {\n                        const parentComponent = components.findBy('templateOid', component.sortingTemplateOid);\n                        if (Ember.isPresent(parentComponent)) {\n                            component.isDisplayActive = parentComponent.isDisplayActive;\n                        }\n                    }\n                });\n\n                ccda.validationErrors = this.getValidationErrors(data.clinicalDocumentValidationError || null);\n                return ccda;\n            });\n        },\n        validateCcda(params) {\n            let url = `${_config.default.defaultHost}${_config.default.clinicalDocumentBaseURL_v2}/incomingCcdaValidation/${params.documentGuid}`;\n            if (params.threadGuid) {\n                url += `/${params.threadGuid}`;\n            }\n            if (params.patientPracticeGuid) {\n                url += `?patientPracticeGuid=${params.patientPracticeGuid}`;\n            }\n\n            return _pfServer.default.promise(url).then(data => {\n                return this.getValidationErrors(data);\n            });\n        },\n        getValidationErrors(data) {\n            if (Ember.isPresent(data) && Ember.isPresent(data.errorList)) {\n                data.errorList.forEach((errorItem, index) => {\n                    const errorTypeText = Ember.isPresent(errorItem.type) ? errorItem.type.toLowerCase() : '';\n                    let errorIndicator = errorTypeText.indexOf('error') > -1 ? 'Error' : 'Info';\n                    if (errorTypeText.indexOf('warning') > -1) {\n                        errorIndicator = 'Warning';\n                    }\n                    errorItem.dataElement = `ccda-error-${index}`;\n                    errorItem.dataElementClass = `.ccda-error-${index}`;\n                    errorItem.errorTypeIndicator = errorIndicator;\n                });\n            }\n            return data;\n        },\n        auditPrint(data) {\n            return _pfServer.default.promise(`${_config.default.clinicalDocumentBaseURL}/ccda/auditPrint`, 'POST', data);\n        }\n    };\n});","define('cute-cats-tanisha/templates/components/clinical/addon/repositories/devices', ['exports', 'boot/config', 'boot/util/pf-server'], function (exports, _config, _pfServer) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = {\n        loadDevices(patientGuid) {\n            return _pfServer.default.promise(`${_config.default.clinicalBaseURL}patients/${patientGuid}/healthcaredevices`).then(results => {\n                return results;\n            });\n        },\n\n        loadDevice(patientGuid, deviceGuid) {\n            return _pfServer.default.promise(`${_config.default.clinicalBaseURL}patients/${patientGuid}/healthcaredevices/${deviceGuid}`).then(result => {\n                return result;\n            });\n        },\n\n        saveDevice(device) {\n            let url = `${_config.default.clinicalBaseURL}patients/${device.patientPracticeGuid}/healthcaredevices`,\n                httpMethod = 'POST';\n\n            if (device.healthcareDeviceGuid) {\n                httpMethod = 'PUT';\n                url += `/${device.healthcareDeviceGuid}`;\n            }\n            return _pfServer.default.promise(url, httpMethod, device).then(result => {\n                return result;\n            });\n        },\n\n        deleteDevice(device) {\n            if (!device.healthcareDeviceGuid) {\n                return Ember.RSVP.reject('No device selected for deletion.');\n            }\n\n            return _pfServer.default.promise(`${_config.default.clinicalBaseURL}patients/${device.patientPracticeGuid}/healthcaredevices/${device.healthcareDeviceGuid}`, 'DELETE');\n        },\n\n        recordNoDevices(patientGuid, hasNoDevices) {\n            const method = hasNoDevices ? 'POST' : 'DELETE';\n            return _pfServer.default.promise(`${_config.default.clinicalBaseURL}patientConditions/${patientGuid}/NOKNOWNIMPLANTABLEDEVICES`, method);\n        },\n\n        getUdiData(device, patientPracticeGuid) {\n            const patientGuid = patientPracticeGuid || device.patientPracticeGuid;\n\n            return _pfServer.default.promise(`${_config.default.clinicalBaseURL}patients/${patientGuid}/healthcaredevices/populateUdiInfo`, 'POST', { uniqueDeviceIdentifier: device.udiInfo.uniqueDeviceIdentifier }).then(result => {\n                return result;\n            }, () => {\n                return null;\n            });\n        },\n\n        loadDevicesSorted(patientGuid) {\n            return this.loadDevices(patientGuid).then(result => {\n                return {\n                    noImplantableDevicesFlag: result.noImplantableDevicesFlag,\n                    Devices: result.Devices.sortBy('isActive', 'userEnteredInfo.userEnteredImplantDate').reverse()\n                };\n            });\n        }\n    };\n});","define('cute-cats-tanisha/templates/components/clinical/addon/repositories/diagnoses', ['exports', 'boot/config', 'boot/util/pf-server', 'clinical/repositories/patients', 'clinical/models/diagnosis', 'clinical/models/diagnoses-array', 'boot/models/session', 'clinical/helpers/user-session-cache', 'clinical/models/dx-search-result'], function (exports, _config, _pfServer, _patients, _diagnosis, _diagnosesArray, _session, _userSessionCache, _dxSearchResult) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = {\n        loadDiagnoses(patientGuid, options) {\n            return _patients.default.loadClinicalData(patientGuid, options).then(function (aggregate) {\n                return aggregate.diagnoses;\n            });\n        },\n\n        loadDiagnosis(patientGuid, diagnosisGuid) {\n            var _this = this,\n                diagnosesUrl = _config.default.clinicalBaseURL + 'patients/' + patientGuid + '/diagnoses/' + diagnosisGuid;\n            return _pfServer.default.promise(diagnosesUrl).then(function (diagnosis) {\n                return _this.getDiagnoses(patientGuid).then(function (diagnoses) {\n                    diagnosis = _diagnosis.default.wrap(diagnosis);\n                    diagnosis = diagnoses.replaceDiagnosis(diagnosis);\n                    diagnosis.set('isDirty', false);\n                    return diagnosis;\n                });\n            });\n        },\n\n        /**\n         * Saves the given diagnosis.\n         */\n        saveDiagnoses(diagnoses, transcriptGuid) {\n            const patientGuid = diagnoses.get('firstObject.patientPracticeGuid');\n            const baseUrl = `${_config.default.clinicalBaseURL}patients/${patientGuid}/diagnoses`;\n\n            return this._getNextSortOrder(patientGuid, transcriptGuid).then(nextSortOrder => {\n                return Ember.RSVP.all(diagnoses.map(diagnosis => {\n                    let url = baseUrl;\n                    let httpMethod = 'POST';\n\n                    if (!diagnosis.get('isDirty') && !diagnosis.get('isNew')) {\n                        return Ember.RSVP.resolve(diagnosis);\n                    }\n\n                    if (Ember.isEmpty(diagnosis.get('transcriptDiagnoses'))) {\n                        diagnosis.createDefaultTranscriptDiagnosis();\n                    }\n\n                    if (diagnosis.get('diagnosisGuid')) {\n                        httpMethod = 'PUT';\n                        url += `/${diagnosis.get('diagnosisGuid')}`;\n                    }\n                    if (transcriptGuid) {\n                        url += `?transcriptGuid=${transcriptGuid}`;\n                    }\n\n                    const transcriptDiagnosis = diagnosis.getTranscriptDiagnosis(transcriptGuid);\n                    if (transcriptGuid && transcriptDiagnosis && !transcriptDiagnosis.lastModifiedAt) {\n                        // Update the order for *new* transcriptDiagnoses\n                        Ember.set(transcriptDiagnosis, 'sortOrder', nextSortOrder++);\n                    }\n                    return _pfServer.default.promise(url, httpMethod, _diagnosis.default.unwrapAndRemoveLastModified(diagnosis)).then(savedDiagnosis => {\n                        diagnosis.set('content', _diagnosis.default.unwrap(_diagnosis.default.wrap(savedDiagnosis)));\n                        return this.getDiagnoses(patientGuid).then(allDiagnoses => {\n                            allDiagnoses.replaceDiagnosis(savedDiagnosis);\n                            diagnosis.set('isDirty', false);\n                            return diagnosis;\n                        });\n                    }).catch(err => {\n                        diagnosis.set('isDirty', true);\n                        throw err;\n                    });\n                }));\n            });\n        },\n        saveDiagnosis(diagnosis, transcriptGuid) {\n            return this.saveDiagnoses([diagnosis], transcriptGuid).then(function (diagnoses) {\n                return diagnoses.get('firstObject');\n            });\n        },\n        deleteDiagnosis(diagnosis, transcriptGuid) {\n            var _this = this,\n                patientGuid = diagnosis.get('patientPracticeGuid'),\n                diagnosisGuid = diagnosis.get('diagnosisGuid'),\n                url = _config.default.clinicalBaseURL + 'patients/' + patientGuid + '/diagnoses/' + diagnosisGuid;\n\n            if (transcriptGuid) {\n                if (diagnosis.get('encounterComments.length') > 1) {\n                    return Ember.RSVP.reject('Can\\'t delete a diagnosis with more than one Transcript Diagnosis');\n                }\n                // Tell the server we want to delete the encountersTranscriptdiagnosis along with the med\n                url += '?transcriptGuid=' + transcriptGuid;\n            }\n\n            if (!diagnosisGuid) {\n                diagnosis.set('isDirty', false);\n                // If this isn't saved, then we have nothing to do here.\n                return Ember.RSVP.resolve(diagnosis);\n            }\n\n            return _pfServer.default.promise(url, 'DELETE').then(function () {\n                return _this.getDiagnoses(patientGuid).then(function (diagnoses) {\n                    diagnosis.set('isDirty', false);\n                    diagnoses.removeDiagnosis(diagnosis);\n                });\n            });\n        },\n\n        /***\n         * Saves a TranscriptDiagnosis\n         * If a TranscriptDiagnosis already exists for the given transcriptGuid, it updates the comment\n         * only if it's different. Otherwise it won't call the server.\n         * @param {Diagnosis} diagnosis to be attached\n         * @param transcriptGuid optional - leave as null to update the default transcriptDiagnosis\n         * @param {string} comment optional\n         * @returns {Diagnosis Promise} with updated TranscriptDiagnoses.\n         */\n        saveTranscriptDiagnosis(diagnosis, transcriptGuid, comment) {\n            var patientGuid = diagnosis.get('patientPracticeGuid');\n            return this._getNextSortOrder(patientGuid, transcriptGuid).then(function (nextSortOrder) {\n                var diagnosisGuid = diagnosis.get('diagnosisGuid'),\n                    existingTranscriptDiagnosis = diagnosis.getTranscriptDiagnosis(transcriptGuid),\n                    url = _config.default.clinicalBaseURL + 'patients/' + patientGuid + '/diagnoses/' + diagnosisGuid + '/transcriptDiagnoses',\n                    data = { transcriptGuid: transcriptGuid, comment: comment, sortOrder: nextSortOrder },\n                    method = 'POST';\n                if (!diagnosisGuid) {\n                    Ember.RSVP.reject('Can\\'t attach an un-saved diagnosis to an encounter');\n                }\n                // TODO: consider removing PUT, we either add or remove. Comments are updated as part of the Dx only\n                if (existingTranscriptDiagnosis && existingTranscriptDiagnosis.lastModifiedAt) {\n                    method = 'PUT';\n                    if (existingTranscriptDiagnosis.comment === comment) {\n                        // No need to save if the comment didn't change\n                        Ember.RSVP.resolve(diagnosis);\n                    }\n                }\n                return _pfServer.default.promise(url, method, data).then(function (transcriptDiagnosis) {\n                    var transcriptDiagnoses = diagnosis.get('transcriptDiagnoses');\n                    if (existingTranscriptDiagnosis) {\n                        Ember.setProperties(existingTranscriptDiagnosis, transcriptDiagnosis);\n                    } else {\n                        transcriptDiagnoses.pushObject(transcriptDiagnosis);\n                    }\n                    return diagnosis;\n                });\n            });\n        },\n\n        addDiagnosesToEncounter(patientGuid, diagnosesToAdd, transcriptGuid) {\n            return this._getNextSortOrder(patientGuid, transcriptGuid).then(function (nextSortOrder) {\n                var baseUrl = _config.default.clinicalBaseURL + 'patients/' + patientGuid + '/diagnoses/',\n                    data = { transcriptGuid: transcriptGuid },\n                    promises;\n                promises = diagnosesToAdd.map(function (diagnosis) {\n                    var url = baseUrl + diagnosis.get('diagnosisGuid') + '/transcriptDiagnoses';\n                    data.sortOrder = nextSortOrder++;\n                    return _pfServer.default.promise(url, 'POST', data).then(function (transcriptDiagnosis) {\n                        return { transcriptDiagnosis: transcriptDiagnosis, diagnosis: diagnosis };\n                    });\n                });\n                return Ember.RSVP.all(promises).then(function (array) {\n                    array.forEach(function (hash) {\n                        // NOTE: we're doing this after *all* promises are resolved to avoid multiple updates to the objects\n                        // That cause multiple renders. Need to treat this as a single operation.\n                        hash.diagnosis.get('transcriptDiagnoses').pushObject(hash.transcriptDiagnosis);\n                    });\n                });\n            });\n        },\n\n        /***\n         * Deletes the TranscriptDiagnosis for the given transcriptGuid\n         * @param {Diagnosis} diagnosis to be attached\n         * @param transcriptGuid optional - leave as null to delete the default transcriptDiagnosis\n         * @returns {Diagnosis Promise} with updated TranscriptDiagnoses.\n         */\n        deleteTranscriptDiagnosis(diagnosis, transcriptGuid) {\n            var patientGuid = diagnosis.get('patientPracticeGuid'),\n                diagnosisGuid = diagnosis.get('diagnosisGuid'),\n                existingTranscriptDiagnosis = diagnosis.getTranscriptDiagnosis(transcriptGuid),\n                url = _config.default.clinicalBaseURL + 'patients/' + patientGuid + '/diagnoses/' + diagnosisGuid + '/transcriptDiagnoses/' + transcriptGuid,\n                deletePromise = Ember.RSVP.resolve(diagnosis);\n\n            if (diagnosis.get('transcriptDiagnoses').length === 1 && existingTranscriptDiagnosis) {\n                return this.deleteDiagnosis(diagnosis, transcriptGuid);\n            }\n            // Only call server if transcriptDiagnosis is persisted.\n            if (existingTranscriptDiagnosis && existingTranscriptDiagnosis.lastModifiedAt) {\n                deletePromise = _pfServer.default.promise(url, 'DELETE');\n            }\n            return deletePromise.then(function () {\n                var transcriptDiagnoses = diagnosis.get('transcriptDiagnoses');\n                transcriptDiagnoses.removeObject(existingTranscriptDiagnosis);\n                return diagnosis;\n            });\n        },\n\n        reorderTranscriptDiagnosis(transcriptGuid, sortedDiagnoses) {\n            var diagnosisGuids = sortedDiagnoses.mapBy('diagnosisGuid'),\n                patientGuid = sortedDiagnoses[0].get('patientPracticeGuid'),\n                url = _config.default.clinicalBaseURL + 'patients/' + patientGuid + '/encounters/' + transcriptGuid + '/diagnoses/order'; // TODO: consider changing for sort instead of order\n            return _pfServer.default.promise(url, 'PUT', diagnosisGuids);\n        },\n\n        recordNoKnownDiagnoses(patientGuid, isNoKnownStatus) {\n            var methodType = isNoKnownStatus ? 'POST' : 'DELETE',\n                patientConditionsUrl = _config.default.clinicalBaseURL + 'PatientConditions/' + patientGuid + '/NoKnownDiagnoses';\n            return _pfServer.default.promise(patientConditionsUrl, methodType);\n        },\n\n        loadFrequentDiagnoses: (0, _userSessionCache.default)('loadFrequentDiagnoses', function () {\n            var url = _config.default.clinicalBaseURL + 'providers/' + _session.default.get('providerGuid') + '/frequentDiagnoses',\n                usefulProperties = ['code', 'name', 'diagnosisCodes', 'frequency'];\n\n            return _pfServer.default.promise(url).then(function (data) {\n                return data.map(function (frequentDiagnosis) {\n                    if (Ember.isEmpty(frequentDiagnosis.diagnosisCodes)) {\n                        // HACK: recreate the diagnosisCodes based on top-level data since the server isn't sending them\n                        frequentDiagnosis.codeSystem = 'Icd9';\n                        frequentDiagnosis.diagnosisCodes = [{\n                            code: frequentDiagnosis.code,\n                            codeSystem: frequentDiagnosis.codeSystem,\n                            description: frequentDiagnosis.name\n                        }];\n                    }\n                    frequentDiagnosis = Ember.getProperties(frequentDiagnosis, usefulProperties);\n                    frequentDiagnosis = _diagnosis.default.wrap(frequentDiagnosis);\n                    return frequentDiagnosis;\n                }).sort(function (a, b) {\n                    // Sorts in reverse order\n                    return b.get('frequency') - a.get('frequency');\n                });\n            });\n        }),\n\n        /***\n         * Gets the patient diagnoses from cache or an empty DiagnosesArray\n         */\n        getDiagnoses(patientGuid) {\n            return _patients.default.getClinicalData(patientGuid).then(function (aggregate) {\n                return aggregate.diagnoses;\n            });\n        },\n\n        _getNextSortOrder(patientGuid, transcriptGuid) {\n            return this.getDiagnoses(patientGuid).then(diagnoses => {\n                const encounterDiagnoses = diagnoses.getEncounterDiagnoses(transcriptGuid);\n                const lastTranscriptDx = encounterDiagnoses.sortBy('transcriptDiagnosis.sortOrder').get('lastObject.transcriptDiagnosis');\n                const sortOrder = lastTranscriptDx ? lastTranscriptDx.sortOrder + 1 : 0;\n                return sortOrder;\n            });\n        },\n\n        search(filter, requiredsystems, optionalsystems) {\n            filter = filter || '';\n            requiredsystems = requiredsystems || ['icd9'];\n            optionalsystems = optionalsystems || ['icd10', 'snomed'];\n            filter = window.encodeURIComponent(filter);\n\n            if (filter.length < 2) {\n                return Ember.RSVP.resolve([]);\n            }\n\n            let url = `${_config.default.clinicalBaseURL_v3}diagnosis/search?searchTerm=${filter}`; // '&optionalsystem=icd10&requiredsystem=icd9&optionalsystem=snomed';\n            requiredsystems.forEach(function (requiredsystem) {\n                url += '&requiredsystem=' + requiredsystem;\n            });\n            optionalsystems.forEach(function (optionalsystem) {\n                url += '&optionalsystem=' + optionalsystem;\n            });\n\n            return _pfServer.default.promise(url).then(function (result) {\n                return result.diagnosesSearch.map(function (dxSearchResult) {\n                    return _dxSearchResult.default.create(dxSearchResult);\n                });\n            });\n        },\n\n        searchForFamilyHistory(filter = '', relativesList = []) {\n            const deepCloneFlag = true;\n            const isSortedFlag = false;\n            filter = window.encodeURIComponent(filter);\n            if (filter.length < 2) {\n                return Ember.RSVP.resolve([]);\n            }\n\n            const url = `${_config.default.clinicalBaseURL_v3}diagnosis/typeSearch/?searchTerm=${filter}&familyHealthHistorySearch=true`;\n            return _pfServer.default.promise(url).then(searchResults => {\n                // TODO: add Family diagnosis\n                searchResults.forEach(diagnosis => {\n                    diagnosis.diagnosisType = 'Other diagnosis';\n                });\n                let familyDiagnoses = relativesList.map(relativeWrapper => {\n                    const relative = Ember.get(relativeWrapper, 'relativeGuid') ? relativeWrapper : Ember.get(relativeWrapper, 'relative');\n                    return (Ember.get(relative, 'observations') || []).map(observation => {\n                        const clonedDiagnosis = _.clone(observation.diagnosis, deepCloneFlag);\n                        clonedDiagnosis.diagnosisType = 'Family diagnosis';\n                        return clonedDiagnosis;\n                    });\n                });\n                familyDiagnoses = _.flatten(familyDiagnoses);\n                // NOTE: I know this is old-school, but it maintains backwards compat with FamilyHealthHistory's pre ICD-10 implementation\n                familyDiagnoses = _.unique(familyDiagnoses, isSortedFlag, diagnoses => diagnoses.snomedCode);\n                return _.union(familyDiagnoses, searchResults);\n            });\n        },\n\n        /***\n         * Given a diagnosis model it returns a DiagnosesArray of related ICD-10 diagnoses\n         * It does a search based on the specificied searchByField (defaults to icd9Description),\n         * with icd10 and icd9 as required codes, then filters\n         * client side to only use the results that match the icd9 code, extracts the ICD-10s from\n         * those results and removes dups.\n         **/\n        loadIcd10RelatedDiagnoses(diagnosis, searchByField) {\n            if (!diagnosis.get('needsIcd10Refinement')) {\n                return Ember.RSVP.resolve([]);\n            }\n            var DEFAULT_SEARCH_BY_FIELD = 'icd9Code',\n                searchTerm;\n            searchByField = searchByField || DEFAULT_SEARCH_BY_FIELD;\n            searchTerm = diagnosis.get(searchByField) || diagnosis.get(DEFAULT_SEARCH_BY_FIELD) || diagnosis.get('name');\n            return this.search(searchTerm, ['icd10', 'icd9'], []).then(function (searchResults) {\n                var shallowFlatFlag = true,\n                    sortFlag = false,\n                    icd9Code = diagnosis.get('icd9Code'),\n                    resultsForThisIcd9 = searchResults,\n                    diagnosisCodesForThisIcd9,\n                    icd10CodesForThisIcd9,\n                    uniqueIcd10Codes,\n                    icd10Diagnoses,\n                    icd10DiagnosesArray;\n\n                if (icd9Code) {\n                    resultsForThisIcd9 = searchResults.filter(function (searchResult) {\n                        // Filter by icd9\n                        const list = _.flatten(searchResult.get('icd9Codes')).mapBy('code');\n                        if (list.includes(icd9Code)) {\n                            return true;\n                        }\n                        /*\n                            Check for trailing zeros where simple string comparison won't work (ex. 60.0 is equal to 60.00)\n                            Since ICD-9 codes can start with a V or E we can't just use parseFloat for comparison\n                        */\n                        for (let i = 0; i < list.length; i++) {\n                            const currentCode = list[i];\n                            if (currentCode.length !== icd9Code.length && currentCode.indexOf('.') > 0 && icd9Code.indexOf('.') > 0) {\n                                const longerCode = currentCode.length > icd9Code.length ? currentCode : icd9Code;\n                                const shorterCode = longerCode === currentCode ? icd9Code : currentCode;\n\n                                if (longerCode.match('^' + shorterCode) && parseInt(longerCode.substring(shorterCode.length)) === 0) {\n                                    return true;\n                                }\n                            }\n                        }\n                        return false;\n                    });\n                }\n                diagnosisCodesForThisIcd9 = _.flatten(resultsForThisIcd9.mapBy('diagnosisCodes'), shallowFlatFlag);\n                icd10CodesForThisIcd9 = diagnosisCodesForThisIcd9.filter(function (codeObject) {\n                    return codeObject.isEvery('codeSystem', 'ICD10');\n                });\n                uniqueIcd10Codes = _.unique(icd10CodesForThisIcd9, sortFlag, function (codes) {\n                    // Removes dups considering all the sets of combinatory codes as unique\n                    return codes.mapBy('code').sort().join('&');\n                });\n                icd10Diagnoses = uniqueIcd10Codes.map(function (diagnosisCodes) {\n                    return _diagnosis.default.wrap({\n                        diagnosisCodes: diagnosisCodes\n                    });\n                });\n                icd10DiagnosesArray = _diagnosesArray.default.createArray(icd10Diagnoses);\n                return icd10DiagnosesArray;\n            });\n        },\n\n        searchForIcd10Diagnoses(searchTerm) {\n            return this.search(searchTerm, ['icd10'], ['snomed']).then(searchResults => {\n                const resultsCodes = _.flatten(searchResults.mapBy('diagnosisCodes'), true);\n                const uniqueCodes = _.unique(resultsCodes, false, function (codes) {\n                    // Removes dups considering all the sets of combinatory codes as unique\n                    return codes.mapBy('code').sort().join('&');\n                });\n                const diagnoses = uniqueCodes.map(function (diagnosisCodes) {\n                    return _diagnosis.default.wrap({ diagnosisCodes });\n                });\n                const diagnosesArray = _diagnosesArray.default.createArray(diagnoses);\n                return diagnosesArray;\n            });\n        },\n\n        mapSaveErrorToAction(error, diagnosis) {\n            if (error.status === 404 && error.responseJSON && error.responseJSON.message && error.responseJSON.message.indexOf('Patient diagnosis not found') >= 0) {\n                toastr.error('The diagnosis has been deleted');\n                if (diagnosis) {\n                    this.getDiagnoses(diagnosis.get('patientPracticeGuid')).then(diagnoses => diagnoses.removeDiagnosis(diagnosis));\n                }\n                return 'close';\n            }\n            return null;\n        }\n    };\n});","define('cute-cats-tanisha/templates/components/clinical/addon/repositories/family-health-history', ['exports', 'boot/config', 'boot/util/pf-server', 'clinical/models/familyhealthhistory/relative'], function (exports, _config, _pfServer, _relative) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = {\n        loadRelatives(store, patientPracticeGuid) {\n            return store.query('relationshiptype', { id: patientPracticeGuid }).then(function (relationshipTypes) {\n                // Now get the Family health history now that you have all the relationshipType loaded.\n                return _pfServer.default.promise(this._getBaseUrl(patientPracticeGuid)).then(function (data) {\n                    return data.relatives.map(function (relative) {\n                        var selectedRelativeType = relationshipTypes.findBy('id', '' + relative.relationshipType.id);\n\n                        // Hydrate the relationshipType manually\n                        if (selectedRelativeType) {\n                            relative.relationshipType = selectedRelativeType.serialize({ includeId: true });\n                        }\n\n                        relative.observations = data.observations.filterBy('relative.relativeGuid', relative.relativeGuid).map(function (observation) {\n                            observation.diagnosis = data.diagnoses.findBy('diagnosisGuid', observation.diagnosis.diagnosisGuid);\n                            return observation;\n                        });\n                        return _relative.default.create(relative);\n                    });\n                });\n            }.bind(this));\n        },\n        loadRelativesAndRelationshipTypes(store, patientPracticeGuid) {\n            return Ember.RSVP.hash({\n                relationshipTypes: store.query('relationshiptype', { id: patientPracticeGuid }),\n                data: _pfServer.default.promise(this._getBaseUrl(patientPracticeGuid))\n            }).then(({ relationshipTypes, data }) => ({\n                relatives: this.processRelativeResponse(data, relationshipTypes),\n                relationshipTypes\n            }));\n        },\n        reloadRelatives(patientPracticeGuid, relationshipTypes) {\n            return _pfServer.default.promise(this._getBaseUrl(patientPracticeGuid)).then(data => this.processRelativeResponse(data, relationshipTypes));\n        },\n        processRelativeResponse(data, relationshipTypes) {\n            return data.relatives.map(relative => {\n                const selectedRelativeType = relationshipTypes.findBy('id', `${relative.relationshipType.id}`);\n                // Hydrate the relationshipType manually\n                if (selectedRelativeType) {\n                    relative.relationshipType = selectedRelativeType.serialize({ includeId: true });\n                }\n\n                relative.observations = data.observations.filterBy('relative.relativeGuid', relative.relativeGuid).map(observation => {\n                    observation.diagnosis = data.diagnoses.findBy('diagnosisGuid', observation.diagnosis.diagnosisGuid);\n                    return observation;\n                });\n                return _relative.default.create(relative);\n            });\n        },\n        loadConditions(patientPracticeGuid) {\n            return _pfServer.default.promise(`${this._getBaseUrl(patientPracticeGuid)}/conditions`);\n        },\n        saveCondition(condition, patientPracticeGuid) {\n            const url = `${this._getBaseUrl(patientPracticeGuid)}/conditions`;\n            return _pfServer.default.promise(url, 'POST', condition);\n        },\n        _getBaseUrl(patientPracticeGuid) {\n            return `${_config.default.clinicalBaseURL}FamilyHealthHistory/${patientPracticeGuid}`;\n        },\n        saveRelative(relative) {\n            const { relativeGuid, patientPracticeGuid } = Ember.getProperties(relative, 'relativeGuid', 'patientPracticeGuid');\n            const method = relativeGuid ? 'PUT' : 'POST';\n            const url = `${this._getBaseUrl(patientPracticeGuid)}/relatives`;\n            return _pfServer.default.promise(url, method, relative);\n        },\n        deleteRelative(relative) {\n            const { relativeGuid, patientPracticeGuid } = Ember.getProperties(relative, 'relativeGuid', 'patientPracticeGuid');\n            const url = `${this._getBaseUrl(patientPracticeGuid)}/relatives/${relativeGuid}`;\n            return _pfServer.default.promise(url, 'DELETE', relative);\n        },\n        saveObservation(observation) {\n            const { patientPracticeGuid, observationGuid } = Ember.getProperties(observation, 'patientPracticeGuid', 'observationGuid');\n\n            let url = `${this._getBaseUrl(patientPracticeGuid)}/observations`;\n            let method = 'POST';\n\n            if (observationGuid) {\n                method = 'PUT';\n                url += `/${observationGuid}`;\n            }\n\n            return _pfServer.default.promise(url, method, observation);\n        },\n        deleteObservation(observation) {\n            const { patientPracticeGuid, observationGuid } = Ember.getProperties(observation, 'patientPracticeGuid', 'observationGuid');\n            const url = `${this._getBaseUrl(patientPracticeGuid)}/observations/${observationGuid}`;\n            return _pfServer.default.promise(url, 'DELETE', observation);\n        }\n    };\n});","define('cute-cats-tanisha/templates/components/clinical/addon/repositories/immunization-registry', ['exports', 'boot/config', 'boot/util/pf-server', 'boot/models/session', 'common/helpers/validation', 'ember-lgtm/mixins/validatable'], function (exports, _config, _pfServer, _session, _validation, _validatable) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    var downloadPropertyMap = {\n        '20': 'defaultRegistryId',\n        '21': 'defaultLogin',\n        '22': 'defaultRegionCode'\n    },\n        validatableRegistryProperty = Ember.ObjectProxy.extend(_validatable.default, {\n        validator: _validation.default.validator().validates('value').using(function (value, attr, object) {\n            if (object.get('isRequired')) {\n                return !Ember.isEmpty(value);\n            }\n            return true;\n        }, 'Required').build()\n    });\n\n    /***\n     * The ImmunizationRegistryRepository manages the data access for the domain of\n     * immunization transmissions. This extends to registries, registryProperties,\n     * electronic registrations, user download preferences and transmissions\n     */\n    exports.default = {\n        loadRegistries(store) {\n            return store.findAll('immunization-registry');\n        },\n        loadActiveRegistries(store) {\n            return this.loadRegistries(store).then(registries => {\n                return registries.filterBy('isActive');\n            });\n        },\n        loadRegistryConnections(store) {\n            return store.findAll('immunization-registry-connection');\n        },\n        /***\n         * Loads all the registry properties for a given registryId\n         * @param registryId\n         * @return a promise array that will get the properties or an empty array\n         *      if the registryId isn't provided\n         */\n        loadRegistryProperties(registryId, store) {\n            if (registryId) {\n                return store.query('immunization-registry-property', { immunizationRegistryGuid: registryId }).then(registryProperties => {\n                    return registryProperties.map(function (registryProperty) {\n                        return validatableRegistryProperty.create({ content: registryProperty });\n                    });\n                });\n            }\n\n            return [];\n        },\n\n        loadDownloadPreferences(store) {\n            var hash = {},\n                query = {\n                type: 'provider',\n                ids: Object.keys(downloadPropertyMap)\n            };\n\n            return store.query('individualDetail', query).then(function (data) {\n                var promises = data.map(function (item) {\n                    return item.get('individualValues').then(function (individualValues) {\n                        var propertyName = downloadPropertyMap[item.id],\n                            value = individualValues.objectAt(0).get('value');\n                        hash[propertyName] = value;\n                    });\n                });\n                return Ember.RSVP.all(promises).then(function () {\n                    return hash;\n                });\n            });\n        },\n\n        saveDownloadPreferences(hash) {\n            /* TODO: I don't believe there is a global preferences repository, however there should\n                be, and this should be there */\n            var url = _config.default.practiceBaseURL + 'preferences/provider',\n                content = {\n                'preferences': {\n                    'Immunizations.Registry.RegistryId': hash.defaultRegistryId,\n                    'Immunizations.Registry.Login': hash.defaultLogin\n                }\n            };\n            return _pfServer.default.promise(url, 'POST', content);\n        },\n\n        activateConnection(store, connectionGuid) {\n            const url = `${_config.default.defaultHost}/${_config.default.immunizationNamespace}/immunizationRegistryConnection/${connectionGuid}/activate`;\n\n            return _pfServer.default.promise(url, 'PUT').then(() => {\n                return store.findAll('immunization-registry-connection', { reload: true });\n            });\n        },\n        registerConnection(store, connectionGuid) {\n            const url = `${_config.default.defaultHost}/${_config.default.immunizationNamespace}/immunizationRegistryConnection/${connectionGuid}/register`;\n\n            return _pfServer.default.promise(url, 'PUT').then(() => {\n                return store.findAll('immunization-registry-connection', { reload: true });\n            });\n        },\n\n        loadImmunizationRecord(registry, patientPracticeGuid, callback) {\n            let url = `${_config.default.defaultHost}/${_config.default.immunizationV2Namespace}/patients/${patientPracticeGuid}/downloadHl7document/${registry.id}/${_session.default.get('facilityGuid')}/`;\n\n            if (!Ember.isEmpty(registry.registryProvider)) {\n                url += registry.registryProvider;\n            }\n\n            // ...HL7 cannot be parsed as JSON, so have to bypass PFServer\n            return $.get(url, callback);\n        },\n\n        transmitImmunizationV2(patientPracticeGuid) {\n            const immunizationTransmissionUrl = `${_config.default.defaultHost}/${_config.default.immunizationV2Namespace}/patients/${patientPracticeGuid}/transmit`;\n            return _pfServer.default.promise(immunizationTransmissionUrl, 'POST');\n        },\n\n        getTransmissionErrors(patientImmunizations) {\n            const groupedTransmissionHistoryErrors = patientImmunizations.map(group => (group.get('vaccinations') || []).filter(vaccination => vaccination.get('immunizationTransmissionHistorySummary.transmissionErrorMessage')).map(vaccination => ({\n                errorMessage: vaccination.get('immunizationTransmissionHistorySummary.transmissionErrorMessage'),\n                date: moment(vaccination.get('immunizationTransmissionHistorySummary.lastModifiedDateTimeUtc'))\n            })));\n\n            const transmissionHistoryErrors = _.flatten(groupedTransmissionHistoryErrors).sortBy('date');\n\n            return _.groupBy(transmissionHistoryErrors, error => error.date.format('MM/DD/YYYY'));\n        },\n\n        getLastPatientTransmissionDate(patientImmunizations) {\n            const transmissionDates = patientImmunizations.map(immunization => {\n                const lastTransmissionDateUtc = immunization.get('lastTransmissionDateUtc');\n\n                return Ember.isPresent(lastTransmissionDateUtc) ? {\n                    transmissionDateUtc: lastTransmissionDateUtc\n                } : null;\n            }).compact();\n\n            if (Ember.isPresent(transmissionDates)) {\n                const transmissionDatesSorted = transmissionDates.sortBy('transmissionDateUtc');\n                return moment.utc(transmissionDatesSorted.get('lastObject.transmissionDateUtc')).format('MM/DD/YY');\n            }\n            return null;\n        }\n    };\n});","define('cute-cats-tanisha/templates/components/clinical/addon/repositories/immunization', ['exports', 'boot/config', 'boot/util/pf-server'], function (exports, _config, _pfServer) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = {\n        getPatientVaccinationsDeprecated(patientImmunizations, providers, registryConnections, registries) {\n            var isElectronicTransmission = false,\n                vaccinations;\n\n            if (Ember.isEmpty(providers) || Ember.isEmpty(patientImmunizations)) {\n                return [];\n            } else {\n                if (Ember.isPresent(registryConnections)) {\n                    isElectronicTransmission = registryConnections.isAny('immunizationRegistryConnectionStatus', 'Successfully activated');\n                }\n\n                vaccinations = _.flatten(patientImmunizations.filterBy('hasVaccinations').map(immunization => {\n                    return immunization.get('vaccinations').map(vaccination => {\n                        var administeredByProviderName = this.getAdministeringProviderName(vaccination, providers);\n\n                        vaccination.set('description', this.getSourceDescription(vaccination, administeredByProviderName));\n\n                        return Ember.ObjectProxy.create({\n                            content: vaccination,\n                            administeredByProviderName: administeredByProviderName,\n                            hasAllRegistryFields: this.checkRegistryFields(vaccination, providers, isElectronicTransmission),\n                            isRegistryPopoverVisible: false,\n                            registryDescription: this.getVaccineRegistryDescription(vaccination, registryConnections, registries)\n                        });\n                    });\n                }));\n\n                vaccinations = _.unique(vaccinations, vaccination => {\n                    return vaccination.get('vaccinationGuid');\n                });\n\n                return vaccinations;\n            }\n        },\n\n        getPatientVaccinations(patientImmunizations, providers, registryConnections, registries) {\n            if (Ember.isEmpty(providers) || Ember.isEmpty(patientImmunizations)) {\n                return [];\n            }\n\n            const isElectronicTransmission = Ember.isPresent(registryConnections) && registryConnections.isAny('immunizationRegistryConnectionStatus', 'Successfully activated');\n\n            return (patientImmunizations || []).filterBy('hasVaccinations').sortBy('name').map(immunization => {\n                Ember.set(immunization, 'vaccinations', Ember.get(immunization, 'vaccinations').map(vaccination => {\n                    const administeredByProviderName = this.getAdministeringProviderName(vaccination, providers);\n                    Ember.setProperties(vaccination, {\n                        administeredByProviderName,\n                        description: this.getSourceDescription(vaccination, administeredByProviderName),\n                        hasAllRegistryFields: this.checkRegistryFields(vaccination, providers, isElectronicTransmission),\n                        registryDescription: this.getVaccineRegistryDescription(vaccination, registryConnections, registries)\n                    });\n                    return vaccination;\n                }).sortBy('vaccinationDate'));\n                return immunization;\n            });\n        },\n\n        getPatientVaccinationAlerts(patientPracticeGuid) {\n            const baseUrl = _config.default.cdsAlertsV2Url;\n            const collectionKey = 'CDSVaccines';\n            const calculationSource = 'vaccines';\n            const url = `${baseUrl}${patientPracticeGuid}?collectionKey=${collectionKey}&calculationSource=${calculationSource}`;\n\n            return _pfServer.default.promise(url, 'GET').then(data => {\n                return data;\n            });\n        },\n\n        getTransmittablePatientVaccinations(patientImmunizations, registryConnections) {\n            if (Ember.isEmpty(patientImmunizations) || Ember.isEmpty(registryConnections)) {\n                return [];\n            }\n            const connectedFacilityGuids = registryConnections.filterBy('immunizationRegistryConnectionStatus', 'Successfully activated').mapBy('facilityGuid');\n            if (Ember.isEmpty(connectedFacilityGuids)) {\n                return [];\n            }\n\n            return _.flatten(patientImmunizations.filterBy('hasVaccinations').map(immunization => {\n                return Ember.get(immunization, 'vaccinations').filter(vaccination => {\n                    return Ember.get(vaccination, 'source.sourceType') === 'Historical' || connectedFacilityGuids.includes(Ember.get(vaccination, 'facilityGuid'));\n                });\n            }));\n        },\n\n        checkRegistryFields(vaccination, providers, isElectronicTransmission) {\n            if (isElectronicTransmission && Ember.get(vaccination, 'source.isAdministered')) {\n                const administeredByProvider = (providers || []).findBy('providerGuid', Ember.get(vaccination, 'administeredByProviderGuid'));\n                const administeredByProviderNPI = administeredByProvider ? Ember.get(administeredByProvider, 'npi') : null;\n                const orderingProvider = (providers || []).findBy('providerGuid', Ember.get(vaccination, 'orderingProviderGuid'));\n                const orderingProviderNPI = orderingProvider ? Ember.get(orderingProvider, 'npi') : null;\n                const registryFields = Ember.getProperties(vaccination, ['immunizationRegistryNotificationPreference', 'route', 'site', 'vfcStatus', 'visVersionDate', 'visConceptGuidList']);\n\n                return (administeredByProviderNPI || orderingProviderNPI) && Ember.isPresent(registryFields.route) && Ember.isPresent(registryFields.site) && Ember.isPresent(registryFields.vfcStatus) && (Ember.isPresent(registryFields.visVersionDate) || Ember.isPresent(registryFields.visConceptGuidList));\n            }\n            return true;\n        },\n\n        getAdministeringProviderName(vaccination, providers) {\n            if (Ember.get(vaccination, 'source.isAdministered')) {\n                const providerMatch = (providers || []).findBy('providerGuid', Ember.get(vaccination, 'administeredByProviderGuid'));\n                return providerMatch ? Ember.get(providerMatch, 'fullProviderName') : 'Unknown';\n            }\n            return null;\n        },\n\n        getSourceDescription(vaccination, providerName) {\n            if (Ember.get(vaccination, 'source.isAdministered')) {\n                return `Administered by ${providerName}`;\n            }\n            return Ember.get(vaccination, 'source.vaccinationSourceName');\n        },\n\n        getVaccineRegistryDescription(vaccination, registryConnections, registries) {\n            const facilityGuid = Ember.get(vaccination, 'facilityGuid');\n\n            if (Ember.isPresent(registryConnections)) {\n                if (Ember.isPresent(facilityGuid)) {\n                    const connectionMatch = (registryConnections || []).findBy('facilityGuid', facilityGuid);\n\n                    if (Ember.isPresent(connectionMatch) && Ember.get(connectionMatch, 'immunizationRegistryConnectionStatus') === 'Successfully activated') {\n                        if (Ember.isPresent(Ember.get(vaccination, 'immunizationTransmissionHistorySummary')) && Ember.isPresent(registries)) {\n                            const registryMatch = registries.findBy('immunizationRegistryGuid', connectionMatch.get('immunizationRegistryGuid'));\n                            return registryMatch ? Ember.get(registryMatch, 'displayName') : 'Registry not connected';\n                        }\n                        return 'Ready to transmit';\n                    }\n                    return 'Registry not connected';\n                }\n                return 'Facility unknown';\n            }\n            return null;\n        }\n    };\n});","define('cute-cats-tanisha/templates/components/clinical/addon/repositories/interaction-alerts', ['exports', 'boot/config', 'boot/util/pf-server', 'clinical/repositories/medications'], function (exports, _config, _pfServer, _medications) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    const SEVERITY_SORT_MAP = {\n        major: 0,\n        severe: 1,\n        duplicatetherapy: 1,\n        moderate: 2,\n        mild: 3,\n        'very mild': 4,\n        minor: 5,\n        unknown: 6\n    };\n\n    exports.default = {\n        loadInteractionAlerts(patientGuid, medicationObjectOrArray) {\n            const url = `${_config.default.clinicalBaseURL_v2}Interactions/${patientGuid}?duplicateTherapiesCheckEnabled=true`;\n            const medicationsArray = Ember.makeArray(medicationObjectOrArray);\n            const input = { drugInputs: medicationsArray };\n\n            return _pfServer.default.promise(url, 'POST', input).then(interactions => {\n                return _medications.default.loadMedications(patientGuid).then(medications => {\n                    interactions.drugInteractionAlerts.forEach(drugInteraction => {\n                        drugInteraction.drugsInvolved.forEach(drug => {\n                            const medicationGuid = Ember.get(drug, 'patientMedicationGuid');\n                            const patientMedication = medications.findBy('medicationGuid', medicationGuid);\n\n                            Ember.set(drug, 'patientMedication', patientMedication);\n                        });\n                    });\n\n                    return interactions;\n                });\n            });\n        },\n\n        loadInteractionAlertsByMedication(patientGuid, medication) {\n            return this.loadInteractionAlerts(patientGuid, medication.get('content')).then(response => {\n                // We need to fix that data structure since both drug and allergies array is a little different.\n                let data = this.fixInteractionData(response);\n                data = this.fixDrugsInvolved(data, medication);\n\n                return {\n                    interactions: data.drugInteractionAlerts.concat(data.drugAllergyAlerts),\n                    drugAlertErrors: data.drugAlertErrors\n                };\n            }, () => {\n                throw new Error('Unable to load interactions.');\n            });\n        },\n\n        loadInteractionAlertsByOrderItems(patientGuid, orderItems) {\n            const medications = orderItems.mapBy('prescription').map(prescription => ({\n                ndc: prescription.drugCode,\n                rxNormCui: prescription.rxNormCui,\n                drugName: prescription.medicationName,\n                medicationGuid: prescription.medicationGuid\n            }));\n\n            return this.loadInteractionAlerts(patientGuid, medications).then(data => {\n                const orderItemDrugInteractionAlerts = medications.map(medication => {\n                    const drugInteractionAlerts = $.extend(true, [], data.drugInteractionAlerts);\n                    const { ndc, medicationGuid } = medication;\n\n                    drugInteractionAlerts.forEach(interaction => {\n                        const matchingDrugInvoled = interaction.drugsInvolved.find(drug => {\n                            return drug.ndc === ndc || drug.patientMedicationGuid === medicationGuid;\n                        });\n\n                        interaction.otherDrugsInvolved = [];\n\n                        if (matchingDrugInvoled) {\n                            interaction.matchingDrugInvoled = matchingDrugInvoled;\n\n                            if (interaction.severity.toLowerCase() === 'duplicatetherapy') {\n                                interaction.otherDrugsInvolved = this.fixDuplicateTherapyDrugsInvolved(interaction.drugsInvolved, ndc, medicationGuid);\n                            } else {\n                                interaction.otherDrugsInvolved = interaction.drugsInvolved.reject(drug => {\n                                    return drug.ndc === ndc || drug.patientMedicationGuid === medicationGuid;\n                                });\n                            }\n                        }\n                    });\n\n                    return {\n                        medicationGuid: medication.medicationGuid,\n                        drugInteractionAlerts\n                    };\n                });\n\n                return {\n                    drugAlertErrors: data.drugAlertErrors,\n                    drugAllergyAlerts: data.drugAllergyAlerts,\n                    orderItemDrugInteractionAlerts\n                };\n            });\n        },\n\n        loadInteractionAlertsByRefillRequest(patientGuid, refill) {\n            const medication = {\n                ndc: refill.get('dispensedMedicationProductCode'),\n                drugName: refill.get('dispensedMedicationName'),\n                rxNormCui: refill.get('matchedPatientMedication.rxNormCui'),\n                medicationGuid: refill.get('matchedPatientMedication.medicationGuid')\n            };\n\n            return this.loadInteractionAlerts(patientGuid, medication).then(data => {\n                let fixedData = this.fixInteractionData(data);\n                fixedData = this.fixDrugsInvolved(fixedData, Ember.Object.create(medication));\n\n                return {\n                    interactions: fixedData.drugInteractionAlerts.concat(fixedData.drugAllergyAlerts),\n                    drugAlertErrors: fixedData.drugAlertErrors\n                };\n            });\n        },\n\n        loadInteractionAlertsReasonsToOverride() {\n            return _pfServer.default.promise(`${_config.default.clinicalBaseURL_v2}Interactions/Reasons`, 'GET');\n        },\n\n        resolveInteractionAlertsByOrderItems(patientGuid, orderItems) {\n            const interactions = orderItems.map(item => item.get('interactions')).reduce((prev, curr) => {\n                return prev.concat(curr);\n            });\n            return this.resolveInteractionAlerts(patientGuid, interactions);\n        },\n\n        resolveInteractionAlertsByRefillRequest(refill) {\n            const patientGuid = refill.get('patientPracticeGuid');\n            const interactions = refill.get('interactions');\n            return this.resolveInteractionAlerts(patientGuid, interactions);\n        },\n\n        fixInteractionData(data) {\n            // set the type\n            data.drugInteractionAlerts.forEach(item => {\n                const severityLowerCase = item.severity.toLowerCase();\n\n                item.interactionType = 'Drug';\n                item.isDuplicateTherapy = severityLowerCase === 'duplicatetherapy';\n                item.severitySort = SEVERITY_SORT_MAP[severityLowerCase];\n            });\n\n            data.drugAllergyAlerts.forEach(item => {\n                const [involvedAllergy] = item.allergiesInvolved;\n                item.interactionType = 'Allergy';\n                item.reactions = this.getReactions(involvedAllergy.allergyReactions);\n                item.severitySort = SEVERITY_SORT_MAP[involvedAllergy.allergySeverity.title.toLowerCase()];\n            });\n\n            return data;\n        },\n\n        fixDrugsInvolved(data, medication) {\n            const { ndc, medicationGuid } = medication.getProperties('ndc', 'medicationGuid');\n\n            data.drugInteractionAlerts.forEach(item => {\n                if (item.severity.toLowerCase() === 'duplicatetherapy') {\n                    item.drugsInvolved = this.fixDuplicateTherapyDrugsInvolved(item.drugsInvolved, ndc, medicationGuid);\n                } else {\n                    item.drugsInvolved = item.drugsInvolved.reject(drug => {\n                        return drug.ndc === ndc || drug.patientMedicationGuid === medicationGuid;\n                    });\n                }\n            });\n\n            // We reject interactions with no drugs involved after the above filtering\n            data.drugInteractionAlerts = data.drugInteractionAlerts.rejectBy('drugsInvolved.length', 0);\n\n            return data;\n        },\n\n        fixDuplicateTherapyDrugsInvolved(drugsInvolved, currentNdc, currentMedicationGuid) {\n            if (drugsInvolved.length > 1) {\n                // If all the drugs involved have the same ndc, remove duplicates\n                if (drugsInvolved.isEvery('ndc', currentNdc)) {\n                    drugsInvolved = [drugsInvolved[0]];\n                } else {\n                    // Group duplicate ndcs in the same alert\n                    const ndcGroups = _.groupBy(drugsInvolved, drug => drug.ndc);\n\n                    drugsInvolved = Object.keys(ndcGroups).map(ndc => ndcGroups[ndc][0]);\n\n                    // Some of the drugs involved have a different ndc, filter out ndc matches\n                    drugsInvolved = drugsInvolved.reject(drug => {\n                        return drug.ndc === currentNdc || drug.patientMedicationGuid === currentMedicationGuid;\n                    });\n                }\n            }\n\n            return drugsInvolved;\n        },\n        getReactions(reactions) {\n            if (Ember.isEmpty(reactions)) {\n                return reactions;\n            }\n            return `(${reactions.mapBy('title').join(', ')})`;\n        },\n\n        resolveInteractionAlerts(patientGuid, interactions) {\n            const url = `${_config.default.clinicalBaseURL_v2}Interactions/${patientGuid}/Overrides`;\n            const drugInteractionAlerts = [];\n            const drugAllergyAlerts = [];\n\n            interactions.forEach(interaction => {\n                if (!Ember.isEmpty(interaction.get('reasonToOverride'))) {\n                    const interractionType = (interaction.type || interaction.interactionType || '').toLowerCase();\n                    const inputArray = interractionType === 'drug' ? drugInteractionAlerts : drugAllergyAlerts;\n                    inputArray.push(interaction.serialize());\n                }\n            });\n\n            return _pfServer.default.promise(url, 'POST', {\n                drugInteractionAlerts,\n                drugAllergyAlerts\n            });\n        }\n    };\n});","define('cute-cats-tanisha/templates/components/clinical/addon/repositories/medications', ['exports', 'boot/config', 'boot/util/pf-server', 'clinical/repositories/patients', 'clinical/models/medication', 'clinical/helpers/user-session-cache', 'boot/models/session'], function (exports, _config, _pfServer, _patients, _medication, _userSessionCache, _session) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = {\n\n        loadMedications(patientGuid, options) {\n            return _patients.default.loadClinicalData(patientGuid, options).then(aggregate => {\n                return aggregate.medications;\n            });\n        },\n\n        loadMedication(patientGuid, medicationGuid) {\n            var _this = this,\n                medicationsUrl = _config.default.clinicalBaseURL + 'patients/' + patientGuid + '/medications/' + medicationGuid;\n            return _pfServer.default.promise(medicationsUrl).then(_medication.default.wrap).then(function (medication) {\n                return _this.getMedications(patientGuid).then(function (medications) {\n                    medications.replaceMedication(medication);\n                    return medication;\n                });\n            });\n        },\n\n        loadAssociatedPrograms(medicationList) {\n            const url = `${_config.default.clinicalBaseURL_v2}drugs/worksheets`;\n            return _pfServer.default.promise(url, 'POST', medicationList).then(data => {\n                return data;\n            });\n        },\n\n        checkMedicationIsValid(ndc) {\n            return _pfServer.default.promise(`${_config.default.clinicalBaseURL_v2}drugs/${ndc}/checks/isValid`).then(data => {\n                return data;\n            }).catch(() => {\n                // if call fails, failure will be logged, but should not prevent\n                // the user from entering the order workflow\n                return { isValidMedication: true };\n            });\n        },\n\n        replaceDeprecatedMedication(medication, transcriptGuid, reason) {\n            /*\n                Save existing medication with an updated reason code to indicate that\n                the medications has been deprecated. Then, create a new medication\n                object so that the user can be prompted to choose a replacement.\n            */\n            let oldMedication = _medication.default.wrap(medication);\n            oldMedication.set('stopDateTime', moment(new Date()).format('MM/DD/YYYY'));\n            oldMedication.set('medicationDiscontinuedReason', reason || {\n                id: 13,\n                description: 'Medication no longer available'\n            });\n            return this.saveMedication(oldMedication, transcriptGuid).then(newMedication => {\n                newMedication.medicationGuid = null;\n                newMedication.startDateTime = moment(new Date()).format('MM/DD/YYYY');\n                newMedication.stopDateTime = null;\n                newMedication.medicationDiscontinuedReason = null;\n                return _medication.default.wrap(newMedication);\n            });\n        },\n\n        /***\n         * Saves the given medication.\n         */\n        saveMedication(medicationToSave, transcriptGuid) {\n            const wrappedMedication = _medication.default.wrap(medicationToSave);\n            if (Ember.isEmpty(wrappedMedication.get('transcriptMedications'))) {\n                wrappedMedication.createDefaultTranscriptMedication();\n            }\n            const payload = wrappedMedication.get('content');\n            let url = `${_config.default.clinicalBaseURL}patients/${wrappedMedication.get('patientPracticeGuid')}/medications`;\n            let httpMethod = 'POST';\n\n            if (wrappedMedication.get('medicationGuid')) {\n                httpMethod = 'PUT';\n                url += `/${wrappedMedication.get('medicationGuid')}`;\n            }\n            if (transcriptGuid) {\n                url += `?transcriptGuid=${transcriptGuid}`;\n            }\n            return _pfServer.default.promise(url, httpMethod, payload).then(medication => {\n                const medicationCodes = {\n                    Ndc: Ember.get(medication, 'ndc'),\n                    RxNormCui: Ember.get(medication, 'rxNormCui'),\n                    MedicationGuid: Ember.get(medication, 'medicationGuid')\n                };\n                return this.loadAssociatedPrograms([medicationCodes]).then(programs => {\n                    if (Ember.isPresent(programs)) {\n                        programs.forEach(program => {\n                            if (Ember.isPresent(medication) && Ember.get(medication, 'medicationGuid') === program.medicationGuid) {\n                                Ember.set(medication, 'associatedProgram', program.worksheetTypes);\n                            }\n                        });\n                    }\n                    return Ember.RSVP.resolve(_medication.default.wrap(medication));\n                });\n            });\n        },\n        deleteMedication(medication, transcriptGuid) {\n            if (!medication) {\n                return Ember.RSVP.reject();\n            }\n            var url = _config.default.clinicalBaseURL + 'patients/' + medication.get('patientPracticeGuid') + '/medications';\n            if (transcriptGuid) {\n                if (medication.get('encounterComments.length') > 1) {\n                    return Ember.RSVP.reject('Can\\'t delete a medication with more than one Transcript Medication');\n                }\n                // Tell the server we want to delete the encountersTranscriptMedication along with the med\n                url += '?transcriptGuid=' + transcriptGuid;\n            }\n            return _pfServer.default.promise(url, 'DELETE', medication.get('content'));\n        },\n\n        // TranscriptMedications\n        /***\n         * Saves a TranscriptMedication\n         * If a TranscriptMedication already exists for the given transcriptGuid, it simply updates it and the comment\n         * otherwise it creates a new one\n         * @param {Medication} medication to be attached\n         * @param transcriptGuid optional - leave as null to update the default transcriptMedication\n         * @param {string} comment optional\n         * @returns {Medication Promise} with updated TranscriptMedications.\n         */\n        saveTranscriptMedication(medication, transcriptGuid, comment) {\n            var patientGuid = medication.get('patientPracticeGuid'),\n                medicationGuid = medication.get('medicationGuid'),\n                existingTranscriptMedication = medication.getTranscriptMedication(transcriptGuid),\n                url = _config.default.clinicalBaseURL + 'patients/' + patientGuid + '/medications/' + medicationGuid + '/transcriptMedications',\n                data = { transcriptGuid: transcriptGuid, comment: comment },\n                method = 'POST';\n            if (!medicationGuid) {\n                Ember.RSVP.reject('Can\\'t attach an un-saved medication to an encounter');\n            }\n            if (existingTranscriptMedication && existingTranscriptMedication.lastModifiedDateTimeUtc) {\n                method = 'PUT';\n                if (existingTranscriptMedication.comment === comment) {\n                    // No need to save if the comment didn't change\n                    Ember.RSVP.resolve(medication);\n                }\n            }\n            return _pfServer.default.promise(url, method, data).then(function (transcriptMedication) {\n                var transcriptMedications = medication.get('transcriptMedications');\n                if (existingTranscriptMedication) {\n                    Ember.setProperties(existingTranscriptMedication, transcriptMedication);\n                } else {\n                    transcriptMedications.pushObject(transcriptMedication);\n                }\n                return medication;\n            });\n        },\n\n        addMedicationsToEncounter(patientGuid, medicationsToAdd, transcriptGuid) {\n            var baseUrl = _config.default.clinicalBaseURL + 'patients/' + patientGuid + '/medications/',\n                data = { transcriptGuid: transcriptGuid },\n                promises;\n            promises = medicationsToAdd.map(function (medication) {\n                var url = baseUrl + medication.get('medicationGuid') + '/transcriptMedications';\n                return _pfServer.default.promise(url, 'POST', data).then(function (transcriptMedication) {\n                    return { transcriptMedication: transcriptMedication, medication: medication };\n                });\n            });\n            return Ember.RSVP.all(promises).then(function (array) {\n                array.forEach(function (hash) {\n                    // NOTE: we're doing this after *all* promises are resolved to avoid multiple updates to the objects\n                    // That cause multiple renders. Need to treat this as a single operation.\n                    hash.medication.get('transcriptMedications').pushObject(hash.transcriptMedication);\n                });\n            });\n        },\n\n        /***\n         * Deletes the TranscriptMedication for the given transcriptGuid\n         * @param {Medication} medication to be attached\n         * @param transcriptGuid optional - leave as null to delete the default transcriptMedication\n         * @returns {Medication Promise} with updated TranscriptMedications.\n         */\n        deleteTranscriptMedication(medication, transcriptGuid) {\n            var patientGuid = medication.get('patientPracticeGuid'),\n                medicationGuid = medication.get('medicationGuid'),\n                existingTranscriptMedication = medication.getTranscriptMedication(transcriptGuid),\n                url = _config.default.clinicalBaseURL + 'patients/' + patientGuid + '/medications/' + medicationGuid + '/transcriptMedications/' + transcriptGuid,\n                deletePromise = Ember.RSVP.resolve(medication);\n            // Only call server if transcriptMedication is persisted.\n            if (existingTranscriptMedication && existingTranscriptMedication.lastModifiedDateTimeUtc) {\n                deletePromise = _pfServer.default.promise(url, 'DELETE');\n            }\n            return deletePromise.then(function () {\n                var transcriptMedications = medication.get('transcriptMedications');\n                transcriptMedications.removeObject(existingTranscriptMedication);\n                return medication;\n            });\n        },\n\n        recordNoKnownMedications(patientGuid, isNoKnownStatus) {\n            var methodType = isNoKnownStatus ? 'POST' : 'DELETE',\n                patientConditionsUrl = _config.default.clinicalBaseURL + 'PatientConditions/' + patientGuid + '/NoKnownMedications';\n            return _pfServer.default.promise(patientConditionsUrl, methodType);\n        },\n\n        loadFrequentMedications: (0, _userSessionCache.default)('frequentMedications', () => {\n            const url = `${_config.default.clinicalBaseURL_v2}frequentMedications/`;\n            return _pfServer.default.promise(url).then(medications => {\n                return (medications || []).map(_medication.default.wrap);\n            });\n        }),\n\n        loadMedicationReferenceData(medication, patientGuid, store) {\n            // not using getWithDefault to consider empty strings\n            const ndc = medication.get('ndc') || 'custom';\n            const currentFacility = store.peekRecord('facility', _session.default.get('facilityGuid'));\n            const locationCode = currentFacility && currentFacility.get('state');\n            const url = `${_config.default.clinicalBaseURL_v2}drugs/${ndc}/${patientGuid}?locationCode=${locationCode}`;\n\n            return _pfServer.default.promise(url).then(result => {\n                const medicationDiscontinuedReasons = !_config.default.isRedirectToDrugAllergyOn ? result.medicationDiscontinuedReasons.filter(item => item.id !== 12) : result.medicationDiscontinuedReasons;\n\n                // SIN-2883 - Filter oral, liquid medications so that only mL allowed\n                const prescriptionUnits = medication.get('isOralLiquidMedication') ? result.prescriptionUnits.filter(unit => unit.name === 'Milliliter') : result.prescriptionUnits;\n\n                return Ember.merge(result, {\n                    prescriptionUnits,\n                    medicationDiscontinuedReasons\n                });\n            });\n        },\n        /***\n         * Gets the patient medications from cache or an empty MedicationsArray\n         */\n        getMedications(patientGuid) {\n            return _patients.default.getClinicalData(patientGuid).then(function (aggregate) {\n                return aggregate.medications;\n            });\n        }\n    };\n});","define('cute-cats-tanisha/templates/components/clinical/addon/repositories/patient-demographics', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = {\n        findPatientRaceOptions(store) {\n            return this._findDemographicOptions(store, 'race-option');\n        },\n\n        findPatientEthnicityOptions(store) {\n            return this._findDemographicOptions(store, 'ethnicity-option');\n        },\n\n        _findDemographicOptions(store, type) {\n            const cachedDemographicOptions = store.peekAll(type);\n            if (Ember.isEmpty(cachedDemographicOptions)) {\n                return store.findAll(type);\n            }\n            return cachedDemographicOptions;\n        }\n    };\n});","define('cute-cats-tanisha/templates/components/clinical/addon/repositories/patient', ['exports', 'boot/config', 'boot/util/pf-server'], function (exports, _config, _pfServer) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = {\n        updatePatientEmail(data, patientPracticeGuid) {\n            const url = this._buildURL(patientPracticeGuid);\n            return _pfServer.default.promise(url, 'PUT', data);\n        },\n\n        _buildURL(id) {\n            let url = `${_config.default.patientRibbonURL}/email`;\n            if (id) {\n                // Should this move to a PatientSummaryAdapter?\n                if (url.match(/:patientPracticeGUID/)) {\n                    url = url.replace(/:patientPracticeGUID/, id);\n                } else {\n                    url += id;\n                }\n            }\n            return url;\n        }\n    };\n});","define('cute-cats-tanisha/templates/components/clinical/addon/repositories/patients', ['exports', 'boot/config', 'boot/util/pf-server', 'clinical/models/diagnosis', 'clinical/models/diagnoses-array', 'clinical/models/medication', 'clinical/models/medications-array', 'clinical/helpers/user-session-cache'], function (exports, _config, _pfServer, _diagnosis, _diagnosesArray, _medication, _medicationsArray, _userSessionCache) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    var clinicalDataCache = (0, _userSessionCache.default)({\n        cacheKeyFunction(patientGuid) {\n            return _config.default.clinicalBaseURL + 'patients/' + patientGuid + '/aggregate';\n        },\n        loadFunction(patientGuid, options) {\n            var _this = this,\n                aggregateUrl = _config.default.clinicalBaseURL + 'patients/' + patientGuid + '/aggregate';\n\n            return Ember.RSVP.hash({\n                freshData: _pfServer.default.promise(aggregateUrl),\n                cachedData: (options || {}).cachedPromise || Ember.RSVP.resolve({})\n            }).then(function (hash) {\n                var diagnoses = _this._mapDiagnosesResponse(hash.freshData.diagnoses, hash.cachedData.diagnoses),\n                    medications = _this._mapMedicationsResponse(hash.freshData.medications, hash.cachedData.medications);\n                return { diagnoses: diagnoses, medications: medications };\n            });\n        },\n        defaultFunction() {\n            return {\n                diagnoses: _diagnosesArray.default.create({ content: [] }),\n                medications: _medicationsArray.default.create({ content: [] })\n            };\n        }\n    });\n\n    /***\n     * The PatientRepository manages clinical data for a patient.\n     * For specific resources see allergies, diagnoses and medications repositories.\n     */\n    exports.default = {\n        /***\n         * Loads diagnoses and medications in bulk for a patient\n         */\n        loadClinicalData: clinicalDataCache,\n\n        // TODO: consider moving this support to the cache object to DRY this\n        /***\n         * Gets the patient clinical data from cache or empty Arrays if the cache is empty\n         */\n        getClinicalData: clinicalDataCache.getCachedData,\n\n        _mapDiagnosesResponse(diagnosesResponse, diagnosesArray) {\n            var mappedDiagnoses = (diagnosesResponse.patientDiagnoses || []).map(_diagnosis.default.wrap);\n            diagnosesArray = diagnosesArray || _diagnosesArray.default.create();\n            diagnosesArray.set('content', mappedDiagnoses);\n            diagnosesArray.set('noKnownDiagnoses', !!diagnosesResponse.noKnownDiagnoses);\n            return diagnosesArray;\n        },\n\n        _mapMedicationsResponse(medicationsResponse, medicationsArray) {\n            var mappedMedications = (medicationsResponse.patientMedications || []).map(_medication.default.wrap);\n            medicationsArray = medicationsArray || _medicationsArray.default.create();\n            medicationsArray.set('content', mappedMedications);\n            medicationsArray.set('noKnownMedications', !!medicationsResponse.noKnownMedications);\n            return medicationsArray;\n        }\n    };\n});","define('cute-cats-tanisha/templates/components/clinical/addon/repositories/worksheets', ['exports', 'boot/config', 'boot/util/pf-server', 'boot/models/session', 'clinical/models/worksheet-responses', 'charting/repositories/transcript-events'], function (exports, _config, _pfServer, _session, _worksheetResponses, _transcriptEvents) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    // TODO: Consider abstracting away for other repos to use (e.g. like the store)\n    // NOTE: Consider overriding service:store with this with current store as a fallback, so default routes work\n    const _userSessionHash = {};\n    function getSessionCache() {\n        const userGuid = _session.default.get('userGUID');\n        const cache = _userSessionHash[userGuid] || {};\n        return cache;\n    }\n    function customResolve(data) {\n        const promise = Ember.RSVP.resolve(data);\n        promise._successful = true;\n        return promise;\n    }\n\n    exports.default = {\n        _loadData(url, options, mapResponseFunction) {\n            options = options || {};\n            var cacheHash = getSessionCache(),\n                cachedPromise = cacheHash[url];\n\n            if (!options.forceReload && cachedPromise && cachedPromise._successful) {\n                return cachedPromise;\n            }\n            cachedPromise = _pfServer.default.promise(url).then(function (data) {\n                cachedPromise._successful = true;\n                return data;\n            }).then(mapResponseFunction);\n            cacheHash[url] = cachedPromise;\n            return cachedPromise;\n        },\n        loadWorksheet(worksheetGuid, options) {\n            return this._loadData(_config.default.chartingURL + 'Worksheets/' + worksheetGuid, options);\n        },\n        loadResponses(responsesGuid, options) {\n            return this._loadData(_config.default.chartingURL + 'WorksheetResponses/' + responsesGuid, options, function (data) {\n                return _worksheetResponses.default.wrap(data);\n            });\n        },\n        clearResponsesCache() {\n            const cacheHash = getSessionCache();\n            const baseWorksheetUrl = _config.default.chartingURL + 'Worksheets/';\n            Object.keys(cacheHash).forEach(key => {\n                if (key.indexOf(baseWorksheetUrl) < 0) {\n                    cacheHash[key] = null;\n                }\n            });\n        },\n        loadResponsesFromTranscriptEncounterEvent(transcriptEvent, options) {\n            return this._loadData(_config.default.chartingURL + 'WorksheetResponses?transcriptEncounterEventGuid=' + transcriptEvent.get('transcriptEventGuid'), options, function (data) {\n                return _worksheetResponses.default.wrap(data);\n            });\n        },\n        saveResponses(patientPracticeGuid, responses, options) {\n            responses = _worksheetResponses.default.wrap(responses);\n\n            let responsesGuid = responses.get('responsesGuid');\n            let url = _config.default.chartingURL + 'WorksheetResponses';\n            let method = 'POST';\n            let promiseHash = {};\n            let data;\n\n            if (!options || options.isEncounterRelated) {\n                responses.set('transcriptEncounterEvent.resultValue', responses.get('score'));\n                responses.set('transcriptEncounterEvent.resultCode', responses.get('resultCode'));\n            }\n\n            data = Ember.merge({}, responses.get('content'));\n            data.endDateTimeUtc = responses.get('endDateTimeUtc');\n            data.startDateTimeUtc = responses.get('startDateTimeUtc');\n\n            if (responsesGuid) {\n                method = 'PUT';\n                url += '/' + responsesGuid;\n            } else if (responses.get('transcriptEncounterEvent.transcriptEventGuid')) {\n                // We are not including the transcriptEncounterEvents in the POST so that services will not create duplicates.\n                data.transcriptEncounterEvents = [];\n\n                // Special case where the provider selected 'not performed'.\n                if (responses.get('transcriptEncounterEvent.isNegated')) {\n                    promiseHash.transcriptEvent = _transcriptEvents.default.saveEvent(patientPracticeGuid, responses.get('transcriptEncounterEvent'));\n                }\n            } else {\n                data.transcriptEncounterEventGuids = [];\n            }\n\n            delete data.worksheet;\n\n            promiseHash.responses = _pfServer.default.promise(url, method, data).then(data => {\n                responses.set('content', data);\n\n                responsesGuid = responses.get('responsesGuid');\n\n                const cacheHash = getSessionCache();\n                const cacheKey = _config.default.chartingURL + 'WorksheetResponses/' + responsesGuid;\n\n                cacheHash[cacheKey] = customResolve(responses);\n\n                return responses;\n            });\n\n            return Ember.RSVP.hash(promiseHash).then(function (hash) {\n                return hash.responses;\n            });\n        },\n        deleteResponses(patientPracticeGuid, responses) {\n            responses = _worksheetResponses.default.wrap(responses);\n            var responsesGuid = responses.get('responsesGuid'),\n                url = _config.default.chartingURL + 'WorksheetResponses/' + responsesGuid,\n                transcriptEventGuid = responses.get('transcriptEncounterEvents.firstObject.transcriptEventGuid');\n\n            // Delete the transcript event if the responsesGuid is empty\n            if (Ember.isEmpty(responsesGuid)) {\n                if (Ember.isEmpty(transcriptEventGuid)) {\n                    return customResolve();\n                }\n                return _transcriptEvents.default.deleteEvent(patientPracticeGuid, responses.get('transcriptEncounterEvent'));\n            }\n            if (!Ember.isEmpty(transcriptEventGuid)) {\n                url += '?transcriptEncounterEventGuid=' + transcriptEventGuid;\n            }\n            return _pfServer.default.promise(url, 'DELETE');\n        }\n    };\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/allergy', ['exports', 'clinical/routes/detail-pane'], function (exports, _detailPane) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _detailPane.default.extend({\n        templateName: 'allergy',\n        model(param) {\n            const { allergyGuid } = param;\n            if (Ember.isEmpty(allergyGuid) || allergyGuid === 'new') {\n                return null;\n            }\n            const patientPracticeGuid = this.modelFor('patient').get('patientPracticeGuid');\n            const store = this.get('store');\n            const allergy = store.peekRecord('patient-allergy', allergyGuid);\n            if (allergy) {\n                if (allergy.get('patientPracticeGuid') !== patientPracticeGuid) {\n                    throw 'Allergy does not belong to the patient';\n                }\n                return allergy;\n            }\n            return store.query('patient-allergy', { patientPracticeGuid }).then(allergies => allergies.findBy('patientAllergyGuid', allergyGuid));\n        },\n        setupController(controller, allergy) {\n            const patientPracticeGuid = this.modelFor('patient').get('patientPracticeGuid');\n            const model = Ember.Object.create({\n                allergy,\n                patientPracticeGuid\n            });\n            this.send('refreshAd', { subzone: 'allergies' });\n            this._super(controller, model);\n        },\n        deactivate() {\n            this.send('refreshAd', { reloadAdContext: true });\n        },\n        actions: {\n            reloadCardAllergies() {\n                if (this.get('routeName') === 'summary.allergy') {\n                    this.get('tunnel').send('allergies-list', { reloadFromCache: true });\n                }\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/detail-pane', ['exports', 'boot/routes/authenticated-base'], function (exports, _authenticatedBase) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _authenticatedBase.default.extend({\n        bubbleAfterSave() {\n            if (this.get('controller.isDirty')) {\n                this.set('controller.closing', true);\n                this.set('attemptedAction', arguments);\n                return false;\n            }\n            return true;\n        },\n        getDefaultTransitionArgs() {\n            const controller = this.controllerFor(this.get('delegatingController'));\n            const args = [this.get('_defaultTransition')];\n            if (controller) {\n                const patientGuid = controller.get('patientGuid');\n                args.pushObject(patientGuid);\n                args.compact();\n            }\n            return args;\n        },\n        actions: {\n            // The next 3 actions work together. If we have pending changes abort the transition\n            // then resume it when the detail pane calls close.\n            willTransition(transition) {\n                if (this.get('controller.isDirty')) {\n                    transition.abort();\n                    this.set('controller.closing', true);\n                    this.set('attemptedTransition', transition);\n                } else {\n                    return true;\n                }\n            },\n            // If the item is dirty, we prevent closing the tab,\n            // try to save and then close the tab\n            closeTab(tab) {\n                return this.bubbleAfterSave('closeTab', tab);\n            },\n            close() {\n                const { attemptedAction, attemptedTransition } = this.getProperties('attemptedAction', 'attemptedTransition');\n                if (attemptedAction) {\n                    this.set('attemptedAction', undefined);\n                    this.send(...attemptedAction);\n                } else if (attemptedTransition) {\n                    this.set('attemptedTransition', undefined);\n                    attemptedTransition.retry();\n                } else {\n                    this.transitionTo(...this.getDefaultTransitionArgs());\n                }\n            },\n            updateDirty(isDirty) {\n                this.set('controller.isDirty', isDirty);\n            }\n        },\n        _defaultTransition: () => {}\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/device', ['exports', 'common/mixins/referrer', 'clinical/routes/detail-pane'], function (exports, _referrer, _detailPane) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _detailPane.default.extend(_referrer.default, {\n        templateName: 'device',\n        routing: Ember.inject.service('pf-routing'),\n\n        // hooks\n        model(params, transition, queryParams) {\n            queryParams = params.queryParams || transition.queryParams || queryParams || {};\n            let deviceGuid = params.deviceGuid;\n\n            if (params.deviceGuid === 'new') {\n                deviceGuid = null;\n            }\n\n            return Ember.merge(queryParams, { deviceGuid: deviceGuid });\n        },\n\n        setupController(controller, model) {\n            const patientPracticeGuid = this.controllerFor('patient').get('patientPracticeGuid');\n\n            Ember.set(model, 'patientGuid', patientPracticeGuid);\n            this._super(controller, model);\n        },\n        deactivate() {\n            this._super.apply(this, arguments);\n            this.controllerFor(this.get('delegatingController')).set('selectedDeviceGuid', undefined);\n        },\n\n        actions: {\n            close() {\n                const attemptedAction = this.get('attemptedAction');\n                const attemptedTransition = this.get('attemptedTransition');\n\n                this.set('clearReferrerHash', true);\n\n                if (attemptedAction) {\n                    this.set('attemptedAction', undefined);\n                    this.send.apply(this, attemptedAction);\n                } else if (attemptedTransition) {\n                    this.set('attemptedTransition', undefined);\n                    attemptedTransition.retry();\n                } else {\n                    this.transitionTo(...this.getDefaultTransitionArgs());\n                }\n            }\n        },\n        _defaultTransition: () => {}\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/diagnosis', ['exports', 'common/mixins/referrer', 'clinical/routes/detail-pane'], function (exports, _referrer, _detailPane) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _detailPane.default.extend(_referrer.default, {\n        adBanner: Ember.inject.service(),\n        templateName: 'diagnosis',\n        model(params, transition, queryParams) {\n            const model = params.queryParams || transition.queryParams || queryParams || {};\n            let { diagnosisGuid } = params;\n\n            if (diagnosisGuid === 'new') {\n                diagnosisGuid = null;\n            }\n\n            return Ember.merge(model, {\n                diagnosisGuid\n            });\n        },\n        setupController(controller, model) {\n            this._super(controller, model);\n            const patientPracticeGuid = this.controllerFor('patient').get('patientPracticeGuid');\n            this.get('adBanner').updateAdUrl({\n                currentPatientGuid: patientPracticeGuid,\n                zone: 'charts',\n                subzone: 'diagnosis'\n            });\n        },\n        deactivate() {\n            this._super.apply(this, arguments);\n            if (this.get('didTransitionToMedication')) {\n                this.set('didTransitionToMedication', false);\n            }\n            this.send('refreshAd', { reloadAdContext: true });\n        },\n        actions: {\n            recordMedication() {\n                const controller = this.controllerFor(this.get('delegatingController'));\n                const args = [].splice.call(arguments, 0);\n                this.setReferrer();\n                this.set('didTransitionToMedication', true);\n                controller.send.apply(controller, ['recordMedicationFromDiagnosis'].concat(args));\n            },\n            editMedication() {\n                const controller = this.controllerFor(this.get('delegatingController'));\n                const args = [].splice.call(arguments, 0);\n                this.setReferrer();\n                controller.send.apply(controller, ['editMedicationFromDiagnosis'].concat(args));\n            },\n            close() {\n                var attemptedAction = this.get('attemptedAction'),\n                    attemptedTransition = this.get('attemptedTransition');\n\n                if (attemptedAction) {\n                    this.set('attemptedAction', undefined);\n                    this.send.apply(this, attemptedAction);\n                } else if (!this.get('didTransitionToMedication') && this.get('isRecordedFromAssessment')) {\n                    // Tell encounter to show the assessment section when leaving.\n                    this.transitionTo('encounter.note', { section: 'assessment' });\n                } else if (attemptedTransition) {\n                    this.set('attemptedTransition', undefined);\n                    attemptedTransition.retry();\n                } else {\n                    this.transitionTo(...this.getDefaultTransitionArgs());\n                }\n            }\n        },\n        _defaultTransition: () => {}\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/encounter/allergy', ['exports', 'clinical/routes/allergy', 'clinical/mixins/encounter-route'], function (exports, _allergy, _encounterRoute) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _allergy.default.extend(_encounterRoute.default, {\n        setupController(controller, model) {\n            this.controllerFor(this.get('delegatingController')).setProperties({\n                selectedAllergy: model,\n                currentDetailsPaneProperty: 'isEditingAllergy'\n            });\n            this._super(controller, model);\n        },\n        deactivate() {\n            const controller = this.controllerFor(this.get('delegatingController'));\n            controller.set('selectedAllergy', null);\n            controller.send('closeAllergyPane');\n            this._super();\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/encounter/diagnosis', ['exports', 'clinical/routes/diagnosis', 'clinical/mixins/encounter-route'], function (exports, _diagnosis, _encounterRoute) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _diagnosis.default.extend(_encounterRoute.default, {\n        isRecordedFromAssessment: false,\n        model(params, transition, queryParams) {\n            queryParams = params.queryParams || transition.queryParams || queryParams || {};\n            var model = this._super.apply(this, arguments),\n                isRecordedFromAssessment = queryParams.actionType === 'assessment';\n\n            this.set('isRecordedFromAssessment', isRecordedFromAssessment);\n            Ember.set(model, 'isRecordedFromAssessment', isRecordedFromAssessment);\n            return model;\n        },\n        activate() {\n            this._super.apply(this, arguments);\n            this.controllerFor(this.get('delegatingController')).set('isCollapsed', true);\n        },\n        deactivate() {\n            this._super.apply(this, arguments);\n            this.controllerFor(this.get('delegatingController')).set('isCollapsed', false);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/encounter/health-concern', ['exports', 'clinical/routes/health-concern', 'clinical/mixins/encounter-route'], function (exports, _healthConcern, _encounterRoute) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _healthConcern.default.extend(_encounterRoute.default, {\n        setupController(controller, model) {\n            this._super(controller, model);\n            this.controllerFor(this.get('delegatingController')).set('currentDetailsPaneProperty', 'isEditingHealthConcern');\n        },\n        deactivate() {\n            this._super();\n            const controller = this.controllerFor(this.get('delegatingController'));\n            if (controller.get('currentDetailsPaneProperty') === 'isEditingHealthConcern') {\n                controller.set('currentDetailsPaneProperty', null);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/encounter/medication', ['exports', 'clinical/routes/medication', 'clinical/mixins/encounter-route'], function (exports, _medication, _encounterRoute) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _medication.default.extend(_encounterRoute.default, {\n        // hooks\n        afterModel(resolvedModel) {\n\n            //Because the model hook of the MedicationRoute sets medicationGuid to null if it is a new record\n            resolvedModel.isAddingNewMedicationFromEncounter = !resolvedModel.medicationGuid;\n\n            return resolvedModel;\n        },\n\n        activate() {\n            this._super.apply(this, arguments);\n            this.controllerFor(this.get('delegatingController')).set('isCollapsed', true);\n        },\n        deactivate() {\n            this._super.apply(this, arguments);\n            this.controllerFor(this.get('delegatingController')).set('isCollapsed', false);\n        },\n\n        _diagnosisRouteName: 'encounter.diagnosis',\n\n        actions: {\n            createOrder(medicationGuid, quantity, unit, daysSupply) {\n                this.set('didTransitionToOrder', true);\n                this.controllerFor(this.get('delegatingController')).send('createOrder', medicationGuid, this.get('isRecordedFromPlan'), quantity, unit, daysSupply);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/encounter/pmh', ['exports', 'clinical/routes/pmh', 'clinical/mixins/encounter-route'], function (exports, _pmh, _encounterRoute) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _pmh.default.extend(_encounterRoute.default, {});\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/encounter/risk-score', ['exports', 'clinical/routes/risk-score', 'clinical/mixins/encounter-route'], function (exports, _riskScore, _encounterRoute) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _riskScore.default.extend(_encounterRoute.default, {});\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/encounter/smoking', ['exports', 'clinical/routes/smoking', 'clinical/mixins/encounter-route'], function (exports, _smoking, _encounterRoute) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _smoking.default.extend(_encounterRoute.default, {});\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/encounter/social', ['exports', 'clinical/routes/social', 'clinical/mixins/encounter-route'], function (exports, _social, _encounterRoute) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _social.default.extend(_encounterRoute.default, {});\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/encounter/worksheet', ['exports', 'clinical/repositories/worksheets', 'boot/routes/authenticated-base'], function (exports, _worksheets, _authenticatedBase) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _authenticatedBase.default.extend({\n        model(param) {\n            if (Ember.isEmpty(param.responsesGuid) || param.responsesGuid === 'new') {\n                this.replaceWith('encounter');\n                return;\n            }\n            return _worksheets.default.loadResponses(param.responsesGuid);\n        },\n\n        setupController(controller, model) {\n            this._super(controller, model);\n\n            const adSubzone = controller.get('adSubzone');\n            const encounterController = this.controllerFor('encounter');\n            const encounterDateOfService = encounterController.get('chartNote.dateOfServiceUtc');\n\n            encounterController.set('currentDetailsPaneProperty', 'isEditingWorksheet');\n            encounterController.send('scrollToAfterRender', '#dFinalizeEvents');\n\n            controller.set('isDirty', true);\n            model.setProperties({\n                isSelected: true,\n                encounterDateOfService\n            });\n\n            if (Ember.isPresent(adSubzone)) {\n                this.send('refreshAd', {\n                    subzone: adSubzone\n                });\n            }\n        },\n\n        deactivate() {\n            const encounterController = this.controllerFor('encounter');\n            if (encounterController.get('currentDetailsPaneProperty') === 'isEditingWorksheet') {\n                encounterController.set('currentDetailsPaneProperty', null);\n            }\n            if (this.get('controller.shouldScrollOnTransition')) {\n                this.set('controller.shouldScrollOnTransition', false);\n                encounterController.send('scrollToAfterRender', '#dFinalizeEvents');\n            }\n        },\n\n        serialize(model) {\n            return {\n                responsesGuid: model.get('responsesGuid') || 'new'\n            };\n        },\n\n        actions: {\n            willTransition(transition) {\n                if (this.get('controller.isDirty')) {\n                    transition.abort();\n                    this.get('controller').save().then(function () {\n                        transition.retry();\n                    });\n                } else {\n                    this.set('controller.model.isSelected', false);\n                }\n            },\n\n            closeTab(tab) {\n                return this.bubbleAfterSave('closeTab', tab);\n            },\n\n            signEncounter() {\n                if (this.bubbleAfterSave('signEncounter')) {\n                    this.replaceWith('encounter');\n                    return true;\n                }\n                return false;\n            }\n        },\n\n        bubbleAfterSave() {\n            const actionArgs = arguments;\n\n            if (this.get('controller.isDirty')) {\n                this.get('controller').save().then(() => {\n                    this.send.apply(this, actionArgs);\n                });\n\n                return false;\n            }\n\n            return true;\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/goal', ['exports', 'boot/routes/authenticated-base'], function (exports, _authenticatedBase) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _authenticatedBase.default.extend({\n        templateName: 'goal',\n\n        tunnel: Ember.inject.service(),\n\n        model(params) {\n            const patientPracticeGuid = this.modelFor('patient').get('patientPracticeGuid');\n            const patientGoalGuid = params.patientGoalGuid;\n            if (patientGoalGuid && patientGoalGuid !== 'new') {\n                return this.store.query('patient-goal', { patientPracticeGuid }).then(goals => goals.findBy('id', patientGoalGuid));\n            } else {\n                return this.get('store').createRecord('patient-goal', {\n                    effectiveDate: moment().format('MM/DD/YYYY'),\n                    patientPracticeGuid: patientPracticeGuid,\n                    isActive: true,\n                    description: null\n                });\n            }\n        },\n        deactivate() {\n            this.get('tunnel').send('goals-section-refresh');\n        },\n        rollback() {\n            const store = this.get('store');\n            const goal = this.get('controller.model');\n            if (goal) {\n                if (goal.get('isNew')) {\n                    store.unloadRecord(goal);\n                } else {\n                    goal.rollbackAttributes();\n                }\n            }\n        },\n        save() {\n            return this.get('controller').validGoal().then(isValid => {\n                if (isValid) {\n                    const goal = this.get('controller.model');\n                    return goal.save().then(() => {\n                        return isValid;\n                    }).catch(() => {\n                        toastr.error('Could not save goal. Try again later.');\n                        return false;\n                    });\n                }\n            });\n        },\n        addAnotherGoal() {\n            const store = this.get('store');\n\n            this.set('controller.model', store.createRecord('patient-goal', {\n                effectiveDate: moment().format('MM/DD/YYYY'),\n                patientPracticeGuid: this.modelFor('patient').get('patientPracticeGuid'),\n                isActive: true,\n                description: null\n            }));\n        },\n        delete() {\n            const goal = this.get('controller.model');\n\n            // TODO: Remove after standardizing card contract\n            const summaryController = this.controllerFor('patient/summary');\n            goal.deleteRecord();\n            return goal.save().then(() => {\n                toastr.success('Goal was successfully deleted.');\n                const goals = summaryController.get('goals');\n                if (goals) {\n                    goals.removeObject(goal);\n                }\n                this.transitionTo('patient.summary');\n            }).catch(() => {\n                toastr.error('Could not delete goal. Try again later.');\n            });\n        },\n        bubbleAfterSave(...args) {\n            if (this.isDirty()) {\n                this.save().then(() => this.send(...args));\n                return false;\n            }\n            return true;\n        },\n        isDirty() {\n            const model = this.get('controller.model');\n            return model && model.get('hasDirtyAttributes') && Ember.isPresent(model.get('description'));\n        },\n        actions: {\n            willTransition(transition) {\n                if (this.isDirty()) {\n                    transition.abort();\n                    this.save().then(saved => {\n                        if (saved) {\n                            transition.retry();\n                        }\n                    });\n                }\n            },\n            cancel() {\n                this.rollback();\n                this.transitionTo('patient.summary');\n            },\n            save(shouldAddAnother) {\n                this.save().then(saved => {\n                    if (saved) {\n                        if (shouldAddAnother) {\n                            toastr.success('Goal added. You can add another.');\n                            this.addAnotherGoal();\n                        } else {\n                            this.transitionTo('patient.summary');\n                        }\n                    }\n                });\n            },\n            delete() {\n                this.delete().then(() => {\n                    this.transitionTo('patient.summary');\n                });\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/health-concern', ['exports', 'boot/routes/authenticated-base'], function (exports, _authenticatedBase) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _authenticatedBase.default.extend({\n        templateName: 'health-concern',\n        model(params) {\n            const patientPracticeGuid = this.modelFor('patient').get('patientPracticeGuid');\n            const { patientHealthConcernGuid } = params;\n            const store = this.get('store');\n            if (patientHealthConcernGuid && patientHealthConcernGuid !== 'new') {\n                return store.query('patient-health-concern', { patientPracticeGuid }).then(healthConcerns => healthConcerns.findBy('id', patientHealthConcernGuid));\n            }\n            return this.createNewHealthConcern();\n        },\n        setupController(controller, model) {\n            this._super(controller, model);\n            controller.set('errors', {});\n        },\n        save() {\n            const model = this.get('controller.model');\n            if (!model || !this.isDirty()) {\n                return Ember.RSVP.resolve(false);\n            }\n            const isNew = model.get('isNew');\n            return this.get('controller').validate().then(() => model.save().then(healthConcern => {\n                if (isNew) {\n                    const controller = this.controllerFor(this.get('delegatingController'));\n                    const healthConcerns = controller.get('healthConcerns');\n                    const adapter = this.get('store').adapterFor('patient-health-concern');\n                    adapter.clearNoKnownValue(model.get('patientPracticeGuid'));\n                    if (healthConcerns) {\n                        healthConcerns.pushObject(healthConcern);\n                        controller.set('noKnownHealthConcerns', false);\n                    }\n                }\n                return true;\n            })).catch(e => {\n                toastr.error('Failed to save health concern');\n                throw e;\n            });\n        },\n        bubbleAfterSave(...args) {\n            if (this.isDirty()) {\n                this.save().then(() => this.send(...args));\n                return false;\n            }\n            return true;\n        },\n        createNewHealthConcern() {\n            const patientPracticeGuid = this.modelFor('patient').get('patientPracticeGuid');\n            return this.get('store').createRecord('patient-health-concern', {\n                effectiveDate: moment().format('MM/DD/YYYY'),\n                isActive: true,\n                patientPracticeGuid\n            });\n        },\n        isDirty() {\n            const model = this.get('controller.model');\n            return model && model.get('hasDirtyAttributes') && model.get('healthConcernReferenceGuid');\n        },\n        actions: {\n            willTransition(transition) {\n                if (this.isDirty()) {\n                    transition.abort();\n                    this.save().then(() => transition.retry());\n                }\n            },\n            saveHealthConcern(addAnother) {\n                this.save().then(saveOccurred => {\n                    if (addAnother) {\n                        toastr.success('Health concern saved. You can add another.');\n                        this.set('controller.model', this.createNewHealthConcern());\n                    } else {\n                        if (saveOccurred) {\n                            toastr.success('Health concern saved.');\n                        }\n                        this.transitionTo(this.get('_defaultTransition'));\n                    }\n                });\n            },\n            cancelHealthConcern() {\n                const model = this.get('controller.model');\n                if (model.get('isNew')) {\n                    this.get('store').unloadRecord(model);\n                } else {\n                    model.rollbackAttributes();\n                }\n                this.transitionTo(this.get('_defaultTransition'));\n            },\n            deleteHealthConcern() {\n                const model = this.get('controller.model');\n                if (model.get('isNew')) {\n                    this.get('store').unloadRecord(model);\n                    this.transitionTo(this.get('_defaultTransition'));\n                } else {\n                    model.destroyRecord().then(() => {\n                        const healthConcerns = this.controllerFor(this.get('delegatingController')).get('healthConcerns');\n                        if (healthConcerns) {\n                            healthConcerns.removeObject(model);\n                        }\n                        toastr.success('Health concern was successfully deleted');\n                        this.transitionTo(this.get('_defaultTransition'));\n                    }).catch(() => toastr.error('Failed to delete health concern'));\n                }\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/medication', ['exports', 'common/mixins/referrer', 'clinical/routes/detail-pane'], function (exports, _referrer, _detailPane) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _detailPane.default.extend(_referrer.default, {\n        adBanner: Ember.inject.service(),\n        clearReferrerHash: false,\n\n        // to be overridden by subclasses\n        isRecordedFromPlan: false,\n        templateName: 'medication',\n        routing: Ember.inject.service('pf-routing'),\n\n        // hooks\n        model(params, transition, queryParams) {\n            const model = params.queryParams || transition.queryParams || queryParams || {};\n            const isRecordedFromPlan = model.actionType === 'plan';\n            const isRecoredFromDiagnosis = model.actionType === 'diagnosis';\n            let { medicationGuid } = params;\n\n            if (params.medicationGuid === 'new') {\n                medicationGuid = null;\n            }\n\n            this.set('isRecordedFromPlan', isRecordedFromPlan);\n\n            return Ember.merge(model, {\n                medicationGuid,\n                isRecordedFromPlan,\n                isRecoredFromDiagnosis\n            });\n        },\n\n        setupController(controller, model) {\n            this.controllerFor(this.get('delegatingController')).set('selectedItem', model.medicationGuid);\n            this._super(controller, model);\n\n            // Only refresh the ad if we are adding a medication. The component will refresh it with the ndc of the\n            // current medication if we are editing or once one is selected.\n            if (!model.medicationGuid) {\n                this.refreshAd(null);\n            }\n        },\n        deactivate() {\n            this._super.apply(this, arguments);\n            this.controllerFor(this.get('delegatingController')).set('selectedItem', undefined);\n            if (this.get('didTransitionToOrder')) {\n                this.set('didTransitionToOrder', false);\n                this.controller.set('isOrdering', false);\n                this.controller.set('controlledSubstanceScheduleChanged', false);\n            } else {\n                this.send('refreshAd', { reloadAdContext: true });\n            }\n        },\n\n        refreshAd(ndc) {\n            const patientPracticeGuid = this.controllerFor('patient').get('patientPracticeGuid');\n            this.get('adBanner').updateAdUrl({\n                currentPatientGuid: patientPracticeGuid,\n                zone: ndc ? 'main' : 'charts',\n                subzone: 'medication',\n                currentMedication: ndc\n            });\n        },\n\n        actions: {\n            goToPrescriptionDetails(prescription) {\n                const patientPracticeGuid = this.controllerFor('patient').get('patientPracticeGuid');\n                const prescriptionGuid = prescription.prescriptionGuid;\n                this.setReferrer();\n                if ((prescription.prescriptionStatus || '').toLowerCase().split(' ').join('') === 'changerequested') {\n                    this.transitionTo('patient.erx.change', patientPracticeGuid, prescriptionGuid);\n                } else if ((prescription.status || 'refill requested').toLowerCase() === '') {\n                    this.transitionTo('refill.request', patientPracticeGuid, prescriptionGuid);\n                } else {\n                    this.transitionTo('patient.erx.summary', patientPracticeGuid, prescriptionGuid);\n                }\n            },\n            refreshMedicationAd(ndc) {\n                this.refreshAd(ndc);\n            },\n            close(medication, goToDrugAllergy) {\n                const attemptedAction = this.get('attemptedAction');\n                const attemptedTransition = this.get('attemptedTransition');\n                const referrerHash = this.get('referrerService.referrer.hash');\n                const patientPracticeGuid = this.controllerFor('patient').get('patientPracticeGuid');\n\n                this.set('clearReferrerHash', true);\n\n                if (attemptedAction) {\n                    this.set('attemptedAction', undefined);\n                    this.send.apply(this, attemptedAction);\n                } else if (attemptedTransition) {\n                    this.set('attemptedTransition', undefined);\n                    attemptedTransition.retry();\n                } else if (!this.get('didTransitionToOrder') && this.get('isRecordedFromPlan')) {\n                    // Tell encounter to show the plan section when leaving.\n                    this.transitionTo('encounter.note', { section: 'plan' });\n                } else if (!this.get('didTransitionToOrder') && this.controller.get('isRecoredFromDiagnosis')) {\n                    const queryParams = {};\n                    if (this.controllerFor(this.get('_diagnosisRouteName')).get('isRecordedFromAssessment')) {\n                        queryParams.actionType = 'assessment';\n                    }\n                    this.transitionTo(this.get('_diagnosisRouteName'), this.controller.get('diagnosisGuid'), { queryParams });\n                } else if (goToDrugAllergy) {\n                    const medicationPaneParent = this.get('routing.currentRouteSegments')[this.get('routing.currentRouteSegments.length') - 2];\n                    this.transitionTo(`${medicationPaneParent}.allergy`, 'new', { queryParams: { allergenQuery: medication.get('genericName') } });\n                } else if (referrerHash && referrerHash.indexOf('summary/medication') < 0 && referrerHash.indexOf('encounter/medication') < 0 && referrerHash.indexOf(patientPracticeGuid) > 0) {\n                    this.get('referrerService').returnToReferrer();\n                } else {\n                    this.transitionTo(...this.getDefaultTransitionArgs());\n                }\n            },\n            showAssessment(info) {\n                this.send('showAssessmentModal', info);\n            },\n            controlledSubstanceScheduleChanged() {\n                this.controller.set('isOrdering', false);\n                this.controller.set('controlledSubstanceScheduleChanged', true);\n            }\n        },\n        _defaultTransition: () => {},\n        _diagnosisRouteName: () => {}\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/patient', ['exports', 'common/routes/navigation', 'charting/repositories/chart-print-audit', 'boot/config', 'boot/models/session', 'boot/util/pf-server', 'collaboration/models/contact'], function (exports, _navigation, _chartPrintAudit, _config, _session, _pfServer, _contact) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _navigation.default.extend({\n        adBanner: Ember.inject.service(),\n        analytics: Ember.inject.service(),\n        subscription: Ember.inject.service(),\n        referrerService: Ember.inject.service('referrer'),\n        tunnel: Ember.inject.service(),\n        pfRouting: Ember.inject.service('pf-routing'),\n\n        templateName: 'patient',\n        defaultRoute: 'patient.summary',\n\n        model(param) {\n            const store = this.get('store');\n            let model;\n\n            if (param.patient_guid && param.patient_guid !== 'search') {\n                model = store.peekRecord('patientSummary', param.patient_guid);\n                if (model && !model.get('isLoading') && !model.get('isEmpty')) {\n                    return model.reload();\n                } else {\n                    return store.findRecord('patientSummary', param.patient_guid).catch(() => {\n                        toastr.error('Failed to load patient');\n                        this.replaceWith('charts.list');\n                    });\n                }\n            }\n        },\n        setupController(controller, model) {\n            this._super(controller, model);\n\n            const chartsController = this.controllerFor('charts');\n            const patientPracticeGuid = model ? model.get('patientPracticeGuid') : null;\n            const tabs = this.initTabs(patientPracticeGuid);\n            this.set('menuItems', tabs);\n            controller.set('menuItems', tabs);\n            controller.set('navigationClass', 'nav nav-tabs');\n            controller.set('useMenuRollup', true);\n            controller.set('tabWidth', 135);\n\n            if (model) {\n                controller.set('outletClass', 'patient');\n                controller.set('guid', patientPracticeGuid);\n                _session.default.set('patientGUID', patientPracticeGuid);\n\n                if (!chartsController.get('menuItems').isAny('arg1', patientPracticeGuid)) {\n                    chartsController.send('openTab', Ember.Object.create({\n                        label: model.get('displayName'),\n                        route: 'patient',\n                        arg1: patientPracticeGuid,\n                        dismissible: true,\n                        dupeOk: true\n                    }));\n                }\n\n                // We are manually logging a chart pull here. CHAR-1847\n                _pfServer.default.callWebService(_config.default.chartingURL + 'Access/' + patientPracticeGuid, null, null, 'POST');\n            } else {\n                controller.set('outletClass', 'patient missing-patient');\n            }\n        },\n        initTabs(patientPracticeGuid) {\n            if (!patientPracticeGuid) {\n                return [];\n            }\n            let menuItems = this.get('menuItems-' + patientPracticeGuid);\n            // Don't reset the tabs if the patient tab is open and we have already cached\n            // the patient's open tabs.\n            if (this.controllerFor('charts').get('menuItems').isAny('arg1', patientPracticeGuid) && menuItems) {\n                return menuItems;\n            }\n            menuItems = Ember.A();\n            menuItems.addObject(Ember.Object.create({\n                label: 'Summary',\n                route: 'patient.summary',\n                arg1: patientPracticeGuid\n            }));\n            menuItems.addObject(Ember.Object.create({\n                label: 'Timeline',\n                route: 'timeline',\n                arg1: patientPracticeGuid\n            }));\n            menuItems.addObject(Ember.Object.create({\n                label: 'Profile',\n                route: 'patient.profile',\n                arg1: patientPracticeGuid\n            }));\n            this.set('menuItems-' + patientPracticeGuid, menuItems);\n            return menuItems;\n        },\n        serialize(model, params) {\n            const name = params[0];\n            const object = {};\n            object[name] = model && model.get('id');\n            return object;\n        },\n        redirect(model, transition) {\n            if (transition.targetName === 'patient.index' && transition.params && transition.params.patient && transition.params.patient.patient_guid) {\n                const patientPracticeGuid = transition.params.patient.patient_guid;\n                const lastHandler = this.get('lastHandler-' + patientPracticeGuid);\n                // Navigate to the previous open patient subtab if the patient's tab was open.\n                if (lastHandler && this.controllerFor('charts').get('menuItems').isAny('arg1', patientPracticeGuid)) {\n                    this.replaceWithHandler(lastHandler);\n                }\n            }\n        },\n        getHandlerForTab(tab) {\n            // Instead of searching by route name we will search based on the chart guid for encounter tabs.\n            if (tab.route === 'encounter') {\n                return this.router._routerMicrolib.currentHandlerInfos.findBy('params.transcriptGuid', tab.arg1);\n            }\n            return this._super(tab);\n        },\n        removeTabHistory(tab) {\n            const lastHandlerKey = 'lastHandler-' + this.get('controller.guid');\n            const lastHandler = this.get(lastHandlerKey);\n            if (lastHandler && tab.route === lastHandler.name) {\n                if (tab.route !== 'encounter' || tab.arg1 === lastHandler.params.transcriptGuid) {\n                    this.set(lastHandlerKey, null);\n                }\n            }\n        },\n        actions: {\n            addDocumentTab(document) {\n                const documentGuid = Ember.get(document, 'documentGuid');\n                const menuItems = this.get('menuItems');\n                const returnRoute = this.get('controller.returnRoute');\n                let tab = menuItems.findBy('documentGuid', documentGuid);\n\n                if (!tab) {\n                    tab = Ember.Object.create({\n                        label: Ember.get(document, 'title'),\n                        route: 'patient.documents.document',\n                        arg1: Ember.get(document, 'id'),\n                        documentGuid,\n                        dismissible: true,\n                        noIcon: true,\n                        dupeOk: false\n                    });\n                    menuItems.addObject(tab);\n                }\n\n                if (returnRoute) {\n                    tab.setProperties({\n                        transitionOnCloseRoute: returnRoute.route,\n                        transitionOnCloseArguments: returnRoute.arguments\n                    });\n                    this.set('controller.returnRoute');\n                }\n\n                // Prevent this action from bubbling up.\n                return false;\n            },\n            closeDocumentTab(documentGuid) {\n                const menuItems = this.get('menuItems');\n                const tab = documentGuid && menuItems.findBy('documentGuid', documentGuid);\n\n                if (tab) {\n                    this.send('closeTab', tab);\n                }\n            },\n            willTransition(transition) {\n                const patientPracticeGuid = this.get('controller.patientPracticeGuid');\n                if (this.get('closingActiveTab')) {\n                    this.set('closingActiveTab', false);\n                } else {\n                    this.set(`lastHandler-${patientPracticeGuid}`, this.getChildHandler());\n                }\n                this.set('controller.showRecentActivity', false);\n                // We are either leaving to another patient or somewhere outside the patient context, so let's clear the referrer to make sure the user is not\n                // automatically navigated back to the current patient.\n                if (Ember.get(transition, 'params.patient.patient_guid') !== patientPracticeGuid) {\n                    this.set('referrerService.referrer', null);\n                }\n                return true;\n            },\n            addLabOrder() {\n                this.transitionTo('orders.new', 'diagnostic');\n            },\n            addImagingOrder() {\n                this.transitionTo('orders.new', 'imaging');\n            },\n            viewLabOrders() {\n                this.transitionTo('timeline.events', 'laborder');\n            },\n            viewImagingOrders() {\n                this.transitionTo('timeline.events', 'imgorder');\n            },\n            enrollPatientInPHR() {\n                this.send('openPopup', 'enrollPhr', {\n                    patientPracticeGUID: this.get('controller.patientPracticeGuid')\n                });\n\n                this.send('refreshAd');\n            },\n            enterLabResults() {\n                this.send('refreshAd');\n\n                this.transitionTo('results.new', 'diagnostic');\n            },\n            enterImagingResults() {\n                this.send('refreshAd');\n\n                this.transitionTo('results.new', 'imaging');\n            },\n            copyPatientLink() {\n                const urlParts = [];\n                if (window.location.origin) {\n                    urlParts.push(window.location.origin);\n                } else {\n                    urlParts.push(window.location.protocol);\n                    urlParts.push('//');\n                    urlParts.push(window.location.hostname);\n                }\n                urlParts.push(window.location.pathname);\n                urlParts.push('#/PF/charts/patients/');\n                urlParts.push(this.get('controller.patientPracticeGuid'));\n                urlParts.push('/summary');\n                this.set('controller.patientLink', urlParts.join(''));\n                this.set('controller.showPatientLinkCopyModal', true);\n\n                this.send('refreshAd');\n            },\n            viewAccessHistory() {\n                this.set('controller.showAccessHistory', true);\n                this.send('refreshAd');\n            },\n            refreshChart() {\n                this.get('tunnel').send('summary-messages-list', { reloadMessages: true });\n                this.get('controller').refreshChart();\n            },\n            createClinicalSummary() {\n                if (this.get('session.isStaff') && !this.get('session.isAdmin')) {\n                    toastr.error('You do not have permission to use this feature');\n                    return;\n                }\n                this.set('controller.isCreateClinicalDocumentVisible', true);\n                this.send('refreshAd');\n            },\n            listClinicalSummary() {\n                this.set('controller.isClinicalDocumentPendingModalVisible', false);\n                const timelineEventsController = this.controllerFor('timeline.events');\n\n                if (this.get('pfRouting.currentRouteName') === 'timeline.events' && timelineEventsController && timelineEventsController.get('filterByClinicalDocuments')) {\n                    this.controllerFor('timeline.events').send('refresh');\n                    return;\n                }\n                this.transitionTo('timeline.events', 'clinicaldocuments', { queryParams: { forceRefresh: true } });\n            },\n            openPracticeSuiteTab(tabType) {\n                if (Ember.isPresent(tabType)) {\n                    this.transitionTo('patient.practice-suite', tabType);\n                }\n            },\n            showClinicalSummary(params) {\n                this.send('openCcdPreview', Ember.merge({ isCCD: true, isOutbound: true }, params));\n                this.send('refreshAd');\n            },\n            viewRecentActivity() {\n                this.set('controller.showRecentActivity', true);\n\n                this.send('refreshAd');\n            },\n\n            printChart() {\n                this.set('controller.isPrintChartVisible', true);\n\n                this.send('refreshAd');\n            },\n\n            orderReferral() {\n                this.transitionTo('timeline.events', 'encounter', {\n                    queryParams: {\n                        action: 'orderReferral'\n                    }\n                });\n            },\n            printAudit(printEvent, transcriptGuid) {\n                _chartPrintAudit.default.sendEvent({\n                    patientPracticeGuid: this.get('controller.patientPracticeGuid'),\n                    printEvent,\n                    transcriptGuid\n                }, this.get('analytics'));\n\n                this.send('refreshAd');\n            },\n            sendPatientNewMessage() {\n                _pfServer.default.promise(_config.default.addPatientURL + '/' + this.controllerFor('patient').get('patientPracticeGuid')).then(data => {\n                    this.send('openNewMessage', 'new', {\n                        regardingPatient: data.patient\n                    });\n                }).catch(function () {\n                    toastr.error('Failed to load patient details');\n                });\n\n                this.send('refreshAd');\n            },\n            messagePatient() {\n                _pfServer.default.promise(_config.default.addPatientURL + '/' + this.controllerFor('patient').get('patientPracticeGuid')).then(data => {\n                    const patientRecipient = _contact.default.create({\n                        firstName: data.patient.firstName,\n                        lastName: data.patient.lastName,\n                        reversedName: data.patient.lastName + ', ' + data.patient.firstName,\n                        guid: data.patient.patientGuid,\n                        type: 'patient'\n                    });\n                    this.send('openNewMessage', 'new', {\n                        recipients: [patientRecipient],\n                        toPatient: true\n                    });\n                }).catch(() => {\n                    toastr.error('Failed to load patient details');\n                });\n                this.send('refreshAd');\n            },\n            navigateToEncounter(transcriptGuid) {\n                this.transitionTo('encounter', transcriptGuid);\n            },\n            refreshAd(subzone) {\n                const patientPracticeGuid = this.paramsFor('patient').patient_guid;\n                this.get('adBanner').updateAdUrl({\n                    currentPatientGuid: patientPracticeGuid,\n                    zone: 'charts',\n                    subzone: subzone || 'action',\n                    currentMedication: null\n                });\n            },\n            downloadClinicalDocument() {\n                this.get('analytics').track('Data Portability Patient Download', { 'Document Format': 'xml' });\n                return true;\n            },\n            downloadClinicalDocumentHtml() {\n                this.get('analytics').track('Data Portability Patient Download', { 'Document Format': 'html' });\n                return true;\n            },\n            showDeletedEncounterWarning() {\n                this.set('controller.shouldShowDeletedEncounterWarning', true);\n            },\n            transitionToEncounterTimeline() {\n                this.set('controller.shouldShowDeletedEncounterWarning', false);\n                this.transitionTo('timeline.events', 'encounter');\n            },\n            showEditPinnedNoteModal(location) {\n                this.set('controller.shouldShowEditPinnedNoteModal', true);\n                this.set('controller.pinnedNoteModalLocation', location);\n            },\n            subscribe() {\n                this.get('subscription').showSignupModal({\n                    stepToDisplay: this.get('config.isSubscriptionRenewalOn') ? 'signup/signup-splash' : 'subscription-signup-plans'\n                });\n                if (this.get('router.currentRouteName').includes('encounter')) {\n                    this.get('analytics').trackLimitedAccess('Encounter actions menu');\n                } else if (this.get('router.currentRouteName').includes('summary')) {\n                    this.get('analytics').trackLimitedAccess('Chart actions menu');\n                }\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/patient/familyhealthhistory', ['exports', 'boot/routes/authenticated-base'], function (exports, _authenticatedBase) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _authenticatedBase.default.extend({\n        redirect() {\n            this.replaceWith('patient.familyhistory');\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/patient/familyhistory', ['exports', 'boot/routes/authenticated-base'], function (exports, _authenticatedBase) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _authenticatedBase.default.extend({\n        adBanner: Ember.inject.service(),\n        setupController(controller, model) {\n            this._super(controller, model);\n            const patientController = this.controllerFor('patient');\n            const patientPracticeGuid = patientController.get('patientPracticeGuid');\n\n            controller.get('load').perform(patientPracticeGuid);\n            patientController.set('tabActionItems', [{ separatorText: 'For family health' }, { text: 'Print Family Health History', action: 'printFamilyHealthHistory' }]);\n\n            patientController.send('openTab', Ember.Object.create({\n                label: 'Family history',\n                route: 'patient.familyhistory',\n                arg1: patientPracticeGuid,\n                dismissible: true,\n                noIcon: true\n            }));\n\n            this.get('adBanner').updateAdUrl({\n                currentPatientGuid: patientController.get('patientPracticeGuid'),\n                zone: 'charts',\n                subzone: null\n            });\n        },\n        actions: {\n            printFamilyHealthHistory() {\n                // Load the patient info first to ensure that it gets rendered on the print preview\n                this.get('store').findRecord('patient', this.modelFor('patient').get('id')).then(() => {\n                    this.send('printAudit', 'FamilyHealthHistory');\n                    this.set('controller.isPrintVisible', true);\n                });\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/patient/growth/charts', ['exports', 'flowsheets/repositories/flowsheet-data', 'boot/routes/authenticated-base'], function (exports, _flowsheetData, _authenticatedBase) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _authenticatedBase.default.extend({\n        setupController(controller) {\n            this._super(controller, Ember.Object.create());\n            const patientController = this.controllerFor('patient');\n            const patientPracticeGuid = patientController.get('patientPracticeGuid');\n\n            _flowsheetData.default.loadIsMetric().then(isMetric => controller.set('isMetric', isMetric));\n\n            controller.set('isLoading', true);\n\n            this.store.query('growth-chart', { patientPracticeGuid }).then(observations => {\n                controller.set('model.vitalHistory', observations.sortBy('eventDateTimeUtc'));\n                controller.set('isLoading', false);\n            });\n\n            patientController.send('openTab', Ember.Object.create({\n                label: 'Vitals and growth',\n                route: 'patient.growth.charts',\n                dismissible: true,\n                noIcon: true\n            }));\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/patient/immunizations', ['exports', 'boot/routes/authenticated-base'], function (exports, _authenticatedBase) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _authenticatedBase.default.extend({\n        adBanner: Ember.inject.service(),\n        model(params, transition, queryParams) {\n            const patientPracticeGuid = Ember.get(this.modelFor('patient'), 'id');\n            queryParams = params.queryParams || transition.queryParams || queryParams || {};\n\n            if (patientPracticeGuid) {\n                return Ember.RSVP.hash({\n                    preloadCode: queryParams.preloadCode,\n                    preloadKeyword: queryParams.preloadKeyword,\n                    patientPracticeGuid\n                });\n            }\n        },\n\n        setupController(controller, model) {\n            const preloadCode = model.preloadCode;\n            const preloadKeyword = model.preloadKeyword;\n\n            this._super(controller, model);\n            controller.load();\n            this.preloadVaccinations(controller, preloadCode, preloadKeyword);\n            this.refreshAd();\n        },\n\n        actions: {\n            connectToRegistry() {\n                this.getController().send('connectToRegistry');\n            },\n\n            cdsAction(actionName, options) {\n                if (actionName === 'preloadPatientImmunizations' || actionName === 'addVaccine') {\n                    this.preloadVaccinations(this.getController(), options.preloadCode, options.preloadKeyword);\n                }\n            },\n\n            downloadImmunizationRecord() {\n                this.getController().send('downloadImmunizationRecord');\n            },\n\n            error() {\n                toastr.error('Failed to load patient immunization list.');\n            },\n\n            manageVaccineInventory() {\n                this.getController().send('vaccineInventory');\n            },\n\n            printVaccinationsWithComments() {\n                this.getController().send('print', { withComments: true });\n            },\n\n            printVaccinations() {\n                this.getController().send('print', { withComments: false });\n            },\n\n            refreshCdsAlerts() {\n                const controller = this.getController();\n                Ember.get(controller, 'loadAlerts').perform();\n            },\n\n            transmitToStateRegistry() {\n                this.getController().send('transmitToStateRegistry');\n            }\n        },\n\n        preloadVaccinations(controller, preloadCode, preloadKeyword) {\n            Ember.setProperties(controller, {\n                preloadCode,\n                preloadKeyword\n            });\n\n            controller.preloadVaccinations();\n        },\n\n        refreshAd() {\n            Ember.get(this, 'adBanner').updateAdUrl({\n                currentPatientGuid: this.modelFor('patient').get('id'),\n                zone: 'charts',\n                subzone: 'immunization'\n            });\n        },\n        getController() {\n            return Ember.get(this, 'controller');\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/patient/index', ['exports', 'boot/routes/authenticated-base'], function (exports, _authenticatedBase) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _authenticatedBase.default.extend({\n        beforeModel(transition) {\n\n            return this.session.getPatientListDefault(this.store).then(patientListDefault => {\n                var transitionRoute;\n\n                switch (patientListDefault) {\n                    case 'Timeline':\n                        transitionRoute = 'timeline';\n                        break;\n\n                    case 'Profile':\n                        transitionRoute = 'patient.profile';\n                        break;\n\n                    case 'Summary':\n                    /* falls through */\n                    default:\n                        transitionRoute = 'patient.summary';\n                }\n\n                if (Ember.isEmpty(transition.params.patient.patient_guid)) {\n                    this.transitionTo('charts.list');\n                } else {\n                    this.transitionTo(transitionRoute, transition.params.patient.patient_guid);\n                }\n            });\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/patient/summary', ['exports', 'flowsheets/models/flowsheet-definition', 'scheduler/mixins/scheduler-dialog-route-support', 'boot/routes/authenticated-base', 'charting/models/encounter'], function (exports, _flowsheetDefinition, _schedulerDialogRouteSupport, _authenticatedBase, _encounter) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _authenticatedBase.default.extend(_schedulerDialogRouteSupport.default, {\n        adBanner: Ember.inject.service(),\n        attemptedTransition: null,\n\n        model() {\n            return {};\n        },\n        setupController(controller, model) {\n            this._super(controller, model);\n\n            // Clears the cards\n            controller.reset();\n\n            // When switching between patients, cards need to reload to avoid the wrong patient info from appearing\n            Ember.run.next(() => {\n                Ember.get(controller, 'loadDisplaySettings').perform();\n            });\n\n            this.ensurePatientTabIsPresent();\n            Ember.set(this.controllerFor('patient'), 'tabActionItems', null);\n            this.refreshAd();\n        },\n        deactivate() {\n            this.controller.reset();\n        },\n        refreshAd(subzone) {\n            const patientPracticeGuid = Ember.get(this.controllerFor('patient'), 'patientPracticeGuid');\n            Ember.get(this, 'adBanner').updateAdUrl({\n                currentPatientGuid: patientPracticeGuid,\n                zone: 'charts',\n                subzone\n            });\n        },\n        ensurePatientTabIsPresent() {\n            const chartsMenuItems = Ember.get(this.controllerFor('charts'), 'menuItems');\n            const patient = this.modelFor('patient');\n\n            if (Ember.isPresent(patient) && !chartsMenuItems.isAny('arg1', Ember.get(patient, 'patientPracticeGuid'))) {\n                chartsMenuItems.addObject(Ember.Object.create({\n                    label: Ember.get(patient, 'displayName'),\n                    route: 'patient',\n                    arg1: Ember.get(patient, 'patientPracticeGuid'),\n                    dismissible: true,\n                    dupeOk: true\n                }));\n            }\n        },\n        actions: {\n            refreshAd(options) {\n                var patientPracticeGuid = Ember.get(this.controllerFor('patient'), 'patientPracticeGuid'),\n                    adContext = this.store.peekRecord('patient_ad_context', patientPracticeGuid);\n                options = options || {};\n                if (options.reloadAdContext && adContext) {\n                    // Reload the ad context to get any updates to the med or dx list\n                    adContext.reload().finally(function () {\n                        this.refreshAd(options.subzone);\n                    }.bind(this));\n                } else {\n                    this.refreshAd(options.subzone);\n                }\n            },\n            viewFlowsheet(createNew) {\n                this.transitionTo('patient.flowsheets', { queryParams: { createNew: !!createNew } });\n            },\n            createPracticeFlowsheet() {\n                this.transitionTo('settings.flowsheets.edit', _flowsheetDefinition.default.wrap({}, Ember.get(this, 'store')));\n            },\n            validateNewEncounter() {\n                Ember.set(this.controllerFor('patient/summary'), 'shouldCreateNewEncounter', true);\n            },\n            newEncounter(noteTypeId) {\n                const patientPracticeGuid = Ember.get(this.controllerFor('patient'), 'patientPracticeGuid');\n                _encounter.default.createNewEncounter(Ember.get(this, 'store'), patientPracticeGuid, {\n                    chartNoteTypeId: parseInt(noteTypeId, 0)\n                }).then(function (encounter) {\n                    this.transitionTo('encounter', patientPracticeGuid, encounter);\n                }.bind(this), function () {\n                    toastr.error('Error creating new encounter');\n                });\n            },\n            removeHealthConcern(healthConcernReferenceGuid) {\n                const store = Ember.get(this, 'store');\n                const adapter = store.adapterFor('patient-health-concern');\n\n                if (adapter) {\n                    adapter.removeHealthConcernByReferenceGuid(store, healthConcernReferenceGuid, Ember.get(this.controllerFor('patient/summary'), 'healthConcerns'));\n                }\n            },\n            retryTransition() {\n                const attemptedTransition = Ember.get(this, 'attemptedTransition');\n\n                if (Ember.isPresent(attemptedTransition)) {\n                    attemptedTransition.retry();\n                }\n            },\n            willTransition(transition) {\n                const controller = Ember.get(this, 'controller');\n\n                const displaySettings = Ember.get(controller, 'displaySettings');\n\n                if (Ember.isPresent(displaySettings)) {\n                    if (displaySettings.isModelDirty()) {\n                        if (transition.targetName !== 'lock.index') {\n                            transition.abort();\n                            controller.send('showUnsavedDisplaySettingChangesModal');\n                            Ember.set(this, 'attemptedTransition', transition);\n                        } else {\n                            displaySettings.undoChanges();\n                            return true;\n                        }\n                    } else {\n                        return true;\n                    }\n                }\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/patients', ['exports', 'common/routes/navigation'], function (exports, _navigation) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _navigation.default.extend({\n        templateName: 'patients',\n        menuItems: null,\n        currentPatientGuid: null,\n        init() {\n            this._super();\n            this.set('menuItems', []);\n        },\n\n        actions: {\n            openTab() {\n                // Bubble out of here to the next one/\n                return true;\n            },\n\n            closeTab(tab) {\n                if (tab.route === 'patient' && this.getHandlerForTab(tab)) {\n                    this.set('closingActiveTab', true);\n                }\n                return true;\n            },\n            willTransition() {\n                // We only want to include the current tab in the transition history. This avoids the issue where\n                // a tab has been removed but is still in the transition history.\n                if (!this.get('closingActiveTab')) {\n                    this.set('transitionHistory', [this.getChildHandler()]);\n                } else {\n                    this.set('transitionHistory', Ember.A());\n                    this.set('closingActiveTab', false);\n                }\n                return true;\n            }\n        },\n        getHandlerForTab(tab) {\n            // Instead of searching by route name (which will always be 'patient' for all tabs),\n            // we will search based on the patient guid instead.\n            return this.router._routerMicrolib.currentHandlerInfos.findBy('params.patient_guid', tab.arg1);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/patients/index', ['exports', 'boot/routes/authenticated-base'], function (exports, _authenticatedBase) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _authenticatedBase.default.extend({\n        beforeModel() {\n            this.replaceWith('charts.list');\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/pmh', ['exports', 'clinical/routes/detail-pane'], function (exports, _detailPane) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _detailPane.default.extend({\n        templateName: 'pmh',\n        model(param) {\n            return {\n                section: param.section\n            };\n        },\n        setupController(controller, model) {\n            this._super(controller, model);\n            this.send('refreshAd');\n        },\n        actions: {\n            pmhAction(action) {\n                this.controllerFor(this.get('delegatingController')).send(action);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/practice-dashboard/clinical-trials', ['exports', 'dashboard/mixins/dashboard-sub-route', 'boot/routes/authenticated-base'], function (exports, _dashboardSubRoute, _authenticatedBase) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _authenticatedBase.default.extend(_dashboardSubRoute.default, {\n        tabLabel: 'Clinical trials',\n        tabRoute: 'practiceDashboard.clinicalTrials'\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/risk-score', ['exports', 'boot/routes/authenticated-base', 'ember-concurrency'], function (exports, _authenticatedBase, _emberConcurrency) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _authenticatedBase.default.extend({\n        _defaultTransition: () => {},\n        templateName: 'risk-score',\n        model() {\n            const patientPracticeGuid = this.modelFor('patient').get('patientPracticeGuid');\n            return this.store.findRecord('social-history', patientPracticeGuid).then(history => {\n                if (!history.get('riskScore')) {\n                    history.set('riskScore', { dateAssigned: moment().format('MM/DD/YYYY') });\n                }\n                return history;\n            }).catch(() => {\n                const historyEmpty = this.store.createRecord('social-history', { riskScore: { dateAssigned: moment().format('MM/DD/YYYY') }, patientPracticeGuid });\n                return historyEmpty;\n            });\n        },\n        setupController(controller, model) {\n            this._super(controller, model);\n            this.send('refreshAd');\n            if (this.get('delegatingController') === 'patient/summary') {\n                this.controllerFor('patient/summary').set('selectedItem', model.get('riskScore.optionGuid'));\n            } else {\n                this.controllerFor(this.get('delegatingController')).set('currentDetailsPaneProperty', 'isEditingPatientRiskScore');\n            }\n            this.store.findAll('social-history-option').then(result => {\n                controller.set('socialHistoryOptions', result.get('firstObject'));\n            });\n            this.setPersistedRiskScore(model.get('riskScore'));\n        },\n        setPersistedRiskScore(patientRiskScore) {\n            this.set('controller.persistedRiskScore', {\n                optionGuid: patientRiskScore.optionGuid,\n                dateAssigned: patientRiskScore.dateAssigned,\n                riskScore: patientRiskScore.riskScore\n            });\n        },\n        deactivate() {\n            const controller = this.controllerFor(this.get('delegatingController'));\n            if (controller.get('currentDetailsPaneProperty') === 'isEditingPatientRiskScore') {\n                controller.setProperties({\n                    currentDetailsPaneProperty: null\n                });\n            }\n        },\n        save() {\n            const patientRiskScore = this.get('controller.model');\n\n            if (patientRiskScore) {\n                if (!patientRiskScore.get('saveDisabled')) {\n                    return patientRiskScore.save().then(payload => {\n                        this.set('controller.model.isDirty', false);\n                        toastr.success('Patient risk score saved.');\n                        const returnedScore = payload.get('riskScore');\n                        const matchingTypeOption = this.get('controller.socialHistoryOptions.riskScoreOptions').findBy('optionGuid', returnedScore.optionGuid);\n                        this.setPersistedRiskScore(returnedScore);\n                        if (matchingTypeOption) {\n                            returnedScore.description = Ember.isPresent(matchingTypeOption) ? matchingTypeOption.get('description') : '';\n                        }\n                    }).catch(error => {\n                        toastr.error('Could not save patient risk score. Try again later.');\n                        throw error;\n                    });\n                }\n            }\n            return Ember.RSVP.resolve(patientRiskScore);\n        },\n        isDirty() {\n            const persistedRiskScore = this.get('controller.persistedRiskScore');\n            const riskScore = this.get('controller.model.riskScore');\n            if (persistedRiskScore.optionGuid && persistedRiskScore.riskScore) {\n                return !(persistedRiskScore.optionGuid === riskScore.optionGuid && persistedRiskScore.dateAssigned === riskScore.dateAssigned && persistedRiskScore.riskScore === riskScore.riskScore);\n            }\n            return false;\n        },\n        bubbleAfterSave(...args) {\n            if (this.isDirty()) {\n                this.save().then(() => this.send(...args));\n                return false;\n            }\n            return true;\n        },\n        deleteRiskScore: (0, _emberConcurrency.task)(function* () {\n            const patientRiskScore = this.get('controller.model');\n\n            if (patientRiskScore) {\n                try {\n                    yield this.store.adapterFor('social-history').deleteDemographic(patientRiskScore, 'riskScore');\n                    toastr.success('Patient risk score deleted.');\n                    this.set('controller.model.riskScore', null);\n                    this.transitionTo(this.get('_defaultTransition'));\n                } catch (err) {\n                    toastr.error('Could not delete patient risk score. Try again later.');\n                }\n            }\n        }).drop(),\n\n        actions: {\n            save() {\n                this.set('forceSave', true);\n                this.transitionTo(this.get('_defaultTransition'));\n            },\n            delete() {\n                this.get('deleteRiskScore').perform();\n            },\n            cancel() {\n                this.get('controller.model').rollbackAttributes();\n                this.set('isCancelled', true);\n                this.transitionTo(this.get('_defaultTransition'));\n            },\n            willTransition(transition) {\n                if (this.get('deleteRiskScore.isRunning') || this.get('isCancelled')) {\n                    this.set('isCancelled', false);\n                } else if (this.get('forceSave')) {\n                    transition.abort();\n                    this.set('forceSave', false);\n                    this.save().then(() => {\n                        transition.retry();\n                    });\n                    return false;\n                }\n                return true;\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/settings/favorite-diagnoses', ['exports', 'boot/routes/authenticated-base', 'settings/mixins/authorized-settings-route', 'clinical/models/favorite-diagnoses-settings'], function (exports, _authenticatedBase, _authorizedSettingsRoute, _favoriteDiagnosesSettings) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    const tab = Ember.Object.create({\n        route: 'settings.favoriteDiagnoses',\n        label: 'Diagnoses list',\n        dismissible: true\n    });\n\n    exports.default = _authenticatedBase.default.extend(_authorizedSettingsRoute.default, {\n        model() {\n            return Ember.RSVP.hash({\n                favoriteDiagnoses: this.store.findAll('favoriteDiagnosis').catch(() => ({ error: true })),\n                sortOrder: _favoriteDiagnosesSettings.default.getSortOrder(this.store)\n            });\n        },\n\n        setupController(controller, model) {\n            if (model.favoriteDiagnoses.error) {\n                controller.setProperties({\n                    error: true,\n                    model: [],\n                    sortOrder: model.sortOrder.preference\n                });\n            } else {\n                const { sortAscending, property } = model.sortOrder;\n                const sortProperties = [sortAscending ? property : `${property}:desc`];\n                controller.setProperties({\n                    error: false,\n                    model: model.favoriteDiagnoses,\n                    sortOrder: model.sortOrder.preference,\n                    sortProperties,\n                    sortAscending\n                });\n            }\n\n            this.send('openTab', tab);\n        },\n\n        actions: {\n            addFavoriteDiagnosis(diagnosis) {\n                const newRecord = this.store.createRecord('favoriteDiagnosis', {\n                    name: diagnosis.get('name'),\n                    code: diagnosis.get('code'),\n                    diagnosisCodes: diagnosis.get('diagnosisCodes')\n                });\n\n                Ember.run.next(newRecord, 'save');\n            },\n\n            removeDiagnosis(favoriteDiagnosis) {\n                if (favoriteDiagnosis && !favoriteDiagnosis.get('isDeleted')) {\n                    favoriteDiagnosis.destroyRecord();\n                }\n            },\n\n            retryAfterError() {\n                this.refresh();\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/smoking', ['exports', 'boot/routes/authenticated-base', 'clinical/models/smoking-status-type'], function (exports, _authenticatedBase, _smokingStatusType) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _authenticatedBase.default.extend({\n        _defaultTransition: () => {},\n        templateName: 'smoking',\n        tunnel: Ember.inject.service(),\n        authorization: Ember.inject.service('authorization'),\n        isAllowedToEdit: Ember.computed('authorization.entitledFeatures.[]', function () {\n            return this.get('authorization').isEntitledFor('Chart.SocialHistory.Edit');\n        }),\n        isNotAllowedToEdit: Ember.computed.not('isAllowedToEdit'),\n        model(param) {\n            const patientPracticeGuid = this.modelFor('patient').get('patientPracticeGuid');\n            if (param.id && param.id !== 'new') {\n                return this.store.query('smoking-status', { patientPracticeGuid }).then(statuses => statuses.findBy('id', param.id));\n            }\n            return this.get('store').createRecord('smoking-status', {\n                effectiveDate: moment(moment().format('MM/DD/YYYY')).toDate(),\n                patientPracticeGuid\n            });\n        },\n        serialize(model) {\n            const id = model && !model.get('isNew') ? model.get('id') : 'new';\n            return { id };\n        },\n        setupController(controller, model) {\n            this._super(controller, model);\n            this.send('refreshAd');\n            this.controllerFor(this.get('delegatingController')).setProperties({\n                currentDetailsPaneProperty: 'isEditingSmokingStatus'\n            });\n            this.get('tunnel').send('update-editing-social-history', {\n                isEditing: true,\n                fieldKey: 'tobaccoUse'\n            });\n            const smokingStatusGuid = model.get('smokingStatusGuid');\n            _smokingStatusType.default.getTypes(this.store).then(result => {\n                const activeResult = result.filterBy('isActive');\n                const inActiveOption = result.filter(item => {\n                    return !item.get('isActive') && item.get('smokingStatusGuid') === smokingStatusGuid;\n                });\n                controller.setProperties({\n                    'smokingStatusTypes': activeResult,\n                    'inActiveSmokingStatusType': inActiveOption.length > 0 ? inActiveOption[0] : null,\n                    'selectedValueImage': smokingStatusGuid,\n                    'isAllowedToEdit': this.get('isAllowedToEdit'),\n                    'isNotAllowedToEdit': this.get('isNotAllowedToEdit')\n                });\n            });\n        },\n        deactivate() {\n            const controller = this.controllerFor(this.get('delegatingController'));\n            const tunnelService = this.get('tunnel');\n\n            tunnelService.send('update-editing-social-history', {\n                isEditing: false\n            });\n\n            if (controller.get('currentDetailsPaneProperty') === 'isEditingSmokingStatus') {\n                controller.setProperties({\n                    currentDetailsPaneProperty: null\n                });\n            }\n        },\n        save() {\n            const smokingStatus = this.get('controller.model');\n            const patientPracticeGuid = this.modelFor('patient').get('patientPracticeGuid');\n\n            if (smokingStatus) {\n                if (smokingStatus.get('saveDisabled')) {\n                    this.rollback();\n                } else {\n                    const isNew = smokingStatus.get('isNew');\n                    const smokingStatusTypeGuid = smokingStatus.get('smokingStatusGuid');\n                    const smokingStatusType = smokingStatusTypeGuid ? this.get('store').peekRecord('smoking-status-type', smokingStatusTypeGuid) : null;\n                    let version = 2;\n                    if (smokingStatusType) {\n                        smokingStatus.set('description', smokingStatusType.get('description'));\n                        if (Ember.isPresent(smokingStatusType.get('version'))) {\n                            version = smokingStatusType.get('version');\n                        }\n                    }\n\n                    return smokingStatus.save({ adapterOptions: { version } }).then(() => {\n                        if (isNew) {\n                            const smokingStatuses = this.controllerFor(this.get('delegatingController')).get('smokingStatuses');\n                            if (smokingStatuses) {\n                                smokingStatuses.pushObject(smokingStatus);\n                            }\n                        }\n                        this.get('tunnel').send('behavioral-health-refresh', { patientPracticeGuid, reload: true });\n                    }).catch(error => {\n                        toastr.error(`Could not save tobacco use. Try again later.`);\n                        throw error;\n                    });\n                }\n            }\n            return Ember.RSVP.resolve(smokingStatus);\n        },\n        rollback() {\n            const smokingStatus = this.get('controller.model');\n            if (smokingStatus) {\n                if (smokingStatus.get('isNew')) {\n                    // Delete the record that was created when we opened the details pane.\n                    this.get('store').unloadRecord(smokingStatus);\n                    this.set('isDeleting', true);\n                } else {\n                    smokingStatus.rollbackAttributes();\n                }\n            }\n        },\n        bubbleAfterSave() {\n            const actionArgs = arguments;\n            if (this.get('controller.model.hasDirtyAttributes')) {\n                this.save().then(() => this.send.apply(this, actionArgs));\n                return false;\n            }\n            return true;\n        },\n        resetSelectedItem() {\n            const controller = this.controllerFor(this.get('delegatingController'));\n            if (controller === 'patient/summary') {\n                controller.send('closeDetailPane');\n            }\n        },\n        actions: {\n            save() {\n                this.transitionTo(this.get('_defaultTransition'));\n                this.resetSelectedItem();\n            },\n            delete() {\n                const smokingStatus = this.get('controller.model');\n                const patientPracticeGuid = this.modelFor('patient').get('patientPracticeGuid');\n                const title = 'tobacco use';\n                const titleCap = 'Tobacco use';\n\n                if (this.get('isDeleting')) {\n                    return;\n                }\n                this.set('isDeleting', true);\n\n                if (smokingStatus) {\n                    const smokingStatusTypeGuid = smokingStatus.get('smokingStatusGuid');\n                    const smokingStatusType = smokingStatusTypeGuid ? this.get('store').peekRecord('smoking-status-type', smokingStatusTypeGuid) : null;\n                    let version = 2;\n                    if (smokingStatusType && Ember.isPresent(smokingStatusType.get('version'))) {\n                        version = smokingStatusType.get('version');\n                    }\n\n                    smokingStatus.deleteRecord();\n                    smokingStatus.save({ adapterOptions: { version } }).then(() => {\n                        const smokingStatuses = this.controllerFor(this.get('delegatingController')).get('smokingStatuses');\n                        if (smokingStatuses) {\n                            smokingStatuses.removeObject(smokingStatus);\n                        }\n                        this.get('tunnel').send('behavioral-health-refresh', { patientPracticeGuid, reload: true });\n                        toastr.success(`${titleCap} deleted.`);\n                        this.transitionTo(this.get('_defaultTransition'));\n                        this.resetSelectedItem();\n                    }, () => toastr.error(`Could not delete ${title}. Try again later.`));\n                } else {\n                    this.transitionTo(this.get('_defaultTransition'));\n                    this.resetSelectedItem();\n                }\n            },\n            cancel() {\n                this.rollback();\n                this.transitionTo(this.get('_defaultTransition'));\n                this.resetSelectedItem();\n            },\n            undo() {\n                const smokingStatus = this.get('controller.model');\n                if (smokingStatus.get('isNew')) {\n                    smokingStatus.set('smokingStatusGuid', undefined);\n                } else {\n                    smokingStatus.rollbackAttributes();\n                }\n            },\n            willTransition(transition) {\n                if (this.get('isDeleting')) {\n                    this.set('isDeleting', false);\n                } else if (this.get('controller.model.hasDirtyAttributes')) {\n                    transition.abort();\n                    this.save().then(() => transition.retry());\n                    return false;\n                }\n                return true;\n            },\n            closeTab(tab) {\n                return this.bubbleAfterSave('closeTab', tab);\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/social', ['exports', 'boot/routes/authenticated-base'], function (exports, _authenticatedBase) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _authenticatedBase.default.extend({\n        _defaultTransition: () => {},\n        templateName: 'social',\n        tunnel: Ember.inject.service(),\n\n        model(param) {\n            const patientPracticeGuid = this.modelFor('patient').get('patientPracticeGuid');\n            return this.store.findRecord('social-history', patientPracticeGuid).then(history => {\n                history.set('defaultSection', param.section);\n                return history;\n            }).catch(() => {\n                const historyEmpty = this.store.createRecord('social-history', { patientPracticeGuid });\n                historyEmpty.set('defaultSection', param.section);\n                return historyEmpty;\n            });\n        },\n        setupController(controller, model) {\n            this._super(controller, model);\n            this.send('refreshAd');\n            this.controllerFor(this.get('delegatingController')).setProperties({\n                currentDetailsPaneProperty: 'isEditingSocialHistory'\n            });\n            this.store.findAll('social-history-option').then(result => {\n                controller.set('socialHistoryOptions', result.get('firstObject'));\n            });\n        },\n        deactivate() {\n            const controller = this.controllerFor(this.get('delegatingController'));\n            if (controller.get('currentDetailsPaneProperty') === 'isEditingSocialHistory') {\n                controller.setProperties({\n                    currentDetailsPaneProperty: null\n                });\n            }\n        },\n        save() {\n            const socialHistory = this.get('controller.model');\n            const delegatingController = this.get('delegatingController');\n            if (socialHistory) {\n                if (!socialHistory.get('saveDisabled')) {\n                    return socialHistory.save().then(() => {\n                        toastr.success('Social history saved.');\n                        this.set('controller.allowRollback', false);\n                        if (delegatingController === 'patient/summary') {\n                            if (Ember.isPresent(socialHistory)) {\n                                this.get('tunnel').send('social-history', {\n                                    genderIdentity: socialHistory.get('genderIdentity'),\n                                    sexualOrientation: socialHistory.get('sexualOrientation')\n                                });\n                            }\n                        } else {\n                            this.controllerFor(delegatingController).send('updateSocialHistory', socialHistory);\n                        }\n                    }).catch(error => {\n                        toastr.error('Could not save social history. Try again later.');\n                        throw error;\n                    });\n                }\n            }\n            return Ember.RSVP.resolve(socialHistory);\n        },\n        bubbleAfterSave(...args) {\n            if (this.get('controller.model.hasDirtyAttributes')) {\n                this.save().then(() => this.send(...args));\n                return false;\n            }\n            return true;\n        },\n        actions: {\n            save() {\n                this.set('forceSave', true);\n                this.transitionTo(this.get('_defaultTransition'));\n            },\n            delete(demographic) {\n                const socialHistory = this.get('controller.model');\n                const delegatingController = this.get('delegatingController');\n                if (this.get('isDeleting') || !demographic) {\n                    return;\n                }\n                if (socialHistory) {\n                    this.set('isDeleting', true);\n                    socialHistory.set('demographicToDelete', demographic.name);\n                    const adapter = this.store.adapterFor('social-history');\n                    adapter.deleteDemographic(socialHistory, demographic.name).then(() => {\n                        toastr.success(`${demographic.description} deleted.`);\n                        this.set(`controller.model.${demographic.name}`, null);\n                        if (delegatingController === 'patient/summary') {\n                            if (Ember.isPresent(this.get('controller.model'))) {\n                                this.get('tunnel').send('social-history', {\n                                    genderIdentity: this.get('controller.model.genderIdentity'),\n                                    sexualOrientation: this.get('controller.model.sexualOrientation')\n                                });\n                            }\n                        } else {\n                            this.controllerFor(delegatingController).send('updateSocialHistory', this.get('controller.model'));\n                        }\n                        this.set('controller.allowRollback', false);\n                    }, () => {\n                        toastr.error(`Could not delete ${demographic.description}. Try again later.`);\n                    }).finally(() => {\n                        this.set('isDeleting', false);\n                    });\n                }\n            },\n            cancel() {\n                this.set('isCancelled', true);\n                this.transitionTo(this.get('_defaultTransition'));\n            },\n            willTransition(transition) {\n                const currentRiskScore = this.get('controller.model.riskScore');\n                const allowRollback = this.get('controller.allowRollback');\n                if (this.get('isDeleting') || this.get('isCancelled')) {\n                    this.set('isDeleting', false);\n                    this.set('isCancelled', false);\n                } else if (this.get('forceSave')) {\n                    transition.abort();\n                    this.set('forceSave', false);\n                    this.save().then(() => {\n                        transition.retry();\n                    });\n                    return false;\n                }\n                if (allowRollback) {\n                    this.get('controller.model').rollbackAttributes();\n                }\n                this.set('controller.model.riskScore', currentRiskScore);\n                return true;\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/summary/advance-directive', ['exports', 'boot/routes/authenticated-base'], function (exports, _authenticatedBase) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _authenticatedBase.default.extend({\n        templateName: 'advance-directive',\n        tunnel: Ember.inject.service(),\n        model(param) {\n            const patientPracticeGuid = this.modelFor('patient').get('patientPracticeGuid');\n            if (param.id && param.id !== 'new') {\n                return this.store.query('advanced-directive', { patientPracticeGuid }).then(ads => ads.findBy('id', param.id));\n            }\n            return this.store.createRecord('advanced-directive', {\n                dateOfService: moment().startOf('day').toDate(),\n                patientPracticeGuid\n            });\n        },\n        serialize(model) {\n            const id = model && !model.get('isNew') ? model.get('id') : 'new';\n            return { id };\n        },\n        setupController(controller, model) {\n            this._super(controller, model);\n            this.send('refreshAd');\n        },\n        save() {\n            const advanceDirective = this.get('controller.model');\n            if (advanceDirective) {\n                if (advanceDirective.get('saveDisabled')) {\n                    this.rollback();\n                } else {\n                    const isNew = advanceDirective.get('isNew');\n                    return advanceDirective.save().then(() => {\n                        if (isNew) {\n                            this.get('tunnel').send('advance-directive', { refresh: true });\n                        }\n                    }).catch(error => {\n                        toastr.error('Could not save advance directive. Try again later.');\n                        throw error;\n                    });\n                }\n            }\n            return Ember.RSVP.resolve(advanceDirective);\n        },\n        rollback() {\n            const advanceDirective = this.get('controller.model');\n            if (advanceDirective) {\n                if (advanceDirective.get('isNew')) {\n                    // Delete the record that was created when we opened the details pane.\n                    this.get('store').unloadRecord(advanceDirective);\n                    this.set('isDeleting', true);\n                } else {\n                    advanceDirective.rollbackAttributes();\n                }\n            }\n        },\n        actions: {\n            save() {\n                this.transitionTo('patient.summary');\n            },\n            delete() {\n                const advanceDirective = this.get('controller.model');\n                if (this.get('isDeleting')) {\n                    return;\n                }\n                this.set('isDeleting', true);\n                if (advanceDirective) {\n                    advanceDirective.deleteRecord();\n                    advanceDirective.save().then(() => {\n                        toastr.success('Advance directive deleted.');\n                        this.get('tunnel').send('advance-directive', { refresh: true });\n                        this.transitionTo('patient.summary');\n                    }, () => toastr.error('Could not delete advance directive. Try again later.'));\n                } else {\n                    this.transitionTo('patient.summary');\n                }\n            },\n            cancel() {\n                this.rollback();\n                this.transitionTo('patient.summary');\n            },\n            willTransition(transition) {\n                if (this.get('isDeleting')) {\n                    this.set('isDeleting', false);\n                } else if (this.get('controller.model.hasDirtyAttributes')) {\n                    transition.abort();\n                    this.save().then(() => transition.retry());\n                    return false;\n                }\n                return true;\n            },\n            closeTab(tab) {\n                if (this.get('controller.model.hasDirtyAttributes')) {\n                    this.save().then(() => this.send('closeTab', tab));\n                    return false;\n                }\n                // bubble action so this is handled by Navigation\n                return true;\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/summary/allergy', ['exports', 'clinical/routes/allergy', 'clinical/mixins/summary-route'], function (exports, _allergy, _summaryRoute) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _allergy.default.extend(_summaryRoute.default, {\n        tunnel: Ember.inject.service(),\n\n        setupController(controller, model) {\n            const delegatingController = this.controllerFor(this.get('delegatingController'));\n\n            delegatingController.set('selectedItem', model);\n            this._super(controller, model);\n        },\n        deactivate() {\n            const delegatingController = this.controllerFor(this.get('delegatingController'));\n            delegatingController.set('selectedItem', null);\n            this.get('tunnel').send('allergies-list', { reloadFromCache: true });\n            this._super();\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/summary/behavioral', ['exports', 'clinical/mixins/summary-route', 'boot/routes/authenticated-base', 'clinical/repositories/worksheets', 'clinical/models/worksheet-responses'], function (exports, _summaryRoute, _authenticatedBase, _worksheets, _worksheetResponses) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _authenticatedBase.default.extend(_summaryRoute.default, {\n        templateName: 'behavioral',\n        tunnel: Ember.inject.service(),\n        model(params) {\n            const worksheetGuid = params.worksheetGuid;\n            const worksheetResponseGuid = params.worksheetResponseGuid;\n            const patientPracticeGuid = this.modelFor('patient').get('patientPracticeGuid');\n\n            if (worksheetResponseGuid === 'new') {\n                this.set('isNew', true);\n                return _worksheets.default.loadWorksheet(worksheetGuid).then(worksheet => {\n                    return _worksheetResponses.default.createFromWorksheet(worksheet, patientPracticeGuid);\n                });\n            } else {\n                this.set('isNew', false);\n                return _worksheets.default.loadResponses(worksheetResponseGuid).then(worksheetResponses => {\n                    return worksheetResponses;\n                });\n            }\n        },\n        setupController(controller, model) {\n            this._super(controller, model);\n            controller.set('isNew', this.get('isNew'));\n            this.get('tunnel').send('update-editing-social-history', {\n                isEditing: true,\n                fieldKey: model.get('socialHistoryKey')\n            });\n        },\n        deactivate() {\n            this.get('tunnel').send('update-editing-social-history', {\n                isEditing: false\n            });\n        },\n        actions: {\n            close() {\n                this.transitionTo(this.get('_defaultTransition'));\n                this.controllerFor('patient/summary').send('closeDetailPane');\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/summary/device', ['exports', 'clinical/routes/device', 'clinical/mixins/summary-route'], function (exports, _device, _summaryRoute) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _device.default.extend(_summaryRoute.default, {\n        tunnel: Ember.inject.service(),\n        closeAction: null,\n        setupController(controller, model) {\n            this._super(controller, model);\n            this.send('refreshAd');\n        },\n        deactivate() {\n            this._super.apply(this, arguments);\n\n            this.controllerFor('patient/summary').send('closeDetailPane');\n            this.get('tunnel').send('summary-devices-list');\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/summary/diagnosis', ['exports', 'clinical/routes/diagnosis', 'clinical/mixins/summary-route'], function (exports, _diagnosis, _summaryRoute) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _diagnosis.default.extend(_summaryRoute.default, {\n        deactivate() {\n            this._super.apply(this, arguments);\n\n            this.controllerFor('patient/summary').send('closeDetailPane');\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/summary/family-health-history', ['exports', 'clinical/routes/detail-pane', 'clinical/mixins/summary-route'], function (exports, _detailPane, _summaryRoute) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _detailPane.default.extend(_summaryRoute.default, {\n        templateName: 'family-health-history-details',\n        model() {\n            const patientPracticeGuid = this.modelFor('patient').get('patientPracticeGuid');\n            return this.get('store').findRecord('personal-medical-history', patientPracticeGuid);\n        },\n        setupController(controller, model) {\n            this._super(controller, model);\n            this.send('refreshAd');\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/summary/goal', ['exports', 'clinical/routes/goal', 'clinical/mixins/summary-route'], function (exports, _goal, _summaryRoute) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _goal.default.extend(_summaryRoute.default, {\n        setupController(controller, model) {\n            this._super(controller, model);\n            this.send('refreshAd');\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/summary/health-concern', ['exports', 'clinical/routes/health-concern', 'clinical/mixins/summary-route'], function (exports, _healthConcern, _summaryRoute) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _healthConcern.default.extend(_summaryRoute.default, {\n        setupController(controller, model) {\n            this._super(controller, model);\n            this.send('refreshAd');\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/summary/medication', ['exports', 'clinical/routes/medication', 'clinical/mixins/summary-route'], function (exports, _medication, _summaryRoute) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _medication.default.extend(_summaryRoute.default, {\n        // overridden properties\n        erxDenyNewToFollowRefillRequestGuid: null,\n        clearReferrerHash: false,\n\n        // hooks\n        model(params, transition, queryParams) {\n            queryParams = params.queryParams || transition.queryParams || queryParams || {};\n            var model = this._super.apply(this, arguments);\n            // set the guid for the referring refill request passed in via the queryParams\n            this.set('erxDenyNewToFollowRefillRequestGuid', queryParams.erxDenyNewToFollowRefillRequestGuid);\n            return model;\n        },\n\n        setupController(controller, model) {\n            this._super(controller, model);\n            // if this model contains a reference to a refill request that was DNTF,\n            // clear reference to the referrer route because we don't want to navigate back to it\n            if (!Ember.isEmpty(this.get('erxDenyNewToFollowRefillRequestGuid'))) {\n                this.clearReferrer();\n            }\n        },\n\n        deactivate() {\n            this._super.apply(this, arguments);\n\n            this.controllerFor('patient/summary').send('closeDetailPane');\n        },\n\n        _diagnosisRouteName: 'summary.diagnosis',\n\n        actions: {\n            createOrder(medicationGuid, quantity, unit, daysSupply) {\n                const queryParams = {\n                    medicationGuid,\n                    erxDenyNewToFollowRefillRequestGuid: this.get('erxDenyNewToFollowRefillRequestGuid')\n                };\n                if (quantity) {\n                    queryParams.quantity = quantity;\n                }\n                if (unit) {\n                    queryParams.unit = unit;\n                }\n                if (daysSupply) {\n                    queryParams.daysSupply = daysSupply;\n                }\n\n                this.set('didTransitionToOrder', true);\n                this.transitionTo('summary.erx.order', 'new', {\n                    queryParams\n                });\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/summary/nutrition', ['exports', 'boot/routes/authenticated-base', 'clinical/mixins/summary-route'], function (exports, _authenticatedBase, _summaryRoute) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _authenticatedBase.default.extend(_summaryRoute.default, {\n        templateName: 'nutrition',\n        tunnel: Ember.inject.service(),\n        model() {\n            return {\n                patientPracticeGuid: this.modelFor('patient').get('patientPracticeGuid')\n            };\n        },\n        setupController(controller, model) {\n            this._super(controller, model);\n            controller.get('load').perform();\n            this.get('tunnel').send('update-editing-social-history', {\n                isEditing: true,\n                fieldKey: 'nutritionHistory'\n            });\n        },\n        deactivate() {\n            this.get('tunnel').send('update-editing-social-history', {\n                isEditing: false\n            });\n        },\n        actions: {\n            close() {\n                this.transitionTo(this.get('_defaultTransition'));\n                this.controllerFor('patient/summary').send('closeDetailPane');\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/summary/pmh', ['exports', 'clinical/routes/pmh', 'clinical/mixins/summary-route'], function (exports, _pmh, _summaryRoute) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _pmh.default.extend(_summaryRoute.default, {});\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/summary/risk-score', ['exports', 'clinical/routes/risk-score', 'clinical/mixins/summary-route'], function (exports, _riskScore, _summaryRoute) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _riskScore.default.extend(_summaryRoute.default, {\n        tunnel: Ember.inject.service(),\n\n        deactivate() {\n            this._super.apply(this, arguments);\n            this.controllerFor('patient/summary').send('closeDetailPane');\n            this.get('tunnel').send('patient-risk-score');\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/summary/sia', ['exports', 'clinical/mixins/summary-route', 'boot/routes/authenticated-base', 'clinical/repositories/worksheets', 'boot/config', 'boot/util/pf-server', 'charting/models/transcript-event'], function (exports, _summaryRoute, _authenticatedBase, _worksheets, _config, _pfServer, _transcriptEvent) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _authenticatedBase.default.extend(_summaryRoute.default, {\n        templateName: 'sia',\n        model(params) {\n            const transcriptEvent = _transcriptEvent.default.wrap({});\n            const transcriptEventGuid = params.transcriptEventGuid;\n            const patientPracticeGuid = this.modelFor('patient').get('patientPracticeGuid');\n            // No real model for transcriptEvent, so send a ajax request here\n            const url = `${_config.default.chartingURL_v3}patients/${patientPracticeGuid}/transcriptEvents/${transcriptEventGuid}`;\n            return _pfServer.default.promise(url, 'GET').then(data => {\n                if (data) {\n                    data = data.transcriptEvent;\n                    transcriptEvent.set('content', data);\n                    transcriptEvent.set('patientPracticeGuid', patientPracticeGuid);\n                    const worksheetGuid = transcriptEvent.get('eventType.worksheetGuid');\n                    if (worksheetGuid) {\n                        _worksheets.default.loadResponsesFromTranscriptEncounterEvent(transcriptEvent).then(function (responses) {\n                            transcriptEvent.set('worksheetResponses', responses);\n                        });\n                    }\n                    return transcriptEvent;\n                } else {\n                    toastr.error('Failed to load the assessment');\n                    this.transitionTo(this.get('_defaultTransition'));\n                }\n            }).catch(() => {\n                toastr.error('Failed to load the assessment');\n                this.transitionTo(this.get('_defaultTransition'));\n            });\n        },\n        setupController(controller, model) {\n            this._super(controller, model);\n            controller.get('loadEncounterText').perform();\n        },\n        actions: {\n            close() {\n                this.transitionTo(this.get('_defaultTransition'));\n                this.controllerFor('patient/summary').send('closeDetailPane');\n            },\n            openEncounter(transcriptGuid) {\n                this.transitionTo('encounter', transcriptGuid);\n                this.controllerFor('patient/summary').send('closeDetailPane');\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/summary/smoking', ['exports', 'clinical/routes/smoking', 'clinical/mixins/summary-route'], function (exports, _smoking, _summaryRoute) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _smoking.default.extend(_summaryRoute.default, {});\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/summary/social-health', ['exports', 'clinical/routes/detail-pane', 'clinical/mixins/summary-route'], function (exports, _detailPane, _summaryRoute) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _detailPane.default.extend(_summaryRoute.default, {\n        templateName: 'social-health',\n        tunnel: Ember.inject.service(),\n        model(params) {\n            return {\n                patientPracticeGuid: this.modelFor('patient').get('patientPracticeGuid'),\n                socialHealthFieldKey: params.fieldKey\n            };\n        },\n        setupController(controller, model) {\n            this._super(controller, model);\n            controller.get('load').perform();\n            this.send('refreshAd');\n            this.get('tunnel').send('update-editing-social-history', {\n                isEditing: true,\n                fieldKey: Ember.get(model, 'socialHealthFieldKey')\n            });\n        },\n        deactivate() {\n            const socialHealth = this.get('controller.socialHealth');\n\n            if (Ember.isPresent(socialHealth)) {\n                socialHealth.undoChanges();\n            }\n\n            this.get('tunnel').send('update-editing-social-history', {\n                isEditing: false\n            });\n        },\n        actions: {\n            resetSelectedItem() {\n                this.controllerFor('patient/summary').send('closeDetailPane');\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/summary/social', ['exports', 'clinical/routes/social', 'clinical/mixins/summary-route'], function (exports, _social, _summaryRoute) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _social.default.extend(_summaryRoute.default, {});\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/summary/summary-pmh', ['exports', 'boot/routes/authenticated-base', 'clinical/mixins/summary-route'], function (exports, _authenticatedBase, _summaryRoute) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _authenticatedBase.default.extend(_summaryRoute.default, {\n        templateName: 'summary-pmh',\n        tunnel: Ember.inject.service(),\n\n        model(param) {\n            return {\n                patientPracticeGuid: this.modelFor('patient').get('patientPracticeGuid'),\n                section: param.fieldKey\n            };\n        },\n        setupController(controller, model) {\n            this._super(controller, model);\n            controller.get('loadPMH').perform(model.patientPracticeGuid);\n            controller.get('loadDisplaySetting').perform();\n            this.send('refreshAd');\n            this.get('tunnel').send('update-editing-past-medical-history', {\n                isEditing: true,\n                fieldKey: model.section\n            });\n        },\n        deactivate() {\n            this.get('tunnel').send('update-editing-past-medical-history', {\n                isEditing: false\n            });\n        },\n        actions: {\n            resetSelectedItem() {\n                this.controllerFor('patient/summary').send('closeDetailPane');\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/routes/support-info', ['exports', 'boot/routes/authenticated-base', 'boot/util/pf-string-util'], function (exports, _authenticatedBase, _pfStringUtil) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    const SUPPORT_RESOURCES = [{\n        id: 'pompeTestingInfo',\n        title: 'Pompe rare disease program',\n        tabTitle: 'Pompe information',\n        tagline: 'Clinical decision support in your EHR can help you identify patients with Pompe',\n        template: 'support/pompe',\n        trackingKey: 'Pompe Link Clicked'\n    }];\n    exports.default = _authenticatedBase.default.extend({\n        analytics: Ember.inject.service(),\n        tabRoute: 'support-info',\n        selectedResource: {},\n        previousRoute: 'charts.list',\n        previousRouteArguments: {},\n\n        model(params, transition, queryParams) {\n            queryParams = params.queryParams || transition.queryParams || queryParams || {};\n\n            if (queryParams.returnRoute) {\n                this.setProperties({\n                    previousRoute: queryParams.returnRoute,\n                    previousRouteArguments: _pfStringUtil.default.parseIfArray(queryParams.returnRouteArguments)\n                });\n            }\n\n            if (Ember.isEmpty(params.resourceId)) {\n                return null;\n            }\n            return Ember.Object.create(SUPPORT_RESOURCES.findBy('id', params.resourceId));\n        },\n        setupController(controller, model) {\n            let chartsController = this.controllerFor('charts'),\n                previousRoute = this.get('previousRoute'),\n                previousRouteArguments = this.get('previousRouteArguments');\n\n            controller.set('model', model);\n            this.set('selectedResource', model);\n\n            // Set up top navigation\n            chartsController.send('openTab', Ember.Object.create({\n                label: model.tabTitle || 'Support information',\n                route: 'supportInfo',\n                arg1: model.id,\n                transitionOnCloseRoute: previousRoute,\n                transitionOnCloseArguments: previousRouteArguments,\n                dismissible: true,\n                dupeOk: false\n            }));\n\n            this._super(controller, model);\n        },\n        actions: {\n            trackClick(id) {\n                let element = Ember.$('#' + id),\n                    href = element.attr('href'),\n                    key = this.get('selectedResource.trackingKey'),\n                    data = null;\n\n                if (key) {\n                    if (element) {\n                        data = {\n                            'Link Id': id,\n                            'Link Url': element.attr('href')\n                        };\n                    }\n                    this.get('analytics').track(key, data);\n                }\n                window.open(href, '_blank');\n            }\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/advanced-directive', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        isNewSerializerAPI: true,\n        normalizeResponse(store, primaryModelClass, payload, id, requestType) {\n            return this._super(store, primaryModelClass, { advanced_directives: payload }, id, requestType);\n        },\n        serializeIntoHash(hash, type, record, options) {\n            Ember.setProperties(hash, this.serialize(record, options));\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/allergy-reaction', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        primaryKey: 'title',\n        normalizeResponse(store, primaryModelClass, payload, id, requestType) {\n            return this._super(store, primaryModelClass, { 'allergy-reactions': payload.allergyReactions }, id, requestType);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/allergy-substance', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        primaryKey: 'title',\n        normalizeResponse(store, primaryModelClass, payload, id, requestType) {\n            return this._super(store, primaryModelClass, { 'allergy-substances': payload.allergySubstances }, id, requestType);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/appointment', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        primaryKey: 'scheduledEventGuid',\n        isNewSerializerAPI: true,\n        normalizeResponse(store, primaryModelClass, payload, id, requestType) {\n            return this._super(store, primaryModelClass, { appointment: payload }, id, requestType);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/behavioral-health', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        primaryKey: 'patientPracticeGuid',\n        normalizeResponse(store, type, payload, id, requestType) {\n            payload.nutritionHistory = {\n                description: payload.nutritionHistory,\n                id: 'nutritionHistory'\n            };\n            payload.nutritionHistory = {\n                content: payload.nutritionHistory,\n                worksheet: {\n                    sectionName: 'nutritionHistory'\n                },\n                isEmpty: Ember.isEmpty(payload.nutritionHistory.description)\n            };\n            payload.tobaccoUse = {\n                content: payload.tobaccoUse,\n                worksheet: {\n                    sectionName: 'tobaccoUse'\n                },\n                isEmpty: Ember.isEmpty(payload.tobaccoUse)\n            };\n            payload.alcoholUse.id = payload.alcoholUse.worksheetGuid;\n            payload.alcoholUse = {\n                content: payload.alcoholUse,\n                worksheet: {\n                    worksheetGuid: payload.alcoholUse.worksheetGuid,\n                    worksheetName: 'alcoholUseWorksheet'\n                },\n                isEmpty: Ember.isEmpty(payload.alcoholUse.worksheetResponseGuid)\n            };\n            payload.physicalActivity.id = payload.physicalActivity.worksheetGuid;\n            payload.physicalActivity = {\n                content: payload.physicalActivity,\n                worksheet: {\n                    worksheetGuid: payload.physicalActivity.worksheetGuid,\n                    worksheetName: 'physicalActivityWorksheet'\n                },\n                isEmpty: Ember.isEmpty(payload.physicalActivity.worksheetResponseGuid)\n            };\n            payload.stress.id = payload.stress.worksheetGuid;\n            payload.stress = {\n                content: payload.stress,\n                worksheet: {\n                    worksheetGuid: payload.stress.worksheetGuid,\n                    worksheetName: 'stressWorksheet'\n                },\n                isEmpty: Ember.isEmpty(payload.stress.worksheetResponseGuid)\n            };\n            payload.socialIsolation.id = payload.socialIsolation.worksheetGuid;\n            payload.socialIsolation = {\n                content: payload.socialIsolation,\n                worksheet: {\n                    worksheetGuid: payload.socialIsolation.worksheetGuid,\n                    worksheetName: 'socialIsolationWorksheet'\n                },\n                isEmpty: Ember.isEmpty(payload.socialIsolation.worksheetResponseGuid)\n            };\n            payload.exposureToViolence.id = payload.exposureToViolence.worksheetGuid;\n            payload.exposureToViolence = {\n                content: payload.exposureToViolence,\n                worksheet: {\n                    worksheetGuid: payload.exposureToViolence.worksheetGuid,\n                    worksheetName: 'exposureToViolenceWorksheet'\n                },\n                isEmpty: Ember.isEmpty(payload.exposureToViolence.worksheetResponseGuid)\n            };\n\n            payload = {\n                'behavioral-health': payload\n            };\n            return this._super(store, type, payload, id, requestType);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/care-team-member', ['exports', 'clinical/serializers/care-team'], function (exports, _careTeam) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _careTeam.default.extend({\n        serialize(snapshot) {\n            return {\n                providerProfileGuid: snapshot.record.get('id'),\n                relationships: snapshot.record.get('relationships')\n            };\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/care-team', ['exports', 'clinical/models/contact-to-profile-adapter', 'clinical/models/provider-profile-to-profile-adapter', 'ember-data/serializers/rest'], function (exports, _contactToProfileAdapter, _providerProfileToProfileAdapter, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    const relationshipTypeMap = {\n        PreferredProvider: 'Preferred provider in practice',\n        BackupProvider: 'Backup provider in practice',\n        PrimaryCareProvider: 'Primary care provider (PCP)',\n        ReferringProvider: 'Referring provider',\n        Other: 'Other provider'\n    };\n    function relationshipDisplayName(type, description) {\n        let display = relationshipTypeMap[type];\n        if (type === 'Other' && description) {\n            display += ` (${description})`;\n        }\n        return display;\n    }\n\n    exports.default = _rest.default.extend({\n        isNewSerializerAPI: true,\n        /**\n         * Converts a payload from careteam/members into a structure that maps to models/care-team-members\n         * expects a payload with practiceProviders, contacts and a careTeamMember object for each \"patientRelationship\"\n         * [\n         *   {\n         *     \"patientPracticeGuid\": \"e5c0f82f-ae70-4bc6-b889-ad26d22a2aa2\",\n         *     \"providerUserProfileGuid\": \"d7784e0c-2fb1-4e01-af3b-cd11070babc7\",\n         *     \"careTeamMemberType\": \"PrimaryCareProvider\",\n         *     \"description\": null\n         *   },\n         *   {\n         *     \"patientPracticeGuid\": \"e5c0f82f-ae70-4bc6-b889-ad26d22a2aa2\",\n         *     \"providerUserProfileGuid\": \"d7784e0c-2fb1-4e01-af3b-cd11070babc7\",\n         *     \"careTeamMemberType\": \"PreferredProvider\",\n         *     \"description\": \"foobar\"\n         *   },\n         *   {\n         *     \"patientPracticeGuid\": \"e5c0f82f-ae70-4bc6-b889-ad26d22a2aa2\",\n         *     \"providerUserProfileGuid\": \"d7784e0c-2fb1-4e01-af3b-cd11070babc7\",\n         *     \"careTeamMemberType\": \"Other\",\n         *     \"description\": \"barfoo\"\n         *   }\n         * ]\n         */\n        normalizeResponse(store, primaryModelClass, payload, id, requestType) {\n            const { patientPracticeGuid } = payload;\n            const uniqProfileGuids = payload.members.mapBy('providerUserProfileGuid').uniq();\n            const careTeamProfiles = uniqProfileGuids.map(profileGuid => {\n                const practiceProvider = payload.practiceProviders.findBy('profileGuid', profileGuid);\n                if (practiceProvider) {\n                    return _providerProfileToProfileAdapter.default.create({ providerProfile: practiceProvider, specialties: payload.specialties });\n                }\n                // It's not a practiceProvider, try to match a contact and adapt it to use a common interface\n                const contact = payload.contacts.findBy('id', profileGuid);\n                (true && !(contact) && Ember.assert(`${profileGuid} didn't match a provider or contact`, contact));\n\n                return contact ? _contactToProfileAdapter.default.create({ directoryContact: contact }) : null;\n            }).compact();\n            const careTeamMembers = careTeamProfiles.map(profile => {\n                const profileGuid = profile.get('id');\n                const relationships = payload.members.filterBy('providerUserProfileGuid', profileGuid).map(relationship => {\n                    return {\n                        careTeamMemberType: relationship.careTeamMemberType,\n                        description: relationship.description,\n                        display: relationshipDisplayName(relationship.careTeamMemberType, relationship.description)\n                    };\n                });\n                return {\n                    // This is needed by ember-data and not provided by the backend\n                    id: profileGuid,\n                    patientPracticeGuid,\n                    profile,\n                    relationships\n                };\n            });\n\n            const normalizedPayload = {\n                careTeam: {\n                    id: patientPracticeGuid,\n                    members: careTeamMembers.mapBy('id')\n                },\n                careTeamMembers\n            };\n            return this._super(store, primaryModelClass, normalizedPayload, id, requestType);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/ccda-document-type', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        isNewSerializerAPI: true,\n        primaryKey: 'code',\n        normalizeResponse(store, primaryModelClass, payload, id, requestType) {\n            return this._super(store, primaryModelClass, { ccdaDocumentTypes: payload.types }, id, requestType);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/ccda-template-component', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        isNewSerializerAPI: true,\n        primaryKey: 'code',\n        normalizeResponse(store, primaryModelClass, payload, id, requestType) {\n            const components = payload.optional.concat(payload.required.map(item => {\n                // change primaryKey to name once we remove is feature bit\n                if (!item.code) {\n                    item.code = item.name;\n                }\n                item.isRequired = true;\n                return item;\n            }));\n            return this._super(store, primaryModelClass, { ccdaTemplateComponents: components }, id, requestType);\n        }\n\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/clinical-document', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        isNewSerializerAPI: true,\n        primaryKey: 'documentGuid',\n        normalizeResponse(store, primaryModelClass, payload, id, requestType) {\n            return this._super(store, primaryModelClass, { clinicalDocuments: payload.ccdSummaries }, id, requestType);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/demographic-option', ['exports', 'ember-data/serializers/rest', 'ember-data'], function (exports, _rest, _emberData) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend(_emberData.default.EmbeddedRecordsMixin, {\n        primaryKey: 'optionGuid',\n        isNewSerializerAPI: true\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/ethnicity-option', ['exports', 'ember-data/serializers/rest', 'ember-data'], function (exports, _rest, _emberData) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend(_emberData.default.EmbeddedRecordsMixin, {\n        isNewSerializerAPI: true,\n        primaryKey: 'optionGuid',\n        attrs: {\n            subOptions: { embedded: 'always' }\n        },\n        normalizeResponse(store, primaryModelClass, payload, id, requestType) {\n            return this._super(store, primaryModelClass, { 'ethnicity-options': payload }, id, requestType);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/favorite-diagnosis', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        isNewSerializerAPI: true,\n        normalizeResponse(store, primaryModelClass, payload, id, requestType) {\n            let normalizePayload;\n            if (payload.favoriteDiagnoses) {\n                normalizePayload = payload;\n            } else {\n                normalizePayload = { favoriteDiagnoses: [] };\n            }\n            return this._super(store, primaryModelClass, normalizePayload, id, requestType);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/immunization-drug', ['exports', 'ember-data/serializers/rest', 'ember-data'], function (exports, _rest, _emberData) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend(_emberData.default.EmbeddedRecordsMixin, {\n        attrs: {\n            vaccinationSites: { embedded: 'always' }\n        },\n        isNewSerializerAPI: true,\n        primaryKey: 'immunizationDrugGuid'\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/immunization-funding-source', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        isNewSerializerAPI: true,\n        primaryKey: 'conceptCode'\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/immunization-option-notification', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        primaryKey: 'notificationPreferenceCode'\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/immunization-option-protection', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        primaryKey: 'immunizationProtectionTypeId'\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/immunization-option-status', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        primaryKey: 'immunizationRegistryPatientStatusId'\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/immunization-registry-connection-property', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        isNewSerializerAPI: true,\n        primaryKey: 'immunizationRegistryConnectionPropertyGuid',\n\n        serialize(snapshot) {\n            const ironBridgePropertyValue = (snapshot.attr('ironBridgePropertyValue') || '').trim();\n\n            return {\n                immunizationRegistryConnectionPropertyGuid: snapshot.id,\n                ironBridgePropertyId: snapshot.attr('ironBridgePropertyId'),\n                ironBridgePropertyValue: Ember.isPresent(ironBridgePropertyValue) ? ironBridgePropertyValue : null\n            };\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/immunization-registry-connection', ['exports', 'ember-data/serializers/rest', 'ember-data'], function (exports, _rest, _emberData) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend(_emberData.default.EmbeddedRecordsMixin, {\n        attrs: {\n            properties: { embedded: 'always' }\n        },\n        isNewSerializerAPI: true,\n        primaryKey: 'immunizationRegistryConnectionGuid',\n\n        normalizeArrayResponse(store, type, payload, id, requestType) {\n            payload = {\n                'immunization-registry-connections': payload\n            };\n\n            return this._super(store, type, payload, id, requestType);\n        },\n\n        normalizeCreateRecordResponse(store, type, payload, id, requestType) {\n            store.peekAll('immunization-registry-connection-property').forEach(connectionProperty => {\n                if (Ember.isEmpty(connectionProperty.get('id'))) {\n                    store.unloadRecord(connectionProperty);\n                }\n            });\n\n            payload = {\n                'immunization-registry-connection': payload\n            };\n\n            return this._super(store, type, payload, id, requestType);\n        },\n\n        normalizeDeleteRecordResponse(store, type, payload, id, requestType) {\n            payload = {\n                'immunization-registry-connection': null\n            };\n\n            return this._super(store, type, payload, id, requestType);\n        },\n\n        normalizeUpdateRecordResponse(store, type, payload, id, requestType) {\n            payload = {\n                'immunization-registry-connection': payload\n            };\n\n            return this._super(store, type, payload, id, requestType);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/immunization-registry-filter', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        normalizeResponse(store, type, payload, id, requestType) {\n            return this._super(store, type, { 'immunization-registry-filter': payload }, id, requestType);\n        },\n        serialize(snapshot, isAdvanced) {\n            const isMultipleBirth = Ember.get(snapshot.record, 'isMultipleBirth');\n            const isMultipleBirthPresent = Ember.isPresent(isMultipleBirth);\n            const birthOrder = Ember.get(snapshot.record, 'birthOrder');\n            const isBirthOrderPresent = Ember.isPresent(birthOrder);\n            // Set birthOrder to either the user defined value, or 1 if isMultpleBirth is set to false\n            const serializedBirthOrder = isBirthOrderPresent ? birthOrder : isMultipleBirthPresent && !isMultipleBirth && 1;\n\n            const basicFilters = {\n                dateOfBirth: Ember.get(snapshot.record, 'dateOfBirth'),\n                firstName: Ember.get(snapshot.record, 'firstName'),\n                gender: Ember.get(snapshot.record, 'gender'),\n                lastName: Ember.get(snapshot.record, 'lastName'),\n                middleName: Ember.get(snapshot.record, 'middleName'),\n                mothersMaidenName: Ember.get(snapshot.record, 'mothersMaidenName')\n            };\n\n            const advancedFilters = {\n                address1: Ember.get(snapshot.record, 'address1'),\n                address2: Ember.get(snapshot.record, 'address2'),\n                birthOrder: serializedBirthOrder || null,\n                city: Ember.get(snapshot.record, 'city'),\n                isMultipleBirth,\n                patientRecordNumber: Ember.get(snapshot.record, 'patientRecordNumber'),\n                phoneNumber: Ember.get(snapshot.record, 'phoneNumber'),\n                postalCode: Ember.get(snapshot.record, 'postalCode'),\n                state: Ember.get(snapshot.record, 'state')\n            };\n\n            return isAdvanced ? Ember.merge(basicFilters, advancedFilters) : basicFilters;\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/immunization-registry-notification-preference', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        primaryKey: 'code',\n        isNewSerializerAPI: true\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/immunization-registry-option', ['exports', 'ember-data/serializers/rest', 'ember-data/serializers/embedded-records-mixin'], function (exports, _rest, _embeddedRecordsMixin) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend(_embeddedRecordsMixin.default, {\n        attrs: {\n            immunizationRegistryNotificationOptions: { embedded: 'always' },\n            immunizationRegistryStatusOptions: { embedded: 'always' },\n            immunizationRegistryProtectionOptions: { embedded: 'always' }\n        },\n        normalizeResponse(store, type, payload, id, requestType) {\n            if (payload) {\n                payload.id = 1;\n            }\n            return this._super(store, type, { 'immunization-registry-option': [payload] }, id, requestType);\n        },\n        serializeIntoHash(hash, type, record, options) {\n            Ember.setProperties(hash, this.serialize(record, options));\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/immunization-registry-property', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        isNewSerializerAPI: true,\n        primaryKey: 'ironBridgePropertyId',\n\n        normalizeResponse(store, type, payload, id, requestType) {\n            payload = {\n                'immunization-registry-properties': payload\n            };\n            return this._super(store, type, payload, id, requestType);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/immunization-registry-result', ['exports', 'ember-data/serializers/rest', 'ember-data/serializers/embedded-records-mixin'], function (exports, _rest, _embeddedRecordsMixin) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend(_embeddedRecordsMixin.default, {\n        attrs: {\n            patientFilters: { embedded: 'always' }\n        },\n        isNewSerializerAPI: true,\n        primaryKey: 'resultId',\n\n        normalizeResponse(store, type, payload, id, requestType) {\n            return this._super(store, type, { 'immunization-registry-result': payload }, id, requestType);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/immunization-registry', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        isNewSerializerAPI: true,\n        primaryKey: 'immunizationRegistryGuid',\n\n        normalizeResponse(store, type, payload, id, requestType) {\n            payload = {\n                'immunization-registries': payload\n            };\n            return this._super(store, type, payload, id, requestType);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/immunization-transmission-status', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        primaryKey: 'immunizationTransmissionHistoryGuid',\n\n        normalizeResponse(store, type, payload, id, requestType) {\n            const transmissions = payload ? payload.transmissions || [] : [];\n            return this._super(store, type, { 'immunization-transmission-status': transmissions }, id, requestType);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/immunization', ['exports', 'ember-data/serializers/rest', 'ember-data'], function (exports, _rest, _emberData) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend(_emberData.default.EmbeddedRecordsMixin, {\n        attrs: {\n            vaccinations: { embedded: 'always' }\n        },\n        isNewSerializerAPI: true,\n        primaryKey: 'immunizationGroupGuid',\n\n        normalizeResponse(store, type, payload, id, requestType) {\n            payload = {\n                'immunizations': payload\n            };\n            return this._super(store, type, payload, id, requestType);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/patient-allergy', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        primaryKey: 'patientAllergyGuid',\n        serializeIntoHash(hash, type, record, options) {\n            const data = this.serialize(record, options);\n            if (record.id) {\n                data.patientAllergyGuid = record.id;\n            }\n            Ember.setProperties(hash, data);\n        },\n        normalizeQueryResponse(store, primaryModelClass, payload, id, requestType) {\n            return this._super(store, primaryModelClass, {\n                patientAllergies: payload.patientAllergies,\n                meta: {\n                    noKnownAllergies: payload.noKnownAllergies\n                }\n            }, id, requestType);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/patient-goal', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        primaryKey: 'patientGoalGuid',\n        isNewSerializerAPI: true,\n        serializeIntoHash(hash, type, record, options) {\n            const data = this.serialize(record, options);\n            if (record.id) {\n                data.patientGoalGuid = record.id;\n            }\n            Ember.setProperties(hash, data);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/patient-health-concern', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        primaryKey: 'patientHealthConcernGuid',\n        isNewSerializerAPI: true,\n        serializeIntoHash(hash, type, record, options) {\n            const data = this.serialize(record, options);\n            if (data.healthConcernType === 'Note') {\n                delete data.healthConcernReferenceGuid;\n                delete data.effectiveDate;\n                delete data.isActive;\n            } else {\n                delete data.healthConcernNote;\n            }\n            if (record.id) {\n                data.patientHealthConcernGuid = record.id;\n            }\n            Ember.setProperties(hash, data);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/patient-summary-sia', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        primaryKey: 'transcriptEventGuid',\n        patientPracticeGuid: null,\n\n        normalizeResponse(store, primaryModelClass, payload, id, requestType) {\n            const data = payload.transcriptEvents;\n            this.set('patientPracticeGuid', payload.query.patientPracticeGuid);\n            delete payload.transcriptEvents;\n            payload['patient-summary-sias'] = data;\n            return this._super(store, primaryModelClass, payload, id, requestType);\n        },\n        normalize(model, hash, prop) {\n            hash.patientPracticeGuid = this.get('patientPracticeGuid');\n            return this._super(model, hash, prop);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/patient-summary', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    const fieldsToEmpty = ['emailAddress', 'homePhone', 'mobilePhone', 'workPhone', 'primaryInsurancePlan'];\n    exports.default = _rest.default.extend({\n        primaryKey: 'patientPracticeGuid',\n\n        normalize(typeClass, hash) {\n            // Rollback will only revert fields that were received from services.\n            // patientRibbonInfo doesn't include empty fields, so we'll set them to null here.\n            fieldsToEmpty.forEach(function (key) {\n                if (!hash.hasOwnProperty(key)) {\n                    hash[key] = null;\n                }\n            });\n            const relationships = {\n                genderOption: {\n                    data: { type: 'gender-option', id: hash.gender }\n                }\n            };\n            const normalizedHash = {\n                data: {\n                    id: hash.patientPracticeGuid,\n                    type: typeClass.modelName,\n                    attributes: hash,\n                    relationships\n                }\n            };\n            if (hash.pinnedPatientNote) {\n                relationships.pinnedPatientNote = {\n                    data: { type: 'patient-note', id: hash.patientPracticeGuid }\n                };\n                normalizedHash.included = [{\n                    type: 'patient-note',\n                    id: hash.patientPracticeGuid,\n                    attributes: hash.pinnedPatientNote\n                }];\n                delete hash.pinnedPatientNote;\n            }\n\n            return normalizedHash;\n        },\n        normalizeResponse(store, type, payload, id, requestType) {\n            const record = store.peekRecord('patient-note', id);\n\n            if (record && Ember.isEmpty(payload.pinnedPatientNote)) {\n                store.unloadRecord(record);\n            }\n            payload = {\n                'patient-summary': payload\n            };\n\n            return this._super(store, type, payload, id, requestType);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/personal-medical-history', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        primaryKey: 'patientPracticeGuid',\n        isNewSerializerAPI: true,\n        normalizeResponse(store, primaryModelClass, payload, id, requestType) {\n            return this._super(store, primaryModelClass, { personal_medical_history: payload }, id, requestType);\n        },\n        serializeIntoHash(hash, type, record, options) {\n            const newOptions = options || {};\n            newOptions.includeId = true;\n            Ember.setProperties(hash, this.serialize(record, newOptions));\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/race-option', ['exports', 'ember-data/serializers/rest', 'ember-data'], function (exports, _rest, _emberData) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend(_emberData.default.EmbeddedRecordsMixin, {\n        isNewSerializerAPI: true,\n        primaryKey: 'optionGuid', // TODO: Change this if contract changes to use guid instead of code\n        attrs: {\n            subOptions: { embedded: 'always' }\n        },\n        normalizeResponse(store, primaryModelClass, payload, id, requestType) {\n            return this._super(store, primaryModelClass, { 'race-options': payload }, id, requestType);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/recent-patient', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        isNewSerializerAPI: true,\n        primaryKey: 'patientPracticeGuid',\n        normalizeResponse(store, primaryModelClass, payload, id, requestType) {\n            return this._super(store, primaryModelClass, { recentPatients: payload }, id, requestType);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/smoking-status-type', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        isNewSerializerAPI: true,\n        primaryKey: 'smokingStatusGuid',\n        normalizeResponse(store, primaryModelClass, payload, id, requestType) {\n            const smokingStatusTypes = payload.smokingStatuses;\n            return this._super(store, primaryModelClass, { smokingStatusTypes }, id, requestType);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/smoking-status', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        primaryKey: 'patientSmokingStatusGuid',\n        normalize(type, hash) {\n            const smokingHash = hash;\n\n            smokingHash.effectiveDate = moment.utc(hash.effectiveDate).format('MM/DD/YYYY');\n\n            return this._super(type, smokingHash);\n        },\n        normalizeResponse(store, primaryModelClass, payload, id, requestType) {\n            const normalizedPayload = {};\n            if (payload.patientSmokingStatus) {\n                normalizedPayload.smokingStatus = payload.patientSmokingStatus;\n            } else {\n                normalizedPayload.smokingStatuses = payload.patientSmokingStatuses;\n            }\n            return this._super(store, primaryModelClass, normalizedPayload, id, requestType);\n        },\n        serializeIntoHash(hash, type, snapshot, options) {\n            Ember.setProperties(hash, this.serialize(snapshot, options));\n            hash.effectiveDate = moment(snapshot.attr('effectiveDate')).format('MM/DD/YYYY');\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/social-health-field', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        normalize(type, hash) {\n            const fieldHash = {\n                id: hash.id,\n                description: Ember.get(hash, 'description') || '',\n                effectiveDate: Ember.get(hash, 'lastModifiedDateTimeUtc') || '',\n                notes: Ember.get(hash, 'notes') || '',\n                optionGuid: Ember.get(hash, 'optionGuid') || '',\n                supportsEffectiveDate: Ember.get(hash, 'supportsEffectiveDate') || false\n            };\n\n            return this._super(type, fieldHash);\n        },\n\n        serialize(snapshot) {\n            const json = snapshot.record.toJSON();\n\n            if (Ember.isPresent(json.effectiveDate)) {\n                json.lastModifiedDateTimeUtc = json.effectiveDate;\n            }\n\n            delete json.effectiveDate;\n            delete json.supportsEffectiveDate;\n\n            return json;\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/social-health', ['exports', 'ember-data/serializers/rest', 'ember-data'], function (exports, _rest, _emberData) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend(_emberData.default.EmbeddedRecordsMixin, {\n        attrs: {\n            education: { embedded: 'always' },\n            financialResourceStatus: { embedded: 'always' },\n            genderIdentity: { embedded: 'always' },\n            sexualOrientation: { embedded: 'always' },\n            socialHistory: { embedded: 'always' }\n        },\n\n        normalize(type, hash) {\n            const socialHealthFieldNames = Ember.get(type, 'relationshipNames').belongsTo;\n            const socialHealthFields = socialHealthFieldNames.map(fieldName => {\n                let fieldHash;\n\n                switch (fieldName) {\n                    case 'socialHistory':\n                        fieldHash = {\n                            description: hash[fieldName] || ''\n                        };\n                        break;\n                    case 'education':\n                    case 'financialResourceStatus':\n                        fieldHash = hash[fieldName] || {};\n                        fieldHash.supportsEffectiveDate = true;\n                        break;\n                    default:\n                        fieldHash = hash[fieldName] || {};\n                        break;\n                }\n\n                fieldHash.id = `${hash.id}-${fieldName}`;\n\n                return fieldHash;\n            });\n            const socialHealthHash = _.object(socialHealthFieldNames, socialHealthFields);\n\n            socialHealthHash.id = hash.id;\n\n            return this._super(type, socialHealthHash);\n        },\n\n        normalizeResponse(store, type, payload, id, requestType) {\n            const socialHealthPayload = {\n                'social-health': payload\n            };\n\n            return this._super(store, type, socialHealthPayload, id, requestType);\n        },\n\n        serialize(snapshot) {\n            const json = {\n                id: snapshot.id\n            };\n\n            snapshot.eachRelationship(fieldName => {\n                if (Ember.isPresent(snapshot.record.get(`${fieldName}.content`))) {\n                    json[fieldName] = snapshot.belongsTo(fieldName).serialize();\n\n                    if (fieldName === 'socialHistory') {\n                        json.socialHistory = json.socialHistory.description;\n                    }\n                }\n            });\n\n            return json;\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/social-history-option', ['exports', 'ember-data/serializers/rest', 'ember-data'], function (exports, _rest, _emberData) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend(_emberData.default.EmbeddedRecordsMixin, {\n        attrs: {\n            genderIdentityOptions: { embedded: 'always' },\n            sexualOrientationOptions: { embedded: 'always' },\n            riskScoreOptions: { embedded: 'always' }\n        },\n        isNewSerializerAPI: true,\n\n        normalizeResponse(store, type, payload, id, requestType) {\n            if (payload) {\n                payload.id = 1;\n            }\n            payload = {\n                'social-history-option': [payload]\n            };\n            return this._super(store, type, payload, id, requestType);\n        },\n        serializeIntoHash(hash, type, record, options) {\n            Ember.setProperties(hash, this.serialize(record, options));\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/social-history', ['exports', 'ember-data/serializers/rest', 'ember-data'], function (exports, _rest, _emberData) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend(_emberData.default.EmbeddedRecordsMixin, {\n        isNewSerializerAPI: true,\n        primaryKey: 'patientPracticeGuid',\n        normalizeResponse(store, type, payload, id, requestType) {\n            if (payload.riskScore && payload.riskScore.dateAssigned) {\n                payload.riskScore.dateAssigned = moment.utc(payload.riskScore.dateAssigned).format('MM/DD/YYYY');\n            }\n            payload = {\n                'social-history': [payload]\n            };\n            return this._super(store, type, payload, id, requestType);\n        },\n        serializeIntoHash(hash, type, record, options) {\n            Ember.setProperties(hash, this.serialize(record, options));\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/sub-demographic-option', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        isNewSerializerAPI: true,\n        primaryKey: 'optionGuid'\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/vaccination-indication', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        primaryKey: 'scheduleSpecialIndicationGuid'\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/vaccination-reaction', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        primaryKey: 'adverseReactionGuid'\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/vaccination-rejection', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        primaryKey: 'nipName',\n        isNewSerializerAPI: true\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/vaccination-route', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        primaryKey: 'code',\n        isNewSerializerAPI: true\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/vaccination-site', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        primaryKey: 'code',\n        isNewSerializerAPI: true\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/vaccination-source', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        primaryKey: 'vaccinationSourceName',\n        isNewSerializerAPI: true\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/vaccination-unit', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        primaryKey: 'code',\n        isNewSerializerAPI: true\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/vaccination', ['exports', 'ember-data/serializers/rest', 'ember-data'], function (exports, _rest, _emberData) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend(_emberData.default.EmbeddedRecordsMixin, {\n        attrs: {\n            immunizationFundingSource: { embedded: 'always' },\n            immunizationRegistryNotificationPreference: { embedded: 'always' },\n            manufacturer: { embedded: 'always' },\n            rejectionReason: { embedded: 'always' },\n            route: { embedded: 'always' },\n            site: { embedded: 'always' },\n            source: { embedded: 'always' },\n            vaccineInventory: { embedded: 'always' },\n            vaccineType: { embedded: 'always' },\n            vfcStatus: { embedded: 'always' }\n        },\n        isNewSerializerAPI: true,\n        isLookupByParentType: true,\n        primaryKey: 'vaccinationGuid',\n\n        normalize(type, payload) {\n            if (payload.vaccinationGuid) {\n                payload.visVersionDate = this.normalizeVaccinationDate(payload.visVersionDate);\n                payload.vaccinationDate = this.normalizeVaccinationDate(payload.vaccinationDate);\n                payload.vaccineLotExpirationDate = this.normalizeVaccinationDate(payload.vaccineLotExpirationDate);\n                payload.rejectionReasonExpirationDate = this.normalizeVaccinationDate(payload.rejectionReasonExpirationDate);\n            }\n\n            return this._super(...arguments);\n        },\n\n        normalizeSingleResponse(store, primaryModelClass, payload, id, requestType) {\n            const vaccinationPayload = {\n                vaccination: payload\n            };\n\n            return this._super(store, primaryModelClass, vaccinationPayload, id, requestType);\n        },\n\n        normalizeVaccinationDate(dateValue) {\n            if (dateValue && dateValue !== 'Invalid Date') {\n                return moment.utc(dateValue).format('MM/DD/YYYY');\n            } else {\n                return '';\n            }\n        },\n\n        serialize(record, options) {\n            var vaccinationJSON = this._super(record, options);\n\n            if (vaccinationJSON.vaccineInventory && vaccinationJSON.vaccineInventory.vaccineType) {\n                vaccinationJSON.vaccineInventory.vaccineType = null;\n            }\n\n            if (vaccinationJSON.vaccineInventory && !vaccinationJSON.vaccineInventory.vaccineLotNumber) {\n                vaccinationJSON.vaccineInventory.vaccineLotNumber = vaccinationJSON.vaccineLotNumber;\n            }\n\n            return vaccinationJSON;\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/vaccine-inventory', ['exports', 'ember-data/serializers/rest', 'ember-data'], function (exports, _rest, _emberData) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend(_emberData.default.EmbeddedRecordsMixin, {\n        attrs: {\n            immunizationFundingSource: { embedded: 'always' },\n            vaccineManufacturer: { embedded: 'always' },\n            vaccineType: { embedded: 'always' }\n        },\n        isNewSerializerAPI: true,\n        primaryKey: 'vaccineInventoryGuid',\n\n        normalizeResponse(store, type, payload, id, requestType) {\n            payload = {\n                'vaccine-inventories': payload\n            };\n            return this._super(store, type, payload, id, requestType);\n        },\n\n        normalize(type, vaccineInventory) {\n            if (vaccineInventory.vaccineExpirationDate && moment(vaccineInventory.vaccineExpirationDate).isAfter('1800-01-01')) {\n\n                // The vaccination search and vaccinations endpoints return different formats for this property.\n                if (vaccineInventory.vaccineExpirationDate.endsWith('Z')) {\n                    vaccineInventory.vaccineExpirationDate = moment.utc(vaccineInventory.vaccineExpirationDate).format('MM/DD/YYYY');\n                } else {\n                    vaccineInventory.vaccineExpirationDate = moment(vaccineInventory.vaccineExpirationDate).format('MM/DD/YYYY');\n                }\n            } else {\n                vaccineInventory.vaccineExpirationDate = '';\n            }\n\n            return this._super(...arguments);\n        },\n\n        serialize(record, options) {\n            var vaccineInventoryJSON = this._super(record, options);\n\n            if (vaccineInventoryJSON.vaccineType && vaccineInventoryJSON.vaccineType.manufacturers) {\n                vaccineInventoryJSON.vaccineType.manufacturers = null;\n            }\n\n            return vaccineInventoryJSON;\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/vaccine-lookup-datum', ['exports', 'ember-data/serializers/rest', 'ember-data'], function (exports, _rest, _emberData) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend(_emberData.default.EmbeddedRecordsMixin, {\n        attrs: {\n            immunizationFundingSources: { embedded: 'always' },\n            notificationPreferences: { embedded: 'always' },\n            rejectionReasons: { embedded: 'always' },\n            routes: { embedded: 'always' },\n            sites: { embedded: 'always' },\n            sources: { embedded: 'always' },\n            vaccinationAdverseReactions: { embedded: 'always' },\n            vaccinationScheduleSpecialIndications: { embedded: 'always' },\n            vaccinationUnits: { embedded: 'always' },\n            vfcStatuses: { embedded: 'always' },\n            visConcepts: { embedded: 'always' }\n        },\n\n        normalizeResponse(store, type, payload) {\n            let relationships;\n\n            payload.id = 1;\n\n            payload = {\n                'vaccine-lookup-datum': [payload]\n            };\n\n            payload = this._super(...arguments);\n\n            relationships = _.groupBy(payload.included, relationship => relationship.type);\n\n            payload.data = {\n                id: 1,\n                type: type.modelName,\n                attributes: {\n                    id: 1\n                },\n                relationships: {\n                    immunizationFundingSources: {\n                        data: this.getRelationshipDataForType('immunization-funding-source', relationships)\n                    },\n                    notificationPreferences: {\n                        data: this.getRelationshipDataForType('immunization-registry-notification-preference', relationships)\n                    },\n                    rejectionReasons: {\n                        data: this.getRelationshipDataForType('vaccination-rejection', relationships)\n                    },\n                    routes: {\n                        data: this.getRelationshipDataForType('vaccination-route', relationships)\n                    },\n                    sites: {\n                        data: this.getRelationshipDataForType('vaccination-site', relationships)\n                    },\n                    sources: {\n                        data: this.getRelationshipDataForType('vaccination-source', relationships)\n                    },\n                    vaccinationAdverseReactions: {\n                        data: this.getRelationshipDataForType('vaccination-reaction', relationships)\n                    },\n                    vaccinationScheduleSpecialIndications: {\n                        data: this.getRelationshipDataForType('vaccination-indication', relationships)\n                    },\n                    vaccinationUnits: {\n                        data: this.getRelationshipDataForType('vaccination-unit', relationships)\n                    },\n                    vfcStatuses: {\n                        data: this.getRelationshipDataForType('vfc-status', relationships)\n                    },\n                    visConcepts: {\n                        data: this.getRelationshipDataForType('vis-concept', relationships)\n                    }\n                }\n            };\n\n            return payload;\n        },\n\n        modelNameFromPayloadKey(key) {\n            switch (key) {\n                case 'immunizationFundingSources':\n                    return 'immunization-funding-source';\n                case 'notificationPreferences':\n                    return 'immunization-registry-notification-preference';\n                case 'rejectionReasons':\n                    return 'vaccination-rejection';\n                case 'routes':\n                    return 'vaccination-route';\n                case 'sites':\n                    return 'vaccination-site';\n                case 'sources':\n                    return 'vaccination-source';\n                case 'vaccinationAdverseReactions':\n                    return 'vaccination-reaction';\n                case 'vaccinationScheduleSpecialIndications':\n                    return 'vaccination-indication';\n                case 'vaccinationUnits':\n                    return 'vaccination-unit';\n                case 'vfcStatuses':\n                    return 'vfc-status';\n                case 'visConcepts':\n                    return 'vis-concept';\n                case 'id':\n                    return 'vaccine-lookup-datum';\n                default:\n                    return this._super(...arguments);\n            }\n        },\n\n        getRelationshipDataForType(modelName, relationships) {\n            return (relationships[modelName] || []).map(relationship => {\n                return { id: relationship.id, type: modelName };\n            });\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/vaccine-lot-usage', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        isNewSerializerAPI: true,\n        primaryKey: 'vaccinationGuid',\n        normalizeResponse(store, primaryModelClass, payload, id, requestType) {\n            return this._super(store, primaryModelClass, { vaccine_lot_usages: payload }, id, requestType);\n        },\n        normalize(typeClass, hash, prop) {\n            if (hash.vaccinationDate) {\n                hash.vaccinationDate = moment.utc(hash.vaccinationDate).format('MM/DD/YYYY');\n            }\n\n            return this._super(typeClass, hash, prop);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/vaccine-manufacturer', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        primaryKey: 'vaccineManufacturerGuid',\n        isNewSerializerAPI: true,\n\n        normalizeResponse(store, type, payload, id, requestType) {\n            return this._super(store, type, { 'vaccine-manufacturers': payload.vaccineType.manufacturers }, id, requestType);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/vaccine-type', ['exports', 'ember-data/serializers/rest', 'ember-data'], function (exports, _rest, _emberData) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend(_emberData.default.EmbeddedRecordsMixin, {\n        attrs: {\n            immunizationDrugs: { serialize: 'none', deserialize: 'records' },\n            manufacturers: { embedded: 'always' },\n            vaccineInventories: { serialize: 'none', deserialize: 'records' }\n        },\n        isNewSerializerAPI: true,\n        primaryKey: 'modifiedVaccineTypeGuid',\n\n        normalize(typeClass, hash, prop) {\n            hash.modifiedVaccineTypeGuid = hash.modifiedVaccineTypeGuid || hash.vaccineTypeGuid;\n            return this._super(typeClass, hash, prop);\n        },\n\n        normalizeResponse(store, type, payload, id, requestType) {\n            const vaccineType = payload.vaccineType;\n\n            if (vaccineType) {\n                if (payload.vaccineInventories) {\n                    payload.vaccineInventories.forEach(inventory => {\n                        delete inventory.vaccineType;\n                    });\n                }\n\n                vaccineType.providerGuid = payload.providerGuid;\n                vaccineType.vaccineInventories = payload.vaccineInventories;\n                vaccineType.immunizationDrugs = payload.immunizationDrugs;\n\n                payload = { 'vaccine-type': [vaccineType] };\n            } else {\n                payload = { 'vaccine-type': payload };\n            }\n\n            return this._super(store, type, payload, id, requestType);\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/vfc-status', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        primaryKey: 'code',\n        isNewSerializerAPI: true\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/serializers/vis-concept', ['exports', 'ember-data/serializers/rest'], function (exports, _rest) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _rest.default.extend({\n        primaryKey: 'visConceptGuid'\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/services/transcript-comments', ['exports', 'clinical/util/transcript-comments'], function (exports, _transcriptComments) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Service.extend({\n        store: Ember.inject.service(),\n        init() {\n            _transcriptComments.default.store = this.get('store');\n        }\n    });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/advance-directive\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"USniZImt\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"advance-directive-detail\\\",null,[[\\\"cancel\\\",\\\"delete\\\",\\\"save\\\",\\\"advanceDirective\\\"],[\\\"cancel\\\",\\\"delete\\\",\\\"save\\\",[23,[\\\"model\\\"]]]]],false]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/advance-directive.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/allergy\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"NaFPpjvH\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"allergy-detail\\\",null,[[\\\"addAnother\\\",\\\"allergy\\\",\\\"allergyAdded\\\",\\\"allergyDeleted\\\",\\\"close\\\",\\\"reloadAllergies\\\",\\\"closing\\\",\\\"isDirty\\\",\\\"patientPracticeGuid\\\",\\\"prepopulateAllergenQuery\\\"],[\\\"createAllergy\\\",[23,[\\\"model\\\",\\\"allergy\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"allergyAdded\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"allergyDeleted\\\"],null],\\\"close\\\",[27,\\\"action\\\",[[22,0,[]],\\\"reloadAllergies\\\"],null],[23,[\\\"closing\\\"]],[23,[\\\"isDirty\\\"]],[23,[\\\"model\\\",\\\"patientPracticeGuid\\\"]],[23,[\\\"allergenQuery\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/allergy.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/assessments/prolia-aesi-medication-history\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"nWLWEa2b\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"div\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right icon-go-away-small\\\"],[11,\\\"data-element\\\",\\\"prolia-assessment-card-dismiss\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"dismiss\\\"]],[9],[10],[0,\\\"\\\\n    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"bold\\\"],[9],[0,\\\"Be a part of the Prolia Safety Program\\\"],[10],[0,\\\"\\\\n    \\\"],[1,[27,\\\"popover-info\\\",null,[[\\\"allowHtmlCode\\\",\\\"classNames\\\",\\\"popoverContent\\\"],[true,\\\"icon icon-info box-margin-Lxs icon-assessment-info\\\",[23,[\\\"model\\\",\\\"proliaMedicationHistory\\\",\\\"popoverContent\\\"]]]]],false],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Patient Prolia History Check\\\"],[10],[0,\\\"\\\\n\\\"],[1,[27,\\\"single-select\\\",null,[[\\\"content\\\",\\\"data-element\\\",\\\"isShorter\\\",\\\"optionLabelPath\\\",\\\"optionGroupPath\\\",\\\"optionValuePath\\\",\\\"prompt\\\",\\\"select\\\",\\\"selection\\\",\\\"sortLabels\\\",\\\"class\\\",\\\"value\\\"],[[23,[\\\"model\\\",\\\"proliaMedicationHistory\\\",\\\"options\\\"]],\\\"prolia-assessment-card-history\\\",true,\\\"label\\\",\\\"group\\\",\\\"value\\\",\\\"Select patient's Prolia history...\\\",\\\"recorded\\\",[23,[\\\"model\\\",\\\"proliaMedicationHistory\\\",\\\"selection\\\"]],false,\\\"assessment-history-select\\\",[23,[\\\"model\\\",\\\"proliaMedicationHistory\\\",\\\"value\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/assessments/prolia-aesi-medication-history.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/assessments/prolia-aesi-modal\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"AThyeiSI\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"prolia-aesi-modal\\\"],[11,\\\"class\\\",\\\"type-v2\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"h4\\\"],[11,\\\"class\\\",\\\"box-margin-TBlg-v2\\\"],[9],[0,\\\"Prolia Safety Reporting - Record Adverse Events \\\"],[7,\\\"a\\\"],[12,\\\"href\\\",[23,[\\\"config\\\",\\\"proliaLearnMoreUrl\\\"]]],[11,\\\"title\\\",\\\"Learn more\\\"],[11,\\\"alt\\\",\\\"Learn more\\\"],[11,\\\"target\\\",\\\"_blank\\\"],[11,\\\"class\\\",\\\"box-margin-Lsm-v2\\\"],[9],[0,\\\"Learn more\\\"],[10],[10],[0,\\\"\\\\n    \\\"],[7,\\\"section\\\"],[11,\\\"class\\\",\\\"prolia-history-section\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[27,\\\"single-select\\\",null,[[\\\"content\\\",\\\"data-element\\\",\\\"isShorter\\\",\\\"optionLabelPath\\\",\\\"optionValuePath\\\",\\\"prompt\\\",\\\"select\\\",\\\"selection\\\",\\\"optionGroupPath\\\",\\\"sortLabels\\\",\\\"tooltipMsg\\\",\\\"hasError\\\",\\\"class\\\"],[[23,[\\\"model\\\",\\\"proliaMedicationHistory\\\",\\\"options\\\"]],\\\"prolia-assessment-modal-history\\\",true,\\\"label\\\",\\\"value\\\",\\\"Select patient's Prolia history...\\\",\\\"propertyChanged\\\",[23,[\\\"model\\\",\\\"proliaMedicationHistory\\\",\\\"selection\\\"]],\\\"group\\\",false,[23,[\\\"validationErrors\\\",\\\"proliaMedicationHistory\\\"]],[23,[\\\"validationErrors\\\",\\\"proliaMedicationHistory\\\"]],\\\"assessment-history-select\\\"]]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"model\\\",\\\"proliaMedicationHistory\\\",\\\"selection\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"model\\\",\\\"proliaMedicationHistory\\\",\\\"selection\\\",\\\"showAdverseEffects\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"adverse-events-heading\\\"],[9],[0,\\\"Have any adverse events occurred while on Prolia?\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"section\\\"],[11,\\\"class\\\",\\\"adverse-options box-padding-Llg-v2\\\"],[9],[0,\\\"\\\\n                \\\"],[1,[27,\\\"eventing-radio-button\\\",null,[[\\\"id\\\",\\\"name\\\",\\\"value\\\",\\\"selectedValue\\\",\\\"onChecked\\\",\\\"checkedValue\\\"],[\\\"noAdverse\\\",\\\"prolia-any-aesi\\\",false,[23,[\\\"model\\\",\\\"proliaAnyAesi\\\",\\\"isSelected\\\"]],\\\"propertyChanged\\\",\\\"proliaAnyAesi\\\"]]],false],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[11,\\\"for\\\",\\\"noAdverse\\\"],[11,\\\"class\\\",\\\"pf-input pf-input--radio-label is-shorter box-margin-Bmd-v2\\\"],[9],[0,\\\"Patient \\\"],[7,\\\"strong\\\"],[9],[0,\\\"has not\\\"],[10],[0,\\\" experienced any of the adverse events listed below\\\"],[10],[0,\\\"\\\\n                \\\"],[1,[27,\\\"popover-info\\\",null,[[\\\"allowHtmlCode\\\",\\\"classNames\\\",\\\"popoverContent\\\"],[false,\\\"icon icon-info box-margin-Lxs icon-assessment-info\\\",\\\"If you want to report other adverse events contact Amgen at 800-772-6436\\\"]]],false],[0,\\\"\\\\n\\\\n                \\\"],[1,[27,\\\"eventing-radio-button\\\",null,[[\\\"id\\\",\\\"name\\\",\\\"value\\\",\\\"selectedValue\\\",\\\"onChecked\\\",\\\"checkedValue\\\"],[\\\"adverse\\\",\\\"prolia-any-aesi\\\",true,[23,[\\\"model\\\",\\\"proliaAnyAesi\\\",\\\"isSelected\\\"]],\\\"propertyChanged\\\",\\\"proliaAnyAesi\\\"]]],false],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[11,\\\"for\\\",\\\"adverse\\\"],[11,\\\"class\\\",\\\"pf-input pf-input--radio-label is-shorter\\\"],[9],[0,\\\"Patient \\\"],[7,\\\"strong\\\"],[9],[0,\\\"has\\\"],[10],[0,\\\" experienced at least one or more the following (check all that apply)\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"validationErrors\\\",\\\"proliaAnyAesi\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[27,\\\"popover-info\\\",null,[[\\\"allowHtmlCode\\\",\\\"classNames\\\",\\\"popoverClass\\\",\\\"popoverContent\\\",\\\"isPopoverVisible\\\"],[false,\\\"icon icon-urgent error box-margin-Lxs\\\",\\\"error-popover validation-adverse-events\\\",[23,[\\\"validationErrors\\\",\\\"proliaAnyAesi\\\"]],true]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"section\\\"],[11,\\\"class\\\",\\\"indent indent-more\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"d-check-box\\\",null,[[\\\"classNames\\\",\\\"checked\\\",\\\"onChecked\\\",\\\"checkedValue\\\"],[\\\"prolia-with-description\\\",[23,[\\\"model\\\",\\\"proliaAesiHypocalcemia\\\",\\\"isSelected\\\"]],\\\"propertyChanged\\\",\\\"proliaAesiHypocalcemia\\\"]],{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"p-semibold\\\"],[9],[0,\\\"Hypocalcemia\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"disease-description box-margin-Tn box-margin-Bmd-v2\\\"],[9],[0,\\\"Hypocalcemia was the primary reason for ER visit or hospitalization\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"d-check-box\\\",null,[[\\\"classNames\\\",\\\"checked\\\",\\\"onChecked\\\",\\\"checkedValue\\\"],[\\\"prolia-with-description\\\",[23,[\\\"model\\\",\\\"proliaAesiOsteonecrosisOfTheJaw\\\",\\\"isSelected\\\"]],\\\"propertyChanged\\\",\\\"proliaAesiOsteonecrosisOfTheJaw\\\"]],{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"p-semibold\\\"],[9],[0,\\\"Osteonecrosis of the jaw\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"disease-description box-margin-Tn box-margin-Bmd-v2\\\"],[9],[0,\\\"Exposed jaw bone did not heal in 8 weeks and there was no history of jaw radiation\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"d-check-box\\\",null,[[\\\"classNames\\\",\\\"checked\\\",\\\"onChecked\\\",\\\"checkedValue\\\"],[\\\"prolia-with-description\\\",[23,[\\\"model\\\",\\\"proliaAesiAtypicalFemoralFractures\\\",\\\"isSelected\\\"]],\\\"propertyChanged\\\",\\\"proliaAesiAtypicalFemoralFractures\\\"]],{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"p-semibold\\\"],[9],[0,\\\"Atypical femoral fractures\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"disease-description box-margin-Tn box-margin-Bmd-v2\\\"],[9],[0,\\\"Low trauma femur fracture occurring between the lesser trochanter and epicondyles\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"d-check-box\\\",null,[[\\\"classNames\\\",\\\"checked\\\",\\\"onChecked\\\",\\\"checkedValue\\\"],[\\\"prolia-with-description\\\",[23,[\\\"model\\\",\\\"proliaAesiSeriousInfections\\\",\\\"isSelected\\\"]],\\\"propertyChanged\\\",\\\"proliaAesiSeriousInfections\\\"]],{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"p-semibold\\\"],[9],[0,\\\"Serious infections\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"disease-description box-margin-Tn box-margin-Bmd-v2\\\"],[9],[0,\\\"Infection required IV antibiotics or was primary reason for ER visit or hospitalization\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"d-check-box\\\",null,[[\\\"classNames\\\",\\\"checked\\\",\\\"onChecked\\\",\\\"checkedValue\\\"],[\\\"prolia-with-description\\\",[23,[\\\"model\\\",\\\"proliaAesiDermatologicReactions\\\",\\\"isSelected\\\"]],\\\"propertyChanged\\\",\\\"proliaAesiDermatologicReactions\\\"]],{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"p-semibold\\\"],[9],[0,\\\"Serious dermatologic reactions\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"disease-description box-margin-TBn\\\"],[9],[0,\\\"Skin condition was the primary reason for ER visit or hospitalization\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"section\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Prolia Safety Assessment\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"prolia-assessment-card-status\\\"],[9],[1,[23,[\\\"model\\\",\\\"proliaMedicationHistory\\\",\\\"selection\\\",\\\"statusText\\\"]],false],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/assessments/prolia-aesi-modal.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/behavioral\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"CN3ZU1vI\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\",\\\"right-module\\\",\\\"question\\\",\\\"index\\\",\\\"option\\\",\\\"index\\\"],\\\"statements\\\":[[4,\\\"detail-pane-v2\\\",null,[[\\\"class\\\"],[\\\"side-fixed col-xs-5 type-v2\\\"]],{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"right-module\\\"]]],[[\\\"class\\\"],[\\\"fill-space flex-column\\\"]],{\\\"statements\\\":[[0,\\\"        \\\"],[1,[27,\\\"component\\\",[[22,2,[\\\"header\\\"]]],[[\\\"bigHeaderText\\\",\\\"smallHeaderText\\\",\\\"closeDetailPane\\\"],[[23,[\\\"bigHeaderText\\\"]],[23,[\\\"smallHeaderText\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"closeDetailPane\\\"],null]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,2,[\\\"body\\\"]]],[[\\\"class\\\"],[\\\"flex-grow box-padding-Alg-v2\\\"]],{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"model\\\",\\\"instructionText\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"h4\\\"],[9],[1,[23,[\\\"model\\\",\\\"instructionText\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"list list--unstyled\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"questions\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[22,3,[\\\"isShowing\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"li\\\"],[11,\\\"class\\\",\\\"box-margin-Blg-v2 box-padding-TBn\\\"],[12,\\\"data-element\\\",[28,[\\\"worksheet-question-\\\",[22,4,[]]]]],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,3,[\\\"isCheckboxQuestion\\\"]]],null,{\\\"statements\\\":[[4,\\\"check-box\\\",null,[[\\\"disabled\\\",\\\"checked\\\",\\\"data-element\\\",\\\"onChecked\\\"],[[23,[\\\"isNotAllowedToEdit\\\"]],[22,3,[\\\"response\\\",\\\"value\\\"]],\\\"decline-checkbox\\\",[27,\\\"action\\\",[[22,0,[]],\\\"toggleCheckbox\\\",[22,3,[]]],null]]],{\\\"statements\\\":[[0,\\\"                                    \\\"],[1,[22,3,[\\\"label\\\"]],true],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,3,[\\\"numbering\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                        \\\"],[1,[22,3,[\\\"numbering\\\"]],false],[0,\\\".\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                                    \\\"],[7,\\\"span\\\"],[9],[1,[22,3,[\\\"label\\\"]],true],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,3,[\\\"showUndo\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                        \\\"],[7,\\\"a\\\"],[12,\\\"data-element\\\",[28,[\\\"undo-question-\\\",[22,4,[]]]]],[11,\\\"class\\\",\\\"box-margin-Lmd-v2\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"undo\\\",[22,3,[]]],null]],[9],[0,\\\"Undo\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                                \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,3,[\\\"isRadioQuestion\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"options\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[22,3,[\\\"options\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                            \\\"],[7,\\\"div\\\"],[12,\\\"data-element\\\",[28,[\\\"option-\\\",[22,6,[]]]]],[12,\\\"class\\\",[27,\\\"if\\\",[[22,3,[\\\"isHorizontalRadioType\\\"]],\\\"horizontal-radio\\\"],null]],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"disabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                                    \\\"],[1,[27,\\\"d-radio-button\\\",null,[[\\\"id\\\",\\\"name\\\",\\\"value\\\",\\\"selectedValue\\\",\\\"disabled\\\"],[[22,5,[\\\"id\\\"]],[22,3,[\\\"componentGuid\\\"]],[22,5,[\\\"value\\\"]],[22,3,[\\\"selectedOptionValue\\\"]],true]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                                    \\\"],[1,[27,\\\"d-radio-button\\\",null,[[\\\"id\\\",\\\"name\\\",\\\"value\\\",\\\"selectedValue\\\",\\\"disabled\\\",\\\"radioChecked\\\"],[[22,5,[\\\"id\\\"]],[22,3,[\\\"componentGuid\\\"]],[22,5,[\\\"value\\\"]],[22,3,[\\\"selectedOptionValue\\\"]],[22,3,[\\\"isDisabled\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"responseChecked\\\",[22,3,[]],[22,5,[]]],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                                                \\\"],[7,\\\"label\\\"],[12,\\\"for\\\",[28,[[22,5,[\\\"id\\\"]]]]],[11,\\\"class\\\",\\\"pf-input pf-input--radio-label text-color-default ib\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[22,3,[\\\"isHorizontalRadioType\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                                        \\\"],[1,[22,5,[\\\"label\\\"]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,5,[\\\"showValue\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                                            \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"text-color-placeholder\\\"],[9],[0,\\\"(\\\"],[1,[22,5,[\\\"displayValue\\\"]],false],[0,\\\")\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"                                                \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,3,[\\\"isHorizontalRadioType\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"radio-value\\\"],[9],[0,\\\"\\\\n                                                        \\\"],[1,[22,5,[\\\"label\\\"]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,5,[\\\"showValue\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                                            \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"text-color-placeholder\\\"],[9],[0,\\\"(\\\"],[1,[22,5,[\\\"displayValue\\\"]],false],[0,\\\")\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                                                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                                            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[5,6]},null],[0,\\\"                                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[22,3,[\\\"isNumericType\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"social-health-numeric-input\\\"],[9],[0,\\\"\\\\n                                        \\\"],[1,[27,\\\"text-field\\\",null,[[\\\"type\\\",\\\"min\\\",\\\"max\\\",\\\"value\\\",\\\"disabled\\\",\\\"errorMessage\\\",\\\"refocusOnError\\\",\\\"key-up\\\"],[\\\"number\\\",[22,3,[\\\"inputMin\\\"]],[22,3,[\\\"inputMax\\\"]],[22,3,[\\\"textFieldValue\\\"]],[22,3,[\\\"isDisabled\\\"]],[22,3,[\\\"rangeError\\\"]],true,[27,\\\"action\\\",[[22,0,[]],\\\"responseEntered\\\",[22,3,[]]],null]]]],false],[0,\\\"\\\\n                                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[22,3,[\\\"secondaryLabel\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"secondary-label\\\"],[9],[1,[22,3,[\\\"secondaryLabel\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[3,4]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"model\\\",\\\"scoreMethod\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Score\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"h4\\\"],[11,\\\"data-element\\\",\\\"worksheet-score\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"model\\\",\\\"scoreText\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[23,[\\\"model\\\",\\\"scoreText\\\"]],false],[4,\\\"if\\\",[[23,[\\\"model\\\",\\\"resultDescription\\\"]]],null,{\\\"statements\\\":[[0,\\\" - \\\"],[1,[23,[\\\"model\\\",\\\"resultDescription\\\"]],false]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                        No score\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"model\\\",\\\"worksheet\\\",\\\"summary\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"model\\\",\\\"displaySummary\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label box-margin-Tmd-v2\\\"],[9],[0,\\\"Score key\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"worksheet-summary\\\"],[9],[1,[23,[\\\"model\\\",\\\"worksheet\\\",\\\"summary\\\"]],true],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"model\\\",\\\"worksheet\\\",\\\"secondarySummary\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"model\\\",\\\"displaySecondarySummary\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"worksheet-secondary-summary\\\"],[11,\\\"class\\\",\\\"box-margin-Tmd-v2\\\"],[9],[1,[23,[\\\"model\\\",\\\"worksheet\\\",\\\"secondarySummary\\\"]],true],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"model\\\",\\\"worksheet\\\",\\\"copyright\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"worksheet-copyright\\\"],[11,\\\"class\\\",\\\"box-margin-Tmd-v2 text-color-placeholder\\\"],[9],[1,[23,[\\\"model\\\",\\\"worksheet\\\",\\\"copyright\\\"]],true],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[4,\\\"component\\\",[[22,2,[\\\"footer\\\"]]],[[\\\"class\\\"],[\\\"inline-flex-group-v2 box-padding-LRlg-v2 box-padding-TBsm-v2\\\"]],{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isAllowedToEdit\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm box-fixed\\\"],[9],[0,\\\"\\\\n                  \\\"],[7,\\\"button\\\"],[11,\\\"data-element\\\",\\\"cancel-button\\\"],[11,\\\"class\\\",\\\"btn--default\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"closeDetailPane\\\"],null]],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm box-fixed\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[11,\\\"data-element\\\",\\\"delete-button\\\"],[12,\\\"class\\\",[28,[\\\"btn--default \\\",[27,\\\"if\\\",[[23,[\\\"isNew\\\"]],\\\"hidden\\\"],null]]]],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"delete\\\"],null]],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"Delete\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm text-right\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[11,\\\"data-element\\\",\\\"save-button\\\"],[12,\\\"disabled\\\",[21,\\\"disableSave\\\"]],[11,\\\"class\\\",\\\"btn--brand\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"save\\\"],null]],[11,\\\"type\\\",\\\"button\\\"],[9],[1,[27,\\\"if\\\",[[23,[\\\"showSave\\\"]],\\\"Save\\\",\\\"Mark as reviewed\\\"],null],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm text-right\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[11,\\\"data-element\\\",\\\"close-button\\\"],[11,\\\"class\\\",\\\"btn--brand\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"closeDetailPane\\\"],null]],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"Close\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/behavioral.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/cancel-delete-done-footer\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"dySvPbKV\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isAllowedToEditAllegies\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn\\\"],[11,\\\"data-element\\\",\\\"cancel-btn\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"]],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showDeleteButton\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-delete\\\"],[11,\\\"data-element\\\",\\\"btn-delete\\\"],[12,\\\"disabled\\\",[21,\\\"isDeleteDisabled\\\"]],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"Delete\\\"],[10],[0,\\\"\\\\n            \\\"],[1,[27,\\\"confirm-dialog\\\",null,[[\\\"targetElement\\\",\\\"placement\\\",\\\"title\\\",\\\"content\\\",\\\"confirmText\\\",\\\"cancelText\\\",\\\"action\\\"],[\\\".btn-delete\\\",\\\"top\\\",[23,[\\\"deleteTitle\\\"]],[23,[\\\"deleteMessage\\\"]],\\\"Delete\\\",\\\"Cancel\\\",\\\"delete\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[7,\\\"button\\\"],[12,\\\"class\\\",[28,[\\\"btn \\\",[27,\\\"unless\\\",[[23,[\\\"showAddAnotherButton\\\"]],\\\"btn-primary\\\"],null]]]],[12,\\\"disabled\\\",[21,\\\"isDoneDisabled\\\"]],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"save\\\"]],[9],[0,\\\"Save\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showAddAnotherButton\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-primary\\\"],[12,\\\"disabled\\\",[21,\\\"isDoneDisabled\\\"]],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"addAnother\\\"]],[9],[0,\\\"Add another\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn\\\"],[11,\\\"data-element\\\",\\\"cancel-btn\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"]],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/cancel-delete-done-footer.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/-encounter-medication\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"gy91ijLj\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"item\\\",\\\"isEncounterMed\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-link\\\"],[11,\\\"data-element\\\",\\\"encounter-medication-item\\\"],[12,\\\"data-guid\\\",[28,[[23,[\\\"item\\\",\\\"medicationGuid\\\"]]]]],[3,\\\"action\\\",[[22,0,[]],\\\"selectMedication\\\",[23,[\\\"item\\\"]]]],[9],[1,[23,[\\\"item\\\",\\\"drugName\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[11,\\\"data-element\\\",\\\"encounter-medication-item\\\"],[12,\\\"data-guid\\\",[28,[[23,[\\\"item\\\",\\\"medicationGuid\\\"]]]]],[3,\\\"action\\\",[[22,0,[]],\\\"deselectMedication\\\",[23,[\\\"item\\\"]]]],[9],[1,[23,[\\\"item\\\",\\\"drugName\\\"]],false],[0,\\\"\\\\n        \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon icon-checkmark pull-right\\\"],[9],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/-encounter-medication.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/add-patient-photo\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"/ikMASse\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\"],\\\"statements\\\":[[4,\\\"content-modal\\\",null,[[\\\"isVisible\\\",\\\"modalStyle\\\",\\\"class\\\"],[[23,[\\\"isVisible\\\"]],3,\\\"add-photo-modal\\\"]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"header\\\"]]],[[\\\"title\\\",\\\"isCloseByXorOutsideVisible\\\"],[\\\"Add patient photo\\\",true]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,1,[\\\"body\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"add-photo-container\\\"],[9],[0,\\\"\\\\n      \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"placeholder\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isUploadError\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"placeholder-icon\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-urgent\\\"],[9],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n          \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"small upload-error-message\\\"],[9],[1,[21,\\\"errorMessage\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"          \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"placeholder-icon\\\"],[9],[0,\\\"\\\\n              \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-camera\\\"],[9],[10],[0,\\\"\\\\n          \\\"],[10],[0,\\\"\\\\n          \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"small\\\"],[9],[0,\\\"\\\\n              \\\"],[7,\\\"li\\\"],[9],[0,\\\"Photos must be JPG, PNG, or GIF\\\"],[10],[0,\\\"\\\\n              \\\"],[7,\\\"li\\\"],[9],[0,\\\"No larger than 3 MB\\\"],[10],[0,\\\"\\\\n              \\\"],[7,\\\"li\\\"],[9],[0,\\\"Minimum resolution of 200 x 200\\\"],[10],[0,\\\"\\\\n          \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"      \\\"],[10],[0,\\\"\\\\n      \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"upload-button\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isUploading\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[1,[27,\\\"progress-bar\\\",null,[[\\\"progressTotal\\\",\\\"progressTotalPositionInside\\\",\\\"barColor\\\",\\\"isLabelVisible\\\"],[[23,[\\\"uploadProgress\\\"]],true,\\\"#14a4ec\\\",false]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"file-upload\\\",null,[[\\\"saveUrl\\\",\\\"inputName\\\",\\\"accept\\\",\\\"multiple\\\",\\\"errorAction\\\",\\\"uploadAction\\\",\\\"progressAction\\\",\\\"successAction\\\",\\\"data-element\\\",\\\"class\\\",\\\"maxBytes\\\"],[[23,[\\\"uploadUrl\\\"]],\\\"Filedata\\\",\\\"image/*\\\",false,\\\"onUploadError\\\",\\\"onUpload\\\",\\\"onUploadProgress\\\",\\\"onUploadSuccess\\\",\\\"document-upload-button\\\",\\\"btn btn-primary\\\",\\\"3000000\\\"]],{\\\"statements\\\":[[0,\\\"              Upload photo\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}],[0,\\\"      \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"isUploadError\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"img\\\"],[11,\\\"class\\\",\\\"photo-preview\\\"],[12,\\\"src\\\",[21,\\\"photoUrlAuthenticated\\\"]],[11,\\\"onerror\\\",\\\"$(this).hide(); $('.link-change-photo').hide();\\\"],[9],[10],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"isUploading\\\"]]],null,{\\\"statements\\\":[[4,\\\"file-upload\\\",null,[[\\\"saveUrl\\\",\\\"inputName\\\",\\\"accept\\\",\\\"multiple\\\",\\\"errorAction\\\",\\\"uploadAction\\\",\\\"progressAction\\\",\\\"successAction\\\",\\\"data-element\\\",\\\"class\\\"],[[23,[\\\"uploadUrl\\\"]],\\\"Filedata\\\",\\\"image/*\\\",false,\\\"onUploadError\\\",\\\"onUpload\\\",\\\"onUploadProgress\\\",\\\"onSuccess\\\",\\\"document-upload-link\\\",\\\"link-change-photo\\\"]],{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"photo-cover\\\"],[9],[0,\\\"Change photo\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"h4\\\"],[11,\\\"class\\\",\\\"header4semibold\\\"],[9],[0,\\\"Photo guidelines\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"ul\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"li\\\"],[9],[0,\\\"Select a square photo (200 x 200px ideal)\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"li\\\"],[9],[0,\\\"We will scale down anything larger\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"li\\\"],[9],[0,\\\".jpg, .png, .gif accepted\\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"footer\\\"]]],[[\\\"buttonRightPrimaryText\\\",\\\"buttonRightPrimaryAction\\\"],[\\\"Done\\\",[27,\\\"action\\\",[[22,0,[]],\\\"done\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/add-patient-photo.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/advance-directive-detail\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"OnIWlOp+\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\"],\\\"statements\\\":[[4,\\\"detail-pane\\\",null,[[\\\"close\\\",\\\"class\\\",\\\"resizables\\\",\\\"resizeOnBreakPoint\\\",\\\"topSpacing\\\",\\\"isToolBoxVisible\\\",\\\"smallHeaderText\\\",\\\"bigHeaderText\\\",\\\"advanceDirective\\\"],[\\\"save\\\",\\\"side-fixed col-xs-5 summary-details ad-detail\\\",[23,[\\\"resizables\\\"]],true,50,false,\\\"Advance directives\\\",\\\"Record advance directive\\\",[23,[\\\"advanceDirective\\\"]]]],{\\\"statements\\\":[[4,\\\"detail-pane-body\\\",null,[[\\\"sectionContext\\\"],[[22,1,[]]]],{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"advanceDirective\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"DATE RECORDED\\\"],[10],[0,\\\"\\\\n            \\\"],[1,[27,\\\"d-date-picker\\\",null,[[\\\"isLegacy\\\",\\\"isShorter\\\",\\\"value\\\",\\\"placeholder\\\",\\\"startDate\\\",\\\"endDate\\\",\\\"autoCorrectYear\\\"],[false,true,[23,[\\\"advanceDirective\\\",\\\"formattedDate\\\"]],\\\"MM/DD/YYYY\\\",\\\"01/01/1900\\\",\\\"01/01/2200\\\",true]]],false],[0,\\\"\\\\n            \\\"],[1,[27,\\\"text-area-counter\\\",null,[[\\\"autosize\\\",\\\"value\\\",\\\"placeholderText\\\",\\\"maxlength\\\",\\\"rows\\\"],[true,[23,[\\\"advanceDirective\\\",\\\"comments\\\"]],\\\"Enter advance directive\\\",\\\"4000\\\",\\\"3\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[4,\\\"detail-pane-footer\\\",null,[[\\\"sectionContext\\\"],[[22,1,[]]]],{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"]],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"advanceDirective\\\",\\\"isNew\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-delete\\\"],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"Delete\\\"],[10],[0,\\\"\\\\n                \\\"],[1,[27,\\\"confirm-dialog\\\",null,[[\\\"targetElement\\\",\\\"placement\\\",\\\"title\\\",\\\"content\\\",\\\"confirmText\\\",\\\"cancelText\\\",\\\"action\\\"],[\\\".btn-delete\\\",\\\"top\\\",\\\"Delete advance directive\\\",\\\"This action is final, and will remove this advance directive from this patient's record.\\\",\\\"Delete\\\",\\\"Cancel\\\",\\\"delete\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-primary\\\"],[12,\\\"disabled\\\",[23,[\\\"advanceDirective\\\",\\\"saveDisabled\\\"]]],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"save\\\"]],[9],[0,\\\"Save\\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/advance-directive-detail.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/advance-directives\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"rUqi0oW+\", \"block\": \"{\\\"symbols\\\":[\\\"card\\\",\\\"advancedDirective\\\",\\\"header\\\"],\\\"statements\\\":[[1,[27,\\\"data-tunnel\\\",null,[[\\\"name\\\",\\\"onDataReceived\\\"],[\\\"advance-directive\\\",[27,\\\"action\\\",[[22,0,[]],\\\"refresh\\\"],null]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"composable-card\\\",null,null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"header\\\"]]],null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,3,[\\\"title\\\"]]],null,{\\\"statements\\\":[[0,\\\"            Advance directives\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isAllowedToEditSummary\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"icon-pencil-record icon--md text-color-placeholder box-margin-Lmd-v2\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"edit\\\",null],null]],[11,\\\"data-element\\\",\\\"advanced-directive-pencil-button\\\"],[11,\\\"role\\\",\\\"link\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"icon-printer icon--md text-color-placeholder box-margin-Lmd-v2\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"print\\\"],null]],[11,\\\"data-element\\\",\\\"print-advanced-directive-button\\\"],[11,\\\"role\\\",\\\"link\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[3]},null],[4,\\\"component\\\",[[22,1,[\\\"content\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"ul\\\"],[12,\\\"class\\\",[28,[\\\"list \\\",[27,\\\"if\\\",[[23,[\\\"isAllowedToEditSummary\\\"]],\\\"list--hover\\\",\\\"list--default\\\"],null],\\\" \\\",[27,\\\"unless\\\",[[23,[\\\"advanceDirectives\\\"]],\\\"hidden\\\"],null]]]],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"advanceDirectives\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"li\\\"],[12,\\\"onclick\\\",[27,\\\"if\\\",[[23,[\\\"isAllowedToEditSummary\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"edit\\\",[22,2,[]]],null]],null]],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"text-wrap\\\"],[11,\\\"data-element\\\",\\\"advanced-directive-comments\\\"],[9],[1,[27,\\\"preserve-linebreak\\\",[[22,2,[\\\"comments\\\"]]],null],false],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"box-margin-Bn\\\"],[11,\\\"data-element\\\",\\\"advanced-directive-recorded-date\\\"],[9],[0,\\\"Recorded \\\"],[1,[27,\\\"format-date-time-utc\\\",[[22,2,[\\\"dateOfService\\\"]]],null],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"p\\\"],[12,\\\"class\\\",[28,[\\\"text-color-placeholder box-margin-Bn \\\",[27,\\\"if\\\",[[23,[\\\"advanceDirectives\\\"]],\\\"hidden\\\"],null]]]],[9],[1,[21,\\\"defaultMessage\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null],[4,\\\"print-preview-content\\\",null,[[\\\"printTitle\\\",\\\"isVisible\\\"],[[23,[\\\"printTitle\\\"]],[23,[\\\"isPrintPreviewVisible\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"print-advanced-directives-section\\\",null,[[\\\"content\\\",\\\"patient\\\",\\\"class\\\",\\\"title\\\"],[[23,[\\\"advanceDirectives\\\"]],[23,[\\\"patient\\\"]],\\\"pmh-print chart-print-container\\\",[23,[\\\"printTitle\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/advance-directives.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/allergies-list-item\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"dn7YOpOF\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"div\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"a\\\"],[11,\\\"data-element\\\",\\\"allergy-item-text\\\"],[12,\\\"data-guid\\\",[23,[\\\"allergy\\\",\\\"allergyGuid\\\"]]],[9],[1,[23,[\\\"allergy\\\",\\\"allergenText\\\"]],false],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"h4 box-margin-Rmd-v2 box-margin-Bn\\\"],[9],[7,\\\"i\\\"],[12,\\\"class\\\",[28,[\\\"icon-triangle icon--md \\\",[23,[\\\"allergy\\\",\\\"severityClass\\\"]],\\\" box-margin-Rsm-v2\\\"]]],[9],[10],[1,[23,[\\\"allergy\\\",\\\"severityText\\\"]],false],[10],[0,\\\"\\\\n\\\"],[7,\\\"span\\\"],[12,\\\"class\\\",[28,[\\\"box-margin-Rmd-v2 \\\",[27,\\\"unless\\\",[[23,[\\\"allergy\\\",\\\"reactionsText\\\"]],\\\"hidden\\\"],null]]]],[9],[1,[23,[\\\"allergy\\\",\\\"reactionsText\\\"]],false],[10],[0,\\\"\\\\n\\\"],[7,\\\"span\\\"],[12,\\\"class\\\",[28,[\\\"box-margin-Rmd-v2 \\\",[27,\\\"unless\\\",[[23,[\\\"allergy\\\",\\\"onsetText\\\"]],\\\"hidden\\\"],null]]]],[9],[1,[23,[\\\"allergy\\\",\\\"onsetText\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/allergies-list-item.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/allergies-list-section\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"XOHPSShr\", \"block\": \"{\\\"symbols\\\":[\\\"allergy\\\",\\\"index\\\",\\\"allergy\\\",\\\"index\\\"],\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isInactiveSection\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"showInactive\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"h4\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[1,[21,\\\"title\\\"],false],[10],[0,\\\"\\\\n        \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"list list--selectable list--hover\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"data\\\",\\\"severitySorted\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"allergies-list-item\\\",null,[[\\\"allergy\\\",\\\"editAllergy\\\",\\\"selectedAllergy\\\",\\\"data-element\\\"],[[22,3,[]],\\\"editAllergy\\\",[23,[\\\"selectedAllergy\\\"]],[27,\\\"concat\\\",[\\\"inactive-allergy-\\\",[22,4,[]]],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3,4]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[7,\\\"a\\\"],[11,\\\"role\\\",\\\"link\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"toggleProperty\\\",\\\"showInactive\\\"],null]],[11,\\\"class\\\",\\\"show-hide-toggle\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showInactive\\\"]]],null,{\\\"statements\\\":[[0,\\\"            Hide inactive\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            Show inactive (\\\"],[1,[23,[\\\"data\\\",\\\"length\\\"]],false],[0,\\\")\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"h4\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[1,[21,\\\"title\\\"],false],[10],[0,\\\"\\\\n    \\\"],[7,\\\"ul\\\"],[12,\\\"class\\\",[28,[\\\"list list--selectable list--hover \\\",[27,\\\"if\\\",[[23,[\\\"hasNoActiveAllergies\\\"]],\\\"hidden\\\"],null]]]],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"data\\\",\\\"active\\\",\\\"severitySorted\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"allergies-list-item\\\",null,[[\\\"allergy\\\",\\\"editAllergy\\\",\\\"selectedAllergy\\\",\\\"data-element\\\"],[[22,1,[]],\\\"editAllergy\\\",[23,[\\\"selectedAllergy\\\"]],[27,\\\"concat\\\",[\\\"active-allergy-\\\",[22,2,[]]],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1,2]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isDrugAllergyCheckboxVisible\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-padding-Txs-v2\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isAllowedToEditAllegies\\\"]]],null,{\\\"statements\\\":[[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"disabled\\\",\\\"data-element\\\"],[[23,[\\\"isNoKnownChecked\\\"]],[23,[\\\"isLoadingNoKnown\\\"]],\\\"no-known-drug-allergies-label\\\"]],{\\\"statements\\\":[[0,\\\"                    Patient has no known drug allergies\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"p\\\"],[12,\\\"class\\\",[28,[\\\"box-margin-Bn \\\",[27,\\\"unless\\\",[[23,[\\\"isNoKnownChecked\\\"]],\\\"hidden\\\"],null]]]],[9],[0,\\\"Patient has no known drug allergies\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"p\\\"],[12,\\\"class\\\",[28,[\\\"text-color-placeholder box-margin-Bn \\\",[27,\\\"if\\\",[[23,[\\\"isNoKnownChecked\\\"]],\\\"hidden\\\"],null]]]],[9],[1,[21,\\\"noAllergiesMessage\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"p\\\"],[12,\\\"class\\\",[28,[\\\"text-color-placeholder box-margin-Bn box-padding-Txs-v2 \\\",[27,\\\"unless\\\",[[23,[\\\"hasNoAllergies\\\"]],\\\"hidden\\\"],null]]]],[9],[1,[21,\\\"noAllergiesMessage\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/allergies-list-section.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/allergies-list\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"kVuDkmha\", \"block\": \"{\\\"symbols\\\":[\\\"card\\\",\\\"header\\\"],\\\"statements\\\":[[1,[27,\\\"data-tunnel\\\",null,[[\\\"name\\\",\\\"onDataReceived\\\"],[\\\"allergies-list\\\",[27,\\\"action\\\",[[22,0,[]],\\\"updateAllergies\\\"],null]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"composable-card\\\",null,null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"header\\\"]]],null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,2,[\\\"title\\\"]]],null,{\\\"statements\\\":[[0,\\\"            Allergies\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"hideEditControls\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isAllowedToEditAllegies\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"icon-add icon--md text-color-placeholder box-margin-Lmd-v2\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"createAllergy\\\"],null]],[11,\\\"data-element\\\",\\\"add-allergy-button\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"icon-printer icon--md text-color-placeholder box-margin-Lmd-v2\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"print\\\"],null]],[11,\\\"data-element\\\",\\\"print-allergies-button\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[2]},null],[4,\\\"component\\\",[[22,1,[\\\"content\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[1,[27,\\\"allergy-free-text-message\\\",null,[[\\\"isAllowedToEditAllegies\\\",\\\"patientPracticeGuid\\\",\\\"canRecord\\\",\\\"canShowLater\\\",\\\"createAllergy\\\"],[[23,[\\\"isAllowedToEditAllegies\\\"]],[23,[\\\"patientPracticeGuid\\\"]],true,false,\\\"createAllergy\\\"]]],false],[0,\\\"\\\\n        \\\"],[7,\\\"p\\\"],[12,\\\"class\\\",[28,[\\\"text-color-placeholder box-margin-Bn \\\",[27,\\\"unless\\\",[[23,[\\\"isLoading\\\"]],\\\"hidden\\\"],null]]]],[9],[0,\\\"Loading allergies...\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"p\\\"],[12,\\\"class\\\",[28,[\\\"text-color-placeholder box-margin-Bn \\\",[27,\\\"unless\\\",[[23,[\\\"allergiesError\\\"]],\\\"hidden\\\"],null]]]],[9],[0,\\\"\\\\n            Failed to load allergies. Please \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"reloadAllergies\\\"],null]],[9],[0,\\\"try again.\\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[[27,\\\"if\\\",[[23,[\\\"isLoadingOrIsError\\\"]],\\\"hidden\\\"],null]]]],[9],[0,\\\"\\\\n            \\\"],[1,[27,\\\"allergies-list-section\\\",null,[[\\\"class\\\",\\\"isAllowedToEditAllegies\\\",\\\"data\\\",\\\"editAllergy\\\",\\\"isNoKnownChecked\\\",\\\"isLoadingNoKnown\\\",\\\"selectedAllergy\\\",\\\"title\\\"],[\\\"box-margin-Bxs-v2\\\",[23,[\\\"isAllowedToEditAllegies\\\"]],[23,[\\\"drugAllergies\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"editAllergy\\\"],null],[23,[\\\"isNoKnownChecked\\\"]],[23,[\\\"isLoadingNoKnown\\\"]],[23,[\\\"selectedAllergy\\\"]],\\\"Drug\\\"]]],false],[0,\\\"\\\\n            \\\"],[1,[27,\\\"allergies-list-section\\\",null,[[\\\"class\\\",\\\"isAllowedToEditAllegies\\\",\\\"data\\\",\\\"editAllergy\\\",\\\"selectedAllergy\\\",\\\"title\\\"],[\\\"box-margin-Bxs-v2\\\",[23,[\\\"isAllowedToEditAllegies\\\"]],[23,[\\\"foodAllergies\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"editAllergy\\\"],null],[23,[\\\"selectedAllergy\\\"]],\\\"Food\\\"]]],false],[0,\\\"\\\\n            \\\"],[1,[27,\\\"allergies-list-section\\\",null,[[\\\"isAllowedToEditAllegies\\\",\\\"data\\\",\\\"editAllergy\\\",\\\"selectedAllergy\\\",\\\"title\\\",\\\"class\\\"],[[23,[\\\"isAllowedToEditAllegies\\\"]],[23,[\\\"environmentalAllergies\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"editAllergy\\\"],null],[23,[\\\"selectedAllergy\\\"]],\\\"Environmental\\\",[27,\\\"concat\\\",[[27,\\\"if\\\",[[23,[\\\"inactiveAllergies\\\"]],\\\"box-margin-Bxs-v2\\\"],null],\\\" \\\"],null]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"inactiveAllergies\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"allergies-list-section\\\",null,[[\\\"isAllowedToEditAllegies\\\",\\\"data\\\",\\\"editAllergy\\\",\\\"selectedAllergy\\\",\\\"title\\\"],[[23,[\\\"isAllowedToEditAllegies\\\"]],[23,[\\\"inactiveAllergies\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"editAllergy\\\"],null],[23,[\\\"selectedAllergy\\\"]],\\\"Inactive\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null],[0,\\\"\\\\n\\\"],[4,\\\"print-preview-content\\\",null,[[\\\"isVisible\\\",\\\"printTitle\\\"],[[23,[\\\"isPrintVisible\\\"]],[23,[\\\"printTitle\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"print-allergies\\\",null,[[\\\"class\\\",\\\"patient\\\"],[\\\"chart-print-container\\\",[23,[\\\"patient\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/allergies-list.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/allergy-detail\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"xF6AmOO2\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\"],\\\"statements\\\":[[4,\\\"allergy-details-pane\\\",null,[[\\\"isAllowedToEditAllegies\\\",\\\"bigHeaderText\\\",\\\"cancel\\\",\\\"delete\\\",\\\"isDeleteDisabled\\\",\\\"isDoneDisabled\\\",\\\"isToolBoxVisible\\\",\\\"resizeOnBreakPoint\\\",\\\"save\\\",\\\"showDeleteButton\\\",\\\"smallHeaderText\\\",\\\"topSpacing\\\",\\\"showAddAnotherButton\\\",\\\"addAnother\\\",\\\"class\\\"],[[23,[\\\"isAllowedToEditAllegies\\\"]],[23,[\\\"title\\\"]],\\\"cancel\\\",\\\"delete\\\",[23,[\\\"isLoading\\\"]],[23,[\\\"isDoneDisabled\\\"]],false,true,\\\"save\\\",[23,[\\\"showDeleteButton\\\"]],\\\"Allergies\\\",86,[23,[\\\"showAddAnotherButton\\\"]],\\\"addAnother\\\",[27,\\\"concat\\\",[[27,\\\"if\\\",[[23,[\\\"isDisabled\\\"]],\\\"disabled\\\"],null],\\\" \\\"],null]]],{\\\"statements\\\":[[4,\\\"detail-pane-body\\\",null,[[\\\"sectionContext\\\"],[[22,1,[]]]],{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"allergy\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"title\\\"],[9],[1,[23,[\\\"allergy\\\",\\\"allergenText\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"deprecated/allergy-free-text-message\\\",null,[[\\\"patientPracticeGuid\\\",\\\"canRecord\\\",\\\"canShowLater\\\",\\\"scrollableContainer\\\"],[[23,[\\\"patientPracticeGuid\\\"]],false,true,\\\".allergy-details .detail-pane-body-wrapper\\\"]]],false],[0,\\\"\\\\n\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Select allergen\\\"],[10],[0,\\\"\\\\n            \\\"],[1,[27,\\\"d-button-group\\\",null,[[\\\"disabled\\\",\\\"options\\\",\\\"isShorter\\\",\\\"optionLabelPath\\\",\\\"optionValuePath\\\",\\\"value\\\",\\\"defaultValue\\\"],[[23,[\\\"isNotAllowedToEditAllegies\\\"]],[23,[\\\"allergenTypes\\\"]],true,\\\"label\\\",\\\"id\\\",[23,[\\\"allergenType\\\"]],\\\"drug\\\"]]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isDrug\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"allergen-search\\\",null,[[\\\"disabled\\\",\\\"query\\\",\\\"selection\\\",\\\"tooltipMsg\\\",\\\"data-element\\\",\\\"searchDataElement\\\"],[[23,[\\\"isNotAllowedToEditAllegies\\\"]],[23,[\\\"allergenQuery\\\"]],[23,[\\\"allergenSelection\\\"]],[23,[\\\"errors\\\",\\\"allergenSelection\\\"]],\\\"drug-allergen-search\\\",\\\"drug-allergen-search-input\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"allergy-select\\\",null,[[\\\"disabled\\\",\\\"content\\\",\\\"selection\\\",\\\"tooltipMsg\\\",\\\"addItem\\\",\\\"data-element\\\",\\\"query\\\"],[[23,[\\\"isNotAllowedToEditAllegies\\\"]],[23,[\\\"substances\\\"]],[23,[\\\"allergenSelection\\\"]],[23,[\\\"errors\\\",\\\"allergenSelection\\\"]],\\\"addCustomAllergy\\\",\\\"other-allergen-search\\\",[23,[\\\"allergenQuery\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label required\\\"],[9],[0,\\\"Severity\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isDisabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"severity\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"i\\\"],[12,\\\"class\\\",[28,[\\\"icon-triangle icon--md \\\",[23,[\\\"allergy\\\",\\\"severityClass\\\"]],\\\" box-margin-Rsm-v2\\\"]]],[9],[10],[0,\\\"\\\\n                \\\"],[1,[21,\\\"allergySeverity\\\"],false],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"d-button-group\\\",null,[[\\\"options\\\",\\\"isShorter\\\",\\\"optionLabelPath\\\",\\\"optionValuePath\\\",\\\"value\\\",\\\"data-element\\\",\\\"class\\\"],[[23,[\\\"severityOptions\\\"]],true,\\\"label\\\",\\\"id\\\",[23,[\\\"allergySeverity\\\"]],\\\"allergy-severity-button-group\\\",[27,\\\"concat\\\",[[27,\\\"if\\\",[[23,[\\\"errors\\\",\\\"allergySeverity\\\"]],\\\"error\\\"],null],\\\" \\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Reaction\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isDisabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"p\\\"],[9],[1,[23,[\\\"allergy\\\",\\\"reactionsText\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"multi-select\\\",null,[[\\\"content\\\",\\\"prompt\\\",\\\"optionLabelPath\\\",\\\"optionValuePath\\\",\\\"selections\\\",\\\"data-element\\\"],[[23,[\\\"allReactions\\\"]],\\\"Enter patient reaction\\\",\\\"title\\\",[23,[\\\"reactionsValuePath\\\"]],[23,[\\\"allergyReactions\\\"]],\\\"allergy-reactions-select\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Onset\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isDisabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"p\\\"],[9],[1,[23,[\\\"allergy\\\",\\\"onsetText\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"onset-section\\\"],[9],[0,\\\"\\\\n                \\\"],[1,[27,\\\"d-button-group\\\",null,[[\\\"options\\\",\\\"isShorter\\\",\\\"optionLabelPath\\\",\\\"optionValuePath\\\",\\\"value\\\"],[[23,[\\\"onsetTypes\\\"]],true,\\\"label\\\",\\\"id\\\",[23,[\\\"onsetType\\\"]]]]],false],[0,\\\"\\\\n                \\\"],[1,[27,\\\"d-date-picker\\\",null,[[\\\"isLegacy\\\",\\\"value\\\",\\\"placeholder\\\",\\\"isValid\\\",\\\"autoCorrectYear\\\"],[false,[23,[\\\"formattedOnsetDate\\\"]],\\\"MM/DD/YYYY\\\",[23,[\\\"isOnsetDateValid\\\"]],true]]],false],[0,\\\"\\\\n                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"setOnsetToday\\\"]],[9],[0,\\\"Today\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Comment\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isDisabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"p\\\"],[9],[4,\\\"if\\\",[[23,[\\\"comments\\\"]]],null,{\\\"statements\\\":[[1,[21,\\\"comments\\\"],false]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"No comment recorded\\\"]],\\\"parameters\\\":[]}],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"d-text-area\\\",null,[[\\\"autosize\\\",\\\"value\\\",\\\"placeholderText\\\",\\\"maxlength\\\",\\\"data-element\\\"],[true,[23,[\\\"comments\\\"]],\\\"Enter a comment about this allergy\\\",500,\\\"allergy-comment\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Status\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isDisabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"p\\\"],[9],[4,\\\"if\\\",[[23,[\\\"isActive\\\"]]],null,{\\\"statements\\\":[[0,\\\"Active\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"Inactive\\\"]],\\\"parameters\\\":[]}],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"d-toggle-switch\\\",null,[[\\\"checked\\\",\\\"isShorter\\\",\\\"onText\\\",\\\"offText\\\",\\\"disabled\\\"],[[23,[\\\"isActive\\\"]],\\\"true\\\",\\\"Active\\\",\\\"Inactive\\\",[23,[\\\"isDisabled\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/allergy-detail.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/allergy-free-text-message\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"UGhJqIi0\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isFreeTextAllergiesMessageVisible\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"allergy-free-text-message bg-color-warning box-padding-LRlg-v2 box-margin-Bxs-v2\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"list list--icon\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"li\\\"],[11,\\\"class\\\",\\\"icon-urgent icon-color-warning icon--sm\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs box-padding-TBn\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"h4\\\"],[11,\\\"class\\\",\\\"h4 box-margin-Bn\\\"],[9],[0,\\\"You have previously recorded allergies in a free-text note\\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"box-margin-Bn\\\"],[9],[0,\\\"\\\\n                            To receive interaction alerts, record the note in a structured format here.\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isRecordVisible\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"a\\\"],[12,\\\"class\\\",[28,[[27,\\\"unless\\\",[[23,[\\\"isRecordVisible\\\"]],\\\"hidden\\\"],null]]]],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"createAllergy\\\"],null]],[9],[0,\\\"Record\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[\\\"item gutter-xs box-fixed box-padding-TBn \\\",[27,\\\"unless\\\",[[23,[\\\"canShowLater\\\"]],\\\"hidden\\\"],null]]]],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"a\\\"],[11,\\\"data-element\\\",\\\"free-text-allergies-show-later\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"showFreeTextAllergiesLater\\\"],null]],[9],[0,\\\"Show later\\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"list list--default\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"li\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"free-text-allergies-value\\\"],[11,\\\"class\\\",\\\"box-margin-Bn\\\"],[9],[0,\\\"\\\\n                    \\\"],[1,[21,\\\"freeTextAllergies\\\"],false],[0,\\\"\\\\n                    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"text-color-warning\\\"],[9],[0,\\\"(free-text note)\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"session\\\",\\\"isStaff\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isAllowedToEditAllegies\\\"]]],null,{\\\"statements\\\":[[4,\\\"popover-confirm\\\",null,[[\\\"action\\\",\\\"title\\\",\\\"popoverContent\\\",\\\"confirmLabel\\\",\\\"cancelLabel\\\",\\\"confirmType\\\",\\\"classNames\\\",\\\"data-element\\\",\\\"placement\\\"],[\\\"deleteFreeTextAllergy\\\",\\\"Delete free-text note regarding allergy\\\",\\\"This will delete this allergy note permanently from patient's chart. It is recommended that you record these free-text allergies using the structured allergy section below prior to deleting. This action is final.\\\",\\\"Delete\\\",\\\"Cancel\\\",\\\"info popover-confirm-delete-free-text-allergy\\\",\\\"\\\",\\\"free-text-allergies-delete\\\",\\\"bottom\\\"]],{\\\"statements\\\":[[0,\\\"                                Delete\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/allergy-free-text-message.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/assessment-modal\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"uQhBUKTv\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\"],\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isVisible\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"modal-backdrop in copy-modal\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"content-modal\\\",null,[[\\\"class\\\",\\\"modalStyle\\\",\\\"isVisible\\\",\\\"isDraggable\\\",\\\"includeBackdrop\\\",\\\"customClose\\\"],[[23,[\\\"modalClassNames\\\"]],0,[23,[\\\"isVisible\\\"]],false,false,[27,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"],null]]],{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"header\\\"]]],[[\\\"notifyCloseByX\\\"],[[27,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"],null]]],{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"h4\\\"],[9],[1,[21,\\\"title\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"component\\\",[[22,1,[\\\"body\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"example-modal-content-0 container-fluid assessment-modal-content\\\"],[9],[0,\\\"\\\\n            \\\"],[15,[23,[\\\"contentTemplate\\\"]],[1]],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"component\\\",[[22,1,[\\\"footer\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isUpdatedProliaModal\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"model\\\",\\\"proliaAnyAesi\\\",\\\"isSelected\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-left assessment-modal-buttons\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[11,\\\"data-element\\\",\\\"save-prolia-modal\\\"],[11,\\\"class\\\",\\\"btn-sm\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"save\\\"],null]],[12,\\\"disabled\\\",[21,\\\"isLoading\\\"]],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"Save and create task to report later\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right assessment-modal-buttons\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"a\\\"],[11,\\\"data-element\\\",\\\"prolia-reporting-link\\\"],[12,\\\"href\\\",[23,[\\\"config\\\",\\\"proliaReportAdverseEventsUrl\\\"]]],[11,\\\"target\\\",\\\"_blank\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"trackAndSetProperty\\\",\\\"Assessment Modal Link\\\",\\\"proliaLinkClicked.isSelected\\\",true],[[\\\"preventDefault\\\"],[false]]]],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn-sm btn-primary\\\"],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"Report adverse events to manufacturer\\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-left assessment-modal-buttons\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn-sm\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"],null]],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"Show me later\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right assessment-modal-buttons\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[11,\\\"data-element\\\",\\\"save-prolia-modal\\\"],[11,\\\"class\\\",\\\"btn-sm btn-primary\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"save\\\"],null]],[12,\\\"disabled\\\",[21,\\\"isLoading\\\"]],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"Save\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right assessment-modal-buttons\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn-sm\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"]],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"button\\\"],[11,\\\"data-element\\\",\\\"save-prolia-modal\\\"],[11,\\\"class\\\",\\\"btn-sm btn-primary\\\"],[12,\\\"disabled\\\",[21,\\\"isLoading\\\"]],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"save\\\"]],[9],[0,\\\"Save\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":true}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/assessment-modal.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/card-field\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"LKnZcTen\", \"block\": \"{\\\"symbols\\\":[\\\"item\\\",\\\"index\\\"],\\\"statements\\\":[[7,\\\"h4\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[21,\\\"title\\\"],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"canEdit\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"a\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],[23,[\\\"create\\\"]]],null]],[11,\\\"class\\\",\\\"icon-add icon--md text-color-placeholder box-margin-Lmd-v2\\\"],[12,\\\"data-element\\\",[28,[[21,\\\"card-data-element\\\"],\\\"-field-add-button\\\"]]],[11,\\\"role\\\",\\\"link\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"contentArray\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"ul\\\"],[12,\\\"class\\\",[28,[\\\"list list--default list--hover list--selectable \\\",[27,\\\"if\\\",[[23,[\\\"placeholderText\\\"]],\\\"hidden\\\"],null]]]],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"contentArray\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"li\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],[23,[\\\"edit\\\"]],[22,1,[]]],null]],[12,\\\"data-element\\\",[28,[[21,\\\"card-data-element\\\"],\\\"-field-item-\\\",[22,2,[]]]]],[12,\\\"class\\\",[28,[[27,\\\"if\\\",[[27,\\\"is-not-empty-and-equal\\\",[[23,[\\\"selectedItem\\\"]],[22,1,[\\\"id\\\"]]],null],\\\"is-active\\\"],null]]]],[11,\\\"role\\\",\\\"link\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"box-margin-Rmd-v2 text-wrap\\\"],[9],[0,\\\"\\\\n                    \\\"],[4,\\\"if\\\",[[22,1,[\\\"score\\\"]]],null,{\\\"statements\\\":[[1,[22,1,[\\\"score\\\"]],false],[1,[27,\\\"if\\\",[[22,1,[\\\"description\\\"]],\\\" - \\\"],null],false]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"preserve-linebreak\\\",[[22,1,[\\\"description\\\"]]],null],false],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"span\\\"],[12,\\\"class\\\",[28,[[27,\\\"unless\\\",[[22,1,[\\\"effectiveDate\\\"]],\\\"hidden\\\"],null]]]],[9],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"format-date-time-local\\\",[[22,1,[\\\"effectiveDate\\\"]]],null],false],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1,2]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isEditing\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"list list--hover list--selectable\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"li\\\"],[11,\\\"class\\\",\\\"is-active\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"box-margin-Bn\\\"],[9],[1,[21,\\\"recordingText\\\"],false],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"p\\\"],[12,\\\"class\\\",[28,[\\\"text-color-placeholder box-margin-Bxs-v2 \\\",[27,\\\"unless\\\",[[23,[\\\"placeholderText\\\"]],\\\"hidden\\\"],null]]]],[12,\\\"data-element\\\",[28,[[21,\\\"card-data-element\\\"],\\\"-placeholder-text\\\"]]],[9],[1,[21,\\\"placeholderText\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}],[4,\\\"if\\\",[[23,[\\\"hasMultipleItems\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-padding-TBxs-v2\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"a\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"toggleShowAll\\\"],null]],[12,\\\"data-element\\\",[28,[[21,\\\"card-data-element\\\"],\\\"-field-show-all-toggle\\\"]]],[11,\\\"role\\\",\\\"link\\\"],[9],[0,\\\"\\\\n            \\\"],[4,\\\"if\\\",[[23,[\\\"isShowingAll\\\"]]],null,{\\\"statements\\\":[[0,\\\"Hide past entries\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"Show past entries (\\\"],[1,[21,\\\"historicalContentCount\\\"],false],[0,\\\")\\\"]],\\\"parameters\\\":[]}],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/card-field.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/care-team-contact-form\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"+z7Jlbj7\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row input\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label is-required\\\"],[9],[0,\\\"First name\\\"],[10],[0,\\\"\\\\n        \\\"],[1,[27,\\\"validated-textfield\\\",null,[[\\\"placeholder\\\",\\\"class\\\",\\\"value\\\",\\\"maxlength\\\",\\\"errorMessage\\\",\\\"tooltipTrigger\\\",\\\"data-element\\\",\\\"disabled\\\"],[\\\"First name\\\",[27,\\\"concat\\\",[\\\"first-name\\\",\\\" \\\",[27,\\\"if\\\",[[23,[\\\"contact\\\",\\\"errors\\\",\\\"firstName\\\"]],\\\"error\\\"],null],\\\" \\\"],null],[23,[\\\"contact\\\",\\\"firstName\\\"]],\\\"128\\\",[23,[\\\"contact\\\",\\\"errors\\\",\\\"firstName\\\"]],[23,[\\\"hover\\\"]],\\\"care-team-form-first-name\\\",[23,[\\\"disabled\\\"]]]]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label is-required\\\"],[9],[0,\\\"Last name\\\"],[10],[0,\\\"\\\\n        \\\"],[1,[27,\\\"validated-textfield\\\",null,[[\\\"placeholder\\\",\\\"value\\\",\\\"maxlength\\\",\\\"errorMessage\\\",\\\"tooltipTrigger\\\",\\\"data-element\\\",\\\"disabled\\\",\\\"class\\\"],[\\\"First name\\\",[23,[\\\"contact\\\",\\\"lastName\\\"]],\\\"128\\\",[23,[\\\"contact\\\",\\\"errors\\\",\\\"lastName\\\"]],[23,[\\\"hover\\\"]],\\\"care-team-form-last-name\\\",[23,[\\\"disabled\\\"]],[27,\\\"concat\\\",[[27,\\\"if\\\",[[23,[\\\"contact\\\",\\\"errors\\\",\\\"lastName\\\"]],\\\"error\\\"],null],\\\" \\\"],null]]]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row input\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Phone number\\\"],[10],[0,\\\"\\\\n        \\\"],[1,[27,\\\"validated-textfield\\\",null,[[\\\"placeholderText\\\",\\\"maxlength\\\",\\\"value\\\",\\\"errorMessage\\\",\\\"tooltipTrigger\\\",\\\"data-element\\\",\\\"disabled\\\",\\\"class\\\"],[\\\"(   )   -    \\\",\\\"20\\\",[23,[\\\"contact\\\",\\\"officePhone\\\"]],[23,[\\\"contact\\\",\\\"errors\\\",\\\"officePhone\\\"]],[23,[\\\"hover\\\"]],\\\"care-team-form-phone-number\\\",[23,[\\\"disabled\\\"]],[27,\\\"concat\\\",[[27,\\\"if\\\",[[23,[\\\"contact\\\",\\\"errors\\\",\\\"officePhone\\\"]],\\\"error\\\"],null],\\\" \\\"],null]]]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"contact\\\",\\\"isProviderProfile\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label is-required\\\"],[9],[0,\\\"Fax number\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6\\\"],[9],[0,\\\"\\\\n            \\\"],[1,[27,\\\"validated-textfield\\\",null,[[\\\"placeholderText\\\",\\\"maxlength\\\",\\\"value\\\",\\\"errorMessage\\\",\\\"tooltipTrigger\\\",\\\"data-element\\\",\\\"disabled\\\",\\\"class\\\"],[\\\"(   )   -    \\\",\\\"20\\\",[23,[\\\"contact\\\",\\\"fax\\\"]],[23,[\\\"contact\\\",\\\"errors\\\",\\\"fax\\\"]],[23,[\\\"hover\\\"]],\\\"care-team-form-fax\\\",[23,[\\\"disabled\\\"]],[27,\\\"concat\\\",[[27,\\\"if\\\",[[23,[\\\"contact\\\",\\\"errors\\\",\\\"fax\\\"]],\\\"error\\\"],null],\\\" \\\"],null]]]],false],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row input\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Email\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"input\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"email\\\"],[9],[0,\\\"\\\\n                \\\"],[1,[27,\\\"validated-textfield\\\",null,[[\\\"placeholderText\\\",\\\"maxlength\\\",\\\"value\\\",\\\"errorMessage\\\",\\\"tooltipTrigger\\\",\\\"data-element\\\",\\\"disabled\\\",\\\"class\\\"],[\\\"Email\\\",\\\"80\\\",[23,[\\\"contact\\\",\\\"email\\\"]],[23,[\\\"contact\\\",\\\"errors\\\",\\\"email\\\"]],[23,[\\\"hover\\\"]],\\\"care-team-form-email\\\",[23,[\\\"disabled\\\"]],[27,\\\"concat\\\",[[27,\\\"if\\\",[[23,[\\\"contact\\\",\\\"email\\\",\\\"officePhone\\\"]],\\\"error\\\"],null],\\\" \\\"],null]]]],false],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row input\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Specialty\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"input\\\"],[9],[0,\\\"\\\\n            \\\"],[1,[27,\\\"single-select\\\",null,[[\\\"content\\\",\\\"prompt\\\",\\\"optionLabelPath\\\",\\\"optionValuePath\\\",\\\"selection\\\",\\\"hasError\\\",\\\"tooltipMsg\\\",\\\"isTooltipVisible\\\",\\\"tooltipPlacement\\\",\\\"data-element\\\",\\\"disabled\\\",\\\"class\\\"],[[23,[\\\"specialties\\\"]],\\\"Choose specialty\\\",\\\"specializationName\\\",\\\"specializationId\\\",[23,[\\\"contact\\\",\\\"specialty\\\"]],false,\\\"Please choose a specialty.\\\",false,\\\"right\\\",\\\"care-team-form-specialty\\\",[23,[\\\"disabled\\\"]],[27,\\\"concat\\\",[\\\"dropdown\\\",\\\" \\\"],null]]]],false],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/care-team-contact-form.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/care-team-detail\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"2OYDQl9C\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\",\\\"section\\\"],\\\"statements\\\":[[4,\\\"detail-pane\\\",null,[[\\\"close\\\",\\\"resizables\\\",\\\"resizeOnBreakPoint\\\",\\\"smallHeaderText\\\",\\\"bigHeaderText\\\"],[\\\"save\\\",[23,[\\\"resizables\\\"]],true,\\\"Care Team\\\",[23,[\\\"bigHeaderText\\\"]]]],{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"detail-pane-body\\\",null,[[\\\"sectionContext\\\"],[[22,2,[]]]],{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isAddingNew\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"single-select\\\",null,[[\\\"class\\\",\\\"content\\\",\\\"placeholder\\\",\\\"selectType\\\",\\\"optionLabelPath\\\",\\\"select\\\",\\\"optionGroupPath\\\",\\\"optionGroupLabelPath\\\",\\\"openOnFocus\\\",\\\"addCustomItemTemplateText\\\",\\\"addItem\\\",\\\"data-element\\\"],[\\\"provider-select\\\",[23,[\\\"selectOptions\\\"]],\\\"Search providers\\\",\\\"typeahead\\\",\\\"profile.fullProviderName\\\",\\\"profileSelected\\\",\\\"groupKey\\\",\\\"group\\\",true,\\\"Add new provider to connections\\\",\\\"createContact\\\",\\\"care-team-search\\\"]]],false],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"contact\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"care-team-contact-form\\\",null,[[\\\"contact\\\",\\\"disabled\\\"],[[23,[\\\"contact\\\"]],[23,[\\\"contact\\\",\\\"isProviderProfile\\\"]]]]],false],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label is-required\\\"],[9],[0,\\\"Relationship to patient\\\"],[10],[0,\\\"\\\\n                    \\\"],[4,\\\"d-check-box\\\",null,[[\\\"smaller\\\",\\\"checked\\\",\\\"disabled\\\",\\\"data-element\\\"],[true,[23,[\\\"isPreferred\\\"]],[23,[\\\"cantBePreferred\\\"]],\\\"care-team-relationship-preferred\\\"]],{\\\"statements\\\":[[0,\\\"Preferred provider in practice\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n                    \\\"],[4,\\\"d-check-box\\\",null,[[\\\"smaller\\\",\\\"checked\\\",\\\"disabled\\\",\\\"data-element\\\"],[true,[23,[\\\"isBackup\\\"]],[23,[\\\"cantBeBackup\\\"]],\\\"care-team-relationship-backup\\\"]],{\\\"statements\\\":[[0,\\\"Backup provider in practice\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\\n            \\\"],[7,\\\"hr\\\"],[9],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"\\\\n                    \\\"],[4,\\\"d-check-box\\\",null,[[\\\"smaller\\\",\\\"checked\\\",\\\"data-element\\\"],[true,[23,[\\\"isPrimary\\\"]],\\\"care-team-relationship-pcp\\\"]],{\\\"statements\\\":[[0,\\\"Primary care provider (PCP)\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n                    \\\"],[4,\\\"d-check-box\\\",null,[[\\\"smaller\\\",\\\"checked\\\",\\\"data-element\\\"],[true,[23,[\\\"isReferring\\\"]],\\\"care-team-relationship-referring\\\"]],{\\\"statements\\\":[[0,\\\"Referring provider\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n                    \\\"],[4,\\\"d-check-box\\\",null,[[\\\"smaller\\\",\\\"class\\\",\\\"checked\\\",\\\"data-element\\\"],[true,\\\"care-team-detail--other-provider\\\",[23,[\\\"isOther\\\"]],\\\"care-team-relationship-other\\\"]],{\\\"statements\\\":[[0,\\\"Other provider\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"d-text-field\\\",null,[[\\\"placeholderText\\\",\\\"isShorted\\\",\\\"maxlength\\\",\\\"value\\\",\\\"disabled\\\",\\\"data-element\\\"],[\\\"Enter relationship\\\",true,\\\"254\\\",[23,[\\\"otherDescription\\\"]],[23,[\\\"cantEditOtherDescription\\\"]],\\\"care-team-relationship-other-text\\\"]]],false],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"detail-pane-footer\\\",null,[[\\\"sectionContext\\\",\\\"class\\\"],[[22,2,[]],\\\"diagnosis-detail--footer\\\"]],{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"right-module-row clearfix\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"pull-right btn btn-primary\\\"],[11,\\\"data-element\\\",\\\"care-team-save\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"save\\\"]],[9],[0,\\\"Save\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn\\\"],[11,\\\"data-element\\\",\\\"care-team-cancel\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"]],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[2]},null],[0,\\\"\\\\n\\\"],[4,\\\"content-modal\\\",null,[[\\\"modalStyle\\\",\\\"isVisible\\\"],[7,[23,[\\\"isConfirmingProviderChange\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"header\\\"]]],[[\\\"title\\\",\\\"isCloseByXorOutsideVisible\\\"],[[23,[\\\"confirmChangeTitle\\\"]],true]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,1,[\\\"body\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"p\\\"],[9],[1,[21,\\\"confirmChangeDescription\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"footer\\\"]]],[[\\\"buttonRightSecondaryText\\\",\\\"buttonRightPrimaryText\\\",\\\"buttonRightSecondaryAction\\\",\\\"buttonRightPrimaryAction\\\"],[\\\"Cancel\\\",\\\"Update\\\",[27,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"confirmProviderChange\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/care-team-detail.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/care-team-list\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"lzifbhPz\", \"block\": \"{\\\"symbols\\\":[\\\"rowContext\\\",\\\"member\\\",\\\"member\\\",\\\"relationship\\\",\\\"member\\\"],\\\"statements\\\":[[7,\\\"h3\\\"],[11,\\\"class\\\",\\\"header3a\\\"],[9],[0,\\\"Care Team\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"disabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"btn btn-add-provider\\\"],[11,\\\"href\\\",\\\"#\\\"],[11,\\\"data-element\\\",\\\"care-team-add-button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"add\\\"]],[9],[0,\\\"\\\\n        Add provider\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-group\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"careTeam\\\",\\\"members\\\"]]],null,{\\\"statements\\\":[[4,\\\"data-table\\\",null,[[\\\"class\\\",\\\"content\\\",\\\"selectedItem\\\"],[\\\"care-team-list-table\\\",[23,[\\\"careTeam\\\",\\\"members\\\"]],[23,[\\\"selectedMember\\\"]]]],{\\\"statements\\\":[[4,\\\"data-table-column\\\",null,[[\\\"content\\\",\\\"field\\\",\\\"title\\\",\\\"isSortable\\\"],[[22,1,[]],\\\"profile.displayName\\\",\\\"Name/Specialty\\\",false]],{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"disabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"provider-name\\\"],[9],[1,[22,5,[\\\"profile\\\",\\\"fullProviderName\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"provider-name\\\"],[11,\\\"href\\\",\\\"#\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"edit\\\",[22,5,[]]]],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[9],[1,[22,5,[\\\"profile\\\",\\\"fullProviderName\\\"]],false],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"provider-type\\\"],[9],[0,\\\"\\\\n                    \\\"],[4,\\\"if\\\",[[22,5,[\\\"profile\\\",\\\"isDirectoryContact\\\"]]],null,{\\\"statements\\\":[[0,\\\"My connections\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"In practice\\\"]],\\\"parameters\\\":[]}],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"provider-specialty\\\"],[9],[1,[22,5,[\\\"profile\\\",\\\"specialtyName\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[5]},null],[4,\\\"data-table-column\\\",null,[[\\\"content\\\",\\\"field\\\",\\\"title\\\",\\\"isSortable\\\"],[[22,1,[]],\\\"relatioship\\\",\\\"Relationship to patient\\\",false]],{\\\"statements\\\":[[4,\\\"each\\\",[[22,3,[\\\"relationships\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"care-team-member-relationship\\\"],[9],[1,[22,4,[\\\"display\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[4]},null]],\\\"parameters\\\":[3]},null],[4,\\\"data-table-column\\\",null,[[\\\"content\\\",\\\"field\\\",\\\"title\\\",\\\"isSortable\\\"],[[22,1,[]],\\\"contact\\\",\\\"Contact\\\",false]],{\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"disabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[11,\\\"class\\\",\\\"btn-delete\\\"],[11,\\\"data-element\\\",\\\"care-team-member-delete\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"delete\\\",[22,2,[]]]],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-go-away-small\\\"],[9],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"care-team-member-contact\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,2,[\\\"profile\\\",\\\"officePhone\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[9],[0,\\\"P: \\\"],[1,[22,2,[\\\"profile\\\",\\\"officePhone\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[22,2,[\\\"profile\\\",\\\"fax\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[9],[0,\\\"F: \\\"],[1,[22,2,[\\\"profile\\\",\\\"fax\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[22,2,[\\\"profile\\\",\\\"email\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[9],[1,[22,2,[\\\"profile\\\",\\\"email\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[1]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[11,\\\"data-element\\\",\\\"care-team-empty-message\\\"],[9],[0,\\\"No care team for this patient. Add care team member.\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/care-team-list.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/ccda-preview-modal-configurable\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"0QRmywbS\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\",\\\"component\\\",\\\"component\\\",\\\"name\\\",\\\"error\\\"],\\\"statements\\\":[[4,\\\"content-modal\\\",null,[[\\\"modalStyle\\\",\\\"isVisible\\\",\\\"isDraggable\\\",\\\"includeBackdrop\\\",\\\"modalSize\\\",\\\"isLoading\\\"],[0,[23,[\\\"isVisible\\\"]],false,true,\\\"responsive912w\\\",[23,[\\\"isLoading\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"header\\\"]]],[[\\\"title\\\",\\\"isCloseByXorOutsideVisible\\\"],[[23,[\\\"titleConfigurable\\\"]],true]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,1,[\\\"body\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"showErrorPane\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"ccda-preview-modal-error-content type-v2\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"ccda-error-body\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"ccda\\\",\\\"validationErrors\\\",\\\"errorList\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"li\\\"],[11,\\\"class\\\",\\\"ccda-error-item\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"content-expander\\\",null,[[\\\"expandableContentSelector\\\"],[[22,5,[\\\"dataElementClass\\\"]]]],{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-urgent\\\"],[9],[10],[0,\\\"\\\\n                                \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"upper p-semibold\\\"],[9],[1,[22,5,[\\\"errorTypeIndicator\\\"]],false],[0,\\\" - \\\"],[1,[22,5,[\\\"description\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                            \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[\\\"ccd-error-details \\\",[22,5,[\\\"dataElement\\\"]]]]],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,5,[\\\"documentLineNumber\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3 upper p-semibold\\\"],[9],[0,\\\"Line number\\\"],[10],[0,\\\"\\\\n                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-9\\\"],[9],[1,[22,5,[\\\"documentLineNumber\\\"]],false],[10],[0,\\\"\\\\n                                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[22,5,[\\\"type\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3 upper p-semibold\\\"],[9],[0,\\\"Type\\\"],[10],[0,\\\"\\\\n                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-9\\\"],[9],[1,[22,5,[\\\"type\\\"]],false],[10],[0,\\\"\\\\n                                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[22,5,[\\\"xpath\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3 upper p-semibold\\\"],[9],[0,\\\"Xpath\\\"],[10],[0,\\\"\\\\n                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-9\\\"],[9],[1,[22,5,[\\\"xpath\\\"]],false],[10],[0,\\\"\\\\n                                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                            \\\"],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[5]},null],[0,\\\"                    \\\"],[1,[23,[\\\"ccda\\\",\\\"validationErrors\\\",\\\"errorText\\\"]],false],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isValidating\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"ccda-notification\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"view-spinner\\\",null,[[\\\"class\\\",\\\"contentElement\\\",\\\"isShorter\\\",\\\"isLoading\\\"],[\\\"loading-indicator\\\",\\\".ccda-notification .loading-indicator > div\\\",true,[23,[\\\"isValidating\\\"]]]],{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"spinner-label\\\"],[9],[0,\\\"Validating file\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"showNotification\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isValidationError\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"ccda-notification ccda-error-indicator\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-urgent\\\"],[9],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"span\\\"],[11,\\\"data-element\\\",\\\"validation-error-message\\\"],[9],[1,[21,\\\"validationErrorMessage\\\"],false],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"a\\\"],[11,\\\"data-element\\\",\\\"view-validation-errors-link\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"toggleErrorPane\\\"],null]],[9],[0,\\\"View details\\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"icon-go-away pull-right\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"closeNotification\\\"],null]],[9],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"ccda-notification ccda-success-indicator\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-checkmark\\\"],[9],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"span\\\"],[9],[0,\\\"File validation complete\\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"            \\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}],[0,\\\"            \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[\\\"left-panel left-panel-v2 ccda-preview-modal-content type-v2 \\\",[27,\\\"if\\\",[[23,[\\\"isNotificationDisplayed\\\"]],\\\"with-notification\\\"],null]]]],[9],[0,\\\"\\\\n                \\\"],[7,\\\"h4\\\"],[11,\\\"class\\\",\\\"header4semibold\\\"],[9],[1,[21,\\\"patientName\\\"],false],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6 upper\\\"],[9],[0,\\\"Date of birth\\\"],[10],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6\\\"],[9],[1,[27,\\\"format-date-time-ignore-offset\\\",[[23,[\\\"ccda\\\",\\\"patientDemographics\\\",\\\"dateOfBirth\\\"]],\\\"MM/DD/YYYY\\\"],null],false],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6 upper\\\"],[9],[0,\\\"Sex\\\"],[10],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6\\\"],[9],[1,[23,[\\\"ccda\\\",\\\"patientDemographics\\\",\\\"sex\\\"]],false],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6 upper\\\"],[9],[0,\\\"Care team\\\"],[10],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"careTeamNames\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-margin-Bsm-v2\\\"],[9],[0,\\\"\\\\n                                        \\\"],[7,\\\"div\\\"],[9],[1,[22,4,[]],false],[10],[0,\\\"\\\\n                                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[4]},null],[0,\\\"                            \\\"],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6 upper\\\"],[9],[0,\\\"Race\\\"],[10],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6\\\"],[9],[1,[23,[\\\"ccda\\\",\\\"patientDemographics\\\",\\\"race\\\"]],false],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6 upper\\\"],[9],[0,\\\"Ethnicity\\\"],[10],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6\\\"],[9],[1,[23,[\\\"ccda\\\",\\\"patientDemographics\\\",\\\"ethnicity\\\"]],false],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6 upper\\\"],[9],[0,\\\"Preferred language\\\"],[10],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6\\\"],[9],[1,[21,\\\"preferredLanguage\\\"],false],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"sortedComponents\\\"]]],null,{\\\"statements\\\":[[4,\\\"unless\\\",[[22,3,[\\\"isTocOnly\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[22,3,[\\\"isDisplayActive\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-margin-Tmd-v2\\\"],[12,\\\"data-element\\\",[28,[[22,3,[\\\"dataElement\\\"]]]]],[9],[0,\\\"\\\\n\\\"],[4,\\\"content-expander\\\",null,[[\\\"expandableContentSelector\\\",\\\"isExpanded\\\"],[[22,3,[\\\"dataElementClass\\\"]],true]],{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"p-semibold\\\"],[9],[1,[22,3,[\\\"title\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                                \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[\\\"ccd-component-container \\\",[22,3,[\\\"dataElement\\\"]]]]],[9],[0,\\\"\\\\n                                    \\\"],[1,[22,3,[\\\"html\\\"]],true],[0,\\\"\\\\n                                \\\"],[10],[0,\\\"\\\\n                            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[3]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[\\\"right-panel-v2 type-v2 \\\",[27,\\\"if\\\",[[23,[\\\"isNotificationDisplayed\\\"]],\\\"with-notification\\\"],null]]]],[9],[0,\\\"\\\\n                \\\"],[7,\\\"h4\\\"],[9],[0,\\\"Table of contents\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"sortedComponents\\\"]]],null,{\\\"statements\\\":[[4,\\\"unless\\\",[[22,2,[\\\"isChild\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"ccda-toc-item inline-flex-group\\\"],[12,\\\"data-element\\\",[28,[[22,2,[\\\"dataElementToc\\\"]]]]],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs-v2\\\"],[9],[0,\\\"\\\\n                                \\\"],[7,\\\"a\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"goToSection\\\",[22,2,[\\\"dataElement\\\"]]]],[9],[1,[22,2,[\\\"title\\\"]],false],[10],[0,\\\"\\\\n                            \\\"],[10],[0,\\\"\\\\n                            \\\"],[1,[27,\\\"d-checkbox-switch\\\",null,[[\\\"checked\\\",\\\"class\\\"],[[22,2,[\\\"isDisplayActive\\\"]],\\\"item box-fixed-md-v2\\\"]]],false],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[2]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null],[4,\\\"component\\\",[[22,1,[\\\"footer\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"showErrorPane\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-left box-padding-Lmd-v2 box-padding-Txs-v2\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"a\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"toggleErrorPane\\\"],null]],[11,\\\"data-element\\\",\\\"link-back-to-ccda\\\"],[9],[0,\\\"Back to view CCDA information\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"btn btn-sm\\\"],[12,\\\"href\\\",[28,[[23,[\\\"config\\\",\\\"ccdaParsingLearnMoreURL\\\"]]]]],[11,\\\"target\\\",\\\"_blank\\\"],[9],[0,\\\"Learn more\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"btn btn-sm\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"print\\\"]],[9],[0,\\\"Print\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"shouldHideDownloadButton\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-sm btn-primary\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"download\\\",false]],[9],[0,\\\"Download XML\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"shouldHideSettingsLink\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-left box-padding-Lmd-v2 box-padding-Txs-v2\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"a\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"gotoCcdSettings\\\"],null]],[11,\\\"data-element\\\",\\\"link-ccda-settings\\\"],[9],[0,\\\"Manage order & display of content\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isLoading\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"btn btn-sm\\\"],[11,\\\"disabled\\\",\\\"true\\\"],[9],[0,\\\"Download\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"btn btn-sm\\\"],[11,\\\"disabled\\\",\\\"true\\\"],[9],[0,\\\"Print\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"shouldHideDownloadButton\\\"]]],null,{\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"isValidationError\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-sm\\\"],[11,\\\"data-element\\\",\\\"button-download-ccda-html\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"download\\\",true]],[9],[0,\\\"Download HTML\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                        \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-sm\\\"],[11,\\\"data-element\\\",\\\"button-download-ccda-xml\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"download\\\",false]],[9],[0,\\\"Download XML\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                    \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"btn btn-sm btn-primary\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"print\\\"]],[9],[0,\\\"Print\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/ccda-preview-modal-configurable.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/ccda-preview-modal-default\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"ZSbHrE7K\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\",\\\"component\\\",\\\"component\\\",\\\"line\\\",\\\"name\\\"],\\\"statements\\\":[[4,\\\"content-modal\\\",null,[[\\\"modalStyle\\\",\\\"isVisible\\\",\\\"isDraggable\\\",\\\"includeBackdrop\\\",\\\"modalSize\\\",\\\"isLoading\\\"],[0,[23,[\\\"isVisible\\\"]],false,true,\\\"responsive912w\\\",[23,[\\\"isLoading\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"header\\\"]]],[[\\\"title\\\",\\\"isCloseByXorOutsideVisible\\\"],[[23,[\\\"title\\\"]],true]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,1,[\\\"body\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"left-panel ccda-preview-modal-content\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"h4\\\"],[11,\\\"class\\\",\\\"header4semibold\\\"],[9],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"visible-print-inline\\\"],[9],[1,[21,\\\"title\\\"],false],[0,\\\" - \\\"],[10],[1,[21,\\\"patientName\\\"],false],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-7 upper p-semibold\\\"],[9],[0,\\\"Race\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-5\\\"],[9],[1,[23,[\\\"ccda\\\",\\\"patientDemographics\\\",\\\"race\\\"]],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-7 upper p-semibold\\\"],[9],[0,\\\"Ethnicity\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-5\\\"],[9],[1,[23,[\\\"ccda\\\",\\\"patientDemographics\\\",\\\"ethnicity\\\"]],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-7 upper p-semibold\\\"],[9],[0,\\\"Preferred language\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-5\\\"],[9],[1,[21,\\\"preferredLanguage\\\"],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6 upper p-semibold\\\"],[9],[0,\\\"Care team\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"careTeamNames\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"div\\\"],[9],[1,[22,5,[]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[5]},null],[0,\\\"                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6 upper p-semibold\\\"],[9],[0,\\\"Care team phone\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6\\\"],[9],[1,[21,\\\"careTeamPhone\\\"],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6 upper p-semibold\\\"],[9],[0,\\\"Care team address\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"careTeamAddress\\\"]]],null,{\\\"statements\\\":[[4,\\\"each\\\",[[23,[\\\"careTeamAddress\\\",\\\"addressLines\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"div\\\"],[9],[1,[22,4,[]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[4]},null],[0,\\\"                            \\\"],[7,\\\"div\\\"],[9],[1,[23,[\\\"careTeamAddress\\\",\\\"city\\\"]],false],[0,\\\" \\\"],[1,[23,[\\\"careTeamAddress\\\",\\\"state\\\"]],false],[10],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[9],[1,[23,[\\\"careTeamAddress\\\",\\\"postalCode\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"ccda\\\",\\\"components\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-margin-Tsm\\\"],[12,\\\"data-element\\\",[28,[[22,3,[\\\"dataElement\\\"]]]]],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"upper p-semibold\\\"],[9],[1,[22,3,[\\\"title\\\"]],false],[10],[0,\\\"\\\\n\\\"],[0,\\\"                \\\"],[1,[22,3,[\\\"html\\\"]],true],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"right-panel\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"h4\\\"],[9],[0,\\\"Table of contents\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"ccda\\\",\\\"components\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"a\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"goToSection\\\",[22,2,[\\\"dataElement\\\"]]]],[9],[1,[22,2,[\\\"title\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"component\\\",[[22,1,[\\\"footer\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isLoading\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"btn btn-sm\\\"],[11,\\\"disabled\\\",\\\"true\\\"],[9],[0,\\\"Download\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"btn btn-sm\\\"],[11,\\\"disabled\\\",\\\"true\\\"],[9],[0,\\\"Print\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"shouldHideDownloadButton\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"btn-group btn-ccd-download\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-sm dropdown-shorter\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"download\\\",false]],[9],[0,\\\"Download XML\\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"btn dropdown-toggle split-btn dropdown-shorter\\\"],[11,\\\"data-toggle\\\",\\\"dropdown\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-caret\\\"],[9],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"dropdown-menu dropdown-menu-shorter\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"li\\\"],[9],[0,\\\"\\\\n                                \\\"],[7,\\\"a\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"download\\\",false]],[9],[0,\\\"Download XML\\\"],[10],[0,\\\"\\\\n                            \\\"],[10],[0,\\\"\\\\n                            \\\"],[7,\\\"li\\\"],[9],[0,\\\"\\\\n                                \\\"],[7,\\\"a\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"download\\\",true]],[9],[0,\\\"Download HTML\\\"],[10],[0,\\\"\\\\n                            \\\"],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"btn btn-sm\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"print\\\"]],[9],[0,\\\"Print\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/ccda-preview-modal-default.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/cds-alert\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"llmq3EJ+\", \"block\": \"{\\\"symbols\\\":[\\\"citation\\\"],\\\"statements\\\":[[7,\\\"div\\\"],[12,\\\"class\\\",[28,[\\\"ember-accordion-header \\\",[27,\\\"if\\\",[[23,[\\\"isExpanded\\\"]],\\\"expanded\\\"],null]]]],[3,\\\"action\\\",[[22,0,[]],\\\"toggleExpanded\\\"]],[9],[0,\\\"\\\\n    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"ember-accordion-expand-icon\\\"],[9],[10],[0,\\\"\\\\n    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"icon-go-away-small\\\"],[11,\\\"id\\\",\\\"dismissible-ember-accordion-header-close-button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"dismiss\\\"],[[\\\"bubbles\\\"],[false]]],[9],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showActionLinks\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"custom-action\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isExternalLink\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"a\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"openUri\\\",[23,[\\\"externalLinkUri\\\"]]],[[\\\"bubbles\\\"],[false]]],[9],[1,[23,[\\\"cdsAlert\\\",\\\"actionLinkText\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"internalRouteLink\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"a\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"routeLink\\\",[23,[\\\"internalRouteLink\\\",\\\"route\\\"]],[23,[\\\"internalRouteLink\\\",\\\"arg1\\\"]]],[[\\\"bubbles\\\"],[false]]],[9],[1,[23,[\\\"cdsAlert\\\",\\\"actionLinkText\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"actionLinkType\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"a\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"bubbleAction\\\",[23,[\\\"cdsAlert\\\"]]],[[\\\"bubbles\\\"],[false]]],[9],[1,[23,[\\\"cdsAlert\\\",\\\"actionLinkText\\\"]],false],[10],[0,\\\"\\\\n            \\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"cds-alert-text-custom-action cds-alert-text\\\"],[9],[1,[23,[\\\"cdsAlert\\\",\\\"alertText\\\"]],false],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isExpanded\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"ember-accordion-pane-content\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[[27,\\\"if\\\",[[23,[\\\"error\\\"]],\\\"ember-accordion-pane-content-error\\\"],null]]]],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"accordion-indent\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"p\\\"],[12,\\\"class\\\",[28,[[27,\\\"unless\\\",[[23,[\\\"cdsAlert\\\",\\\"developer\\\"]],\\\"hidden\\\"],null]]]],[11,\\\"data-element\\\",\\\"cds-developer\\\"],[9],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"accordion-content-description\\\"],[9],[0,\\\"Intervention Developer:\\\"],[10],[0,\\\" \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"accordion-content\\\"],[9],[1,[23,[\\\"cdsAlert\\\",\\\"developer\\\"]],false],[10],[10],[0,\\\"\\\\n                \\\"],[7,\\\"p\\\"],[12,\\\"class\\\",[28,[[27,\\\"unless\\\",[[23,[\\\"cdsAlert\\\",\\\"sponsor\\\"]],\\\"hidden\\\"],null]]]],[11,\\\"data-element\\\",\\\"cds-source\\\"],[9],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"accordion-content-description\\\"],[9],[0,\\\"Funding Source:\\\"],[10],[0,\\\" \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"accordion-content\\\"],[9],[1,[23,[\\\"cdsAlert\\\",\\\"sponsor\\\"]],false],[10],[10],[0,\\\"\\\\n                \\\"],[7,\\\"p\\\"],[12,\\\"class\\\",[28,[[27,\\\"unless\\\",[[23,[\\\"ruleVersion\\\"]],\\\"hidden\\\"],null]]]],[11,\\\"data-element\\\",\\\"cds-version\\\"],[9],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"accordion-content-description\\\"],[9],[0,\\\"Release Version:\\\"],[10],[0,\\\" \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"accordion-content\\\"],[9],[1,[21,\\\"ruleVersion\\\"],false],[10],[10],[0,\\\"\\\\n                \\\"],[7,\\\"p\\\"],[12,\\\"class\\\",[28,[[27,\\\"unless\\\",[[23,[\\\"cdsAlert\\\",\\\"link\\\"]],\\\"hidden\\\"],null]]]],[11,\\\"data-element\\\",\\\"cds-reference\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"accordion-content\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"a\\\"],[12,\\\"href\\\",[28,[[23,[\\\"cdsAlert\\\",\\\"link\\\"]]]]],[11,\\\"target\\\",\\\"_blank\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"trackReferenceLinkClick\\\"],[[\\\"preventDefault\\\"],[false]]],[9],[0,\\\"\\\\n                            Reference Information\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showInfobuttonLink\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"vertical-divider\\\"],[9],[0,\\\" | \\\"],[10],[0,\\\"\\\\n                            \\\"],[7,\\\"a\\\"],[12,\\\"href\\\",[28,[[23,[\\\"cdsAlert\\\",\\\"infobuttonLink\\\"]]]]],[11,\\\"target\\\",\\\"_blank\\\"],[9],[0,\\\"\\\\n                                Diagnostic/Therapeutic Information\\\\n                            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"cdsAlert\\\",\\\"citations\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"p\\\"],[12,\\\"class\\\",[28,[[27,\\\"unless\\\",[[22,1,[]],\\\"hidden\\\"],null]]]],[11,\\\"data-element\\\",\\\"cds-citation\\\"],[9],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"accordion-content-description\\\"],[9],[0,\\\"Citation:\\\"],[10],[0,\\\" \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"accordion-content\\\"],[9],[1,[22,1,[]],false],[10],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/cds-alert.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/cds-alerts\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"i5nY7Q1H\", \"block\": \"{\\\"symbols\\\":[\\\"cdsAlert\\\"],\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"items\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[\\\"cds-header \\\",[27,\\\"if\\\",[[23,[\\\"isLoading\\\"]],\\\"disabled\\\"],null]]]],[3,\\\"action\\\",[[22,0,[]],\\\"toggleExpanded\\\"]],[9],[0,\\\"\\\\n        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"cds-collapse-toggle\\\"],[9],[7,\\\"a\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isExpanded\\\"]]],null,{\\\"statements\\\":[[0,\\\"                Minimize notifications\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[1,[23,[\\\"items\\\",\\\"length\\\"]],false],[0,\\\" total notifications\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[10],[0,\\\"\\\\n        \\\"],[7,\\\"span\\\"],[9],[7,\\\"a\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"refreshData\\\"]],[9],[0,\\\"Refresh\\\"],[10],[0,\\\" to update clinical decision support (CDS) notifications below.\\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"cdsEndpointError\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[\\\"cds-header \\\",[27,\\\"if\\\",[[23,[\\\"isLoading\\\"]],\\\"disabled\\\"],null]]]],[9],[0,\\\"\\\\n        \\\"],[7,\\\"span\\\"],[9],[7,\\\"a\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"refreshData\\\"]],[9],[0,\\\"Refresh\\\"],[10],[0,\\\" to update clinical decision support (CDS) notifications below.\\\"],[10],[7,\\\"br\\\"],[9],[10],[0,\\\"\\\\n        \\\"],[7,\\\"span\\\"],[9],[0,\\\"Error running Clinical Decision Support alerts.\\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"cds-alerts\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"items\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"ember-accordion-container\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"ember-accordion-pane\\\"],[9],[0,\\\"\\\\n                \\\"],[1,[27,\\\"cds-alert\\\",null,[[\\\"cdsAlert\\\",\\\"bubbleAction\\\",\\\"cdsAlertDismissed\\\",\\\"patientPracticeGuid\\\",\\\"showActionLinks\\\"],[[22,1,[]],[27,\\\"action\\\",[[22,0,[]],\\\"bubbleAction\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"cdsAlertDismissed\\\"],null],[23,[\\\"patientPracticeGuid\\\"]],[23,[\\\"showActionLinks\\\"]]]]],false],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/cds-alerts.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/create-clinical-document-modal\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"1ukj1lP5\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\",\\\"section\\\",\\\"documentType\\\"],\\\"statements\\\":[[4,\\\"content-modal\\\",null,[[\\\"modalStyle\\\",\\\"isVisible\\\",\\\"isDraggable\\\",\\\"includeBackdrop\\\",\\\"modalSize\\\"],[0,[23,[\\\"isVisible\\\"]],false,true,\\\"fixed700w\\\"]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"header\\\"]]],[[\\\"title\\\",\\\"isCloseByXorOutsideVisible\\\"],[[23,[\\\"title\\\"]],true]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,1,[\\\"body\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Document type\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"documentTypes\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"d-radio-button\\\",null,[[\\\"id\\\",\\\"name\\\",\\\"value\\\",\\\"selectedValue\\\"],[[22,3,[\\\"code\\\"]],\\\"ccda-document-types\\\",[22,3,[\\\"code\\\"]],[23,[\\\"selectedType\\\"]]]]],false],[0,\\\"\\\\n            \\\"],[7,\\\"label\\\"],[12,\\\"for\\\",[22,3,[\\\"code\\\"]]],[11,\\\"class\\\",\\\"pf-input pf-input--radio-label is-shorter\\\"],[9],[1,[22,3,[\\\"name\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3]},null],[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"ccda-sections-header\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Sections to include\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"a\\\"],[11,\\\"data-element\\\",\\\"create-ccda-select-all\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"selectAll\\\",true]],[9],[0,\\\"Select all\\\"],[10],[0,\\\"|\\\"],[7,\\\"a\\\"],[11,\\\"data-element\\\",\\\"create-ccda-select-none\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"selectAll\\\",false]],[9],[0,\\\"Select none\\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"ccda-sections\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"optionalSections\\\"]]],null,{\\\"statements\\\":[[4,\\\"d-check-box\\\",null,[[\\\"disabled\\\",\\\"checked\\\",\\\"value\\\",\\\"name\\\",\\\"smaller\\\",\\\"data-element\\\"],[[23,[\\\"isSelectionDisabled\\\"]],[22,2,[\\\"isChecked\\\"]],[22,2,[\\\"id\\\"]],[22,2,[\\\"id\\\"]],true,[22,2,[\\\"id\\\"]]]],{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[22,2,[\\\"name\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[2]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"p\\\"],[9],[0,\\\"The patient's records will be exported into a continuity of care document which can be used to share the patient's chart with other providers. The export process can take a few minutes to complete. Once it is complete you can download the generated export file from the patient's timeline under \\\\\\\"Exported patient records\\\\\\\".\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"component\\\",[[22,1,[\\\"footer\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"btn btn-sm\\\"],[11,\\\"data-element\\\",\\\"create-ccda-cancel\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"]],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"btn btn-sm btn-primary\\\"],[11,\\\"data-element\\\",\\\"create-ccda-create\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"create\\\"]],[9],[0,\\\"Create\\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/create-clinical-document-modal.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/create-patient-clinical-document-modal\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"rSuYBD4N\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\",\\\"section\\\"],\\\"statements\\\":[[4,\\\"content-modal\\\",null,[[\\\"modalStyle\\\",\\\"isVisible\\\",\\\"isDraggable\\\",\\\"includeBackdrop\\\",\\\"modalSize\\\"],[0,[23,[\\\"isVisible\\\"]],false,true,\\\"fixed700w\\\"]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"header\\\"]]],[[\\\"title\\\",\\\"isCloseByXorOutsideVisible\\\"],[\\\"Create clinical document\\\",true]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,1,[\\\"body\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row type-v2\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label box-margin-Bmd-v2\\\"],[9],[0,\\\"Patient Information\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label box-margin-Bmd-v2\\\"],[9],[0,\\\"Document type\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-9\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"box-margin-Tn box-margin-Bmd-v2\\\"],[9],[1,[21,\\\"patientName\\\"],false],[0,\\\", \\\"],[1,[21,\\\"gender\\\"],false],[0,\\\", \\\"],[1,[27,\\\"format-date-time-utc\\\",[[23,[\\\"dob\\\"]]],null],false],[10],[0,\\\"\\\\n                \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"box-margin-Tn\\\"],[9],[0,\\\"Continuity of Care Document\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row ccda-section-row type-v2\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label box-margin-Bsm-v2\\\"],[9],[0,\\\"Sections to include\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"a\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"selectAll\\\",true],null]],[11,\\\"data-element\\\",\\\"create-ccda-select-all\\\"],[9],[0,\\\"Select all\\\"],[10],[0,\\\"|\\\"],[7,\\\"a\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"selectAll\\\",false],null]],[11,\\\"data-element\\\",\\\"create-ccda-select-none\\\"],[9],[0,\\\"none\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"ccda-sections col-xs-8\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"sections\\\"]]],null,{\\\"statements\\\":[[4,\\\"d-check-box\\\",null,[[\\\"disabled\\\",\\\"checked\\\",\\\"value\\\",\\\"name\\\",\\\"smaller\\\",\\\"data-element\\\"],[[23,[\\\"isSelectionDisabled\\\"]],[22,2,[\\\"isChecked\\\"]],[22,2,[\\\"id\\\"]],[22,2,[\\\"id\\\"]],true,[22,2,[\\\"id\\\"]]]],{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[22,2,[\\\"name\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[2]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"type-v2 box-margin-Tn\\\"],[9],[0,\\\"The patient's records will be exported into a continuity of care document which can be used to share the patient's chart with other providers. The export process can take a few minutes to complete. Once it is complete you can download the generated export file from the patient's timeline under \\\\\\\"Exported patient records\\\\\\\".\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"component\\\",[[22,1,[\\\"footer\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right type-v2\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-sm btn-primary box-margin-Rxs\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"create\\\"],null]],[11,\\\"data-element\\\",\\\"create-ccda-create\\\"],[9],[0,\\\"Create\\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/create-patient-clinical-document-modal.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/datetime-formatted\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"F85jsaUA\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[21,\\\"formattedDate\\\"],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/datetime-formatted.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/deprecated/allergy-free-text-message\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"KsFC2uO7\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isFreeTextAllergiesMessageVisible\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"free-text-allergies-section\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group box-margin-Bxs\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs box-fixed\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-urgent\\\"],[9],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs box-fixed\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-semibold\\\"],[9],[0,\\\"\\\\n                    You have previously recorded allergies in a free-text note\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"span\\\"],[9],[0,\\\"\\\\n                    To receive interaction alerts, record the note in a structured format here.\\\\n\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isRecordVisible\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"a\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"createAllergy\\\"]],[9],[0,\\\"Record\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"canShowLater\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs show-later\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"a\\\"],[11,\\\"data-element\\\",\\\"free-text-allergies-show-later\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"showFreeTextAllergiesLater\\\"]],[9],[0,\\\"Show later\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"list\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"li\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"span\\\"],[11,\\\"data-element\\\",\\\"free-text-allergies-value\\\"],[9],[1,[21,\\\"freeTextAllergies\\\"],false],[10],[0,\\\"\\\\n                \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"text-color-warning\\\"],[9],[0,\\\"(free-text note)\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"session\\\",\\\"isStaff\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isAllowedToEditAllegies\\\"]]],null,{\\\"statements\\\":[[4,\\\"popover-confirm\\\",null,[[\\\"action\\\",\\\"title\\\",\\\"popoverContent\\\",\\\"confirmLabel\\\",\\\"cancelLabel\\\",\\\"confirmType\\\",\\\"classNames\\\",\\\"data-element\\\",\\\"placement\\\"],[\\\"deleteFreeTextAllergy\\\",\\\"Delete free-text note regarding allergy\\\",\\\"This will delete this allergy note permanently from patient's chart. It is recommended that you record these free-text allergies using the structured allergy section below prior to deleting. This action is final.\\\",\\\"Delete\\\",\\\"Cancel\\\",\\\"info popover-confirm-delete-free-text-allergy\\\",\\\"\\\",\\\"free-text-allergies-delete\\\",\\\"bottom\\\"]],{\\\"statements\\\":[[0,\\\"                            Delete\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/deprecated/allergy-free-text-message.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/deprecated/diagnoses-summary-list-item\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"UIq3MvAv\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"diagnosis-description\\\",null,[[\\\"diagnosis\\\",\\\"diagnosisDescriptionDisplay\\\",\\\"isIcd10Display\\\"],[[23,[\\\"diagnosis\\\"]],[23,[\\\"diagnosisDescriptionDisplay\\\"]],[23,[\\\"isIcd10Display\\\"]]]]],false],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"diagnosis\\\",\\\"startDate\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"hint-text\\\"],[9],[0,\\\"Start:\\\"],[10],[0,\\\"\\\\n        \\\"],[1,[27,\\\"datetime-formatted\\\",null,[[\\\"datetime\\\",\\\"data-element\\\"],[[23,[\\\"diagnosis\\\",\\\"startDate\\\"]],\\\"diagnosis-item-start-date\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"unless\\\",[[23,[\\\"isIcd10Display\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"diagnosis\\\",\\\"stopDate\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"hint-text\\\"],[9],[0,\\\"Stop:\\\"],[10],[0,\\\"\\\\n            \\\"],[1,[27,\\\"datetime-formatted\\\",null,[[\\\"datetime\\\",\\\"data-element\\\"],[[23,[\\\"diagnosis\\\",\\\"stopDate\\\"]],\\\"diagnosis-item-stop-date\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/deprecated/diagnoses-summary-list-item.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/deprecated/diagnoses-summary-list-section\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"q4wCbSLa\", \"block\": \"{\\\"symbols\\\":[\\\"diagnosis\\\",\\\"diagnosis\\\"],\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"isIcd10Display\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"header\\\"],[9],[7,\\\"h3\\\"],[11,\\\"class\\\",\\\"header3b\\\"],[9],[1,[21,\\\"title\\\"],false],[0,\\\" diagnoses\\\"],[10],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"each\\\",[[23,[\\\"activeDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"active-diagnosis\\\"],[12,\\\"data-element\\\",[21,\\\"title\\\"]],[3,\\\"action\\\",[[22,0,[]],\\\"editDiagnosis\\\",[22,2,[]]]],[9],[0,\\\"\\\\n        \\\"],[1,[27,\\\"deprecated/diagnoses-summary-list-item\\\",null,[[\\\"isIcd10Display\\\",\\\"diagnosis\\\",\\\"selectedDiagnosisGuid\\\",\\\"diagnosisDescriptionDisplay\\\"],[[23,[\\\"isIcd10Display\\\"]],[22,2,[]],[23,[\\\"selectedDiagnosisGuid\\\"]],[23,[\\\"diagnosisDescriptionDisplay\\\"]]]]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[0,\\\"No active \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"lowercase\\\"],[9],[1,[21,\\\"title\\\"],false],[10],[0,\\\"diagnoses.\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"historicalDiagnosesVisible\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[9],[7,\\\"h4\\\"],[11,\\\"class\\\",\\\"header4\\\"],[9],[0,\\\"Historical\\\"],[10],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"historicalDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"historical-diagnosis\\\"],[12,\\\"data-element\\\",[21,\\\"title\\\"]],[3,\\\"action\\\",[[22,0,[]],\\\"editDiagnosis\\\",[22,1,[]]]],[9],[0,\\\"\\\\n            \\\"],[1,[27,\\\"deprecated/diagnoses-summary-list-item\\\",null,[[\\\"isIcd10Display\\\",\\\"diagnosis\\\",\\\"selectedDiagnosisGuid\\\",\\\"diagnosisDescriptionDisplay\\\"],[[23,[\\\"isIcd10Display\\\"]],[22,1,[]],[23,[\\\"selectedDiagnosisGuid\\\"]],[23,[\\\"diagnosisDescriptionDisplay\\\"]]]]],false],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"historicalDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[12,\\\"data-element\\\",[21,\\\"title\\\"]],[3,\\\"action\\\",[[22,0,[]],\\\"toggleProperty\\\",\\\"historicalDiagnosesVisible\\\"]],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"historicalDiagnosesVisible\\\"]]],null,{\\\"statements\\\":[[0,\\\"            Hide historical\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            Show historical (\\\"],[1,[23,[\\\"historicalDiagnoses\\\",\\\"length\\\"]],false],[0,\\\")\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/deprecated/diagnoses-summary-list-section.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/deprecated/diagnoses-summary-list\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"FtNDs7Mw\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"header\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"h3\\\"],[11,\\\"class\\\",\\\"header3a\\\"],[9],[0,\\\"Diagnoses\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"canRecordDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"icon icon-add edit\\\"],[11,\\\"data-element\\\",\\\"add-diagnosis-button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"recordDiagnoses\\\"]],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"unless\\\",[[23,[\\\"isLoading\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"icon icon-printer edit\\\"],[11,\\\"data-element\\\",\\\"print-diagnoses-button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"print\\\"]],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"diagnosis-display-selector-wrapper\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"span\\\"],[9],[0,\\\"Show by \\\"],[10],[0,\\\"\\\\n        \\\"],[1,[27,\\\"diagnosis-display-selector\\\",null,[[\\\"displayChanged\\\",\\\"isShorter\\\"],[\\\"displayChanged\\\",true]]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"section\\\"],[11,\\\"class\\\",\\\"d-complex-list-container\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isLoading\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"p\\\"],[9],[0,\\\"Loading diagnoses...\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"diagnosesError\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[0,\\\"Can't load diagnoses. Please \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"reloadDiagnoses\\\"]],[9],[0,\\\"try again.\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isEditing\\\"]]],null,{\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"selectedDiagnosisGuid\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"section\\\"],[11,\\\"class\\\",\\\"active\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[9],[0,\\\"Record diagnosis\\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"activePatientDiagnoses\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isAllowedToEditDiagnoses\\\"]]],null,{\\\"statements\\\":[[4,\\\"d-check-box\\\",null,[[\\\"checked\\\",\\\"disabled\\\"],[[23,[\\\"isNoKnownChecked\\\"]],[23,[\\\"isLoadingNoKnown\\\"]]]],{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"label\\\"],[12,\\\"class\\\",[28,[\\\"pf-input \\\",[21,\\\"cbSmaller\\\"]]]],[11,\\\"data-element\\\",\\\"no-active-diagnoses-label\\\"],[9],[0,\\\"Patient has no active diagnoses\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isNoKnownChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"p\\\"],[9],[0,\\\"Patient has no active diagnoses\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n            \\\"],[1,[27,\\\"deprecated/diagnoses-summary-list-section\\\",null,[[\\\"title\\\",\\\"activeDiagnoses\\\",\\\"isIcd10Display\\\",\\\"historicalDiagnoses\\\",\\\"editDiagnosis\\\",\\\"diagnosisDescriptionDisplay\\\"],[\\\"\\\",[23,[\\\"allActiveDiagnoses\\\"]],true,[23,[\\\"allHistoricalDiagnoses\\\"]],\\\"editDiagnosis\\\",[23,[\\\"diagnosisDescriptionDisplay\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"print-preview-content\\\",null,[[\\\"isVisible\\\",\\\"printTitle\\\"],[[23,[\\\"isPrintVisible\\\"]],[23,[\\\"printTitle\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"print-diagnoses\\\",null,[[\\\"class\\\",\\\"patient\\\",\\\"activeDiagnoses\\\",\\\"historicalDiagnoses\\\"],[\\\"chart-print-container\\\",[23,[\\\"patientSummary\\\"]],[23,[\\\"allActiveDiagnoses\\\"]],[23,[\\\"allHistoricalDiagnoses\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/deprecated/diagnoses-summary-list.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/device-detail\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"fKsAOteN\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\",\\\"section\\\",\\\"section\\\",\\\"section\\\",\\\"section\\\",\\\"snomed\\\"],\\\"statements\\\":[[4,\\\"detail-pane\\\",null,[[\\\"config\\\",\\\"close\\\",\\\"class\\\",\\\"resizables\\\",\\\"resizeOnBreakPoint\\\",\\\"session\\\",\\\"isToolBoxVisible\\\",\\\"isSlideOpenToolBox\\\",\\\"isEditing\\\",\\\"canDelete\\\",\\\"device\\\",\\\"bigHeaderText\\\"],[[23,[\\\"config\\\"]],\\\"close\\\",\\\"device-detail\\\",[23,[\\\"resizables\\\"]],true,[23,[\\\"session\\\"]],false,false,[23,[\\\"isEditing\\\"]],[23,[\\\"canDelete\\\"]],[23,[\\\"device\\\"]],\\\"Implantable device\\\"]],{\\\"statements\\\":[[4,\\\"detail-pane-body\\\",null,[[\\\"sectionContext\\\",\\\"class\\\"],[[22,5,[]],\\\"device-details\\\"]],{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"header\\\"],[11,\\\"class\\\",\\\"p-semibold\\\"],[9],[0,\\\"Enter and verify a Unique Device Identifier to populate data from the Global UDI Database\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label udi-field-label\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"required\\\"],[9],[0,\\\"Unique Device Identifier\\\"],[10],[0,\\\"\\\\n            \\\"],[1,[27,\\\"popover-info\\\",null,[[\\\"classNames\\\",\\\"data-element\\\",\\\"popoverContent\\\"],[\\\"icon-info\\\",\\\"udi-info\\\",\\\"A Unique Device Identifier (UDI) is composed of two parts: Device Identifier (DI) and Production Identifier (PI). Entering a UDI will populate data from the Global UDI Database.\\\"]]],false],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isUdiPopulated\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"udi-id-display item gutter-xs\\\"],[11,\\\"data-element\\\",\\\"device-udi-display\\\"],[9],[1,[21,\\\"udi\\\"],false],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item box-fixed-xs gutter-xs udi-clear-icon\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"icon\\\"],[11,\\\"class\\\",\\\"item icon-clear\\\"],[11,\\\"data-element\\\",\\\"remove-udi-button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"removeUdiInfo\\\"]],[9],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-n search-field\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"search-field-container\\\"],[9],[0,\\\"\\\\n                        \\\"],[1,[27,\\\"validated-textfield\\\",null,[[\\\"data-element\\\",\\\"errorMessage\\\",\\\"class\\\",\\\"value\\\",\\\"enter\\\"],[\\\"device-udi\\\",[23,[\\\"errors\\\",\\\"udi\\\"]],\\\"udi-text is-shorter\\\",[23,[\\\"udi\\\"]],\\\"getUdiInfo\\\"]]],false],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item box-fixed-xs gutter-n search-field box-margin-Lsm\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-sm\\\"],[11,\\\"data-element\\\",\\\"get-udi-button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"getUdiInfo\\\"]],[9],[0,\\\"Verify\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item box-fixed-md box-fixed-100 gutter-xs\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Device Active\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"d-check-box\\\",null,[[\\\"checked\\\",\\\"disabled\\\",\\\"smaller\\\",\\\"data-element\\\"],[[23,[\\\"device\\\",\\\"isActive\\\"]],[23,[\\\"disabled\\\"]],true,\\\"device-active\\\"]],{\\\"statements\\\":[[0,\\\"                    Active\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Implant date\\\"],[10],[0,\\\"\\\\n                \\\"],[1,[27,\\\"d-date-picker\\\",null,[[\\\"isLegacy\\\",\\\"value\\\",\\\"placeholder\\\",\\\"disabled\\\",\\\"autoCorrectYear\\\",\\\"data-element\\\",\\\"isShorter\\\"],[false,[23,[\\\"device\\\",\\\"userEnteredInfo\\\",\\\"userEnteredImplantDate\\\"]],\\\"MM/DD/YYYY\\\",[23,[\\\"disabled\\\"]],true,\\\"implant-date-txt\\\",true]]],false],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isUdiPopulated\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[6,[22,5,[]],[[11,\\\"class\\\",\\\"device-detail-info\\\"]],[[],[]],{\\\"statements\\\":[[0,\\\"\\\\n                \\\"],[7,\\\"header\\\"],[11,\\\"class\\\",\\\"p-semibold\\\"],[9],[0,\\\"\\\\n                    Data populated from the Global UDI Database \\\"],[7,\\\"a\\\"],[12,\\\"href\\\",[28,[[23,[\\\"config\\\",\\\"implantableDevicesLearnMoreURL\\\"]]]]],[11,\\\"class\\\",\\\"link\\\"],[11,\\\"target\\\",\\\"_blank\\\"],[9],[0,\\\"Learn more\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"GMDN PT name\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"device-gmdn-pt-name-display\\\"],[9],[1,[23,[\\\"device\\\",\\\"udiInfo\\\",\\\"gmdnPtName\\\"]],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"GMDN PT description\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"device-gmdn-pt-description-display\\\"],[9],[1,[23,[\\\"device\\\",\\\"udiInfo\\\",\\\"gmdnPtDefinition\\\"]],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs box-fixed-md\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Expiration date\\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"device-expiration-date-display\\\"],[9],[1,[21,\\\"expirationDateDisplay\\\"],false],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Manufacture date\\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"device-manufacture-date-display\\\"],[9],[1,[21,\\\"manufactureDateDisplay\\\"],false],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"What MRI safety information does the labeling contain?\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"device-mri-safety-display\\\"],[9],[1,[23,[\\\"device\\\",\\\"udiInfo\\\",\\\"mriSafetyStatusDescription\\\"]],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Device required to be labeled as containing natural rubber latex or dry natural rubber (21 CFR 801.437)\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"device-material-label-display\\\"],[9],[1,[23,[\\\"device\\\",\\\"udiInfo\\\",\\\"isNaturalRubberLatexInformationOnLabel\\\"]],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Company name\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"device-company-name-display\\\"],[9],[1,[23,[\\\"device\\\",\\\"udiInfo\\\",\\\"companyName\\\"]],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Brand name\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"device-brand-name-display\\\"],[9],[1,[23,[\\\"device\\\",\\\"udiInfo\\\",\\\"brandName\\\"]],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Serial number\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"device-serial-number-display\\\"],[9],[1,[23,[\\\"device\\\",\\\"udiInfo\\\",\\\"deviceSerialNumber\\\"]],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Lot/batch\\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"device-lot-number-display\\\"],[9],[1,[23,[\\\"device\\\",\\\"udiInfo\\\",\\\"lotNumber\\\"]],false],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Version/model number\\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"device-version-model-number-display\\\"],[9],[1,[23,[\\\"device\\\",\\\"udiInfo\\\",\\\"versionModelNumber\\\"]],false],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Device description\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"device-description-display\\\"],[9],[1,[23,[\\\"device\\\",\\\"udiInfo\\\",\\\"deviceDescription\\\"]],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Human cell, tissue or cellular or tissue-based product (HCT/P)\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"device-hctp-display\\\"],[9],[1,[27,\\\"yes-no\\\",[[23,[\\\"device\\\",\\\"udiInfo\\\",\\\"isHumanCellOrTissueProduct\\\"]]],null],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"device\\\",\\\"udiInfo\\\",\\\"snomed\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"SNOMED CT Id\\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"device-snomed-id-display\\\"],[9],[1,[22,6,[\\\"snomedCtCode\\\"]],false],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"SNOMED CT description\\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"device-snomed-description-display\\\"],[9],[1,[22,6,[\\\"snomedCtDescription\\\"]],false],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[6]},null],[0,\\\"            \\\"]],\\\"parameters\\\":[]}],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label device-notes\\\"],[9],[0,\\\"Notes\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                \\\"],[1,[27,\\\"text-area-counter\\\",null,[[\\\"value\\\",\\\"isDisabled\\\",\\\"maxlength\\\",\\\"rows\\\",\\\"dataElement\\\",\\\"isShorter\\\"],[[23,[\\\"device\\\",\\\"userEnteredInfo\\\",\\\"userEnteredNotes\\\"]],[23,[\\\"disabled\\\"]],\\\"500\\\",\\\"3\\\",\\\"device-notes\\\",true]]],false],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"detail-pane-footer\\\",null,[[\\\"sectionContext\\\"],[[22,5,[]]]],{\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"disabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-sm\\\"],[11,\\\"data-element\\\",\\\"cancel-btn\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"]],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isEditing\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"canDelete\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-sm box-margin-Lxs\\\"],[11,\\\"data-element\\\",\\\"delete-device-button\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"showDelete\\\"],null]],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"Delete\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"btn btn-sm\\\"],[11,\\\"data-element\\\",\\\"delete-disabled\\\"],[11,\\\"disabled\\\",\\\"true\\\"],[9],[0,\\\"Delete\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-sm btn-primary\\\"],[12,\\\"disabled\\\",[21,\\\"isSaveDisabled\\\"]],[3,\\\"action\\\",[[22,0,[]],\\\"save\\\"]],[9],[0,\\\"Save\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-sm\\\"],[11,\\\"data-element\\\",\\\"cancel-btn\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"]],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[5]},null],[4,\\\"content-modal\\\",null,[[\\\"modalStyle\\\",\\\"isVisible\\\",\\\"isCloseByXorOutsideVisible\\\"],[8,[23,[\\\"showUdiSuccess\\\"]],true]],{\\\"statements\\\":[[4,\\\"component\\\",[[22,4,[\\\"header\\\"]]],[[\\\"isCloseByXorOutsideVisible\\\"],[true]],{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"h4\\\"],[9],[0,\\\"Unique Device Identifier confirmation\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"component\\\",[[22,4,[\\\"body\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"fetched-udi-info\\\"],[11,\\\"data-element\\\",\\\"udi-success-message\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[9],[1,[23,[\\\"fetchedUdiInfo\\\",\\\"uniqueDeviceIdentifier\\\"]],false],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[9],[1,[23,[\\\"fetchedUdiInfo\\\",\\\"gmdnPtName\\\"]],false],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[9],[0,\\\"Please confirm the Unique Device Identifier matches this implantable device.\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"component\\\",[[22,4,[\\\"footer\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-left\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn-sm\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"cancelUdiInfo\\\"]],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[11,\\\"data-element\\\",\\\"udi-success-action\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn-sm btn-primary\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"confirmUdiInfo\\\"]],[9],[0,\\\"Confirm\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[4]},null],[4,\\\"content-modal\\\",null,[[\\\"modalStyle\\\",\\\"isVisible\\\",\\\"isCloseByXorOutsideVisible\\\"],[7,[23,[\\\"showUdiFailure\\\"]],false]],{\\\"statements\\\":[[4,\\\"component\\\",[[22,3,[\\\"header\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"h4\\\"],[9],[0,\\\"Unique Device Identifier not found\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"component\\\",[[22,3,[\\\"body\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"udi-failure-message\\\"],[9],[0,\\\"The Unique Device Identifier you have entered was not found in the Global UDI Database. Please re-enter the Unique Device Identifier.\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"component\\\",[[22,3,[\\\"footer\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-left\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn-sm\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"cancelUdiInfo\\\"]],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[11,\\\"data-element\\\",\\\"udi-failure-action\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn-sm btn-primary\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"reEnterUdiInfo\\\"]],[9],[0,\\\"Re-enter\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[3]},null],[4,\\\"content-modal\\\",null,[[\\\"modalStyle\\\",\\\"isVisible\\\",\\\"isCloseByXorOutsideVisible\\\"],[7,[23,[\\\"showUdiUniqueFailure\\\"]],false]],{\\\"statements\\\":[[4,\\\"component\\\",[[22,2,[\\\"header\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"h4\\\"],[9],[0,\\\"Unique Device Identifier not entered\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"component\\\",[[22,2,[\\\"body\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"udi-failure-message\\\"],[9],[0,\\\"The Device Identifier you have entered was found in the Global UDI Database, but does not identify a unique device. Please re-enter the Unique Device Identifier to identify the specific device.\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"component\\\",[[22,2,[\\\"footer\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-left\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn-sm\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"cancelUdiInfo\\\"]],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[11,\\\"data-element\\\",\\\"udi-failure-action\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn-sm btn-primary\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"reEnterUdiInfo\\\"]],[9],[0,\\\"Re-enter\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[2]},null],[4,\\\"content-modal\\\",null,[[\\\"modalStyle\\\",\\\"isVisible\\\"],[7,[23,[\\\"showDeleteConfirm\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"header\\\"]]],[[\\\"title\\\",\\\"isCloseByXorOutsideVisible\\\"],[\\\"Delete implantable device\\\",true]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,1,[\\\"body\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"content-modal-body\\\"],[11,\\\"data-element\\\",\\\"delete-confirm\\\"],[9],[0,\\\"This action is final, and will remove this implantable device from this patient's record.\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"footer\\\"]]],[[\\\"buttonLeftText\\\",\\\"buttonRightPrimaryText\\\",\\\"buttonLeftAction\\\",\\\"buttonRightPrimaryAction\\\"],[\\\"Cancel\\\",\\\"Delete\\\",[27,\\\"action\\\",[[22,0,[]],\\\"close\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"delete\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/device-detail.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnoses-assessment-list-read-only\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"pCnfMC5Z\", \"block\": \"{\\\"symbols\\\":[\\\"diagnosisWrapper\\\",\\\"diagnosis\\\"],\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isSigned\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"chartNoteDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"read-only-header\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"p\\\"],[9],[0,\\\"Diagnoses attached to this encounter:\\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"list read-only-list\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"chartNoteDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"li\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"span\\\"],[9],[1,[22,2,[\\\"description\\\"]],false],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,2,[\\\"comments\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"spaced-item\\\"],[9],[0,\\\"Comment: \\\"],[1,[22,2,[\\\"comments\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isLoading\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-666 auto-saving-section--content\\\"],[9],[0,\\\"Loading diagnoses...\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"loadDiagnosesFailed\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-666 auto-saving-section--content\\\"],[9],[0,\\\"Can't load diagnoses. Please\\\\n                \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"loadDiagnoses\\\"]],[9],[0,\\\"try again.\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"encounterDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"read-only-header\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"p\\\"],[9],[0,\\\"Diagnoses attached to this encounter:\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"list read-only-list\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"encounterDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"li\\\"],[9],[0,\\\"\\\\n                            \\\"],[1,[27,\\\"diagnosis-description\\\",null,[[\\\"diagnosis\\\",\\\"diagnosisDescriptionDisplay\\\"],[[22,1,[\\\"diagnosis\\\"]],[23,[\\\"diagnosisDescriptionDisplay\\\"]]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"diagnosis\\\",\\\"isAcute\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"span\\\"],[9],[0,\\\"Acute\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                            \\\"],[1,[27,\\\"transcript-comments\\\",null,[[\\\"class\\\",\\\"items\\\",\\\"isCollapsible\\\",\\\"commentType\\\",\\\"patientPracticeGuid\\\",\\\"isExpanded\\\",\\\"hideCollapseLink\\\",\\\"oneline\\\",\\\"firstCommentOneLine\\\"],[\\\"diagnoses-assessment-list-read-only--comments\\\",[22,1,[\\\"diagnosis\\\",\\\"encounterCommentsWithComment\\\"]],false,\\\"Encounter Comments\\\",[22,1,[\\\"diagnosis\\\",\\\"patientPracticeGuid\\\"]],[23,[\\\"isExpanded\\\"]],[23,[\\\"hideCollapseLink\\\"]],[23,[\\\"oneline\\\"]],[23,[\\\"firstCommentOneLine\\\"]]]]],false],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnoses-assessment-list-read-only.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnoses-assessment-list\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"sMXHUVfD\", \"block\": \"{\\\"symbols\\\":[\\\"dx\\\"],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Diagnoses attached to this encounter\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"encounterDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item\\\"],[9],[0,\\\"No attached diagnoses.\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"id\\\",\\\"medication-list-container\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"encounterDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[\\\"medication-list-item \\\",[27,\\\"if\\\",[[23,[\\\"canEditDiagnoses\\\"]],\\\"with-reorder-controls\\\"],null]]]],[12,\\\"data-guid\\\",[28,[[22,1,[\\\"diagnosis\\\",\\\"diagnosisGuid\\\"]]]]],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"close-box-small\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"removeDiagnosis\\\",[22,1,[\\\"diagnosis\\\"]]]],[9],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"canEditDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"reorder-controls\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"icon icon-move-top\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"moveToTop\\\",[22,1,[]]]],[9],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"icon icon-move-up\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"moveUp\\\",[22,1,[]]]],[9],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"medication-display\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"diagnosis\\\",\\\"needsIcd10Refinement\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"pull-right diagnosis-assessment-list-refine-label icon-urgent\\\"],[11,\\\"aria-label\\\",\\\"refine\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"refineDiagnosis\\\",[22,1,[\\\"diagnosis\\\"]]]],[9],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                    \\\"],[7,\\\"a\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"editDiagnosis\\\",[22,1,[\\\"diagnosis\\\"]]]],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"span\\\"],[9],[1,[22,1,[\\\"diagnosis\\\",\\\"description\\\"]],false],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"diagnosis\\\",\\\"isAcute\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"span\\\"],[9],[0,\\\"Acute\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                    \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"diagnosis\\\",\\\"startDate\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"hint-text\\\"],[9],[0,\\\"Start:\\\"],[10],[0,\\\"\\\\n                        \\\"],[1,[27,\\\"datetime-formatted\\\",null,[[\\\"datetime\\\"],[[22,1,[\\\"diagnosis\\\",\\\"startDate\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[22,1,[\\\"diagnosis\\\",\\\"stopDate\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"hint-text\\\"],[9],[0,\\\"Stop:\\\"],[10],[0,\\\"\\\\n                        \\\"],[1,[27,\\\"datetime-formatted\\\",null,[[\\\"datetime\\\"],[[22,1,[\\\"diagnosis\\\",\\\"stopDate\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"diagnosis\\\",\\\"diagnosisComment\\\",\\\"comment\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"hint-text\\\"],[9],[0,\\\"Comment:\\\"],[10],[0,\\\"\\\\n                        \\\"],[1,[27,\\\"transcript-comment\\\",null,[[\\\"transcriptComment\\\"],[[22,1,[\\\"diagnosis\\\",\\\"diagnosisComment\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[22,1,[\\\"diagnosis\\\",\\\"encounterCommentsWithComment\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"hint-text\\\"],[9],[0,\\\"Encounter Comments:\\\"],[10],[0,\\\"\\\\n                        \\\"],[1,[27,\\\"transcript-comments\\\",null,[[\\\"items\\\"],[[22,1,[\\\"diagnosis\\\",\\\"encounterCommentsWithComment\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnoses-assessment-list.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnoses-flyout\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"+dYy0IrW\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"navbar navbar-secondary\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"nav\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"li\\\"],[12,\\\"class\\\",[28,[[27,\\\"if\\\",[[23,[\\\"favoriteSelected\\\"]],\\\"active\\\"],null]]]],[11,\\\"data-element\\\",\\\"diagnoses-tab-my-dx\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"setCurrentTab\\\",\\\"favorite\\\"]],[9],[0,\\\"My Dx list\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"li\\\"],[12,\\\"class\\\",[28,[[27,\\\"if\\\",[[23,[\\\"previousSelected\\\"]],\\\"active\\\"],null]]]],[11,\\\"data-element\\\",\\\"diagnoses-tab-previous\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"setCurrentTab\\\",\\\"previous\\\"]],[9],[0,\\\"Previous\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"li\\\"],[11,\\\"data-element\\\",\\\"diagnoses-tab-record\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"recordDiagnoses\\\"]],[9],[0,\\\"Record\\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"previousSelected\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"previous-diagnoses\\\",null,[[\\\"patientGuid\\\",\\\"transcriptGuid\\\",\\\"refreshChart\\\",\\\"closeEncounterTab\\\"],[[23,[\\\"patientGuid\\\"]],[23,[\\\"transcriptGuid\\\"]],\\\"refreshChart\\\",\\\"closeEncounterTab\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"favorite-diagnoses-toolbox\\\",null,[[\\\"diagnosisSelected\\\"],[\\\"frequentDiagnosisSelected\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnoses-flyout.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnoses-summary-list-item\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"VaAwZmfR\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"diagnosis-description\\\",null,[[\\\"diagnosis\\\",\\\"hideAcuity\\\",\\\"diagnosisDescriptionDisplay\\\",\\\"isIcd10Display\\\"],[[23,[\\\"diagnosis\\\"]],true,[23,[\\\"diagnosisDescriptionDisplay\\\"]],[23,[\\\"isIcd10Display\\\"]]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"diagnosis\\\",\\\"startDate\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[9],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"box-margin-Rsm-v2\\\"],[9],[0,\\\"Start:\\\"],[10],[1,[27,\\\"datetime-formatted\\\",null,[[\\\"datetime\\\",\\\"data-element\\\"],[[23,[\\\"diagnosis\\\",\\\"startDate\\\"]],\\\"diagnosis-item-start-date\\\"]]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"diagnosis\\\",\\\"stopDate\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[9],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"box-margin-Rsm-v2\\\"],[9],[0,\\\"Stop:\\\"],[10],[1,[27,\\\"datetime-formatted\\\",null,[[\\\"datetime\\\",\\\"data-element\\\"],[[23,[\\\"diagnosis\\\",\\\"stopDate\\\"]],\\\"diagnosis-item-stop-date\\\"]]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnoses-summary-list-item.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnoses-summary-list-section\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"TR5lzhsD\", \"block\": \"{\\\"symbols\\\":[\\\"diagnosis\\\",\\\"index\\\",\\\"diagnosis\\\",\\\"index\\\",\\\"diagnosis\\\",\\\"index\\\",\\\"diagnosis\\\",\\\"index\\\"],\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"isIcd10Display\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"header\\\"],[9],[7,\\\"h3\\\"],[11,\\\"class\\\",\\\"h3\\\"],[9],[1,[21,\\\"title\\\"],false],[0,\\\" diagnoses\\\"],[10],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"sortedChronicActiveDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-margin-Txs-v2\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"h4\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[0,\\\"Chronic\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"list list--selectable list--hover\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"sortedChronicActiveDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"diagnoses-summary-list-item\\\",null,[[\\\"data-element\\\",\\\"title\\\",\\\"editDiagnosis\\\",\\\"isIcd10Display\\\",\\\"diagnosis\\\",\\\"selectedDiagnosisGuid\\\",\\\"diagnosisDescriptionDisplay\\\"],[[27,\\\"concat\\\",[\\\"chronic-dx-list-\\\",[22,8,[]]],null],[23,[\\\"title\\\"]],[27,\\\"action\\\",[[22,0,[]],[23,[\\\"editDiagnosis\\\"]]],null],[23,[\\\"isIcd10Display\\\"]],[22,7,[]],[23,[\\\"selectedDiagnosisGuid\\\"]],[23,[\\\"diagnosisDescriptionDisplay\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[7,8]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"sortedAcuteActiveDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-margin-Txs-v2\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"h4\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[0,\\\"Acute\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"list list--selectable list--hover\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"sortedAcuteActiveDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"diagnoses-summary-list-item\\\",null,[[\\\"data-element\\\",\\\"title\\\",\\\"editDiagnosis\\\",\\\"isIcd10Display\\\",\\\"diagnosis\\\",\\\"selectedDiagnosisGuid\\\",\\\"diagnosisDescriptionDisplay\\\"],[[27,\\\"concat\\\",[\\\"acute-dx-list-\\\",[22,6,[]]],null],[23,[\\\"title\\\"]],[27,\\\"action\\\",[[22,0,[]],[23,[\\\"editDiagnosis\\\"]]],null],[23,[\\\"isIcd10Display\\\"]],[22,5,[]],[23,[\\\"selectedDiagnosisGuid\\\"]],[23,[\\\"diagnosisDescriptionDisplay\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[5,6]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"sortedUnspecifiedActiveDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-margin-Txs-v2\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"h4\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[0,\\\"Undefined\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"list list--selectable list--hover\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"sortedUnspecifiedActiveDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"diagnoses-summary-list-item\\\",null,[[\\\"data-element\\\",\\\"title\\\",\\\"editDiagnosis\\\",\\\"isIcd10Display\\\",\\\"diagnosis\\\",\\\"selectedDiagnosisGuid\\\",\\\"diagnosisDescriptionDisplay\\\"],[[27,\\\"concat\\\",[\\\"undefined-dx-list-\\\",[22,4,[]]],null],[23,[\\\"title\\\"]],[27,\\\"action\\\",[[22,0,[]],[23,[\\\"editDiagnosis\\\"]]],null],[23,[\\\"isIcd10Display\\\"]],[22,3,[]],[23,[\\\"selectedDiagnosisGuid\\\"]],[23,[\\\"diagnosisDescriptionDisplay\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3,4]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"unless\\\",[[23,[\\\"allActiveDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"text-color-placeholder\\\"],[9],[0,\\\"No active \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"lowercase\\\"],[9],[1,[21,\\\"title\\\"],false],[10],[0,\\\"diagnoses.\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"historicalDiagnosesVisible\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-margin-Txs-v2\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"h4\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[0,\\\"Historical\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"list list--selectable list--hover\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"historicalDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"diagnoses-summary-list-item\\\",null,[[\\\"data-element\\\",\\\"title\\\",\\\"editDiagnosis\\\",\\\"isIcd10Display\\\",\\\"diagnosis\\\",\\\"selectedDiagnosisGuid\\\",\\\"diagnosisDescriptionDisplay\\\"],[[27,\\\"concat\\\",[\\\"historical-dx-list-\\\",[22,2,[]]],null],[23,[\\\"title\\\"]],[27,\\\"action\\\",[[22,0,[]],[23,[\\\"editDiagnosis\\\"]]],null],[23,[\\\"isIcd10Display\\\"]],[22,1,[]],[23,[\\\"selectedDiagnosisGuid\\\"]],[23,[\\\"diagnosisDescriptionDisplay\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1,2]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"historicalDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-margin-Txs-v2\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"a\\\"],[12,\\\"data-element\\\",[21,\\\"title\\\"]],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"toggleProperty\\\",\\\"historicalDiagnosesVisible\\\"],null]],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"historicalDiagnosesVisible\\\"]]],null,{\\\"statements\\\":[[0,\\\"                Hide historical\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                Show historical (\\\"],[1,[23,[\\\"historicalDiagnoses\\\",\\\"length\\\"]],false],[0,\\\")\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnoses-summary-list-section.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnoses-summary-list\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"kLjBBT9Q\", \"block\": \"{\\\"symbols\\\":[\\\"card\\\",\\\"content\\\",\\\"header\\\"],\\\"statements\\\":[[1,[27,\\\"data-tunnel\\\",null,[[\\\"name\\\",\\\"onDataReceived\\\"],[\\\"diagnoses-summary-list\\\",[27,\\\"action\\\",[[22,0,[]],\\\"refresh\\\"],null]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"composable-card\\\",null,null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"header\\\"]]],null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,3,[\\\"title\\\"]]],null,{\\\"statements\\\":[[0,\\\"            Diagnoses\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"canRecordDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"a\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"recordDiagnosisOnSummary\\\"],null]],[11,\\\"class\\\",\\\"icon icon--md icon-add box-margin-Lmd-v2\\\"],[11,\\\"data-element\\\",\\\"add-diagnosis-button\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"unless\\\",[[23,[\\\"isLoading\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"a\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"print\\\"],null]],[11,\\\"class\\\",\\\"icon icon--md icon-printer box-margin-Lmd-v2\\\"],[11,\\\"data-element\\\",\\\"print-diagnoses-button\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[4,\\\"component\\\",[[22,3,[\\\"utilities\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"i\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"toggleIsExpanded\\\"],null]],[11,\\\"class\\\",\\\"icon icon-ellipsis box-margin-Lmd-v2\\\"],[11,\\\"data-element\\\",\\\"diagnoses-ellipsis\\\"],[9],[10],[0,\\\"\\\\n            \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"diagnosis-display-selector-wrapper\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"span\\\"],[9],[0,\\\"Show by \\\"],[10],[0,\\\"\\\\n                \\\"],[1,[27,\\\"diagnosis-display-selector-v2\\\",null,[[\\\"displayChanged\\\"],[[27,\\\"action\\\",[[22,0,[]],\\\"displayChanged\\\"],null]]]],false],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[3]},null],[4,\\\"component\\\",[[22,1,[\\\"content\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isLoading\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"p\\\"],[9],[0,\\\"Loading diagnoses...\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"diagnosesError\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"text-color-placeholder\\\"],[9],[0,\\\"Can't load diagnoses. Please \\\"],[7,\\\"a\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"reloadDiagnoses\\\"],null]],[9],[0,\\\"try again.\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isExpanded\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"body-diagnosis-display-selector-wrapper\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"span\\\"],[9],[0,\\\"Show by \\\"],[10],[0,\\\"\\\\n                        \\\"],[1,[27,\\\"diagnosis-display-selector-v2\\\",null,[[\\\"displayChanged\\\"],[[27,\\\"action\\\",[[22,0,[]],\\\"displayChanged\\\"],null]]]],false],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"isEditing\\\"]]],null,{\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"selectedDiagnosisGuid\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"section\\\"],[11,\\\"class\\\",\\\"active\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[9],[0,\\\"Record diagnosis\\\"],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"activePatientDiagnoses\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isAllowedToEditDiagnoses\\\"]]],null,{\\\"statements\\\":[[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"disabled\\\"],[[23,[\\\"isNoKnownChecked\\\"]],[23,[\\\"isLoadingNoKnown\\\"]]]],{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"label\\\"],[12,\\\"class\\\",[28,[\\\"pf-input \\\",[21,\\\"cbSmaller\\\"]]]],[11,\\\"data-element\\\",\\\"no-active-diagnoses-label\\\"],[9],[0,\\\"Patient has no active diagnoses\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isNoKnownChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"p\\\"],[9],[0,\\\"Patient has no active diagnoses\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n                \\\"],[1,[27,\\\"diagnoses-summary-list-section\\\",null,[[\\\"title\\\",\\\"isIcd10Display\\\",\\\"allActiveDiagnoses\\\",\\\"sortedChronicActiveDiagnoses\\\",\\\"sortedAcuteActiveDiagnoses\\\",\\\"sortedUnspecifiedActiveDiagnoses\\\",\\\"historicalDiagnoses\\\",\\\"selectedDiagnosisGuid\\\",\\\"editDiagnosis\\\",\\\"diagnosisDescriptionDisplay\\\"],[\\\"\\\",true,[23,[\\\"allActiveDiagnoses\\\"]],[23,[\\\"sortedChronicActiveDiagnoses\\\"]],[23,[\\\"sortedAcuteActiveDiagnoses\\\"]],[23,[\\\"sortedUnspecifiedActiveDiagnoses\\\"]],[23,[\\\"allHistoricalDiagnoses\\\"]],[23,[\\\"selectedDiagnosisGuid\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"editDiagnosis\\\"],null],[23,[\\\"diagnosisDescriptionDisplay\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[1]},null],[4,\\\"print-preview-content\\\",null,[[\\\"isVisible\\\",\\\"printTitle\\\"],[[23,[\\\"isPrintVisible\\\"]],[23,[\\\"printTitle\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"print-diagnoses\\\",null,[[\\\"class\\\",\\\"patient\\\",\\\"activeDiagnoses\\\",\\\"historicalDiagnoses\\\"],[\\\"chart-print-container\\\",[23,[\\\"patientSummary\\\"]],[23,[\\\"allActiveDiagnoses\\\"]],[23,[\\\"allHistoricalDiagnoses\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnoses-summary-list.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-codes\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"WL//w0uX\", \"block\": \"{\\\"symbols\\\":[\\\"diagnosis\\\",\\\"diagnosis\\\",\\\"diagnosis\\\"],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"slc-header\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"slc-header-inner row\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"type\\\"],[9],[0,\\\"TYPE\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"code\\\"],[9],[0,\\\"CODE\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"description\\\"],[9],[0,\\\"DESCRIPTION\\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"icd10Codes\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"code-row clearfix\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"type\\\"],[11,\\\"data-element\\\",\\\"table-icd10-label\\\"],[9],[0,\\\"ICD-10\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"code\\\"],[11,\\\"data-element\\\",\\\"table-icd10-code\\\"],[12,\\\"title\\\",[28,[[22,3,[\\\"code\\\"]]]]],[9],[1,[22,3,[\\\"code\\\"]],false],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"description\\\"],[11,\\\"data-element\\\",\\\"table-icd10-description\\\"],[9],[1,[22,3,[\\\"description\\\"]],false],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3]},null],[4,\\\"each\\\",[[23,[\\\"diagnosis\\\",\\\"icd9Codes\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"code-row clearfix\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"type\\\"],[11,\\\"data-element\\\",\\\"table-icd9-label\\\"],[9],[0,\\\"ICD-9\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"code\\\"],[11,\\\"data-element\\\",\\\"table-icd9-code\\\"],[12,\\\"title\\\",[28,[[22,2,[\\\"code\\\"]]]]],[9],[1,[22,2,[\\\"code\\\"]],false],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"description\\\"],[11,\\\"data-element\\\",\\\"table-icd9-description\\\"],[9],[1,[22,2,[\\\"description\\\"]],false],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[4,\\\"each\\\",[[23,[\\\"diagnosis\\\",\\\"snomedCodes\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"code-row clearfix\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"type\\\"],[11,\\\"data-element\\\",\\\"table-snomed-label\\\"],[9],[0,\\\"SNOMED CT\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"code\\\"],[11,\\\"data-element\\\",\\\"table-snomed-code\\\"],[12,\\\"title\\\",[28,[[22,1,[\\\"code\\\"]]]]],[9],[1,[22,1,[\\\"code\\\"]],false],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"description\\\"],[11,\\\"data-element\\\",\\\"table-snomed-description\\\"],[9],[1,[22,1,[\\\"description\\\"]],false],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-codes.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-description\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"EmKyB0dA\", \"block\": \"{\\\"symbols\\\":[\\\"description\\\"],\\\"statements\\\":[[4,\\\"each\\\",[[23,[\\\"descriptions\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isIcd10Display\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"text-color-link text-wrap\\\"],[11,\\\"data-element\\\",\\\"diagnosis-item-text\\\"],[9],[0,\\\"\\\\n            \\\"],[1,[22,1,[]],false],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"hideAcuity\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"box-padding-Lsm-v2 acuity-display\\\"],[9],[1,[23,[\\\"diagnosis\\\",\\\"acuityDisplay\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"text-color-link text-wrap\\\"],[11,\\\"data-element\\\",\\\"diagnosis-item-text\\\"],[9],[1,[22,1,[]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-description.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-detail-form-icd10\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"Cm8HmRvm\", \"block\": \"{\\\"symbols\\\":[\\\"transcriptComment\\\",\\\"medication\\\",\\\"codeObject\\\"],\\\"statements\\\":[[7,\\\"div\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showAllDescriptions\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"header14 diagnosis-detail-header\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"diagnosis\\\",\\\"diagnosisCodes\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"header-diagnosis-description\\\"],[9],[1,[22,3,[\\\"description\\\"]],false],[0,\\\" (\\\"],[4,\\\"if\\\",[[22,3,[\\\"code\\\"]]],null,{\\\"statements\\\":[[1,[22,3,[\\\"code\\\"]],false]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"No associated code\\\"]],\\\"parameters\\\":[]}],[0,\\\")\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"isAddingNewDiagnosis\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"diagnosis-description-icd10\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"h4\\\"],[9],[1,[23,[\\\"diagnosis\\\",\\\"icd10OrSnomedCode\\\"]],false],[0,\\\" \\\"],[1,[23,[\\\"diagnosis\\\",\\\"description\\\"]],false],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"diagnosis\\\",\\\"isCustom\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isAllowedToEditDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"form-group encounter-date\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"CODE\\\"],[10],[0,\\\"\\\\n            \\\"],[1,[27,\\\"input\\\",null,[[\\\"class\\\",\\\"maxlength\\\",\\\"placeholder\\\",\\\"value\\\",\\\"isDisabled\\\",\\\"data-element\\\"],[\\\"input-block-level\\\",\\\"50\\\",\\\"Enter code\\\",[23,[\\\"diagnosis\\\",\\\"customCode\\\"]],[23,[\\\"disabled\\\"]],\\\"custom-code\\\"]]],false],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"canToggleAttachToEncounter\\\"]]],null,{\\\"statements\\\":[[4,\\\"d-check-box\\\",null,[[\\\"checked\\\",\\\"tabIndex\\\",\\\"smaller\\\",\\\"disabled\\\",\\\"data-element\\\",\\\"classNames\\\"],[[23,[\\\"attachToEncounter\\\"]],0,true,[23,[\\\"disabled\\\"]],\\\"diagnosis-attach-to-encounter\\\",\\\"detail-section\\\"]],{\\\"statements\\\":[[0,\\\"        Associate diagnosis with encounter \\\"],[1,[21,\\\"transcriptDate\\\"],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group detail-section\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-lg\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label-row\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"ACUITY\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isAllowedToEditDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"box box-margin-Lsm\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"clearAcuity\\\"],null]],[9],[0,\\\"Clear\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                \\\"],[1,[27,\\\"d-radio-button\\\",null,[[\\\"id\\\",\\\"value\\\",\\\"selectedValue\\\",\\\"tabIndex\\\",\\\"smaller\\\",\\\"data-element\\\",\\\"disabled\\\"],[\\\"acuity-chronic\\\",\\\"chronic\\\",[23,[\\\"acuity\\\"]],0,true,\\\"chronic-label\\\",[23,[\\\"isNotAllowedToEditDiagnoses\\\"]]]]],false],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[11,\\\"for\\\",\\\"acuity-chronic\\\"],[11,\\\"data-element\\\",\\\"chronic-label\\\"],[11,\\\"class\\\",\\\"pf-input pf-input--radio-label\\\"],[9],[0,\\\"Chronic\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                \\\"],[1,[27,\\\"d-radio-button\\\",null,[[\\\"id\\\",\\\"value\\\",\\\"selectedValue\\\",\\\"tabIndex\\\",\\\"smaller\\\",\\\"data-element\\\",\\\"disabled\\\"],[\\\"acuity-acute\\\",\\\"acute\\\",[23,[\\\"acuity\\\"]],0,true,\\\"acute-label\\\",[23,[\\\"isNotAllowedToEditDiagnoses\\\"]]]]],false],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[11,\\\"for\\\",\\\"acuity-acute\\\"],[11,\\\"data-element\\\",\\\"acute-label\\\"],[11,\\\"class\\\",\\\"pf-input pf-input--radio-label\\\"],[9],[0,\\\"Acute\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showExistingIsTerminal\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box box-margin-Axs-v2\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"d-check-box\\\",null,[[\\\"checked\\\",\\\"tabIndex\\\",\\\"smaller\\\",\\\"data-element\\\",\\\"disabled\\\"],[[23,[\\\"diagnosis\\\",\\\"isTerminal\\\"]],0,true,\\\"terminal-label\\\",[23,[\\\"isNotAllowedToEditDiagnoses\\\"]]]],{\\\"statements\\\":[[0,\\\"                        Is terminal\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"id\\\",\\\"start-dates\\\"],[11,\\\"class\\\",\\\"encounter-date\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[9],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"START DATE\\\"],[10],[10],[0,\\\"\\\\n            \\\"],[1,[27,\\\"d-date-picker\\\",null,[[\\\"isLegacy\\\",\\\"value\\\",\\\"placeholder\\\",\\\"disabled\\\",\\\"isValid\\\",\\\"autoCorrectYear\\\",\\\"data-element\\\"],[false,[23,[\\\"diagnosis\\\",\\\"startDate\\\"]],\\\"MM/DD/YYYY\\\",[23,[\\\"disabled\\\"]],[23,[\\\"isStartDateValid\\\"]],true,\\\"diagnosis-start-date-picker\\\"]]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isAllowedToEditDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"a\\\"],[12,\\\"disabled\\\",[21,\\\"disabled\\\"]],[3,\\\"action\\\",[[22,0,[]],\\\"startToday\\\"]],[9],[0,\\\"Today\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"id\\\",\\\"start-stop\\\"],[11,\\\"class\\\",\\\"encounter-date box-padding-Tlg-v2\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[9],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"STOP DATE\\\"],[10],[10],[0,\\\"\\\\n            \\\"],[1,[27,\\\"d-date-picker\\\",null,[[\\\"isLegacy\\\",\\\"value\\\",\\\"placeholder\\\",\\\"disabled\\\",\\\"isValid\\\",\\\"autoCorrectYear\\\",\\\"data-element\\\"],[false,[23,[\\\"diagnosis\\\",\\\"stopDate\\\"]],\\\"MM/DD/YYYY\\\",[23,[\\\"disabled\\\"]],[23,[\\\"isStopDateValid\\\"]],true,\\\"diagnosis-stop-date-picker\\\"]]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isAllowedToEditDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"a\\\"],[12,\\\"disabled\\\",[21,\\\"disabled\\\"]],[3,\\\"action\\\",[[22,0,[]],\\\"stopToday\\\"]],[9],[0,\\\"Today\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"canAddMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"detail-section\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"class=\\\\\\\"field-label-row\\\\\\\"\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Medications associated with diagnosis\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"canAddMedicationsLink\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"box box-margin-Lsm\\\"],[11,\\\"data-element\\\",\\\"dx-add-medication-link\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"toggleAddMedications\\\"],null]],[9],[0,\\\"Add\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"canEditMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"box box-margin-Lsm\\\"],[11,\\\"data-element\\\",\\\"dx-edit-medication-link\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"toggleEditMedications\\\"],null]],[9],[0,\\\"Edit\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"d-complex-list-container\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"associatedMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[\\\"item box-padding-TBxs-v2 box-margin-Llg-v2 \\\",[27,\\\"unless\\\",[[23,[\\\"isAllowedToEditDiagnoses\\\"]],\\\"disable-hover\\\"],null]]]],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"long-word\\\"],[9],[0,\\\"\\\\n                        \\\"],[1,[22,2,[\\\"drugName\\\"]],false],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showMedicationEdit\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isAllowedToEditDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"icon-clear box box-margin-Lsm-v2\\\"],[11,\\\"data-element\\\",\\\"diagnosis-panel-remove-medication\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"disassociateMedication\\\",[22,2,[]]],null]],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showMedicationAdd\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"diagnosis-medications\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"availableMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-add\\\"],[9],[10],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"checkbox-multi-select\\\",null,[[\\\"content\\\",\\\"selectType\\\",\\\"prompt\\\",\\\"optionLabelPath\\\",\\\"optionValuePath\\\",\\\"addCustomItem\\\",\\\"addCustomItemText\\\",\\\"openOnFocus\\\",\\\"disabled\\\",\\\"maxSelections\\\",\\\"minChar\\\",\\\"query\\\",\\\"checkItem\\\",\\\"uncheckItem\\\",\\\"class\\\",\\\"closeAction\\\",\\\"closeLinkText\\\",\\\"hideSelectedItemControls\\\",\\\"enableRemoveOnDelete\\\",\\\"data-element\\\",\\\"searchDataElement\\\"],[[23,[\\\"availableMedications\\\"]],\\\"typeahead\\\",\\\"Add medications\\\",\\\"drugName\\\",\\\"medicationGuid\\\",\\\"recordMedication\\\",\\\"Record new medication\\\",true,[23,[\\\"disabled\\\"]],10,0,[23,[\\\"medicationsQuery\\\"]],\\\"associateMedication\\\",\\\"disassociateMedication\\\",\\\"diagnosis-detail-medication-search\\\",\\\"toggleAddMedications\\\",\\\"Done\\\",true,false,\\\"diagnosis-panel-medication-search\\\",\\\"diagnosis-panel-medication-input\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isAllowedToEditDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"a\\\"],[11,\\\"data-element\\\",\\\"record-medication-in-diagnosis-panel-link\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"recordMedication\\\",\\\"\\\"],null]],[9],[0,\\\"Record new medication\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"detail-section\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"canRefine\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label-row\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Mapped codes\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showingCodes\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"a\\\"],[11,\\\"data-element\\\",\\\"hide-codes-toggle\\\"],[11,\\\"class\\\",\\\"box box-margin-Lsm\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"toggleProperty\\\",\\\"showingCodes\\\"],null]],[9],[0,\\\"Hide\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"a\\\"],[11,\\\"data-element\\\",\\\"show-codes-toggle\\\"],[11,\\\"class\\\",\\\"box box-margin-Lsm\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"toggleProperty\\\",\\\"showingCodes\\\"],null]],[9],[0,\\\"Show\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showingCodes\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"needsRefine\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"diagnosis-detail-form-refine-label icon-urgent\\\"],[11,\\\"data-element\\\",\\\"refine-icon-urgent\\\"],[9],[0,\\\"\\\\n                    \\\"],[1,[23,[\\\"relatedDiagnoses\\\",\\\"length\\\"]],false],[0,\\\" diagnoses: \\\"],[7,\\\"a\\\"],[11,\\\"data-element\\\",\\\"refine-diagnosis-link\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"refineDiagnosis\\\"],null]],[9],[0,\\\"Refine diagnosis\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[1,[27,\\\"diagnosis-codes\\\",null,[[\\\"diagnosis\\\",\\\"refineDiagnosis\\\",\\\"needsRefine\\\",\\\"excludeSelectedCode\\\"],[[23,[\\\"diagnosis\\\"]],[23,[\\\"refineDiagnosis\\\"]],[23,[\\\"needsRefine\\\"]],true]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"detail-section\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label-row\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Comment\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"showComment\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isAllowedToEditDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"box box-margin-Lsm\\\"],[11,\\\"data-element\\\",\\\"dx-show-comment-link\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"toggleComment\\\"],null]],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"diagnosisComment\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        Edit\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                        Add\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"box box-margin-Lsm\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"toggleComment\\\"],null]],[9],[0,\\\"Hide\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showComment\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"sig-text form-group\\\"],[9],[0,\\\"\\\\n            \\\"],[1,[27,\\\"text-area-counter\\\",null,[[\\\"class\\\",\\\"value\\\",\\\"placeholderText\\\",\\\"maxlength\\\",\\\"rows\\\",\\\"isDisabled\\\"],[\\\"diagnosis-detail--diagnosis-comment\\\",[23,[\\\"diagnosisComment\\\"]],\\\"Add a comment\\\",\\\"500\\\",\\\"3\\\",[23,[\\\"disabled\\\"]]]]],false],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isAllowedToEditDiagnoses\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"diagnosisComment\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"diagnosis-comments-display\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"li\\\"],[9],[1,[21,\\\"diagnosisComment\\\"],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"diagnosis-comments-display\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"diagnosisComment\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"li\\\"],[9],[1,[21,\\\"diagnosisComment\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"li\\\"],[9],[0,\\\"No comment recorded\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showEncounterCommentsSection\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"detail-section\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label-row\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Encounter comment\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"attachToEncounter\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isAllowedToEditDiagnoses\\\"]]],null,{\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"showEncounterComment\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"box box-margin-Lsm\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"toggleEncounterComment\\\"],null]],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"encounterComment\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                Edit\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                Add\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"box box-margin-Lsm\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"toggleEncounterComment\\\"],null]],[9],[0,\\\"Hide\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showEncounterComment\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"sig-text form-group\\\"],[9],[0,\\\"\\\\n                \\\"],[1,[27,\\\"text-area-counter\\\",null,[[\\\"class\\\",\\\"value\\\",\\\"placeholderText\\\",\\\"maxlength\\\",\\\"rows\\\",\\\"isDisabled\\\"],[\\\"diagnosis-detail--diagnosis-comment\\\",[23,[\\\"encounterComment\\\"]],\\\"Add a comment for the current encounter\\\",\\\"500\\\",\\\"3\\\",[23,[\\\"disabled\\\"]]]]],false],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"d-complex-list-container\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"diagnosis\\\",\\\"encounterCommentsWithComment\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[22,1,[]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item\\\"],[9],[1,[27,\\\"transcript-comment\\\",null,[[\\\"transcriptComment\\\",\\\"patientPracticeGuid\\\"],[[22,1,[]],[23,[\\\"patientGuid\\\"]]]]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"showResourcesSection\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"patientEducation d-complex-list-container detail-section\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"RESOURCES\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item box-padding-TBxs-v2 box-margin-Llg-v2\\\"],[9],[0,\\\"\\\\n            \\\"],[1,[27,\\\"patient-education-link\\\",null,[[\\\"codeSet\\\",\\\"code\\\",\\\"searchString\\\",\\\"patientPracticeGuid\\\"],[[23,[\\\"diagnosis\\\",\\\"ic10orIcd9Code\\\",\\\"codeSet\\\"]],[23,[\\\"diagnosis\\\",\\\"ic10orIcd9Code\\\",\\\"code\\\"]],[23,[\\\"diagnosis\\\",\\\"name\\\"]],[23,[\\\"patientGuid\\\"]]]]],false],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-detail-form-icd10.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-detail-form\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"P8w9PZDI\", \"block\": \"{\\\"symbols\\\":[\\\"transcriptComment\\\",\\\"medication\\\",\\\"codeObject\\\"],\\\"statements\\\":[[7,\\\"div\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showAllDescriptions\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"header14 diagnosis-detail-header\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"diagnosis\\\",\\\"diagnosisCodes\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"header-diagnosis-description\\\"],[9],[1,[22,3,[\\\"description\\\"]],false],[0,\\\" (\\\"],[4,\\\"if\\\",[[22,3,[\\\"code\\\"]]],null,{\\\"statements\\\":[[1,[22,3,[\\\"code\\\"]],false]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"No associated code\\\"]],\\\"parameters\\\":[]}],[0,\\\")\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"isAddingNewDiagnosis\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"header14 diagnosis-detail-header\\\"],[9],[0,\\\"\\\\n            \\\"],[1,[23,[\\\"diagnosis\\\",\\\"description\\\"]],false],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"canRefine\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"clearfix\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showingCodes\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[11,\\\"data-element\\\",\\\"hide-codes-toggle\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"toggleProperty\\\",\\\"showingCodes\\\"]],[9],[0,\\\" Hide codes \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[11,\\\"data-element\\\",\\\"show-codes-toggle\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"toggleProperty\\\",\\\"showingCodes\\\"]],[9],[0,\\\" Show codes \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"needsRefine\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"diagnosis-detail-form-refine-label icon-urgent\\\"],[11,\\\"data-element\\\",\\\"refine-icon-urgent\\\"],[9],[0,\\\"\\\\n                \\\"],[1,[23,[\\\"relatedDiagnoses\\\",\\\"length\\\"]],false],[0,\\\" diagnoses: \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[11,\\\"data-element\\\",\\\"refine-diagnosis-link\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"refineDiagnosis\\\"]],[9],[0,\\\"Refine diagnosis\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"showingCodes\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"diagnosis-codes\\\",null,[[\\\"diagnosis\\\",\\\"refineDiagnosis\\\",\\\"needsRefine\\\"],[[23,[\\\"diagnosis\\\"]],[23,[\\\"refineDiagnosis\\\"]],[23,[\\\"needsRefine\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"diagnosis\\\",\\\"isCustom\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"form-group encounter-date\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"CODE\\\"],[10],[0,\\\"\\\\n        \\\"],[1,[27,\\\"input\\\",null,[[\\\"class\\\",\\\"maxlength\\\",\\\"placeholder\\\",\\\"value\\\",\\\"isDisabled\\\",\\\"data-element\\\"],[\\\"input-block-level\\\",\\\"50\\\",\\\"Enter code\\\",[23,[\\\"diagnosis\\\",\\\"customCode\\\"]],[23,[\\\"disabled\\\"]],\\\"custom-code\\\"]]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"id\\\",\\\"start-dates\\\"],[11,\\\"class\\\",\\\"encounter-date\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"START DATE\\\"],[10],[0,\\\"\\\\n    \\\"],[1,[27,\\\"d-date-picker\\\",null,[[\\\"isLegacy\\\",\\\"value\\\",\\\"placeholder\\\",\\\"disabled\\\",\\\"isValid\\\",\\\"autoCorrectYear\\\",\\\"data-element\\\"],[false,[23,[\\\"diagnosis\\\",\\\"startDate\\\"]],\\\"MM/DD/YYYY\\\",[23,[\\\"disabled\\\"]],[23,[\\\"isStartDateValid\\\"]],true,\\\"diagnosis-start-date-picker\\\"]]],false],[0,\\\"\\\\n    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn\\\"],[12,\\\"disabled\\\",[21,\\\"disabled\\\"]],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"startToday\\\"]],[9],[0,\\\"Today\\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"id\\\",\\\"start-stop\\\"],[11,\\\"class\\\",\\\"encounter-date\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"STOP DATE\\\"],[10],[0,\\\"\\\\n    \\\"],[1,[27,\\\"d-date-picker\\\",null,[[\\\"isLegacy\\\",\\\"value\\\",\\\"placeholder\\\",\\\"disabled\\\",\\\"isValid\\\",\\\"autoCorrectYear\\\",\\\"data-element\\\"],[false,[23,[\\\"diagnosis\\\",\\\"stopDate\\\"]],\\\"MM/DD/YYYY\\\",[23,[\\\"disabled\\\"]],[23,[\\\"isStopDateValid\\\"]],true,\\\"diagnosis-stop-date-picker\\\"]]],false],[0,\\\"\\\\n    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn\\\"],[12,\\\"disabled\\\",[21,\\\"disabled\\\"]],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"stopToday\\\"]],[9],[0,\\\"Today\\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"form-group\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"ACUITY\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm box-fixed-sm\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"d-check-box\\\",null,[[\\\"checked\\\",\\\"tabIndex\\\",\\\"smaller\\\",\\\"data-element\\\"],[[23,[\\\"diagnosis\\\",\\\"isAcute\\\"]],0,true,\\\"acute-label\\\"]],{\\\"statements\\\":[[0,\\\"                Acute\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm box-fixed-md\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"d-check-box\\\",null,[[\\\"checked\\\",\\\"tabIndex\\\",\\\"smaller\\\",\\\"data-element\\\"],[[23,[\\\"diagnosis\\\",\\\"isTerminal\\\"]],0,true,\\\"terminal-label\\\"]],{\\\"statements\\\":[[0,\\\"                Is terminal\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"canAddMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"MEDICATIONS\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"availableMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"single-select\\\",null,[[\\\"content\\\",\\\"placeholder\\\",\\\"optionLabelPath\\\",\\\"selectType\\\",\\\"addCustomItemText\\\",\\\"openOnFocus\\\",\\\"select\\\",\\\"disabled\\\",\\\"addItem\\\",\\\"class\\\",\\\"data-element\\\",\\\"searchDataElement\\\"],[[23,[\\\"availableMedications\\\"]],\\\"Search for a patient medication\\\",\\\"drugName\\\",\\\"typeahead\\\",\\\"Record new medication\\\",true,\\\"associateMedication\\\",[23,[\\\"disabled\\\"]],[23,[\\\"recordMedicationActionName\\\"]],\\\"diagnosis-detail-medication-search\\\",\\\"diagnosis-panel-medication-search\\\",\\\"diagnosis-panel-medication-input\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[11,\\\"data-element\\\",\\\"record-medication-in-diagnosis-panel-link\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"recordMedication\\\"]],[9],[0,\\\"Record medication\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"d-complex-list-container\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"associatedMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"long-word\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"editMedication\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[11,\\\"data-element\\\",\\\"diagnosis-panel-medication-name\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"editMedication\\\",[22,2,[]]]],[9],[1,[22,2,[\\\"drugName\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                            \\\"],[1,[22,2,[\\\"drugName\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                    \\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[11,\\\"class\\\",\\\"close-box\\\"],[11,\\\"data-element\\\",\\\"diagnosis-panel-remove-medication\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"disassociateMedication\\\",[22,2,[]]]],[9],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"DIAGNOSIS COMMENT\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"sig-text form-group\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[27,\\\"text-area-counter\\\",null,[[\\\"class\\\",\\\"value\\\",\\\"placeholderText\\\",\\\"maxlength\\\",\\\"rows\\\",\\\"isDisabled\\\"],[\\\"diagnosis-detail--diagnosis-comment\\\",[23,[\\\"diagnosisComment\\\"]],\\\"Enter a comment about this diagnosis\\\",\\\"500\\\",\\\"3\\\",[23,[\\\"disabled\\\"]]]]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"canToggleAttachToEncounter\\\"]]],null,{\\\"statements\\\":[[4,\\\"d-check-box\\\",null,[[\\\"checked\\\",\\\"tabIndex\\\",\\\"smaller\\\",\\\"disabled\\\",\\\"data-element\\\"],[[23,[\\\"attachToEncounter\\\"]],0,true,[23,[\\\"disabled\\\"]],\\\"diagnosis-attach-to-encounter\\\"]],{\\\"statements\\\":[[0,\\\"        Attach diagnosis to this encounter\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"attachToEncounter\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"COMMENT FOR THIS ENCOUNTER\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"sig-text form-group\\\"],[11,\\\"data-element\\\",\\\"diagnosis-comment-for-this-encounter\\\"],[9],[0,\\\"\\\\n            \\\"],[1,[27,\\\"text-area-counter\\\",null,[[\\\"value\\\",\\\"placeholderText\\\",\\\"maxlength\\\",\\\"rows\\\",\\\"isDisabled\\\"],[[23,[\\\"encounterComment\\\"]],\\\"Enter a comment about this diagnosis for the current encounter\\\",\\\"500\\\",\\\"3\\\",[23,[\\\"disabled\\\"]]]]],false],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"diagnosis\\\",\\\"encounterCommentsWithComment\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"d-complex-list-container\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"ENCOUNTER COMMENTS\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"diagnosis\\\",\\\"encounterCommentsWithComment\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item\\\"],[9],[0,\\\"\\\\n                \\\"],[1,[27,\\\"transcript-comment\\\",null,[[\\\"transcriptComment\\\",\\\"patientPracticeGuid\\\"],[[22,1,[]],[23,[\\\"patientGuid\\\"]]]]],false],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"patientEducation d-complex-list-container\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"RESOURCES\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"diagnosis\\\",\\\"icd9Code\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item\\\"],[9],[0,\\\"\\\\n            \\\"],[1,[27,\\\"patient-education-link\\\",null,[[\\\"codeSet\\\",\\\"code\\\",\\\"searchString\\\",\\\"patientPracticeGuid\\\"],[\\\"icd9\\\",[23,[\\\"diagnosis\\\",\\\"icd9Code\\\"]],[23,[\\\"diagnosis\\\",\\\"name\\\"]],[23,[\\\"patientGuid\\\"]]]]],false],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-detail-form.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-detail\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"5d2umfZ5\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\",\\\"section\\\",\\\"section\\\"],\\\"statements\\\":[[4,\\\"detail-pane\\\",null,[[\\\"config\\\",\\\"close\\\",\\\"class\\\",\\\"resizables\\\",\\\"resizeOnBreakPoint\\\",\\\"session\\\",\\\"topSpacing\\\",\\\"isToolBoxVisible\\\",\\\"isSlideOpenToolBox\\\",\\\"isEditing\\\",\\\"canDelete\\\",\\\"attachedToAdditionalEncounter\\\",\\\"diagnosis\\\",\\\"canAddMultiple\\\",\\\"isAddingNewDiagnosis\\\",\\\"isRefiningDiagnosis\\\",\\\"deleteMessage\\\"],[[23,[\\\"config\\\"]],\\\"save\\\",\\\"side-fixed col-xs-5 summary-details diagnosis-detail\\\",[23,[\\\"resizables\\\"]],true,[23,[\\\"session\\\"]],50,[23,[\\\"isToolboxVisible\\\"]],[23,[\\\"isFrequentDiagnosisOpen\\\"]],[23,[\\\"isEditing\\\"]],[23,[\\\"canDelete\\\"]],[23,[\\\"attachedToAdditionalEncounter\\\"]],[23,[\\\"diagnosis\\\"]],[23,[\\\"canAddMultiple\\\"]],[23,[\\\"isAddingNewDiagnosis\\\"]],[23,[\\\"isRefiningDiagnosis\\\"]],[23,[\\\"deleteMessage\\\"]]]],{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"detail-pane-header\\\",null,[[\\\"sectionContext\\\"],[[22,3,[]]]],{\\\"statements\\\":[[0,\\\"        Diagnosis > \\\"],[1,[21,\\\"detailsPaneTitle\\\"],false],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"detail-pane-header-help dismissible-help-message\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-info\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"toggleProperty\\\",\\\"isHelpPopoverVisible\\\"]],[9],[10],[0,\\\"\\\\n\\\"],[4,\\\"popover-modal\\\",null,[[\\\"isPopoverVisible\\\",\\\"containerSelector\\\",\\\"width\\\",\\\"height\\\",\\\"bubbleEvents\\\",\\\"targetSelector\\\",\\\"useTargetOffset\\\",\\\"placement\\\"],[[23,[\\\"isHelpPopoverVisible\\\"]],\\\".diagnosis-detail\\\",266,\\\"auto\\\",true,\\\".detail-pane-header-help>i\\\",true,\\\"left\\\"]],{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"header\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-info\\\"],[9],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"title\\\"],[9],[0,\\\"ICD-10-CM support\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"content\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"p\\\"],[9],[0,\\\"Your EHR now supports ICD-10-CM. To learn more about how to use ICD-10 click the learn more button below.\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"footer\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"btn btn-sm\\\"],[11,\\\"target\\\",\\\"_blank\\\"],[12,\\\"href\\\",[23,[\\\"config\\\",\\\"clinicalIcd10HelpUrl\\\"]]],[9],[0,\\\"Learn more\\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-sm btn-primary\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"toggleProperty\\\",\\\"isHelpPopoverVisible\\\"]],[9],[0,\\\"Close\\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"detail-pane-body\\\",null,[[\\\"sectionContext\\\",\\\"class\\\"],[[22,3,[]],\\\"type-v2 box box-padding-Alb-v2\\\"]],{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"displayDiagnosisTypeAhead\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isEditingDiagnosisDetails\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"diagnosis-description-icd10\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"h4\\\"],[9],[1,[23,[\\\"diagnosis\\\",\\\"icd10OrSnomedCode\\\"]],false],[0,\\\" \\\"],[1,[23,[\\\"diagnosis\\\",\\\"description\\\"]],false],[0,\\\"\\\\n                        \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"box-padding-Lmd-v2\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"editDiagnosisSelection\\\"],null]],[9],[0,\\\"Edit\\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"add-diagnosis-label field-label is-required\\\"],[9],[0,\\\"Diagnosis\\\"],[10],[0,\\\"\\\\n                \\\"],[1,[27,\\\"diagnosis-typeahead-icd10\\\",null,[[\\\"canAddCustom\\\",\\\"query\\\",\\\"diagnosisSelected\\\",\\\"customDiagnosisSelected\\\",\\\"data-element\\\",\\\"searchDataElement\\\",\\\"canFilterResults\\\",\\\"refineDx\\\",\\\"favoriteSelected\\\",\\\"updateFavorites\\\",\\\"showDropdown\\\",\\\"tabSelectedDefault\\\",\\\"content\\\",\\\"tabSources\\\"],[[23,[\\\"canAddCustom\\\"]],[23,[\\\"query\\\"]],\\\"diagnosisSelected\\\",\\\"customDiagnosisSelected\\\",\\\"diagnosis-result-search\\\",\\\"diagnosis-search-input\\\",false,\\\"refineDx\\\",\\\"favoriteDiagnosisSelected\\\",\\\"updateMyDxList\\\",[23,[\\\"isSearchControlOpen\\\"]],[23,[\\\"defaultDropdownTab\\\"]],[23,[\\\"icd10SearchContent\\\"]],[23,[\\\"tabSources\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isEditingDiagnosisDetails\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"diagnosis-detail-form-icd10\\\",null,[[\\\"isAllowedToEditDiagnoses\\\",\\\"isNotAllowedToEditDiagnoses\\\",\\\"diagnosis\\\",\\\"associatedMedications\\\",\\\"isAddingNewDiagnosis\\\",\\\"relatedDiagnoses\\\",\\\"patientGuid\\\",\\\"transcriptGuid\\\",\\\"transcriptDate\\\",\\\"canToggleAttachToEncounter\\\",\\\"disabled\\\",\\\"canAddMedications\\\",\\\"recordMedication\\\",\\\"editMedication\\\",\\\"isValidDiagnosisChanged\\\",\\\"refineDiagnosis\\\",\\\"associateMedication\\\",\\\"disassociateMedication\\\"],[[23,[\\\"isAllowedToEditDiagnoses\\\"]],[23,[\\\"isNotAllowedToEditDiagnoses\\\"]],[23,[\\\"diagnosis\\\"]],[23,[\\\"associatedMedications\\\"]],[23,[\\\"isAddingNewDiagnosis\\\"]],[23,[\\\"relatedDiagnoses\\\"]],[23,[\\\"patientGuid\\\"]],[23,[\\\"transcriptGuid\\\"]],[23,[\\\"transcriptDate\\\"]],[23,[\\\"canToggleAttachToEncounter\\\"]],[23,[\\\"disabled\\\"]],[23,[\\\"canAddMedications\\\"]],[23,[\\\"recordMedicationActionName\\\"]],[23,[\\\"editMedicationActionName\\\"]],\\\"hasValidDatesChanged\\\",\\\"refineDiagnosis\\\",\\\"associateMedication\\\",\\\"disassociateMedication\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isRefiningDiagnosis\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"diagnosis-refine\\\",null,[[\\\"isAllowedToEditDiagnoses\\\",\\\"diagnosis\\\",\\\"diagnoses\\\",\\\"isAddingNewDiagnosis\\\",\\\"searchByCodeSystem\\\",\\\"showFacets\\\",\\\"hideAllPopups\\\",\\\"diagnosisRefined\\\"],[[23,[\\\"isAllowedToEditDiagnoses\\\"]],[23,[\\\"diagnosis\\\"]],[23,[\\\"relatedDiagnoses\\\"]],[23,[\\\"isAddingNewDiagnosis\\\"]],[23,[\\\"refineCodeSystem\\\"]],[23,[\\\"showRefineFacets\\\"]],[23,[\\\"isICD10ModalShowing\\\"]],\\\"diagnosisRefined\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"detail-pane-footer\\\",null,[[\\\"sectionContext\\\",\\\"class\\\"],[[22,3,[]],\\\"diagnosis-detail--footer\\\"]],{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"diagnosis-detail--footer\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isRefiningDiagnosis\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isAllowedToEditDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn\\\"],[11,\\\"data-element\\\",\\\"back-button\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"goBackToDiagnoisDetails\\\"]],[9],[0,\\\"Back\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isAllowedToEditDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn\\\"],[11,\\\"data-element\\\",\\\"cancel-diagnosis-button\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"]],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"pull-right btn\\\"],[11,\\\"data-element\\\",\\\"cancel-diagnosis-button\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"]],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[4,\\\"if\\\",[[23,[\\\"session\\\",\\\"canEditChart\\\"]]],null,{\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"isEditing\\\"]]],null,{\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"isAddingNewDiagnosis\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isAllowedToEditDiagnoses\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"canDelete\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[4,\\\"popover-confirm\\\",null,[[\\\"action\\\",\\\"tagName\\\",\\\"class\\\",\\\"title\\\",\\\"confirmLabel\\\",\\\"popoverContent\\\"],[\\\"deleteDiagnosis\\\",\\\"button\\\",\\\"btn\\\",\\\"Delete diagnosis\\\",\\\"Delete\\\",[23,[\\\"deleteMessage\\\"]]]],{\\\"statements\\\":[[0,\\\"Delete\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"attachedToAdditionalEncounter\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                        \\\"],[4,\\\"popover-info\\\",null,[[\\\"tagName\\\",\\\"class\\\",\\\"title\\\",\\\"popoverContent\\\"],[\\\"button\\\",\\\"btn\\\",\\\"Diagnosis attached to an encounter\\\",\\\"Consider marking this diagnosis historical by setting a stop date\\\"]],{\\\"statements\\\":[[0,\\\"Delete\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                        \\\"],[4,\\\"popover-info\\\",null,[[\\\"tagName\\\",\\\"class\\\",\\\"title\\\",\\\"popoverContent\\\"],[\\\"button\\\",\\\"btn\\\",\\\"Diagnosis associated with a medication\\\",\\\"This diagnosis is associated with a medication and can't be deleted.\\\"]],{\\\"statements\\\":[[0,\\\"Delete\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}],[4,\\\"if\\\",[[23,[\\\"session\\\",\\\"canEditChart\\\"]]],null,{\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"isRefiningDiagnosis\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isAllowedToEditDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[11,\\\"data-element\\\",\\\"delete-diagnosis-button\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isAddingNewDiagnosis\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"diagnosis\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"canAddMultiple\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                        \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn\\\"],[11,\\\"data-element\\\",\\\"save-and-add-diagnosis-button\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"saveAndAdd\\\"]],[9],[0,\\\"Add another\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"btn-group dropup\\\"],[9],[0,\\\"\\\\n                                        \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn brand-sky\\\"],[11,\\\"data-element\\\",\\\"save-diagnosis-button\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"save\\\"]],[9],[0,\\\"Save\\\"],[10],[0,\\\"\\\\n                                        \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn dropdown-toggle split-btn brand-sky\\\"],[11,\\\"data-toggle\\\",\\\"dropdown\\\"],[9],[0,\\\"\\\\n                                            \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-caret\\\"],[9],[10],[0,\\\"\\\\n                                        \\\"],[10],[0,\\\"\\\\n                                        \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"dropdown-menu pull-right\\\"],[9],[0,\\\"\\\\n                                            \\\"],[7,\\\"li\\\"],[9],[7,\\\"a\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"save\\\"]],[9],[0,\\\"Save\\\"],[10],[10],[0,\\\"\\\\n                                            \\\"],[7,\\\"li\\\"],[9],[7,\\\"a\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"saveToMyDxList\\\"]],[9],[0,\\\"Add to My Dx list\\\"],[10],[10],[0,\\\"\\\\n                                        \\\"],[10],[0,\\\"\\\\n                                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-primary\\\"],[11,\\\"data-element\\\",\\\"save-diagnosis-button\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"save\\\"]],[9],[0,\\\"Save\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"btn-group dropup\\\"],[9],[0,\\\"\\\\n                                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn brand-sky\\\"],[11,\\\"data-element\\\",\\\"save-diagnosis-button\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"save\\\"]],[9],[0,\\\"Save\\\"],[10],[0,\\\"\\\\n                                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn dropdown-toggle split-btn brand-sky\\\"],[11,\\\"data-toggle\\\",\\\"dropdown\\\"],[9],[0,\\\"\\\\n                                        \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-caret\\\"],[9],[10],[0,\\\"\\\\n                                    \\\"],[10],[0,\\\"\\\\n                                    \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"dropdown-menu pull-right\\\"],[9],[0,\\\"\\\\n                                        \\\"],[7,\\\"li\\\"],[9],[7,\\\"a\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"save\\\"]],[9],[0,\\\"Save\\\"],[10],[10],[0,\\\"\\\\n                                        \\\"],[7,\\\"li\\\"],[9],[7,\\\"a\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"saveToMyDxList\\\"]],[9],[0,\\\"Add to My Dx list\\\"],[10],[10],[0,\\\"\\\\n                                    \\\"],[10],[0,\\\"\\\\n                                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3]},null],[0,\\\"\\\\n\\\"],[4,\\\"content-modal\\\",null,[[\\\"modalStyle\\\",\\\"isVisible\\\"],[7,[23,[\\\"isICD9ModalShowing\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,2,[\\\"header\\\"]]],[[\\\"title\\\",\\\"isCloseByXorOutsideVisible\\\"],[\\\"Diagnoses cannot be saved without an ICD-9 code.\\\",true]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,2,[\\\"body\\\"]]],null,{\\\"statements\\\":[[0,\\\"    Press the Back button and Cancel to discard your changes.\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,2,[\\\"footer\\\"]]],[[\\\"buttonRightPrimaryText\\\",\\\"buttonRightPrimaryAction\\\"],[\\\"OK\\\",[27,\\\"action\\\",[[22,0,[]],\\\"closeICD9Modal\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[4,\\\"content-modal\\\",null,[[\\\"modalStyle\\\",\\\"isVisible\\\"],[7,[23,[\\\"isICD10ModalShowing\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"header\\\"]]],[[\\\"title\\\",\\\"isCloseByXorOutsideVisible\\\"],[\\\"Diagnoses cannot be saved without an ICD-10 code.\\\",true]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,1,[\\\"body\\\"]]],null,{\\\"statements\\\":[[0,\\\"    Press the Back button and Cancel to discard your changes.\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"footer\\\"]]],[[\\\"buttonRightPrimaryText\\\",\\\"buttonRightPrimaryAction\\\"],[\\\"OK\\\",[27,\\\"action\\\",[[22,0,[]],\\\"closeICD10Modal\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-detail.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-display-selector-v2\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"yUGDUhCQ\", \"block\": \"{\\\"symbols\\\":[\\\"options\\\"],\\\"statements\\\":[[4,\\\"composable-select\\\",null,[[\\\"data-element\\\",\\\"content\\\",\\\"onSelect\\\",\\\"optionLabelPath\\\"],[\\\"diagnosis-display-select\\\",[23,[\\\"diagnosisDescriptionDisplayOptions\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"selectOption\\\"],null],\\\"label\\\"]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"dropdown\\\"]]],[[\\\"prompt\\\"],[[23,[\\\"promptValue\\\"]]]]],false],[0,\\\"\\\\n    \\\"],[1,[22,1,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-display-selector-v2.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-display-selector\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"Ni/0CuA0\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"single-select\\\",null,[[\\\"content\\\",\\\"value\\\",\\\"optionLabelPath\\\",\\\"optionValuePath\\\",\\\"prompt\\\",\\\"isShorter\\\",\\\"inToolbar\\\",\\\"hasBorder\\\",\\\"sortLabels\\\",\\\"data-element\\\",\\\"searchDataElement\\\"],[[23,[\\\"diagnosisDescriptionDisplayOptions\\\"]],[23,[\\\"diagnosisDescriptionDisplay\\\"]],\\\"label\\\",\\\"value\\\",\\\"Show\\\",[23,[\\\"isShorter\\\"]],true,false,false,\\\"diagnosis-display-select\\\",\\\"diagnosis-display-select-link\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-display-selector.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-facets\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"5uGVTdbu\", \"block\": \"{\\\"symbols\\\":[\\\"facet\\\",\\\"constraint\\\"],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"arrow\\\"],[9],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"diagnosis-facets\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"h4\\\"],[11,\\\"class\\\",\\\"header4\\\"],[9],[0,\\\"Refine your search\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"filteredDiagnoses\\\",\\\"facets\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"strong\\\"],[9],[1,[22,1,[\\\"name\\\"]],false],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[22,1,[\\\"constraints\\\"]]],null,{\\\"statements\\\":[[4,\\\"d-check-box\\\",null,[[\\\"smaller\\\",\\\"checked\\\",\\\"checkedValue\\\",\\\"onChecked\\\",\\\"data-element\\\"],[true,[27,\\\"array-contains\\\",[[23,[\\\"selectedConstraintIds\\\"]],[22,2,[\\\"id\\\"]]],null],[22,2,[]],\\\"constraintClicked\\\",\\\"facet-check-box\\\"]],{\\\"statements\\\":[[0,\\\"                \\\"],[1,[22,2,[\\\"name\\\"]],false],[0,\\\" (\\\"],[1,[22,2,[\\\"diagnoses\\\",\\\"length\\\"]],false],[0,\\\")\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[1]},{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"no-facets-text\\\"],[9],[0,\\\"There are no facets needed to further refine this diagnosis.\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-facets.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-refine\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"NuceawMh\", \"block\": \"{\\\"symbols\\\":[\\\"diagnosis\\\",\\\"codeObject\\\"],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"refine-diagnosis-title\\\"],[9],[0,\\\"Refine diagnosis from your search\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"select-refined-diagnosis\\\"],[9],[0,\\\"Select refined diagnosis based on matches below\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group diagnosis-refine-show-hide-section\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs box-fixed\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[\\\"diagnosis-facets-screen \\\",[27,\\\"unless\\\",[[23,[\\\"showFacets\\\"]],\\\"hidden\\\"],null]]]],[3,\\\"action\\\",[[22,0,[]],\\\"toggleProperty\\\",\\\"showFacets\\\"]],[9],[10],[0,\\\"\\\\n        \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn-sm show-facets-btn icon-filter\\\"],[11,\\\"data-element\\\",\\\"facets-button\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"toggleProperty\\\",\\\"showFacets\\\"]],[9],[10],[0,\\\"\\\\n        \\\"],[7,\\\"a\\\"],[11,\\\"data-element\\\",\\\"facets-filter-link\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"toggleProperty\\\",\\\"showFacets\\\"]],[9],[0,\\\"Filter\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"hideAllPopups\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"ember-tether\\\",null,[[\\\"target\\\",\\\"targetAttachment\\\",\\\"attachment\\\",\\\"offset\\\",\\\"constraints\\\"],[\\\".diagnosis-refine-show-hide-section .show-facets-btn\\\",\\\"middle left\\\",\\\"middle left\\\",[23,[\\\"facetOffset\\\"]],[23,[\\\"tetherConstraints\\\"]]]],{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[27,\\\"diagnosis-facets\\\",null,[[\\\"diagnoses\\\",\\\"constraintsChanged\\\",\\\"class\\\"],[[23,[\\\"diagnoses\\\"]],\\\"constraintsChanged\\\",[27,\\\"concat\\\",[[27,\\\"if\\\",[[23,[\\\"showFacets\\\"]],\\\"\\\",\\\"hidden\\\"],null],\\\" \\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"slc-header inline-flex-group diagnosis-header\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"slc-header-inner item gutter-xs box-fixed\\\"],[9],[0,\\\"REFINE DIAGNOSIS:\\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"detail-inner\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"filteredDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"slc-row\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"refineDiagnoses\\\",[22,1,[]]]],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[22,1,[\\\"diagnosisCodes\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"filtered-diagnosis-item\\\"],[9],[4,\\\"if\\\",[[23,[\\\"shouldShowCode\\\"]]],null,{\\\"statements\\\":[[0,\\\"(\\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"bold\\\"],[9],[1,[22,2,[\\\"code\\\"]],false],[10],[0,\\\") \\\"]],\\\"parameters\\\":[]},null],[1,[22,2,[\\\"description\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"slc-row\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[0,\\\"There were no matches to further refine this diagnosis.\\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-refine.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-typeahead-item-icd10\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"WspBlHUX\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"option-container\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"selectSingleOption\\\"],null]],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"option-label dx-code\\\"],[9],[1,[23,[\\\"content\\\",\\\"icd10CodesText\\\"]],false],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"option-description term\\\"],[9],[1,[23,[\\\"content\\\",\\\"term\\\"]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"content\\\",\\\"codeToRefine\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[4,\\\"popover-info\\\",null,[[\\\"popoverContent\\\",\\\"classNames\\\",\\\"tagName\\\",\\\"triggerOn\\\",\\\"placement\\\"],[\\\"Refinement required: This term maps to more than one code.\\\",\\\"icon-urgent force-refine-icd10\\\",\\\"i\\\",\\\"hover\\\",\\\"left\\\"]],{\\\"statements\\\":[],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-typeahead-item-icd10.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-typeahead-item\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"FG0BMjrj\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"div\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"term\\\"],[9],[1,[23,[\\\"content\\\",\\\"term\\\"]],false],[10],[0,\\\"\\\\n    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"refine-status\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"content\\\",\\\"codeToRefine\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[4,\\\"popover-info\\\",null,[[\\\"popoverContent\\\",\\\"classNames\\\",\\\"tagName\\\",\\\"triggerOn\\\",\\\"placement\\\"],[\\\"Refinement required: This term maps to more than one code.\\\",\\\"icon-urgent force-refine\\\",\\\"i\\\",\\\"hover\\\",\\\"left\\\"]],{\\\"statements\\\":[],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[4,\\\"if\\\",[[23,[\\\"content\\\",\\\"optionalRefine\\\"]]],null,{\\\"statements\\\":[[7,\\\"i\\\"],[11,\\\"class\\\",\\\"optional-refine icon-urgent\\\"],[9],[10]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showCodes\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"icd10-code\\\"],[9],[4,\\\"if\\\",[[23,[\\\"content\\\",\\\"icd10CodesText\\\"]]],null,{\\\"statements\\\":[[0,\\\"ICD10: \\\"],[1,[23,[\\\"content\\\",\\\"icd10CodesText\\\"]],false]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/diagnosis-typeahead-item.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/encounter-diagnoses-list-item\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"3D99cyqp\", \"block\": \"{\\\"symbols\\\":[\\\"medication\\\"],\\\"statements\\\":[[7,\\\"div\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[27,\\\"diagnosis-description\\\",null,[[\\\"hideAcuity\\\",\\\"diagnosis\\\",\\\"diagnosisDescriptionDisplay\\\",\\\"isIcd10Display\\\"],[true,[23,[\\\"diagnosis\\\"]],[23,[\\\"diagnosisDescriptionDisplay\\\"]],[23,[\\\"isIcd10Display\\\"]]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"diagnosis\\\",\\\"startDate\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[9],[7,\\\"span\\\"],[12,\\\"class\\\",[28,[[21,\\\"hintTextClass\\\"]]]],[9],[0,\\\"Start:\\\"],[10],[0,\\\" \\\"],[1,[27,\\\"datetime-formatted\\\",null,[[\\\"datetime\\\"],[[23,[\\\"diagnosis\\\",\\\"startDate\\\"]]]]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"diagnosis\\\",\\\"stopDate\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[9],[7,\\\"span\\\"],[12,\\\"class\\\",[28,[[21,\\\"hintTextClass\\\"]]]],[9],[0,\\\"Stop:\\\"],[10],[0,\\\" \\\"],[1,[27,\\\"datetime-formatted\\\",null,[[\\\"datetime\\\"],[[23,[\\\"diagnosis\\\",\\\"stopDate\\\"]]]]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"showDiagnosisComment\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"diagnosis\\\",\\\"diagnosisComment\\\",\\\"comment\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"transcript-comment\\\",null,[[\\\"transcriptComment\\\",\\\"isCollapsible\\\",\\\"commentType\\\",\\\"patientPracticeGuid\\\"],[[23,[\\\"diagnosis\\\",\\\"diagnosisComment\\\"]],false,\\\"Comment\\\",[23,[\\\"diagnosis\\\",\\\"patientPracticeGuid\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"showEncounterComment\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"diagnosis\\\",\\\"encounterCommentsWithComment\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"transcript-comments\\\",null,[[\\\"items\\\",\\\"isCollapsible\\\",\\\"commentType\\\",\\\"patientPracticeGuid\\\"],[[23,[\\\"diagnosis\\\",\\\"encounterCommentsWithComment\\\"]],false,\\\"Encounter Comments\\\",[23,[\\\"diagnosis\\\",\\\"patientPracticeGuid\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"showMedication\\\"]]],null,{\\\"statements\\\":[[4,\\\"each\\\",[[23,[\\\"diagnosis\\\",\\\"medications\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"span\\\"],[12,\\\"class\\\",[28,[[21,\\\"hintTextClass\\\"]]]],[9],[0,\\\"Medication:\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"span\\\"],[9],[1,[22,1,[\\\"drugName\\\"]],false],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"startDateTime\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"span\\\"],[12,\\\"class\\\",[28,[[21,\\\"hintTextClass\\\"]]]],[9],[0,\\\"Start:\\\"],[10],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"datetime-formatted\\\",null,[[\\\"datetime\\\"],[[22,1,[\\\"startDateTime\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[22,1,[\\\"stopDateTime\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"span\\\"],[12,\\\"class\\\",[28,[[21,\\\"hintTextClass\\\"]]]],[9],[0,\\\"Stop:\\\"],[10],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"datetime-formatted\\\",null,[[\\\"datetime\\\"],[[22,1,[\\\"stopDateTime\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/encounter-diagnoses-list-item.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/encounter-diagnoses-list-section\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"yPEqJMHf\", \"block\": \"{\\\"symbols\\\":[\\\"diagnosis\\\",\\\"diagnosis\\\",\\\"index\\\",\\\"diagnosis\\\",\\\"index\\\",\\\"diagnosis\\\",\\\"index\\\"],\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"isIcd10Display\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"h3\\\"],[11,\\\"class\\\",\\\"header3b\\\"],[9],[1,[21,\\\"title\\\"],false],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"section\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"d-complex-list-container encounter-diagnoses-list--items\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"sortedChronicActiveDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-margin-Txs-v2\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"h4\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[0,\\\"Chronic\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"list list--hover\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"sortedChronicActiveDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"encounter-diagnoses-list-item\\\",null,[[\\\"tagName\\\",\\\"data-element\\\",\\\"diagnosis\\\",\\\"showDiagnosisComment\\\",\\\"showEncounterComment\\\",\\\"showMedication\\\",\\\"editDiagnosis\\\",\\\"isIcd10Display\\\",\\\"diagnosisDescriptionDisplay\\\"],[\\\"li\\\",[27,\\\"concat\\\",[\\\"chronic-dx-\\\",[22,7,[]]],null],[22,6,[]],[23,[\\\"showDiagnosisComment\\\"]],[23,[\\\"showEncounterComment\\\"]],[23,[\\\"showMedication\\\"]],\\\"editDiagnosis\\\",[23,[\\\"isIcd10Display\\\"]],[23,[\\\"diagnosisDescriptionDisplay\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[6,7]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"sortedAcuteActiveDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-margin-Txs-v2\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"h4\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[0,\\\"Acute\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"list list--hover\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"sortedAcuteActiveDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"encounter-diagnoses-list-item\\\",null,[[\\\"tagName\\\",\\\"data-element\\\",\\\"diagnosis\\\",\\\"showDiagnosisComment\\\",\\\"showEncounterComment\\\",\\\"showMedication\\\",\\\"editDiagnosis\\\",\\\"isIcd10Display\\\",\\\"diagnosisDescriptionDisplay\\\"],[\\\"li\\\",[27,\\\"concat\\\",[\\\"acute-dx-\\\",[22,5,[]]],null],[22,4,[]],[23,[\\\"showDiagnosisComment\\\"]],[23,[\\\"showEncounterComment\\\"]],[23,[\\\"showMedication\\\"]],\\\"editDiagnosis\\\",[23,[\\\"isIcd10Display\\\"]],[23,[\\\"diagnosisDescriptionDisplay\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[4,5]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"sortedUnspecifiedActiveDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-margin-Txs-v2\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"h4\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[0,\\\"Undefined\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"list list--hover\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"sortedUnspecifiedActiveDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"encounter-diagnoses-list-item\\\",null,[[\\\"tagName\\\",\\\"data-element\\\",\\\"diagnosis\\\",\\\"showDiagnosisComment\\\",\\\"showEncounterComment\\\",\\\"showMedication\\\",\\\"editDiagnosis\\\",\\\"isIcd10Display\\\",\\\"diagnosisDescriptionDisplay\\\"],[\\\"li\\\",[27,\\\"concat\\\",[\\\"undefined-dx-\\\",[22,3,[]]],null],[22,2,[]],[23,[\\\"showDiagnosisComment\\\"]],[23,[\\\"showEncounterComment\\\"]],[23,[\\\"showMedication\\\"]],\\\"editDiagnosis\\\",[23,[\\\"isIcd10Display\\\"]],[23,[\\\"diagnosisDescriptionDisplay\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2,3]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"unless\\\",[[23,[\\\"activeDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[0,\\\"No active \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"lowercase\\\"],[9],[1,[21,\\\"title\\\"],false],[10],[0,\\\" diagnoses.\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"historicalDiagnosesVisible\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"d-complex-list-container encounter-diagnoses-list--items\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-margin-Txs-v2\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"h4\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[0,\\\"Historical\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"list list--hover\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"historicalDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"encounter-diagnoses-list-item\\\",null,[[\\\"diagnosis\\\",\\\"showDiagnosisComment\\\",\\\"showEncounterComment\\\",\\\"showMedication\\\",\\\"editDiagnosis\\\",\\\"isIcd10Display\\\",\\\"diagnosisDescriptionDisplay\\\"],[[22,1,[]],[23,[\\\"showDiagnosisComment\\\"]],[23,[\\\"showEncounterComment\\\"]],[23,[\\\"showMedication\\\"]],\\\"editDiagnosis\\\",[23,[\\\"isIcd10Display\\\"]],[23,[\\\"diagnosisDescriptionDisplay\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"historicalDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"show-hide-toggle box-margin-Llg box-margin-Txs-v2\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"toggleProperty\\\",\\\"historicalDiagnosesVisible\\\"]],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"historicalDiagnosesVisible\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    Hide historical\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                    Show historical (\\\"],[1,[23,[\\\"historicalDiagnoses\\\",\\\"length\\\"]],false],[0,\\\")\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/encounter-diagnoses-list-section.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/encounter-diagnoses-list\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"I+RVbpjk\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"section\\\"],[12,\\\"class\\\",[28,[\\\"encounter-diagnoses-list \\\",[27,\\\"if\\\",[[23,[\\\"disabled\\\"]],\\\"disabled\\\"],null]]]],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"heading\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"span\\\"],[9],[0,\\\"\\\\n              \\\"],[7,\\\"h3\\\"],[9],[0,\\\"Diagnoses\\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"canRecordDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"a\\\"],[11,\\\"data-element\\\",\\\"encounter-record-diagnoses-btn\\\"],[11,\\\"class\\\",\\\"btn heading-action\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"recordDiagnoses\\\"]],[9],[0,\\\"Record\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"diagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"encounter-diagnoses-sort-button\\\"],[9],[0,\\\"\\\\n                 \\\"],[1,[27,\\\"single-select\\\",null,[[\\\"prompt\\\",\\\"content\\\",\\\"optionLabelPath\\\",\\\"optionValuePath\\\",\\\"selection\\\",\\\"select\\\"],[\\\"Sort\\\",[23,[\\\"sortOptions\\\"]],\\\"label\\\",\\\"id\\\",[23,[\\\"selectedSort\\\"]],\\\"selectedSortOption\\\"]]],false],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"med-grid-checkbox-dropdown\\\"],[9],[0,\\\"\\\\n                 \\\"],[1,[27,\\\"d-checkbox-dropdown-grouping\\\",null,[[\\\"menuLabel\\\",\\\"dropdownItems\\\",\\\"selections\\\"],[\\\"Show\\\",[23,[\\\"showOptions\\\"]],[23,[\\\"selectedShowOptions\\\"]]]]],false],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[1,[27,\\\"diagnosis-display-selector\\\",null,[[\\\"displayChanged\\\"],[\\\"displayChanged\\\"]]],false],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"isLoading\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"btn heading-action\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"print\\\"]],[9],[0,\\\"Print\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"section-group icd10-section-group\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isLoading\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"encounter-diagnoses-list--content\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"p\\\"],[9],[0,\\\"Loading diagnoses...\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n        \\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"diagnosesError\\\"]]],null,{\\\"statements\\\":[[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"encounter-diagnoses-list--content\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[0,\\\"Can't load diagnoses. Please\\\\n                    \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"reloadDiagnoses\\\"]],[9],[0,\\\"try again.\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"activePatientDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"d-complex-list-container encounter-diagnoses-list--items\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isAllowedToEditDiagnoses\\\"]]],null,{\\\"statements\\\":[[4,\\\"d-check-box\\\",null,[[\\\"checked\\\",\\\"disabled\\\"],[[23,[\\\"isNoKnownChecked\\\"]],[23,[\\\"isLoadingNoKnown\\\"]]]],{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"label\\\"],[12,\\\"class\\\",[28,[\\\"pf-input \\\",[21,\\\"cbSmaller\\\"]]]],[9],[0,\\\"Patient has no active diagnoses\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isNoKnownChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"p\\\"],[9],[0,\\\"Patient has no active diagnoses\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n            \\\"],[1,[27,\\\"encounter-diagnoses-list-section\\\",null,[[\\\"sortedChronicActiveDiagnoses\\\",\\\"sortedAcuteActiveDiagnoses\\\",\\\"sortedUnspecifiedActiveDiagnoses\\\",\\\"activeDiagnoses\\\",\\\"isIcd10Display\\\",\\\"historicalDiagnoses\\\",\\\"editDiagnosis\\\",\\\"showDiagnosisComment\\\",\\\"showEncounterComment\\\",\\\"showMedication\\\",\\\"diagnosisDescriptionDisplay\\\"],[[23,[\\\"sortedChronicActiveDiagnoses\\\"]],[23,[\\\"sortedAcuteActiveDiagnoses\\\"]],[23,[\\\"sortedUnspecifiedActiveDiagnoses\\\"]],[23,[\\\"allActiveDiagnoses\\\"]],true,[23,[\\\"allHistoricalDiagnoses\\\"]],\\\"editDiagnosis\\\",[23,[\\\"showDiagnosisComment\\\"]],[23,[\\\"showEncounterComment\\\"]],[23,[\\\"showMedication\\\"]],[23,[\\\"diagnosisDescriptionDisplay\\\"]]]]],false],[0,\\\"\\\\n    \\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}],[0,\\\" \\\"],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"print-preview-content\\\",null,[[\\\"isVisible\\\",\\\"printTitle\\\"],[[23,[\\\"isPrintVisible\\\"]],[23,[\\\"printTitle\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"print-diagnoses\\\",null,[[\\\"class\\\",\\\"patient\\\",\\\"activeDiagnoses\\\",\\\"historicalDiagnoses\\\",\\\"chronicActiveDiagnoses\\\",\\\"chronicHistoricalDiagnoses\\\",\\\"acuteActiveDiagnoses\\\",\\\"acuteHistoricalDiagnoses\\\",\\\"showDiagnosisComment\\\",\\\"showEncounterComment\\\",\\\"showMedication\\\",\\\"chartNote\\\"],[\\\"chart-print-container\\\",[23,[\\\"patient\\\"]],[23,[\\\"activeDiagnoses\\\"]],[23,[\\\"historicalDiagnoses\\\"]],[23,[\\\"sortedChronicActiveDiagnoses\\\"]],[23,[\\\"sortedChronicHistoricalDiagnoses\\\"]],[23,[\\\"sortedAcuteActiveDiagnoses\\\"]],[23,[\\\"sortedAcuteHistoricalDiagnoses\\\"]],[23,[\\\"showDiagnosisComment\\\"]],[23,[\\\"showEncounterComment\\\"]],[23,[\\\"showMedication\\\"]],[23,[\\\"chartNote\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/encounter-diagnoses-list.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/family-health-history-card\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"gREkQ2Cz\", \"block\": \"{\\\"symbols\\\":[\\\"card\\\",\\\"header\\\"],\\\"statements\\\":[[4,\\\"composable-card\\\",null,null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"header\\\"]]],null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,2,[\\\"title\\\"]]],null,{\\\"statements\\\":[[0,\\\"            Family health history\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"hideEdit\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"icon-add icon--md text-color-placeholder box-margin-Lmd-v2\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"edit\\\"],null]],[11,\\\"data-element\\\",\\\"add-family-history-button\\\"],[11,\\\"role\\\",\\\"link\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"icon-printer icon--md text-color-placeholder box-margin-Lmd-v2\\\"],[12,\\\"onclick\\\",[27,\\\"perform\\\",[[23,[\\\"print\\\"]]],null]],[11,\\\"data-element\\\",\\\"print-family-history-button\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[2]},null],[4,\\\"component\\\",[[22,1,[\\\"content\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"ul\\\"],[12,\\\"class\\\",[28,[\\\"list list--selectable list--hover \\\",[27,\\\"unless\\\",[[23,[\\\"isListVisible\\\"]],\\\"hidden\\\"],null]]]],[9],[0,\\\"\\\\n            \\\"],[7,\\\"li\\\"],[12,\\\"class\\\",[28,[[27,\\\"if\\\",[[23,[\\\"isEditing\\\"]],\\\"is-active\\\"],null],\\\" \\\",[27,\\\"unless\\\",[[23,[\\\"hasRecordedHistory\\\"]],\\\"hidden\\\"],null]]]],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"edit\\\"],null]],[11,\\\"data-element\\\",\\\"family-health-history-card-list-item\\\"],[11,\\\"role\\\",\\\"link\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"text-wrap\\\"],[11,\\\"data-element\\\",\\\"family-history-text\\\"],[9],[1,[27,\\\"preserve-linebreak\\\",[[23,[\\\"pastMedicalHistory\\\",\\\"familyHealthHistory\\\"]]],null],false],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"li\\\"],[12,\\\"class\\\",[28,[[27,\\\"if\\\",[[23,[\\\"isEditing\\\"]],\\\"is-active\\\"],null],\\\" \\\",[27,\\\"if\\\",[[23,[\\\"hasRecordedHistory\\\"]],\\\"hidden\\\"],null]]]],[11,\\\"data-element\\\",\\\"family-health-history-card-list-record-item\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"box-margin-Bn\\\"],[11,\\\"data-element\\\",\\\"family-history-record-text\\\"],[9],[0,\\\"Record family health history\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"p\\\"],[12,\\\"class\\\",[28,[\\\"text-color-placeholder box-margin-Bn box-padding-Txs-v2 \\\",[27,\\\"unless\\\",[[23,[\\\"defaultMessage\\\"]],\\\"hidden\\\"],null]]]],[11,\\\"data-element\\\",\\\"family-history-section-message\\\"],[9],[1,[21,\\\"defaultMessage\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null],[4,\\\"print-preview-content\\\",null,[[\\\"printTitle\\\",\\\"isVisible\\\"],[[23,[\\\"printTitle\\\"]],[23,[\\\"isPrintPreviewVisible\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"print-family-health-history-section\\\",null,[[\\\"content\\\",\\\"patient\\\",\\\"class\\\"],[[23,[\\\"pastMedicalHistory\\\",\\\"familyHealthHistory\\\"]],[23,[\\\"patient\\\"]],\\\"pmh-print chart-print-container\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/family-health-history-card.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/family-history-diagnosis-detail\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"NL60IC8p\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\",\\\"right-module\\\",\\\"fieldset\\\",\\\"options\\\",\\\"menu\\\"],\\\"statements\\\":[[4,\\\"detail-pane-v2\\\",null,[[\\\"class\\\"],[\\\"family-history-detail__pane\\\"]],{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"right-module\\\"]]],[[\\\"class\\\"],[\\\"flex-column\\\"]],{\\\"statements\\\":[[0,\\\"        \\\"],[1,[27,\\\"component\\\",[[22,2,[\\\"header\\\"]]],[[\\\"bigHeaderText\\\",\\\"closeDetailPane\\\"],[\\\"Diagnosis details\\\",[27,\\\"action\\\",[[22,0,[]],[23,[\\\"close\\\"]]],null]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,2,[\\\"body\\\"]]],[[\\\"class\\\"],[\\\"flex-grow box-padding-Alg-v2\\\"]],{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"label\\\"],[9],[0,\\\"Relative\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[9],[1,[21,\\\"relativeDescription\\\"],false],[10],[0,\\\"\\\\n            \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"label label--required box-margin-Tmd-v2\\\"],[9],[0,\\\"Diagnosis\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"observation\\\",\\\"observationGuid\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"diagnosis-description\\\"],[9],[1,[23,[\\\"diagnosis\\\",\\\"description\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"data-element\\\",\\\"isLoading\\\",\\\"optionGroupPath\\\",\\\"optionLabelPath\\\",\\\"selection\\\"],[[23,[\\\"searchDiagnoses\\\",\\\"last\\\",\\\"value\\\"]],\\\"diagnosis-search\\\",[23,[\\\"searchDiagnoses\\\",\\\"isRunning\\\"]],\\\"diagnosisType\\\",\\\"description\\\",[23,[\\\"diagnosis\\\"]]]],{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[27,\\\"component\\\",[[22,4,[\\\"typeahead-single-select\\\"]]],[[\\\"minChars\\\",\\\"onSearch\\\",\\\"placeholder\\\",\\\"query\\\",\\\"shouldSearchOnFocus\\\"],[3,[27,\\\"perform\\\",[[23,[\\\"searchDiagnoses\\\"]]],null],\\\"Search for diagnosis\\\",[23,[\\\"diagnosisQuery\\\"]],true]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,4,[\\\"dropdown-menu\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[22,5,[\\\"content\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[1,[22,5,[\\\"options\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                            \\\"],[4,\\\"component\\\",[[22,5,[\\\"no-results\\\"]]],null,{\\\"statements\\\":[[1,[21,\\\"noResultsText\\\"],false]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[5]},null]],\\\"parameters\\\":[4]},null]],\\\"parameters\\\":[]}],[4,\\\"if\\\",[[23,[\\\"diagnosis\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"label box-margin-Tmd-v2\\\"],[9],[0,\\\"Onset date\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"disabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"diagnosis-onset-date\\\"],[9],[1,[21,\\\"onsetDate\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[27,\\\"date-picker\\\",null,[[\\\"data-element\\\",\\\"maxDate\\\",\\\"placeholder\\\",\\\"value\\\"],[\\\"diagnosis-onset-date\\\",[23,[\\\"maxDate\\\"]],\\\"MM/DD/YYYY\\\",[23,[\\\"onsetDate\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[4,\\\"if\\\",[[23,[\\\"disabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"label box-margin-Tmd-v2\\\"],[9],[0,\\\"Comments\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"diagnosis-comments\\\"],[9],[1,[21,\\\"comment\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"field-set\\\",null,[[\\\"class\\\",\\\"data-element\\\"],[\\\"box-margin-Tmd-v2\\\",\\\"diagnosis-comments\\\"]],{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"component\\\",[[22,3,[\\\"legend\\\"]]],[[\\\"text\\\"],[\\\"Comments\\\"]]],false],[0,\\\"\\\\n                        \\\"],[1,[27,\\\"component\\\",[[22,3,[\\\"text-area\\\"]]],[[\\\"placeholder\\\",\\\"value\\\"],[\\\"Add a comment\\\",[23,[\\\"comment\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3]},null]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[4,\\\"component\\\",[[22,2,[\\\"footer\\\"]]],[[\\\"class\\\"],[\\\"box-padding-LRlg-v2 box-padding-TBmd-v2\\\"]],{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"showSaveButton\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"pull-right btn--brand\\\"],[11,\\\"data-element\\\",\\\"diagnosis-save\\\"],[12,\\\"onclick\\\",[27,\\\"perform\\\",[[23,[\\\"save\\\"]]],null]],[9],[0,\\\"Save\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--default box-margin-Rmd-v2\\\"],[11,\\\"data-element\\\",\\\"diagnosis-cancel\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],[23,[\\\"close\\\"]]],null]],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showDeleteButton\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--default\\\"],[11,\\\"data-element\\\",\\\"diagnosis-delete\\\"],[12,\\\"onclick\\\",[27,\\\"perform\\\",[[23,[\\\"delete\\\"]]],null]],[9],[0,\\\"Delete\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/family-history-diagnosis-detail.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/family-history-list\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"WrE8uJDW\", \"block\": \"{\\\"symbols\\\":[\\\"relative\\\"],\\\"statements\\\":[[4,\\\"each\\\",[[23,[\\\"relatives\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"family-history-relative-card\\\",null,[[\\\"disabled\\\",\\\"relative\\\",\\\"addDiagnosis\\\",\\\"editDiagnosis\\\",\\\"editRelative\\\"],[[23,[\\\"disabled\\\"]],[22,1,[]],[27,\\\"action\\\",[[22,0,[]],[23,[\\\"addDiagnosis\\\"]]],null],[27,\\\"action\\\",[[22,0,[]],[23,[\\\"editDiagnosis\\\"]]],null],[27,\\\"action\\\",[[22,0,[]],[23,[\\\"editRelative\\\"]]],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},{\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"isLoading\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"disabled\\\",\\\"onChecked\\\"],[[23,[\\\"unknownCondition\\\",\\\"value\\\"]],[23,[\\\"disabled\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"unknownConditionChecked\\\"],null]]],{\\\"statements\\\":[[0,\\\"Unknown family health history\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/family-history-list.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/family-history-relative-card\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"9/9HHMaB\", \"block\": \"{\\\"symbols\\\":[\\\"card\\\",\\\"observation\\\",\\\"header\\\"],\\\"statements\\\":[[4,\\\"composable-card\\\",null,null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"header\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[4,\\\"component\\\",[[22,3,[\\\"title\\\"]]],null,{\\\"statements\\\":[[1,[21,\\\"title\\\"],false]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,3,[\\\"utilities\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"icon-edit icon--labeled\\\"],[11,\\\"data-element\\\",\\\"edit-relative\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],[23,[\\\"editRelative\\\"]],[23,[\\\"relative\\\"]]],null]],[9],[1,[27,\\\"if\\\",[[23,[\\\"disabled\\\"]],\\\"View\\\",\\\"Edit\\\"],null],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[3]},null],[4,\\\"component\\\",[[22,1,[\\\"content\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"list list--hoverable list--selectable box-margin-Bsm-v2\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"relative\\\",\\\"observations\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"li\\\"],[11,\\\"data-element\\\",\\\"edit-diagnosis\\\"],[12,\\\"data-guid\\\",[28,[[22,2,[\\\"observationGuid\\\"]]]]],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],[23,[\\\"editDiagnosis\\\"]],[22,2,[]]],null]],[9],[1,[22,2,[\\\"diagnosis\\\",\\\"description\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"disabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"icon-add icon--labeled\\\"],[11,\\\"data-element\\\",\\\"add-diagnosis\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],[23,[\\\"addDiagnosis\\\"]],[23,[\\\"relative\\\"]]],null]],[9],[0,\\\"Add diagnosis\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/family-history-relative-card.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/family-history-relative-detail\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"D2Zx9i7a\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\",\\\"right-module\\\",\\\"fieldset\\\",\\\"options\\\"],\\\"statements\\\":[[4,\\\"detail-pane-v2\\\",null,[[\\\"class\\\"],[\\\"family-history-detail__pane\\\"]],{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"right-module\\\"]]],[[\\\"class\\\"],[\\\"flex-column \\\"]],{\\\"statements\\\":[[0,\\\"        \\\"],[1,[27,\\\"component\\\",[[22,2,[\\\"header\\\"]]],[[\\\"bigHeaderText\\\",\\\"closeDetailPane\\\"],[\\\"Relative details\\\",[27,\\\"action\\\",[[22,0,[]],[23,[\\\"close\\\"]]],null]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,2,[\\\"body\\\"]]],[[\\\"class\\\"],[\\\"flex-grow box-padding-Alg-v2\\\"]],{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"label label--required\\\"],[9],[0,\\\"Relationship\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"disabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"relative-relationship\\\"],[9],[1,[23,[\\\"relationshipType\\\",\\\"description\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"data-element\\\",\\\"isDropdownMenuVisible\\\",\\\"selection\\\",\\\"optionLabelPath\\\"],[[23,[\\\"relationshipTypes\\\"]],\\\"relative-relationship\\\",[23,[\\\"isRelationshipDropdownOpen\\\"]],[23,[\\\"relationshipType\\\"]],\\\"description\\\"]],{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[27,\\\"component\\\",[[22,4,[\\\"dropdown\\\"]]],[[\\\"prompt\\\"],[\\\"Select relationship...\\\"]]],false],[0,\\\"\\\\n                    \\\"],[1,[22,4,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[4]},null]],\\\"parameters\\\":[]}],[4,\\\"if\\\",[[23,[\\\"relationshipType\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"label box-margin-Tmd-v2\\\"],[9],[0,\\\"First name\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"disabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"relative-first-name\\\"],[9],[1,[21,\\\"firstName\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[27,\\\"text-field\\\",null,[[\\\"data-element\\\",\\\"value\\\"],[\\\"relative-first-name\\\",[23,[\\\"firstName\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"label box-margin-Tmd-v2\\\"],[9],[0,\\\"Last name\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"disabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"relative-last-name\\\"],[9],[1,[21,\\\"lastName\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[27,\\\"text-field\\\",null,[[\\\"data-element\\\",\\\"value\\\"],[\\\"relative-last-name\\\",[23,[\\\"lastName\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"label box-margin-Tmd-v2\\\"],[9],[0,\\\"Birthday\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"disabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"relative-birthdate\\\"],[9],[1,[21,\\\"dateOfBirth\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[27,\\\"date-picker\\\",null,[[\\\"data-element\\\",\\\"maxDate\\\",\\\"placeholder\\\",\\\"value\\\"],[\\\"relative-birthdate\\\",[23,[\\\"maxDate\\\"]],\\\"MM/DD/YYYY\\\",[23,[\\\"dateOfBirth\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"disabled\\\",\\\"data-element\\\",\\\"class\\\"],[[23,[\\\"isDeceased\\\"]],[23,[\\\"disabled\\\"]],\\\"relative-deceased-checkbox\\\",\\\"ib box-margin-Llg-v2\\\"]],{\\\"statements\\\":[[0,\\\"                    Deceased\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"disabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"label box-margin-Tmd-v2\\\"],[9],[0,\\\"Comments\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"relative-comments\\\"],[9],[1,[21,\\\"comment\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"field-set\\\",null,[[\\\"class\\\",\\\"data-element\\\"],[\\\"box-margin-Tmd-v2\\\",\\\"relative-comments\\\"]],{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"component\\\",[[22,3,[\\\"legend\\\"]]],[[\\\"text\\\"],[\\\"Comments\\\"]]],false],[0,\\\"\\\\n                        \\\"],[1,[27,\\\"component\\\",[[22,3,[\\\"text-area\\\"]]],[[\\\"placeholder\\\",\\\"value\\\"],[\\\"Add a comment\\\",[23,[\\\"comment\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3]},null]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[4,\\\"component\\\",[[22,2,[\\\"footer\\\"]]],[[\\\"class\\\"],[\\\"box-padding-LRlg-v2 box-padding-TBmd-v2\\\"]],{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"showSaveButton\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"pull-right btn--brand\\\"],[11,\\\"data-element\\\",\\\"relative-save\\\"],[12,\\\"onclick\\\",[27,\\\"perform\\\",[[23,[\\\"save\\\"]]],null]],[9],[0,\\\"Save\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--default box-margin-Rmd-v2\\\"],[11,\\\"data-element\\\",\\\"relative-cancel\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],[23,[\\\"close\\\"]]],null]],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showDeleteButton\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--default\\\"],[11,\\\"data-element\\\",\\\"relative-delete\\\"],[12,\\\"onclick\\\",[27,\\\"perform\\\",[[23,[\\\"delete\\\"]]],null]],[9],[0,\\\"Delete\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/family-history-relative-detail.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/favorite-diagnoses-toolbox\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"dVe1wKyO\", \"block\": \"{\\\"symbols\\\":[\\\"diagnosis\\\",\\\"dxCode\\\"],\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"showSpinner\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"is-loading\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"didFailToLoad\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"p-666 did-fail-to-load\\\"],[11,\\\"data-element\\\",\\\"failed-to-load-my-dx-list\\\"],[9],[0,\\\"\\\\n        There was a problem loading your favorite diagnosis. \\\"],[7,\\\"a\\\"],[11,\\\"data-element\\\",\\\"retry-loading-my-dx-list\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"retryLoadingData\\\"]],[9],[0,\\\"Retry?\\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"diagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"favorite-diagnosis-toolbox-text\\\"],[9],[0,\\\"Select from your customized Dx list. Add or edit from My Dx List Settings link at the bottom.\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"header\\\"],[9],[0,\\\"\\\\n        \\\"],[4,\\\"if\\\",[[23,[\\\"isShowingCodes\\\"]]],null,{\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"code-column\\\"],[11,\\\"data-element\\\",\\\"my-dx-list-code-column\\\"],[9],[1,[21,\\\"displayCodeSystemLabel\\\"],false],[10]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"description-column\\\"],[11,\\\"data-element\\\",\\\"my-dx-list-description-column\\\"],[9],[0,\\\"DESCRIPTION\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"a\\\"],[11,\\\"data-element\\\",\\\"my-dx-list-show-hide-toggle-codes\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"toggleShowCodes\\\"]],[9],[4,\\\"if\\\",[[23,[\\\"isShowingCodes\\\"]]],null,{\\\"statements\\\":[[0,\\\"Hide\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"Show\\\"]],\\\"parameters\\\":[]}],[0,\\\" codes\\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"section\\\"],[11,\\\"class\\\",\\\"results-list\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"diagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-link favorite-diagnoses--item\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"selectDiagnosis\\\",[22,1,[]]]],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[22,1,[\\\"displayDiagnosisCodes\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"diagnosis-codes-row\\\"],[9],[0,\\\"\\\\n                        \\\"],[4,\\\"if\\\",[[23,[\\\"isShowingCodes\\\"]]],null,{\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"code-column\\\"],[11,\\\"data-element\\\",\\\"my-dx-list-row-item-code\\\"],[9],[1,[22,2,[\\\"code\\\"]],false],[10]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"description-column\\\"],[11,\\\"data-element\\\",\\\"my-dx-list-row-item-description\\\"],[9],[1,[22,2,[\\\"description\\\"]],false],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"my-dx-link\\\"],[11,\\\"data-element\\\",\\\"my-dx-list-settings-link\\\"],[9],[4,\\\"link-to\\\",[\\\"settings.favoriteDiagnoses\\\"],null,{\\\"statements\\\":[[7,\\\"span\\\"],[11,\\\"class\\\",\\\"icon-edit\\\"],[9],[10],[0,\\\" My Dx List Settings\\\"]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"empty-set\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"h14\\\"],[11,\\\"class\\\",\\\"header14\\\"],[11,\\\"data-element\\\",\\\"my-dx-list-empty-text\\\"],[9],[0,\\\"No items in your custom Dx list\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[11,\\\"data-element\\\",\\\"my-dx-list-empty-instructions\\\"],[9],[0,\\\"Create a custom Dx list to speed up your workflow by having a place to select diagnoses that you use most often.\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[0,\\\"Customize your list in\\\\n            \\\"],[7,\\\"span\\\"],[11,\\\"data-element\\\",\\\"my-dx-list-empty-link-to-settings\\\"],[9],[0,\\\" \\\"],[4,\\\"link-to\\\",[\\\"settings.favoriteDiagnoses\\\"],null,{\\\"statements\\\":[[0,\\\"Settings\\\"]],\\\"parameters\\\":[]},null],[0,\\\" \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/favorite-diagnoses-toolbox.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/frequent-diagnoses\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"mUofyCLM\", \"block\": \"{\\\"symbols\\\":[\\\"diagnosis\\\"],\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isLoading\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[0,\\\"Loading frequent diagnoses...\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"loadFailed\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[0,\\\"Can't load frequent diagnoses. Please\\\\n            \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"reloadFrequentDiagnoses\\\"]],[9],[0,\\\"try again.\\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"frequentDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"results-list\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"frequentDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-link frequent-diagnoses--item\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"selectDiagnosis\\\",[22,1,[]]]],[9],[0,\\\"\\\\n                        \\\"],[1,[22,1,[\\\"description\\\"]],false],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[0,\\\"There are no frequent diagnoses.\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/frequent-diagnoses.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/frequent-medications\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"b2Hwhbqz\", \"block\": \"{\\\"symbols\\\":[\\\"item\\\"],\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isLoading\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[0,\\\"Loading frequent medications...\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"loadFailed\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[0,\\\"Can't load frequent medications. Please\\\\n            \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"reloadFrequentMedications\\\"]],[9],[0,\\\"try again.\\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"frequentMedications\\\"]]],null,{\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"hideFilter\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"search-container\\\"],[9],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"input\\\",null,[[\\\"classNames\\\",\\\"placeholder\\\",\\\"value\\\"],[\\\"no-borders search-input\\\",\\\"Search frequent medications\\\",[23,[\\\"medicationsFilter\\\"]]]]],false],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"results-list flex-grow\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"filteredMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-link frequent-medications--item\\\"],[12,\\\"data-guid\\\",[28,[[22,1,[\\\"id\\\"]]]]],[3,\\\"action\\\",[[22,0,[]],\\\"selectMedication\\\",[22,1,[]]]],[9],[1,[22,1,[\\\"drugName\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[0,\\\"There are no frequent medications.\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/frequent-medications.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/goal-detail\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"7z2/QLGo\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\"],\\\"statements\\\":[[4,\\\"detail-pane\\\",null,[[\\\"classNames\\\",\\\"resizables\\\",\\\"resizeOnBreakPoint\\\",\\\"isToolBoxVisible\\\",\\\"close\\\",\\\"isSlideOpenToolBox\\\",\\\"bigHeaderText\\\"],[\\\"side-fixed col-xs-5 summary-details goal-detail\\\",[23,[\\\"resizables\\\"]],true,false,\\\"save\\\",false,\\\"Goals\\\"]],{\\\"statements\\\":[[4,\\\"detail-pane-body\\\",null,[[\\\"sectionContext\\\"],[[22,1,[]]]],{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"panel-section\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label box-margin-An required\\\"],[9],[0,\\\"Goal\\\"],[10],[0,\\\"\\\\n            \\\"],[1,[27,\\\"text-area\\\",null,[[\\\"autosize\\\",\\\"value\\\",\\\"placeholderText\\\",\\\"tooltipMsg\\\",\\\"isErrorHighlightingAutomatic\\\",\\\"maxlength\\\",\\\"rows\\\"],[true,[23,[\\\"goal\\\",\\\"description\\\"]],[23,[\\\"placeholderText\\\"]],[23,[\\\"errors\\\",\\\"description\\\"]],true,\\\"1024\\\",\\\"3\\\"]]],false],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs active-checkbox\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"d-check-box\\\",null,[[\\\"checked\\\",\\\"smaller\\\"],[[23,[\\\"goal\\\",\\\"isActive\\\"]],true]],{\\\"statements\\\":[[0,\\\"                        Active goal\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs date\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label box-margin-An required\\\"],[9],[0,\\\"Start Date\\\"],[10],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"d-date-picker\\\",null,[[\\\"value\\\",\\\"errorMessage\\\",\\\"isLegacy\\\",\\\"placeholder\\\",\\\"autoCorrectYear\\\",\\\"data-element\\\",\\\"isShorter\\\"],[[23,[\\\"goal\\\",\\\"effectiveDate\\\"]],[23,[\\\"errors\\\",\\\"effectiveDate\\\"]],false,\\\"MM/DD/YYYY\\\",true,\\\"goal-effective-date\\\",true]]],false],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"detail-pane-footer\\\",null,[[\\\"sectionContext\\\"],[[22,1,[]]]],{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-left\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-sm\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"],null]],[11,\\\"data-element\\\",\\\"btn-cancel\\\"],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"addingNewGoal\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-sm\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"delete\\\"],null]],[11,\\\"data-element\\\",\\\"btn-delete\\\"],[9],[0,\\\"Delete\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"addingNewGoal\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-sm\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"save\\\",true],null]],[11,\\\"data-element\\\",\\\"btn-save-add-another\\\"],[9],[0,\\\"Save & add another\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-sm btn-primary\\\"],[11,\\\"data-element\\\",\\\"btn-save\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"save\\\"]],[9],[0,\\\"Save\\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/goal-detail.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/goals-section\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"eOuwWRnj\", \"block\": \"{\\\"symbols\\\":[\\\"card\\\",\\\"goal\\\",\\\"index\\\",\\\"goal\\\",\\\"index\\\",\\\"header\\\"],\\\"statements\\\":[[1,[27,\\\"data-tunnel\\\",null,[[\\\"name\\\",\\\"onDataReceived\\\"],[\\\"goals-section-refresh\\\",[27,\\\"action\\\",[[22,0,[]],\\\"refreshGoals\\\"],null]]]],false],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"composable-card\\\",null,null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"header\\\"]]],null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,6,[\\\"title\\\"]]],[[\\\"data-element\\\"],[\\\"goals-section-header\\\"]],{\\\"statements\\\":[[0,\\\"            Goals\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isAllowedToEditSummary\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"a\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"add\\\"],null]],[11,\\\"class\\\",\\\"icon icon-add icon--md box-margin-Lmd-v2\\\"],[11,\\\"data-element\\\",\\\"add-goal-button\\\"],[11,\\\"role\\\",\\\"link\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[1,[27,\\\"print-dropdown\\\",null,[[\\\"data-element\\\",\\\"options\\\",\\\"print\\\",\\\"useIcons\\\"],[\\\"print-goals\\\",[23,[\\\"printOptions\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"print\\\"],null],true]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[6]},null],[4,\\\"component\\\",[[22,1,[\\\"content\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isLoading\\\"]]],null,{\\\"statements\\\":[[0,\\\"            Loading patient goals...\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"goals\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"activeGoals\\\",\\\"length\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"ul\\\"],[12,\\\"class\\\",[28,[\\\"list list--default \\\",[27,\\\"if\\\",[[23,[\\\"isAllowedToEditSummary\\\"]],\\\"list--hover list--selectable\\\"],null]]]],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"activeGoals\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"li\\\"],[12,\\\"onclick\\\",[27,\\\"if\\\",[[23,[\\\"isAllowedToEditSummary\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"edit\\\",[22,4,[]]],null]],null]],[12,\\\"data-element\\\",[28,[\\\"active-goal-\\\",[22,5,[]]]]],[9],[0,\\\"\\\\n                                \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"text-wrap\\\"],[11,\\\"data-element\\\",\\\"goal-description\\\"],[9],[1,[27,\\\"preserve-linebreak\\\",[[22,4,[\\\"description\\\"]]],null],false],[10],[0,\\\"\\\\n                                \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"goal-effective-date\\\"],[9],[0,\\\"since \\\"],[1,[22,4,[\\\"effectiveDate\\\"]],false],[10],[0,\\\"\\\\n                            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[4,5]},null],[0,\\\"                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"box-margin-Bn text-color-placeholder\\\"],[9],[0,\\\"No active patient goals\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[4,\\\"if\\\",[[23,[\\\"inactiveGoals\\\",\\\"length\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"showInactiveGoals\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-margin-Txs-v2\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"h4\\\"],[11,\\\"class\\\",\\\"h4\\\"],[11,\\\"data-element\\\",\\\"inactive-goals-header\\\"],[9],[0,\\\"Inactive\\\"],[10],[0,\\\"\\\\n                            \\\"],[7,\\\"ul\\\"],[12,\\\"class\\\",[28,[\\\"list \\\",[27,\\\"if\\\",[[23,[\\\"isAllowedToEditSummary\\\"]],\\\"list--hover list--selectable\\\"],null]]]],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"inactiveGoals\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"li\\\"],[12,\\\"onclick\\\",[27,\\\"if\\\",[[23,[\\\"isAllowedToEditSummary\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"edit\\\",[22,2,[]]],null]],null]],[12,\\\"data-element\\\",[28,[\\\"inactive-goal-\\\",[22,3,[]]]]],[9],[0,\\\"\\\\n                                        \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"text-wrap\\\"],[11,\\\"data-element\\\",\\\"goal-description\\\"],[9],[1,[27,\\\"preserve-linebreak\\\",[[22,2,[\\\"description\\\"]]],null],false],[10],[0,\\\"\\\\n                                        \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"goal-effective-date\\\"],[9],[0,\\\"since \\\"],[1,[22,2,[\\\"effectiveDate\\\"]],false],[10],[0,\\\"\\\\n                                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2,3]},null],[0,\\\"                            \\\"],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-margin-Txs-v2\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"a\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"toggleShowInactiveLink\\\"],null]],[11,\\\"class\\\",\\\"show-hide-toggle\\\"],[11,\\\"role\\\",\\\"link\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showInactiveGoals\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                Hide inactive\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                Show inactive (\\\"],[1,[23,[\\\"inactiveGoals\\\",\\\"length\\\"]],false],[0,\\\")\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"errorText\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"box-margin-Bn text-color-placeholder\\\"],[9],[1,[21,\\\"errorText\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"box-margin-Bn text-color-placeholder\\\"],[11,\\\"data-element\\\",\\\"no-goals-placeholder\\\"],[9],[0,\\\"No patient goals recorded\\\"],[10],[0,\\\"\\\\n            \\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null],[0,\\\"\\\\n\\\"],[4,\\\"print-preview-content\\\",null,[[\\\"isVisible\\\",\\\"printTitle\\\"],[[23,[\\\"isPrintVisible\\\"]],[23,[\\\"printTitle\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"print-goals\\\",null,[[\\\"patient\\\",\\\"class\\\",\\\"activeGoals\\\",\\\"inactiveGoals\\\",\\\"includeHeaderAndFooter\\\",\\\"showActiveGoals\\\",\\\"showInactiveGoals\\\"],[[23,[\\\"patient\\\"]],\\\"chart-print-container\\\",[23,[\\\"activeGoals\\\"]],[23,[\\\"inactiveGoals\\\"]],[23,[\\\"includeHeaderAndFooter\\\"]],[23,[\\\"printActive\\\"]],[23,[\\\"printInactive\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/goals-section.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/health-concern-detail\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"WDNxG7bI\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\",\\\"@cancel\\\",\\\"@delete\\\",\\\"@save\\\"],\\\"statements\\\":[[4,\\\"detail-pane\\\",null,[[\\\"classNames\\\",\\\"resizables\\\",\\\"close\\\",\\\"bigHeaderText\\\"],[\\\"side-fixed col-xs-5 summary-details health-concern-detail type-v2\\\",[23,[\\\"resizables\\\"]],[27,\\\"action\\\",[[22,0,[]],[22,4,[]]],null],\\\"Health concerns\\\"]],{\\\"statements\\\":[[4,\\\"detail-pane-body\\\",null,[[\\\"sectionContext\\\"],[[22,1,[]]]],{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"model\\\",\\\"healthConcernReferenceGuid\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"h4\\\"],[11,\\\"data-element\\\",\\\"health-concern-reference-title\\\"],[9],[1,[23,[\\\"model\\\",\\\"title\\\"]],false],[10],[0,\\\" \\\"],[7,\\\"a\\\"],[12,\\\"class\\\",[28,[\\\"box-margin-Lsm-v2 \\\",[27,\\\"unless\\\",[[23,[\\\"model\\\",\\\"isNew\\\"]],\\\"hidden\\\"],null]]]],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"clearClinicalItem\\\"],null]],[11,\\\"data-element\\\",\\\"edit-health-concern\\\"],[9],[0,\\\"Edit\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"d-check-box\\\",null,[[\\\"checked\\\",\\\"smaller\\\",\\\"class\\\"],[[23,[\\\"model\\\",\\\"isActive\\\"]],true,\\\"box-margin-TBmd-v2\\\"]],{\\\"statements\\\":[[0,\\\"                Active health concern\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label required\\\"],[9],[0,\\\"Effective Date\\\"],[10],[0,\\\"\\\\n            \\\"],[1,[27,\\\"d-date-picker\\\",null,[[\\\"autoCorrectYear\\\",\\\"data-element\\\",\\\"errorMessage\\\",\\\"isLegacy\\\",\\\"isShorter\\\",\\\"placeholder\\\",\\\"value\\\"],[true,\\\"health-concern-effective-date\\\",[23,[\\\"errors\\\",\\\"effectiveDate\\\"]],false,true,\\\"MM/DD/YYYY\\\",[23,[\\\"model\\\",\\\"effectiveDate\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label required\\\"],[9],[0,\\\"Health concern\\\"],[10],[0,\\\"\\\\n            \\\"],[1,[27,\\\"multi-source-select\\\",null,[[\\\"class\\\",\\\"focusOnInsert\\\",\\\"includeCountInTabName\\\",\\\"includeSearchResultsTab\\\",\\\"isShorter\\\",\\\"maxSelections\\\",\\\"openOnFocus\\\",\\\"optionDescriptionPath\\\",\\\"optionLabelPath\\\",\\\"optionValuePath\\\",\\\"prompt\\\",\\\"select\\\",\\\"sortLabels\\\",\\\"tabSelectedDefault\\\",\\\"tabSources\\\",\\\"useTether\\\"],[\\\"size-full\\\",true,false,false,true,1,true,\\\"description\\\",\\\"label\\\",\\\"healthConcernReferenceGuid\\\",\\\"Add an existing diagnosis or allergy as a health concern\\\",[27,\\\"action\\\",[[22,0,[]],\\\"selectClinicalItem\\\"],null],false,[23,[\\\"tabSelectedDefault\\\"]],[23,[\\\"categories\\\"]],[23,[\\\"useTether\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null],[4,\\\"detail-pane-footer\\\",null,[[\\\"sectionContext\\\"],[[22,1,[]]]],{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[\\\"pull-right \\\",[27,\\\"unless\\\",[[23,[\\\"model\\\",\\\"healthConcernReferenceGuid\\\"]],\\\"hidden\\\"],null]]]],[9],[0,\\\"\\\\n            \\\"],[7,\\\"button\\\"],[12,\\\"class\\\",[28,[\\\"btn \\\",[27,\\\"unless\\\",[[23,[\\\"model\\\",\\\"isNew\\\"]],\\\"hidden\\\"],null]]]],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"saveAndAddAnother\\\"],null]],[11,\\\"data-element\\\",\\\"btn-save-add-another\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"visible-xs visible-sm\\\"],[9],[0,\\\"Add another\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"visible-md visible-lg\\\"],[9],[0,\\\"Save & add another\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-primary\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"save\\\"],null]],[11,\\\"data-element\\\",\\\"btn-save\\\"],[9],[0,\\\"Save\\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],[22,2,[]]],null]],[11,\\\"data-element\\\",\\\"btn-cancel\\\"],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"button\\\"],[12,\\\"class\\\",[28,[\\\"btn \\\",[27,\\\"if\\\",[[23,[\\\"model\\\",\\\"isNew\\\"]],\\\"hidden\\\"],null]]]],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],[22,3,[]]],null]],[11,\\\"data-element\\\",\\\"btn-delete\\\"],[9],[0,\\\"Delete\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/health-concern-detail.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/add-immunization-details\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"0Ge2/iIR\", \"block\": \"{\\\"symbols\\\":[\\\"options\\\",\\\"options\\\",\\\"options\\\",\\\"options\\\",\\\"options\\\",\\\"options\\\",\\\"options\\\",\\\"options\\\",\\\"options\\\",\\\"options\\\",\\\"menu\\\",\\\"menu-options\\\",\\\"option\\\",\\\"options\\\",\\\"options\\\",\\\"options\\\",\\\"options\\\",\\\"options\\\",\\\"options\\\",\\\"@confirmSave\\\"],\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"isHistorical\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[[27,\\\"unless\\\",[[23,[\\\"isSearching\\\"]],\\\"inline-flex-group-v2\\\"],null]]]],[9],[0,\\\"\\\\n\\\"],[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"class\\\",\\\"disabled\\\"],[[23,[\\\"model\\\",\\\"isPartiallyComplete\\\"]],\\\"item gutter-sm\\\",[23,[\\\"disabled\\\"]]]],{\\\"statements\\\":[[0,\\\"            Partially administered\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[[27,\\\"unless\\\",[[23,[\\\"isSearching\\\"]],\\\"inline-flex-group-v2\\\"],null]]]],[9],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"isHistorical\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[[27,\\\"unless\\\",[[23,[\\\"isSearching\\\"]],\\\"item gutter-sm\\\"],null]]]],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm box-fixed\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"label\\\"],[12,\\\"class\\\",[28,[\\\"field-label \\\",[27,\\\"if\\\",[[23,[\\\"isAdministered\\\"]],\\\"required\\\"],null]]]],[9],[0,\\\"Date Administered\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isAddingImmunization\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"d-date-picker\\\",null,[[\\\"value\\\",\\\"data-element\\\",\\\"isLegacy\\\",\\\"isShorter\\\",\\\"errorMessage\\\",\\\"startDate\\\"],[[23,[\\\"model\\\",\\\"vaccinationDate\\\"]],\\\"date-administered\\\",false,true,[23,[\\\"errors\\\",\\\"vaccinationvaccinationDate\\\"]],\\\"01/01/1900\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                            \\\"],[4,\\\"if\\\",[[23,[\\\"model\\\",\\\"vaccinationDate\\\"]]],null,{\\\"statements\\\":[[1,[27,\\\"format-date-time\\\",[[23,[\\\"model\\\",\\\"vaccinationDate\\\"]]],null],false]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"n/a\\\"]],\\\"parameters\\\":[]}],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm box-fixed\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"label\\\"],[12,\\\"class\\\",[28,[\\\"field-label \\\",[27,\\\"if\\\",[[23,[\\\"isAdministered\\\"]],\\\"required\\\"],null]]]],[9],[0,\\\"Time Administered\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isAddingImmunization\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"d-time-picker\\\",null,[[\\\"value\\\",\\\"data-element\\\",\\\"interval\\\",\\\"isShorter\\\",\\\"errorMessage\\\"],[[23,[\\\"model\\\",\\\"vaccinationTime\\\"]],\\\"time-administered\\\",15,true,[23,[\\\"errors\\\",\\\"vaccinationvaccinationTime\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[9],[1,[23,[\\\"model\\\",\\\"vaccinationTime\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"label\\\"],[12,\\\"class\\\",[28,[\\\"field-label \\\",[27,\\\"if\\\",[[23,[\\\"isAdministered\\\"]],\\\"required\\\"],null]]]],[9],[0,\\\"Ordered By\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"disabled\\\",\\\"errorMessage\\\",\\\"onSelect\\\",\\\"optionLabelPath\\\",\\\"data-element\\\",\\\"selection\\\"],[[23,[\\\"eligibleProviders\\\"]],[23,[\\\"disabled\\\"]],[23,[\\\"errors\\\",\\\"vaccinationorderingProviderGuid\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"selectOrderingProvider\\\"],null],\\\"fullProviderName\\\",\\\"select-ordered-by\\\",[23,[\\\"selectedOrderingProvider\\\"]]]],{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"component\\\",[[22,19,[\\\"dropdown\\\"]]],[[\\\"prompt\\\"],[\\\"Select value\\\"]]],false],[0,\\\"\\\\n                        \\\"],[1,[22,19,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[19]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[[27,\\\"unless\\\",[[23,[\\\"isSearching\\\"]],\\\"item gutter-sm\\\"],null]]]],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[12,\\\"class\\\",[28,[\\\"field-label \\\",[27,\\\"if\\\",[[23,[\\\"isAdministered\\\"]],\\\"required\\\"],null]]]],[9],[0,\\\"Administered By\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"disabled\\\",\\\"errorMessage\\\",\\\"onSelect\\\",\\\"optionLabelPath\\\",\\\"selection\\\"],[[23,[\\\"eligibleProviders\\\"]],[23,[\\\"disabled\\\"]],[23,[\\\"errors\\\",\\\"vaccinationadministeredByProviderGuid\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"selectAdministeredByProvider\\\"],null],\\\"fullProviderName\\\",[23,[\\\"selectedAdministeringProvider\\\"]]]],{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[27,\\\"component\\\",[[22,18,[\\\"dropdown\\\"]]],[[\\\"prompt\\\"],[\\\"Select value\\\"]]],false],[0,\\\"\\\\n                    \\\"],[1,[22,18,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[18]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isHistorical\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"label\\\"],[12,\\\"class\\\",[28,[\\\"field-label \\\",[27,\\\"if\\\",[[23,[\\\"isAdministered\\\"]],\\\"required\\\"],null]]]],[9],[0,\\\"Ordered By\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"disabled\\\",\\\"errorMessage\\\",\\\"onSelect\\\",\\\"optionLabelPath\\\",\\\"selection\\\"],[[23,[\\\"eligibleProviders\\\"]],[23,[\\\"disabled\\\"]],[23,[\\\"errors\\\",\\\"vaccinationorderingProviderGuid\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"selectOrderingProvider\\\"],null],\\\"fullProviderName\\\",[23,[\\\"selectedOrderingProvider\\\"]]]],{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"component\\\",[[22,17,[\\\"dropdown\\\"]]],[[\\\"prompt\\\"],[\\\"Select value\\\"]]],false],[0,\\\"\\\\n                        \\\"],[1,[22,17,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[17]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"label\\\"],[12,\\\"class\\\",[28,[\\\"field-label \\\",[27,\\\"if\\\",[[23,[\\\"isAdministered\\\"]],\\\"required\\\"],null]]]],[9],[0,\\\"Administered facility\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isAddingImmunization\\\"]]],null,{\\\"statements\\\":[[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"selection\\\",\\\"optionLabelPath\\\",\\\"errorMessage\\\",\\\"onSelect\\\"],[[23,[\\\"knownFacilities\\\"]],[23,[\\\"selectedFacility\\\"]],\\\"name\\\",[23,[\\\"errors\\\",\\\"vaccinationfacilityGuid\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"selectFacility\\\"],null]]],{\\\"statements\\\":[[0,\\\"                            \\\"],[1,[27,\\\"component\\\",[[22,16,[\\\"dropdown\\\"]]],[[\\\"prompt\\\"],[\\\"Select value\\\"]]],false],[0,\\\"\\\\n                            \\\"],[1,[22,16,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[16]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[9],[1,[27,\\\"if\\\",[[23,[\\\"selectedFacility\\\"]],[23,[\\\"selectedFacility\\\",\\\"facilityName\\\"]],\\\"n/a\\\"],null],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[[27,\\\"unless\\\",[[23,[\\\"isSearching\\\"]],\\\"inline-flex-group-v2\\\"],null]]]],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[[27,\\\"unless\\\",[[23,[\\\"isSearching\\\"]],\\\"item gutter-sm\\\"],null]]]],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[12,\\\"class\\\",[28,[\\\"field-label \\\",[27,\\\"if\\\",[[23,[\\\"isAdministered\\\"]],\\\"required\\\"],null]]]],[9],[0,\\\"Manufacturer\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"areInventoryFieldsReadonly\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[9],[1,[23,[\\\"model\\\",\\\"manufacturer\\\",\\\"name\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"disabled\\\",\\\"errorMessage\\\",\\\"optionLabelPath\\\",\\\"onSelect\\\",\\\"selection\\\"],[[23,[\\\"reference\\\",\\\"vaccineManufacturers\\\"]],[23,[\\\"isInventoryManufacturerDisabled\\\"]],[23,[\\\"errors\\\",\\\"vaccinationmanufacturer\\\"]],\\\"name\\\",[27,\\\"action\\\",[[22,0,[]],\\\"selectManufacturer\\\"],null],[23,[\\\"model\\\",\\\"manufacturer\\\"]]]],{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"component\\\",[[22,15,[\\\"dropdown\\\"]]],[[\\\"prompt\\\"],[\\\"Select value\\\"]]],false],[0,\\\"\\\\n                        \\\"],[1,[22,15,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[15]},null]],\\\"parameters\\\":[]}],[0,\\\"            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[12,\\\"class\\\",[28,[\\\"field-label \\\",[27,\\\"unless\\\",[[23,[\\\"isNdcNotRequired\\\"]],\\\"required\\\"],null]]]],[9],[0,\\\"NDC code\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"areInventoryFieldsReadonly\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[9],[1,[23,[\\\"model\\\",\\\"ndc\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"disabled\\\",\\\"errorMessage\\\",\\\"onSelect\\\",\\\"optionLabelPath\\\",\\\"selection\\\"],[[23,[\\\"reference\\\",\\\"immunizationDrugs\\\"]],[23,[\\\"isNdcDisabled\\\"]],[23,[\\\"errors\\\",\\\"vaccinationndc\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"selectNdc\\\"],null],\\\"nationalDrugCode\\\",[23,[\\\"selectedNdc\\\"]]]],{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"component\\\",[[22,14,[\\\"dropdown\\\"]]],[[\\\"prompt\\\"],[\\\"Select value\\\"]]],false],[0,\\\"\\\\n                        \\\"],[1,[22,14,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[14]},null]],\\\"parameters\\\":[]}],[0,\\\"            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[12,\\\"class\\\",[28,[\\\"field-label \\\",[27,\\\"if\\\",[[23,[\\\"isAdministered\\\"]],\\\"required\\\"],null]]]],[9],[0,\\\"Lot\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"areInventoryFieldsReadonly\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[9],[1,[23,[\\\"model\\\",\\\"vaccineLotNumber\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isInventoryMultipleLots\\\"]]],null,{\\\"statements\\\":[[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"optionLabelPath\\\",\\\"onSelect\\\",\\\"selection\\\"],[[23,[\\\"reference\\\",\\\"vaccineInventories\\\"]],\\\"vaccineLotNumber\\\",[27,\\\"action\\\",[[22,0,[]],\\\"selectLotOption\\\"],null],[23,[\\\"selectedInventoryLot\\\"]]]],{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"component\\\",[[22,10,[\\\"dropdown\\\"]]],[[\\\"prompt\\\"],[\\\"Select value\\\"]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,10,[\\\"dropdown-menu\\\"]]],null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,11,[\\\"options\\\"]]],null,{\\\"statements\\\":[[4,\\\"each\\\",[[22,12,[\\\"content\\\"]]],null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,12,[\\\"option\\\"]]],[[\\\"content\\\"],[[22,13,[]]]],{\\\"statements\\\":[[0,\\\"                                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"break-all\\\"],[9],[1,[22,13,[\\\"vaccineLotNumber\\\"]],false],[10],[0,\\\"\\\\n                                        \\\"],[7,\\\"span\\\"],[9],[0,\\\" - \\\"],[10],[0,\\\"\\\\n                                        \\\"],[7,\\\"span\\\"],[12,\\\"class\\\",[28,[[27,\\\"if\\\",[[22,13,[\\\"isExpired\\\"]],\\\"text-color-error\\\"],null]]]],[9],[0,\\\"Exp \\\"],[1,[22,13,[\\\"vaccineExpirationDate\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[13]},null]],\\\"parameters\\\":[12]},null]],\\\"parameters\\\":[11]},null]],\\\"parameters\\\":[10]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[27,\\\"text-field\\\",null,[[\\\"value\\\",\\\"data-element\\\",\\\"disabled\\\",\\\"errorMessage\\\"],[[23,[\\\"model\\\",\\\"vaccineLotNumber\\\"]],\\\"txt-lot\\\",[23,[\\\"isInventoryLotDisabled\\\"]],[23,[\\\"errors\\\",\\\"vaccinationvaccineLotNumber\\\"]]]]],false],[0,\\\"\\\\n                \\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}],[0,\\\"            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[[27,\\\"unless\\\",[[23,[\\\"isSearching\\\"]],\\\"item gutter-sm\\\"],null]]]],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs box-fixed-sm\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[12,\\\"class\\\",[28,[\\\"field-label \\\",[27,\\\"if\\\",[[23,[\\\"isAdministered\\\"]],\\\"required\\\"],null]]]],[9],[0,\\\"QTY\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"areInventoryFieldsReadonly\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[9],[1,[23,[\\\"model\\\",\\\"dosesFromInventory\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[27,\\\"text-field\\\",null,[[\\\"value\\\",\\\"data-element\\\",\\\"errorMessage\\\"],[[23,[\\\"model\\\",\\\"dosesFromInventory\\\"]],\\\"txt-qty\\\",[23,[\\\"errors\\\",\\\"vaccinationdosesFromInventory\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs box-fixed-sm\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[12,\\\"class\\\",[28,[\\\"field-label \\\",[27,\\\"if\\\",[[23,[\\\"isAdministered\\\"]],\\\"required\\\"],null]]]],[9],[0,\\\"Dose\\\"],[10],[0,\\\"\\\\n                \\\"],[1,[27,\\\"text-field\\\",null,[[\\\"data-element\\\",\\\"type\\\",\\\"disabled\\\",\\\"errorMessage\\\",\\\"refocusOnError\\\",\\\"value\\\"],[\\\"txt-dose\\\",\\\"number\\\",[23,[\\\"disabled\\\"]],[23,[\\\"errors\\\",\\\"vaccinationadministeredAmount\\\"]],true,[23,[\\\"model\\\",\\\"administeredAmount\\\"]]]]],false],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[12,\\\"class\\\",[28,[\\\"field-label \\\",[27,\\\"if\\\",[[23,[\\\"isAdministered\\\"]],\\\"required\\\"],null]]]],[9],[0,\\\"Units\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"disabled\\\",\\\"errorMessage\\\",\\\"onSelect\\\",\\\"optionLabelPath\\\",\\\"selection\\\"],[[23,[\\\"reference\\\",\\\"vaccinationUnits\\\"]],[23,[\\\"disabled\\\"]],[23,[\\\"errors\\\",\\\"vaccinationadministeredUnits\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"selectAdministeredUnits\\\"],null],\\\"code\\\",[23,[\\\"selectedUnits\\\"]]]],{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[27,\\\"component\\\",[[22,9,[\\\"dropdown\\\"]]],[[\\\"prompt\\\"],[\\\"Select value\\\"]]],false],[0,\\\"\\\\n                    \\\"],[1,[22,9,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[9]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[12,\\\"class\\\",[28,[\\\"field-label \\\",[27,\\\"if\\\",[[23,[\\\"isAdministered\\\"]],\\\"required\\\"],null]]]],[9],[0,\\\"Expiration Date\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"areInventoryFieldsReadonly\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[9],[1,[27,\\\"format-date-time\\\",[[23,[\\\"model\\\",\\\"vaccineLotExpirationDate\\\"]]],null],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"popover-confirm\\\",null,[[\\\"isPopoverVisible\\\",\\\"action\\\",\\\"title\\\",\\\"popoverContent\\\",\\\"confirmLabel\\\",\\\"cancelLabel\\\",\\\"confirmType\\\",\\\"placement\\\",\\\"tagName\\\"],[[23,[\\\"showExpirationWarning\\\"]],[22,20,[]],\\\"Confirm vaccine\\\",\\\"The vaccine you have selected from your inventory has an expiration date that is in the past. Are you sure you want to continue with the selected vaccine?\\\",\\\"Save\\\",\\\"Cancel\\\",\\\"warning\\\",\\\"left\\\",\\\"i\\\"]],{\\\"statements\\\":[],\\\"parameters\\\":[]},null],[0,\\\"                    \\\"],[1,[27,\\\"d-date-picker\\\",null,[[\\\"data-element\\\",\\\"errorMessage\\\",\\\"isLegacy\\\",\\\"isShorter\\\",\\\"disabled\\\",\\\"selectDate\\\",\\\"startDate\\\",\\\"value\\\"],[\\\"date-expiration\\\",[23,[\\\"errors\\\",\\\"vaccinationvaccineLotExpirationDate\\\"]],false,true,[23,[\\\"isInventoryExpirationDisabled\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"selectExpirationDate\\\"],null],\\\"01/01/1900\\\",[23,[\\\"model\\\",\\\"vaccineLotExpirationDate\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[[27,\\\"unless\\\",[[23,[\\\"isSearching\\\"]],\\\"inline-flex-group-v2\\\"],null]]]],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[[27,\\\"unless\\\",[[23,[\\\"isSearching\\\"]],\\\"item gutter-sm\\\"],null]]]],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[12,\\\"class\\\",[28,[\\\"field-label \\\",[27,\\\"if\\\",[[23,[\\\"isElectronicAndAdministered\\\"]],\\\"required\\\"],null]]]],[9],[0,\\\"Route\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"disabled\\\",\\\"errorMessage\\\",\\\"optionLabelPath\\\",\\\"selection\\\"],[[23,[\\\"vaccinationBodyRoutes\\\"]],[23,[\\\"disabled\\\"]],[23,[\\\"errors\\\",\\\"vaccinationroute\\\"]],\\\"name\\\",[23,[\\\"model\\\",\\\"route\\\"]]]],{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[27,\\\"component\\\",[[22,8,[\\\"dropdown\\\"]]],[[\\\"prompt\\\"],[\\\"Select value\\\"]]],false],[0,\\\"\\\\n                    \\\"],[1,[22,8,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[8]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[12,\\\"class\\\",[28,[\\\"field-label \\\",[27,\\\"if\\\",[[23,[\\\"isSiteRequired\\\"]],\\\"required\\\"],null]]]],[9],[0,\\\"Body site\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"disabled\\\",\\\"errorMessage\\\",\\\"optionLabelPath\\\",\\\"selection\\\"],[[23,[\\\"vaccinationBodySites\\\"]],[23,[\\\"isSiteDisabled\\\"]],[23,[\\\"errors\\\",\\\"vaccinationsite\\\"]],\\\"name\\\",[23,[\\\"model\\\",\\\"site\\\"]]]],{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[27,\\\"component\\\",[[22,7,[\\\"dropdown\\\"]]],[[\\\"prompt\\\"],[\\\"Select value\\\"]]],false],[0,\\\"\\\\n                    \\\"],[1,[22,7,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[7]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[[27,\\\"unless\\\",[[23,[\\\"isSearching\\\"]],\\\"item gutter-sm\\\"],null]]]],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n            \\\"],[1,[27,\\\"immunizations/vis-edition\\\",null,[[\\\"class\\\",\\\"disabled\\\",\\\"errorMessage\\\",\\\"isRequired\\\",\\\"vaccination\\\",\\\"visConcepts\\\"],[\\\"item gutter-sm\\\",[23,[\\\"disabled\\\"]],[23,[\\\"errors\\\",\\\"vaccinationvisConceptGuidList\\\"]],[23,[\\\"isVisConceptRequired\\\"]],[23,[\\\"model\\\"]],[23,[\\\"reference\\\",\\\"visConcepts\\\"]]]]],false],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[[27,\\\"unless\\\",[[23,[\\\"isSearching\\\"]],\\\"inline-flex-group-v2\\\"],null]]]],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[[27,\\\"unless\\\",[[23,[\\\"isSearching\\\"]],\\\"item gutter-sm\\\"],null]]]],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"\\\\n                    Funding Source\\\\n\\\"],[4,\\\"composable-popover\\\",null,[[\\\"data-element\\\",\\\"classNames\\\"],[\\\"info-popover\\\",\\\"box-margin-Lxs inline-option\\\"]],{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"component\\\",[[22,6,[\\\"popover-target\\\"]]],[[\\\"tagName\\\",\\\"classNames\\\",\\\"data-element\\\"],[\\\"a\\\",\\\"icon-info\\\",\\\"info-popover-target\\\"]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,6,[\\\"popover\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"popover-content\\\"],[9],[0,\\\"\\\\n                                This option allows you to record the source of funding for this vaccine.\\\\n                            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[6]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"disabled\\\",\\\"errorMessage\\\",\\\"optionLabelPath\\\",\\\"selection\\\"],[[23,[\\\"reference\\\",\\\"immunizationFundingSources\\\"]],[23,[\\\"isInventoryFundingSourceDisabled\\\"]],[23,[\\\"errors\\\",\\\"vaccinationimmunizationFundingSource\\\"]],\\\"preferredConceptName\\\",[23,[\\\"model\\\",\\\"immunizationFundingSource\\\"]]]],{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[27,\\\"component\\\",[[22,5,[\\\"dropdown\\\"]]],[[\\\"prompt\\\"],[\\\"Select value\\\"]]],false],[0,\\\"\\\\n                    \\\"],[1,[22,5,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[5]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[[27,\\\"unless\\\",[[23,[\\\"isSearching\\\"]],\\\"item gutter-sm\\\"],null]]]],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[12,\\\"class\\\",[28,[\\\"field-label \\\",[27,\\\"if\\\",[[23,[\\\"isElectronicAndAdministered\\\"]],\\\"required\\\"],null]]]],[9],[0,\\\"VFC financial class\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"disabled\\\",\\\"errorMessage\\\",\\\"optionLabelPath\\\",\\\"selection\\\"],[[23,[\\\"reference\\\",\\\"vfcStatuses\\\"]],[23,[\\\"disabled\\\"]],[23,[\\\"errors\\\",\\\"vaccinationvfcStatus\\\"]],\\\"name\\\",[23,[\\\"model\\\",\\\"vfcStatus\\\"]]]],{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[27,\\\"component\\\",[[22,4,[\\\"dropdown\\\"]]],[[\\\"prompt\\\"],[\\\"Select value\\\"]]],false],[0,\\\"\\\\n                    \\\"],[1,[22,4,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[4]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showSelfPayRestrictionDropdown\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[[27,\\\"unless\\\",[[23,[\\\"isSearching\\\"]],\\\"item gutter-sm\\\"],null]]]],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm limit-dropdown-width\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Special indication\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"disabled\\\",\\\"optionLabelPath\\\",\\\"onSelect\\\",\\\"selection\\\"],[[23,[\\\"reference\\\",\\\"vaccinationScheduleSpecialIndications\\\"]],[23,[\\\"disabled\\\"]],\\\"scheduleSpecialIndicationDefinition\\\",[27,\\\"action\\\",[[22,0,[]],\\\"selectSpecialIndication\\\"],null],[23,[\\\"selectedSpecialIndication\\\"]]]],{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"component\\\",[[22,3,[\\\"dropdown\\\"]]],[[\\\"prompt\\\"],[\\\"Select indication\\\"]]],false],[0,\\\"\\\\n                        \\\"],[1,[22,3,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[[27,\\\"unless\\\",[[23,[\\\"isSearching\\\"]],\\\"inline-flex-group-v2\\\"],null]]]],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[[27,\\\"unless\\\",[[23,[\\\"isSearching\\\"]],\\\"item gutter-sm\\\"],null]]]],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"showSelfPayRestrictionDropdown\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm limit-dropdown-width\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Special indication\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"disabled\\\",\\\"optionLabelPath\\\",\\\"onSelect\\\",\\\"selection\\\"],[[23,[\\\"reference\\\",\\\"vaccinationScheduleSpecialIndications\\\"]],[23,[\\\"disabled\\\"]],\\\"scheduleSpecialIndicationDefinition\\\",[27,\\\"action\\\",[[22,0,[]],\\\"selectSpecialIndication\\\"],null],[23,[\\\"selectedSpecialIndication\\\"]]]],{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"component\\\",[[22,2,[\\\"dropdown\\\"]]],[[\\\"prompt\\\"],[\\\"Select indication\\\"]]],false],[0,\\\"\\\\n                        \\\"],[1,[22,2,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm limit-dropdown-width\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Reaction\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"disabled\\\",\\\"optionLabelPath\\\",\\\"onSelect\\\",\\\"selection\\\"],[[23,[\\\"reference\\\",\\\"vaccinationAdverseReactions\\\"]],[23,[\\\"disabled\\\"]],\\\"adverseReactionDefinition\\\",[27,\\\"action\\\",[[22,0,[]],\\\"selectReaction\\\"],null],[23,[\\\"selectedReaction\\\"]]]],{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"dropdown\\\"]]],[[\\\"prompt\\\"],[\\\"Select reaction\\\"]]],false],[0,\\\"\\\\n                    \\\"],[1,[22,1,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showSelfPayRestrictionDropdown\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm limit-dropdown-width\\\"],[9],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"self-pay-restriction-dropdown\\\",null,[[\\\"fixedWidth\\\",\\\"isNew\\\",\\\"isSaveEnabled\\\",\\\"disabled\\\",\\\"value\\\",\\\"data-element\\\",\\\"dropdownPadding\\\",\\\"patientPracticeGuid\\\",\\\"entityGuid\\\",\\\"entityTypeCode\\\",\\\"entityTypeText\\\",\\\"isImmunization\\\",\\\"selectSPR\\\"],[false,[23,[\\\"isAddingImmunization\\\"]],false,[23,[\\\"disabled\\\"]],\\\"deny\\\",\\\"self-pay-restriction-dropdown\\\",false,[23,[\\\"model\\\",\\\"patientPracticeGuid\\\"]],[23,[\\\"model\\\",\\\"vaccinationGuid\\\"]],\\\"immz\\\",\\\"Immunizations\\\",true,[27,\\\"action\\\",[[22,0,[]],[23,[\\\"selectPatientPrivacyConsent\\\"]]],null]]]],false],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[[27,\\\"unless\\\",[[23,[\\\"isSearching\\\"]],\\\"item gutter-sm\\\"],null]]]],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showComments\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm\\\"],[11,\\\"data-element\\\",\\\"txt-comments\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Comments\\\"],[10],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"textarea\\\",null,[[\\\"class\\\",\\\"disabled\\\",\\\"maxlength\\\",\\\"placeholder\\\",\\\"rows\\\",\\\"value\\\"],[\\\"immunization-comment\\\",[23,[\\\"disabled\\\"]],\\\"256\\\",\\\"Add a comment\\\",\\\"3\\\",[23,[\\\"model\\\",\\\"comment\\\"]]]]],false],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/add-immunization-details.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/add-immunization-historical\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"LdMFhXU5\", \"block\": \"{\\\"symbols\\\":[\\\"options\\\",\\\"options\\\",\\\"options\\\",\\\"@toggleDetails\\\"],\\\"statements\\\":[[7,\\\"div\\\"],[12,\\\"class\\\",[28,[[27,\\\"unless\\\",[[23,[\\\"isSearching\\\"]],\\\"inline-flex-group-v2\\\"],null]]]],[9],[0,\\\"\\\\n\\\"],[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"class\\\",\\\"disabled\\\"],[[23,[\\\"model\\\",\\\"isPartiallyComplete\\\"]],\\\"item gutter-sm\\\",[23,[\\\"disabled\\\"]]]],{\\\"statements\\\":[[0,\\\"        Partially administered\\\\n\\\"]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[[27,\\\"unless\\\",[[23,[\\\"isSearching\\\"]],\\\"inline-flex-group-v2\\\"],null]]]],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm box-fixed\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Date Administered\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isAddingImmunization\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"d-date-picker\\\",null,[[\\\"value\\\",\\\"data-element\\\",\\\"isLegacy\\\",\\\"isShorter\\\",\\\"startDate\\\"],[[23,[\\\"model\\\",\\\"vaccinationDate\\\"]],\\\"date-administered\\\",false,true,\\\"01/01/1900\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                \\\"],[4,\\\"if\\\",[[23,[\\\"model\\\",\\\"vaccinationDate\\\"]]],null,{\\\"statements\\\":[[1,[27,\\\"format-date-time\\\",[[23,[\\\"model\\\",\\\"vaccinationDate\\\"]]],null],false]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"n/a\\\"]],\\\"parameters\\\":[]}],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label required\\\"],[9],[0,\\\"Source for information\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"disabled\\\",\\\"errorMessage\\\",\\\"selection\\\",\\\"optionLabelPath\\\"],[[23,[\\\"vaccinationSources\\\"]],[23,[\\\"disabled\\\"]],[23,[\\\"errors\\\",\\\"vaccinationsource\\\"]],[23,[\\\"model\\\",\\\"source\\\"]],\\\"vaccinationSourceName\\\"]],{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"component\\\",[[22,3,[\\\"dropdown\\\"]]],[[\\\"prompt\\\"],[\\\"Select value\\\"]]],false],[0,\\\"\\\\n            \\\"],[1,[22,3,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"\\\\n            Reporting Facility\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isElectronicTransmission\\\"]]],null,{\\\"statements\\\":[[4,\\\"composable-popover\\\",null,[[\\\"data-element\\\",\\\"classNames\\\"],[\\\"info-popover\\\",\\\"inline-option box-margin-Lxs\\\"]],{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[27,\\\"component\\\",[[22,2,[\\\"popover-target\\\"]]],[[\\\"tagName\\\",\\\"classNames\\\",\\\"data-element\\\"],[\\\"a\\\",\\\"icon-info\\\",\\\"info-popover-target\\\"]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,2,[\\\"popover\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"popover-content\\\"],[9],[0,\\\"\\\\n                            If the facility selected has an associated registry connection, this vaccine record will be included when transmitting patient history.\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"disabled\\\",\\\"errorMessage\\\",\\\"onSelect\\\",\\\"optionLabelPath\\\",\\\"data-element\\\",\\\"selection\\\"],[[23,[\\\"knownFacilities\\\"]],[23,[\\\"disabled\\\"]],[23,[\\\"errors\\\",\\\"vaccinationfacilityGuid\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"selectFacility\\\"],null],\\\"name\\\",\\\"dropdown-facility\\\",[23,[\\\"selectedFacility\\\"]]]],{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"dropdown\\\"]]],[[\\\"prompt\\\"],[\\\"Select value\\\"]]],false],[0,\\\"\\\\n            \\\"],[1,[22,1,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[27,\\\"unless\\\",[[23,[\\\"isSearching\\\"]],\\\"inline-flex-group-v2\\\"],null]],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"config\\\",\\\"isSelfPayRestrictionOn\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[27,\\\"unless\\\",[[23,[\\\"isSearching\\\"]],\\\"item gutter-sm\\\"],null]],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n                \\\"],[1,[27,\\\"self-pay-restriction-dropdown\\\",null,[[\\\"class\\\",\\\"fixedWidth\\\",\\\"isNew\\\",\\\"isSaveEnabled\\\",\\\"disabled\\\",\\\"value\\\",\\\"data-element\\\",\\\"dropdownPadding\\\",\\\"patientPracticeGuid\\\",\\\"entityGuid\\\",\\\"entityTypeCode\\\",\\\"entityTypeText\\\",\\\"isImmunization\\\",\\\"selectSPR\\\"],[\\\"item gutter-sm\\\",false,[23,[\\\"isAddingImmunization\\\"]],false,[23,[\\\"disabled\\\"]],\\\"deny\\\",\\\"self-pay-restriction-dropdown\\\",false,[23,[\\\"model\\\",\\\"patientPracticeGuid\\\"]],[23,[\\\"model\\\",\\\"vaccinationGuid\\\"]],\\\"immz\\\",\\\"Immunizations\\\",true,[27,\\\"action\\\",[[22,0,[]],[23,[\\\"selectPatientPrivacyConsent\\\"]]],null]]]],false],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[27,\\\"unless\\\",[[23,[\\\"isSearching\\\"]],\\\"item gutter-sm\\\"],null]],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm\\\"],[11,\\\"data-element\\\",\\\"comments\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Comments\\\"],[10],[0,\\\"\\\\n                \\\"],[1,[27,\\\"textarea\\\",null,[[\\\"class\\\",\\\"dataElement\\\",\\\"disabled\\\",\\\"maxlength\\\",\\\"rows\\\",\\\"placeholder\\\",\\\"value\\\"],[\\\"immunization-comment\\\",\\\"txt-comments\\\",[23,[\\\"disabled\\\"]],\\\"256\\\",\\\"3\\\",\\\"Add a comment\\\",[23,[\\\"model\\\",\\\"comment\\\"]]]]],false],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--link\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],[22,4,[]]],null]],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isDetailsVisible\\\"]]],null,{\\\"statements\\\":[[0,\\\"            Show less\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            Show more\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/add-immunization-historical.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/add-immunization-refused\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"7UhirlIN\", \"block\": \"{\\\"symbols\\\":[\\\"options\\\",\\\"options\\\"],\\\"statements\\\":[[7,\\\"div\\\"],[12,\\\"class\\\",[28,[[27,\\\"unless\\\",[[23,[\\\"isSearching\\\"]],\\\"inline-flex-group-v2\\\"],null]]]],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[[27,\\\"unless\\\",[[23,[\\\"isSearching\\\"]],\\\"item gutter-sm\\\"],null]]]],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label required\\\"],[9],[0,\\\"Reason refused\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isAddingImmunization\\\"]]],null,{\\\"statements\\\":[[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"errorMessage\\\",\\\"optionLabelPath\\\",\\\"selection\\\"],[[23,[\\\"reference\\\",\\\"rejectionReasons\\\"]],[23,[\\\"errors\\\",\\\"vaccinationrejectionReason\\\"]],\\\"rejectionReasonName\\\",[23,[\\\"model\\\",\\\"rejectionReason\\\"]]]],{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"component\\\",[[22,2,[\\\"typeahead-single-select\\\"]]],[[\\\"placeholder\\\",\\\"shouldSearchOnFocus\\\"],[\\\"Search for a reason\\\",true]]],false],[0,\\\"\\\\n                        \\\"],[1,[22,2,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[9],[1,[23,[\\\"model\\\",\\\"rejectionReason\\\",\\\"rejectionReasonName\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[[27,\\\"unless\\\",[[23,[\\\"isSearching\\\"]],\\\"item gutter-sm\\\"],null]]]],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm box-fixed\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Effective date\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isAddingImmunization\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[27,\\\"d-date-picker\\\",null,[[\\\"value\\\",\\\"data-element\\\",\\\"isShorter\\\",\\\"isLegacy\\\",\\\"startDate\\\"],[[23,[\\\"model\\\",\\\"vaccinationDate\\\"]],\\\"date-refused\\\",true,false,\\\"01/01/1900\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[9],[1,[27,\\\"format-date-time\\\",[[23,[\\\"model\\\",\\\"vaccinationDate\\\"]]],null],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showEndDate\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm box-fixed\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"End date\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isAddingImmunization\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"d-date-picker\\\",null,[[\\\"value\\\",\\\"data-element\\\",\\\"isShorter\\\",\\\"isLegacy\\\",\\\"startDate\\\"],[[23,[\\\"model\\\",\\\"rejectionReasonExpirationDate\\\"]],\\\"date-end\\\",true,false,\\\"01/01/1900\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[9],[1,[27,\\\"format-date-time\\\",[[23,[\\\"model\\\",\\\"rejectionReasonExpirationDate\\\"]]],null],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Reporting Facility\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"disabled\\\",\\\"errorMessage\\\",\\\"onSelect\\\",\\\"optionLabelPath\\\",\\\"selection\\\"],[[23,[\\\"knownFacilities\\\"]],[23,[\\\"disabled\\\"]],[23,[\\\"errors\\\",\\\"vaccinationfacilityGuid\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"selectFacility\\\"],null],\\\"name\\\",[23,[\\\"selectedFacility\\\"]]]],{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"dropdown\\\"]]],[[\\\"prompt\\\"],[\\\"Select value\\\"]]],false],[0,\\\"\\\\n                    \\\"],[1,[22,1,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[27,\\\"immunizations/vis-edition\\\",null,[[\\\"class\\\",\\\"disabled\\\",\\\"vaccination\\\",\\\"visConcepts\\\"],[\\\"item gutter-sm\\\",[23,[\\\"disabled\\\"]],[23,[\\\"model\\\"]],[23,[\\\"reference\\\",\\\"visConcepts\\\"]]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"config\\\",\\\"isSelfPayRestrictionOn\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[1,[27,\\\"self-pay-restriction-dropdown\\\",null,[[\\\"class\\\",\\\"fixedWidth\\\",\\\"isNew\\\",\\\"isSaveEnabled\\\",\\\"disabled\\\",\\\"value\\\",\\\"data-element\\\",\\\"dropdownPadding\\\",\\\"patientPracticeGuid\\\",\\\"entityGuid\\\",\\\"entityTypeCode\\\",\\\"entityTypeText\\\",\\\"isImmunization\\\",\\\"selectSPR\\\"],[\\\"item gutter-sm\\\",false,[23,[\\\"isAddingImmunization\\\"]],false,[23,[\\\"disabled\\\"]],\\\"deny\\\",\\\"self-pay-restriction-dropdown\\\",false,[23,[\\\"model\\\",\\\"patientPracticeGuid\\\"]],[23,[\\\"model\\\",\\\"vaccinationGuid\\\"]],\\\"immz\\\",\\\"Immunizations\\\",true,[27,\\\"action\\\",[[22,0,[]],[23,[\\\"selectPatientPrivacyConsent\\\"]]],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm\\\"],[11,\\\"data-element\\\",\\\"txt-comments\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Comments\\\"],[10],[0,\\\"\\\\n        \\\"],[1,[27,\\\"textarea\\\",null,[[\\\"class\\\",\\\"dataElement\\\",\\\"disabled\\\",\\\"maxlength\\\",\\\"placeholder\\\",\\\"rows\\\",\\\"value\\\"],[\\\"immunization-comment\\\",\\\"txt-comments\\\",[23,[\\\"disabled\\\"]],\\\"256\\\",\\\"Add a comment\\\",\\\"3\\\",[23,[\\\"model\\\",\\\"comment\\\"]]]]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/add-immunization-refused.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/add-immunization\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"wrenT0Nj\", \"block\": \"{\\\"symbols\\\":[\\\"options\\\",\\\"menu\\\",\\\"menu-options\\\",\\\"groupOptions\\\",\\\"groupName\\\",\\\"option\\\",\\\"group\\\"],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"bg-color-default-hover box-margin-Amd-v2 box-padding-Alg-v2 box-padding-TBmd-v2\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"h5\\\"],[12,\\\"class\\\",[28,[\\\"required section-title \\\",[27,\\\"unless\\\",[[23,[\\\"isAddingImmunization\\\"]],\\\"hidden\\\"],null]]]],[9],[0,\\\"Add a new immunization\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"section\\\"],[11,\\\"data-element\\\",\\\"add-immunization-content\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm box-padding-Tn\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isAddingImmunization\\\"]]],null,{\\\"statements\\\":[[4,\\\"radio-button-group\\\",null,[[\\\"onSelect\\\",\\\"name\\\",\\\"selectedValue\\\"],[[27,\\\"action\\\",[[22,0,[]],\\\"selectSourceType\\\"],null],\\\"sourceType\\\",[23,[\\\"sourceType\\\"]]]],{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"component\\\",[[22,7,[\\\"radio-button\\\"]]],[[\\\"label\\\",\\\"value\\\",\\\"class\\\"],[\\\"Administered\\\",\\\"Administered\\\",\\\"inline-option\\\"]]],false],[0,\\\"\\\\n                        \\\"],[1,[27,\\\"component\\\",[[22,7,[\\\"radio-button\\\"]]],[[\\\"label\\\",\\\"value\\\",\\\"class\\\"],[\\\"Historical\\\",\\\"Historical\\\",\\\"inline-option\\\"]]],false],[0,\\\"\\\\n                        \\\"],[1,[27,\\\"component\\\",[[22,7,[\\\"radio-button\\\"]]],[[\\\"label\\\",\\\"value\\\",\\\"class\\\"],[\\\"Refused or Not Administered\\\",\\\"Refused\\\",\\\"inline-option\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[7]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Type\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[9],[1,[21,\\\"sourceType\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"sourceType\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isAddingImmunization\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isVaccineSelected\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                                \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"h4 required\\\"],[9],[1,[23,[\\\"vaccination\\\",\\\"vaccineName\\\"]],false],[10],[0,\\\"\\\\n                                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--link box-padding-Lmd-v2\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"editVaccine\\\"]],[9],[0,\\\"Edit\\\"],[10],[0,\\\"\\\\n                            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label required\\\"],[9],[0,\\\"Vaccine\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"selection\\\",\\\"isLoading\\\",\\\"optionLabelPath\\\",\\\"optionGroupPath\\\",\\\"onSelect\\\"],[[23,[\\\"vaccineSearchResults\\\"]],[23,[\\\"selectedVaccine\\\"]],[23,[\\\"searchVaccines\\\",\\\"isRunning\\\"]],\\\"name\\\",\\\"groupTitle\\\",[27,\\\"action\\\",[[22,0,[]],\\\"selectVaccine\\\"],null]]],{\\\"statements\\\":[[0,\\\"                                \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"typeahead\\\"]]],[[\\\"minChars\\\",\\\"onSearch\\\",\\\"query\\\",\\\"shouldSearchOnFocus\\\"],[1,[27,\\\"perform\\\",[[23,[\\\"searchVaccines\\\"]]],null],[23,[\\\"vaccineQuery\\\"]],true]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,1,[\\\"dropdown-menu\\\"]]],null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,2,[\\\"options\\\"]]],null,{\\\"statements\\\":[[4,\\\"each\\\",[[27,\\\"-each-in\\\",[[22,3,[\\\"groupedContent\\\"]]],null]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[22,5,[]]],null,{\\\"statements\\\":[[0,\\\"                                                \\\"],[1,[27,\\\"component\\\",[[22,3,[\\\"group-option\\\"]]],[[\\\"groupName\\\"],[[22,5,[]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"each\\\",[[22,4,[]]],null,{\\\"statements\\\":[[0,\\\"                                                \\\"],[1,[27,\\\"component\\\",[[22,3,[\\\"option\\\"]]],[[\\\"content\\\"],[[22,6,[]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[6]},null]],\\\"parameters\\\":[4,5]},null]],\\\"parameters\\\":[3]},null],[4,\\\"component\\\",[[22,2,[\\\"footer\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                        Add custom vaccine: \\\"],[1,[21,\\\"vaccineQuery\\\"],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[1]},null]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label required\\\"],[9],[0,\\\"Vaccine\\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[9],[1,[23,[\\\"vaccination\\\",\\\"vaccineName\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"isSearching\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"errors\\\",\\\"providerHasNpi\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[11,\\\"data-element\\\",\\\"npi-warning\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs box-fixed\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-urgent\\\"],[9],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"p\\\"],[9],[1,[23,[\\\"errors\\\",\\\"providerHasNPI\\\"]],false],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"list\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"li\\\"],[9],[0,\\\"\\\\n                                \\\"],[7,\\\"a\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"editProvider\\\",[23,[\\\"vaccination\\\",\\\"administeredByProviderGuid\\\"]]],null]],[9],[0,\\\"\\\\n                                    Add NPI for administering provider\\\\n                                \\\"],[10],[0,\\\"\\\\n                            \\\"],[10],[0,\\\"\\\\n                            \\\"],[7,\\\"li\\\"],[11,\\\"class\\\",\\\"unstyled\\\"],[9],[0,\\\"or\\\"],[10],[0,\\\"\\\\n                            \\\"],[7,\\\"li\\\"],[9],[0,\\\"\\\\n                                \\\"],[7,\\\"a\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"editProvider\\\",[23,[\\\"vaccination\\\",\\\"orderingProviderGuid\\\"]]],null]],[9],[0,\\\"\\\\n                                    Add NPI for ordering provider\\\\n                                \\\"],[10],[0,\\\"\\\\n                            \\\"],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"selectedVaccine\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"component\\\",[\\\"immunizations/add-immunization-refused\\\"],[[\\\"disabled\\\",\\\"errors\\\",\\\"facilities\\\",\\\"isAddingImmunization\\\",\\\"isElectronicTransmission\\\",\\\"isSearching\\\",\\\"isVisible\\\",\\\"model\\\",\\\"reference\\\",\\\"selectPatientPrivacyConsent\\\"],[[23,[\\\"isNotAllowedToEditImmunizations\\\"]],[23,[\\\"errors\\\"]],[23,[\\\"facilities\\\"]],[23,[\\\"isAddingImmunization\\\"]],[23,[\\\"isElectronicTransmission\\\"]],[23,[\\\"isSearching\\\"]],[23,[\\\"isRefused\\\"]],[23,[\\\"vaccination\\\"]],[23,[\\\"referenceData\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"selectPatientPrivacyConsent\\\"],null]]]],false],[0,\\\"\\\\n                \\\"],[1,[27,\\\"component\\\",[\\\"immunizations/add-immunization-historical\\\"],[[\\\"disabled\\\",\\\"errors\\\",\\\"facilities\\\",\\\"isAddingImmunization\\\",\\\"isDetailsVisible\\\",\\\"isElectronicTransmission\\\",\\\"isSearching\\\",\\\"isVisible\\\",\\\"model\\\",\\\"reference\\\",\\\"toggleDetails\\\",\\\"selectPatientPrivacyConsent\\\"],[[23,[\\\"isNotAllowedToEditImmunizations\\\"]],[23,[\\\"errors\\\"]],[23,[\\\"facilities\\\"]],[23,[\\\"isAddingImmunization\\\"]],[23,[\\\"isDetailsVisible\\\"]],[23,[\\\"isElectronicTransmission\\\"]],[23,[\\\"isSearching\\\"]],[23,[\\\"isHistorical\\\"]],[23,[\\\"vaccination\\\"]],[23,[\\\"referenceData\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"toggleDetails\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"selectPatientPrivacyConsent\\\"],null]]]],false],[0,\\\"\\\\n                \\\"],[1,[27,\\\"component\\\",[\\\"immunizations/add-immunization-details\\\"],[[\\\"disabled\\\",\\\"errors\\\",\\\"facilities\\\",\\\"isAddingImmunization\\\",\\\"isAdministered\\\",\\\"isElectronicTransmission\\\",\\\"isHistorical\\\",\\\"isSearching\\\",\\\"isVisible\\\",\\\"model\\\",\\\"providers\\\",\\\"providerUpdated\\\",\\\"showExpirationWarning\\\",\\\"confirmSave\\\",\\\"clearExpirationWarningResponse\\\",\\\"isNdcNotRequired\\\",\\\"isVaccineCustom\\\",\\\"reference\\\",\\\"selectPatientPrivacyConsent\\\"],[[23,[\\\"isNotAllowedToEditImmunizations\\\"]],[23,[\\\"errors\\\"]],[23,[\\\"facilities\\\"]],[23,[\\\"isAddingImmunization\\\"]],[23,[\\\"isAdministered\\\"]],[23,[\\\"isElectronicTransmission\\\"]],[23,[\\\"isHistorical\\\"]],[23,[\\\"isSearching\\\"]],[23,[\\\"isDetailsVisible\\\"]],[23,[\\\"vaccination\\\"]],[23,[\\\"providers\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"providerUpdated\\\"],null],[23,[\\\"showExpirationWarning\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"confirmSave\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"clearExpirationWarningResponse\\\"],null],[23,[\\\"isNdcNotRequired\\\"]],[23,[\\\"isVaccineCustom\\\"]],[23,[\\\"referenceData\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"selectPatientPrivacyConsent\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"nav\\\"],[11,\\\"data-element\\\",\\\"add-immunization-nav\\\"],[11,\\\"class\\\",\\\"box-padding-TBlg-v2\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--default\\\"],[11,\\\"data-element\\\",\\\"btn-cancel-add\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"],null]],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"isAddingImmunization\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--default\\\"],[11,\\\"data-element\\\",\\\"btn-delete-immunization\\\"],[12,\\\"disabled\\\",[21,\\\"isNotAllowedToEditImmunizations\\\"]],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],[27,\\\"action\\\",[[22,0,[]],[23,[\\\"delete\\\"]],[23,[\\\"vaccination\\\"]]],null]],null]],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"Delete\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"selectedVaccine\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--brand\\\"],[11,\\\"data-element\\\",\\\"btn-save-immunization\\\"],[12,\\\"disabled\\\",[21,\\\"disableSave\\\"]],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"save\\\"],null]],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"Save\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/add-immunization.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/download-immunizations\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"i+YGCGNo\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\"],\\\"statements\\\":[[4,\\\"content-modal\\\",null,[[\\\"modalStyle\\\",\\\"isVisible\\\",\\\"close\\\"],[3,[23,[\\\"isVisible\\\"]],\\\"cancel\\\"]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"header\\\"]]],[[\\\"title\\\",\\\"isCloseByXorOutsideVisible\\\"],[\\\"Download patient immunization record\\\",true]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,1,[\\\"body\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"download-immunization-registry-spacer\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[9],[0,\\\"Select the registry that will receive this patient's immunization record\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                \\\"],[1,[27,\\\"single-select\\\",null,[[\\\"content\\\",\\\"prompt\\\",\\\"optionLabelPath\\\",\\\"value\\\"],[[23,[\\\"registries\\\"]],\\\"Select a registry\\\",\\\"displayName\\\",[23,[\\\"selectedRegistry\\\"]]]]],false],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"selectedRegistry\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"download-immunization-registry-spacer\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[9],[0,\\\"Registry provider / practice ID (optional)\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[9],[1,[27,\\\"text-field\\\",null,[[\\\"maxlength\\\",\\\"value\\\"],[\\\"100\\\",[23,[\\\"selectedRegistry\\\",\\\"registryProvider\\\"]]]]],false],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"footer\\\"]]],[[\\\"buttonRightPrimaryText\\\",\\\"buttonRightPrimaryAction\\\",\\\"buttonLeftText\\\",\\\"buttonLeftAction\\\"],[\\\"Download\\\",[27,\\\"perform\\\",[[23,[\\\"downloadFile\\\"]]],null],\\\"Cancel\\\",[27,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/download-immunizations.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/list-immunizations\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"ZGarxP7H\", \"block\": \"{\\\"symbols\\\":[\\\"table\\\",\\\"immunizationGroup\\\",\\\"immunizationGroupIndex\\\",\\\"body\\\",\\\"vaccination\\\",\\\"index\\\",\\\"row\\\",\\\"vaccination\\\",\\\"vaccination\\\",\\\"vaccination\\\",\\\"vaccination\\\",\\\"options\\\",\\\"header\\\",\\\"@viewDetails\\\"],\\\"statements\\\":[[4,\\\"data-table-v2\\\",null,[[\\\"content\\\",\\\"selectedItem\\\",\\\"classNames\\\",\\\"data-element\\\",\\\"select\\\",\\\"class\\\"],[[23,[\\\"immunizationList\\\"]],[23,[\\\"selectedImmunization\\\"]],\\\"non-zebra-striped is-hoverable\\\",\\\"table-vaccinations\\\",[27,\\\"action\\\",[[22,0,[]],[22,14,[]]],null],[27,\\\"concat\\\",[[27,\\\"if\\\",[[23,[\\\"hasNoImmunizations\\\"]],\\\"flex-no-shrink\\\",\\\"with-immunizations\\\"],null],\\\" \\\"],null]]],{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"header\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[1,[27,\\\"component\\\",[[22,13,[\\\"column\\\"]]],[[\\\"field\\\",\\\"title\\\"],[\\\"vaccineName\\\",\\\"Vaccine Group\\\"]]],false],[0,\\\"\\\\n        \\\"],[1,[27,\\\"component\\\",[[22,13,[\\\"column\\\"]]],[[\\\"field\\\",\\\"title\\\"],[\\\"vaccinationDateValue\\\",\\\"Date Administered\\\"]]],false],[0,\\\"\\\\n        \\\"],[1,[27,\\\"component\\\",[[22,13,[\\\"column\\\"]]],[[\\\"field\\\",\\\"title\\\"],[\\\"vaccinationAgeValue\\\",\\\"Age\\\"]]],false],[0,\\\"\\\\n        \\\"],[1,[27,\\\"component\\\",[[22,13,[\\\"column\\\"]]],[[\\\"field\\\",\\\"title\\\"],[\\\"source.sourceType\\\",\\\"Status\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[13]},null],[4,\\\"each\\\",[[22,1,[\\\"content\\\"]]],null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"body\\\"]]],[[\\\"data-element\\\"],[[27,\\\"concat\\\",[\\\"immunization-group-\\\",[22,3,[]]],null]]],{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"tr\\\"],[11,\\\"class\\\",\\\"table-group-header\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"td\\\"],[11,\\\"colspan\\\",\\\"4\\\"],[9],[1,[22,2,[\\\"name\\\"]],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[22,2,[\\\"vaccinations\\\"]]],null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,4,[\\\"row\\\"]]],[[\\\"content\\\",\\\"data-element\\\"],[[22,5,[]],[27,\\\"concat\\\",[\\\"vaccine-\\\",[22,6,[]]],null]]],{\\\"statements\\\":[[4,\\\"component\\\",[[22,7,[\\\"cell\\\"]]],[[\\\"field\\\"],[\\\"vaccineName\\\"]],{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-left vaccine-name\\\"],[9],[0,\\\"\\\\n                                \\\"],[7,\\\"a\\\"],[11,\\\"data-element\\\",\\\"vaccine-name\\\"],[12,\\\"class\\\",[27,\\\"if\\\",[[22,11,[\\\"source\\\",\\\"isRefused\\\"]],\\\"is-refused\\\"],null]],[9],[0,\\\"\\\\n                                    \\\"],[1,[22,11,[\\\"vaccineName\\\"]],false],[0,\\\"\\\\n                                \\\"],[10],[0,\\\"\\\\n                            \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[22,11,[\\\"hasAllRegistryFields\\\"]]],null,{\\\"statements\\\":[[4,\\\"composable-popover\\\",null,[[\\\"data-element\\\",\\\"classNames\\\"],[\\\"info-popover\\\",\\\"pull-left box-margin-Lxs\\\"]],{\\\"statements\\\":[[0,\\\"                                    \\\"],[1,[27,\\\"component\\\",[[22,12,[\\\"popover-target\\\"]]],[[\\\"tagName\\\",\\\"classNames\\\",\\\"data-element\\\"],[\\\"a\\\",\\\"icon-info\\\",\\\"info-popover-target\\\"]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,12,[\\\"popover\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"popover-content\\\"],[9],[0,\\\"\\\\n                                            This vaccine record is missing information for electronic submission to the immunization registry.\\\\n                                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[12]},null]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[11]},null],[4,\\\"component\\\",[[22,7,[\\\"cell\\\"]]],[[\\\"field\\\"],[\\\"vaccinationDateValue\\\"]],{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"vaccination-date\\\"],[12,\\\"class\\\",[27,\\\"if\\\",[[22,10,[\\\"source\\\",\\\"isRefused\\\"]],\\\"is-refused\\\"],null]],[9],[0,\\\"\\\\n                                \\\"],[1,[27,\\\"format-date-time\\\",[[22,10,[\\\"vaccinationDate\\\"]]],[[\\\"format\\\"],[\\\"MM/DD/YY\\\"]]],false],[0,\\\"\\\\n                            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[10]},null],[4,\\\"component\\\",[[22,7,[\\\"cell\\\"]]],[[\\\"field\\\"],[\\\"vaccinationAgeValue\\\"]],{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"vaccination-date\\\"],[12,\\\"class\\\",[27,\\\"if\\\",[[22,9,[\\\"source\\\",\\\"isRefused\\\"]],\\\"is-refused\\\"],null]],[9],[0,\\\"\\\\n                                \\\"],[1,[27,\\\"age-on-date\\\",[[23,[\\\"patient\\\",\\\"birthDate\\\"]],[22,9,[\\\"vaccinationDate\\\"]],\\\"-\\\"],null],false],[0,\\\"\\\\n                            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[9]},null],[4,\\\"component\\\",[[22,7,[\\\"cell\\\"]]],[[\\\"field\\\"],[\\\"source.sourceType\\\"]],{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"vaccination-source-type\\\"],[12,\\\"class\\\",[28,[[27,\\\"if\\\",[[22,8,[\\\"source\\\",\\\"isRefused\\\"]],\\\"is-refused\\\"],null]]]],[9],[0,\\\"\\\\n                                \\\"],[1,[22,8,[\\\"source\\\",\\\"sourceType\\\"]],false],[0,\\\"\\\\n                            \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,8,[\\\"source\\\",\\\"isAdministered\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"vaccination-source-description\\\"],[11,\\\"class\\\",\\\"text-color-placeholder\\\"],[9],[0,\\\"\\\\n                                    By: \\\"],[1,[22,8,[\\\"administeredByProviderName\\\"]],false],[0,\\\"\\\\n                                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[22,8,[\\\"source\\\",\\\"isHistorical\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"vaccination-source-description\\\"],[11,\\\"class\\\",\\\"text-color-placeholder \\\"],[9],[0,\\\"\\\\n                                    \\\"],[1,[22,8,[\\\"source\\\",\\\"vaccinationSourceName\\\"]],false],[0,\\\"\\\\n                                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[22,8,[\\\"source\\\",\\\"isRefused\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"vaccination-source-description\\\"],[11,\\\"class\\\",\\\"is-refused text-color-placeholder\\\"],[9],[0,\\\"\\\\n                                    \\\"],[1,[22,8,[\\\"rejectionReason\\\",\\\"rejectionReasonName\\\"]],false],[0,\\\"\\\\n                                \\\"],[10],[0,\\\"\\\\n                            \\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[8]},null]],\\\"parameters\\\":[7]},null]],\\\"parameters\\\":[5,6]},null]],\\\"parameters\\\":[4]},null]],\\\"parameters\\\":[2,3]},null]],\\\"parameters\\\":[1]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"hasNoImmunizations\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"h14\\\"],[11,\\\"class\\\",\\\"header14\\\"],[9],[0,\\\"No immunizations recorded\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/list-immunizations.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/print-immunizations\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"N+Z3QyIJ\", \"block\": \"{\\\"symbols\\\":[\\\"immunization\\\",\\\"vaccination\\\",\\\"vaccineGroup\\\",\\\"vaccineGroupIndex\\\",\\\"vaccineGroup\\\",\\\"vaccineGroupIndex\\\",\\\"vaccine\\\",\\\"index\\\"],\\\"statements\\\":[[4,\\\"print-preview-content\\\",null,[[\\\"printTitle\\\",\\\"isVisible\\\",\\\"class\\\"],[\\\"Immunizations\\\",[23,[\\\"isVisible\\\"]],\\\"type-v2 immunizations-print\\\"]],{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isRegistryRecord\\\"]]],null,{\\\"statements\\\":[[0,\\\"\\\\t\\\\t\\\"],[7,\\\"h2\\\"],[9],[1,[21,\\\"registryName\\\"],false],[10],[0,\\\"\\\\n\\\\t\\\\t\\\"],[7,\\\"section\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[11,\\\"data-element\\\",\\\"query-patient-summary-info\\\"],[9],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item item-fixed gutter-md\\\"],[9],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[0,\\\"Name:\\\"],[10],[0,\\\" \\\"],[7,\\\"span\\\"],[9],[1,[23,[\\\"registryContent\\\",\\\"patientFilters\\\",\\\"fullName\\\"]],false],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item item-fixed gutter-md\\\"],[9],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[0,\\\"DOB:\\\"],[10],[0,\\\" \\\"],[7,\\\"span\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[23,[\\\"registryContent\\\",\\\"patientFilters\\\",\\\"dateOfBirth\\\"]],\\\"MM/DD/YYYY\\\"],null],false],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item item-fixed gutter-md\\\"],[9],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[0,\\\"Sex:\\\"],[10],[0,\\\" \\\"],[7,\\\"span\\\"],[9],[1,[23,[\\\"registryContent\\\",\\\"patientFilters\\\",\\\"gender\\\"]],false],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item item-fixed gutter-md\\\"],[9],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[0,\\\"PRN:\\\"],[10],[0,\\\" \\\"],[7,\\\"span\\\"],[9],[1,[23,[\\\"registryContent\\\",\\\"patientFilters\\\",\\\"patientRecordNumber\\\"]],false],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\"],[7,\\\"h3\\\"],[9],[0,\\\"History\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"immunizations-print-table table-content\\\"],[9],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"noHistoryResults\\\"]]],null,{\\\"statements\\\":[[0,\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"p\\\"],[9],[0,\\\"No results found\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[0,\\\"Vaccine Group\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Date Administered\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Age\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Valid Dose\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[0,\\\"Status\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"registryContent\\\",\\\"history\\\"]]],null,{\\\"statements\\\":[[0,\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"immunization-group\\\"],[9],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row immunization-group-header no-stripe\\\"],[9],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[1,[22,5,[\\\"name\\\"]],false],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[22,5,[\\\"vaccines\\\"]]],null,{\\\"statements\\\":[[0,\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[1,[22,7,[\\\"vaccineAdministered\\\"]],false],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[22,7,[\\\"dateAdministered\\\"]],\\\"MM/DD/YYYY\\\"],null],false],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[1,[27,\\\"age-on-date\\\",[[23,[\\\"patient\\\",\\\"birthDate\\\"]],[22,7,[\\\"dateAdministered\\\"]]],null],false],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-left\\\"],[9],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[9],[1,[22,7,[\\\"isValidDose\\\"]],false],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[9],[1,[22,7,[\\\"validityReason\\\"]],false],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[1,[22,7,[\\\"completionStatus\\\"]],false],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[7,8]},null],[0,\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[5,6]},null]],\\\"parameters\\\":[]}],[0,\\\"\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\"],[7,\\\"h3\\\"],[9],[0,\\\"Forecast\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\"],[7,\\\"h4\\\"],[9],[0,\\\"Schedule: \\\"],[1,[23,[\\\"registryContent\\\",\\\"schedule\\\"]],false],[10],[0,\\\"\\\\n\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"immunizations-print-table table-content\\\"],[9],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"noForecastResults\\\"]]],null,{\\\"statements\\\":[[0,\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"p\\\"],[9],[0,\\\"No results found\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[0,\\\"Vaccine Group\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[0,\\\"Due Date\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[0,\\\"Earliest date to give\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[0,\\\"Latest date to give\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"registryContent\\\",\\\"forecast\\\"]]],null,{\\\"statements\\\":[[0,\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe no-group\\\"],[9],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[1,[22,3,[\\\"vaccineGroup\\\"]],false],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[22,3,[\\\"dueDate\\\"]],\\\"MM/DD/YYYY\\\"],null],false],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[22,3,[\\\"earliestDateToGive\\\"]],\\\"MM/DD/YYYY\\\"],null],false],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[22,3,[\\\"latestDateToGive\\\"]],\\\"MM/DD/YYYY\\\"],null],false],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3,4]},null]],\\\"parameters\\\":[]}],[0,\\\"\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"\\\\t\\\\t\\\"],[7,\\\"h2\\\"],[11,\\\"class\\\",\\\"box-padding-Lmd\\\"],[9],[0,\\\"EHR Immunization Record \\\"],[1,[27,\\\"if\\\",[[23,[\\\"showComments\\\"]],\\\"(with comments)\\\"],null],false],[10],[0,\\\"\\\\n\\\"],[4,\\\"print-chart-section\\\",null,[[\\\"chartNote\\\",\\\"patientSummary\\\",\\\"title\\\",\\\"class\\\",\\\"includeHeaderAndFooter\\\",\\\"chartNotePrintInfo\\\"],[[23,[\\\"chartNote\\\"]],[23,[\\\"patient\\\"]],\\\"Immunizations\\\",\\\"chart-print-container\\\",true,[23,[\\\"chartNotePrintInfo\\\"]]]],{\\\"statements\\\":[[0,\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"immunizations-print-table table-content\\\"],[9],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table\\\"],[9],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showComments\\\"]]],null,{\\\"statements\\\":[[0,\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Vaccine Group\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Date Administered\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Age\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[0,\\\"Status\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[0,\\\"Comment\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-4\\\"],[9],[0,\\\"Vaccine Group\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[0,\\\"Date Administered\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Age\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[0,\\\"Status\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"content\\\"]]],null,{\\\"statements\\\":[[0,\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"immunization-group\\\"],[9],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row immunization-group-header no-stripe\\\"],[9],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[1,[22,1,[\\\"description\\\"]],false],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[22,1,[\\\"sortedVaccinations\\\"]]],null,{\\\"statements\\\":[[0,\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showComments\\\"]]],null,{\\\"statements\\\":[[0,\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[1,[22,2,[\\\"vaccineName\\\"]],false],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[1,[27,\\\"format-date-time\\\",[[22,2,[\\\"vaccinationDate\\\"]]],[[\\\"format\\\"],[\\\"MM/DD/YY\\\"]]],false],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[1,[27,\\\"age-on-date\\\",[[23,[\\\"patient\\\",\\\"birthDate\\\"]],[22,2,[\\\"vaccinationDate\\\"]],\\\"-\\\"],null],false],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"vaccination-source-type\\\"],[12,\\\"class\\\",[28,[[27,\\\"if\\\",[[22,2,[\\\"source\\\",\\\"isRefused\\\"]],\\\"is-refused\\\"],null]]]],[9],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[1,[22,2,[\\\"source\\\",\\\"sourceType\\\"]],false],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,2,[\\\"source\\\",\\\"isAdministered\\\"]]],null,{\\\"statements\\\":[[0,\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"vaccination-source-description\\\"],[9],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\tBy: \\\"],[1,[22,2,[\\\"administeredByProviderName\\\"]],false],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[22,2,[\\\"source\\\",\\\"isHistorical\\\"]]],null,{\\\"statements\\\":[[0,\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"vaccination-source-description\\\"],[9],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[1,[22,2,[\\\"source\\\",\\\"vaccinationSourceName\\\"]],false],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[22,2,[\\\"source\\\",\\\"isRefused\\\"]]],null,{\\\"statements\\\":[[0,\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"vaccination-source-description\\\"],[11,\\\"class\\\",\\\"is-refused\\\"],[9],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[1,[22,2,[\\\"rejectionReason\\\",\\\"rejectionReasonName\\\"]],false],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}],[0,\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[1,[22,2,[\\\"comment\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-4\\\"],[9],[1,[22,2,[\\\"vaccineName\\\"]],false],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[1,[27,\\\"format-date-time\\\",[[22,2,[\\\"vaccinationDate\\\"]]],[[\\\"format\\\"],[\\\"MM/DD/YY\\\"]]],false],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[1,[27,\\\"age-on-date\\\",[[23,[\\\"patient\\\",\\\"birthDate\\\"]],[22,2,[\\\"vaccinationDate\\\"]],\\\"-\\\"],null],false],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"vaccination-source-type\\\"],[12,\\\"class\\\",[28,[[27,\\\"if\\\",[[22,2,[\\\"source\\\",\\\"isRefused\\\"]],\\\"is-refused\\\"],null]]]],[9],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[1,[22,2,[\\\"source\\\",\\\"sourceType\\\"]],false],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,2,[\\\"source\\\",\\\"isAdministered\\\"]]],null,{\\\"statements\\\":[[0,\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"vaccination-source-description\\\"],[9],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\tBy: \\\"],[1,[22,2,[\\\"administeredByProviderName\\\"]],false],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[22,2,[\\\"source\\\",\\\"isHistorical\\\"]]],null,{\\\"statements\\\":[[0,\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"vaccination-source-description\\\"],[9],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[1,[22,2,[\\\"source\\\",\\\"vaccinationSourceName\\\"]],false],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[22,2,[\\\"source\\\",\\\"isRefused\\\"]]],null,{\\\"statements\\\":[[0,\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"vaccination-source-description\\\"],[11,\\\"class\\\",\\\"is-refused\\\"],[9],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[1,[22,2,[\\\"rejectionReason\\\",\\\"rejectionReasonName\\\"]],false],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}],[0,\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},{\\\"statements\\\":[[0,\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"No immunizations recorded for this patient.\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/print-immunizations.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/registry-results-forecast\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"KcUNSvSS\", \"block\": \"{\\\"symbols\\\":[\\\"table\\\",\\\"body\\\",\\\"vaccineGroup\\\",\\\"vaccineGroupIndex\\\",\\\"row\\\",\\\"vaccineGroup\\\",\\\"vaccineGroup\\\",\\\"vaccineGroup\\\",\\\"vaccineGroup\\\",\\\"header\\\"],\\\"statements\\\":[[4,\\\"data-table-v2\\\",null,[[\\\"content\\\",\\\"classNames\\\",\\\"data-element\\\",\\\"class\\\"],[[23,[\\\"model\\\"]],\\\"vaccine-data-table non-zebra-striped is-hoverable\\\",\\\"table-results-history\\\",[27,\\\"concat\\\",[[27,\\\"if\\\",[[23,[\\\"hasNoResults\\\"]],\\\"flex-no-shrink\\\",\\\"flex-stretch\\\"],null],\\\" \\\"],null]]],{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"header\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[1,[27,\\\"component\\\",[[22,10,[\\\"column\\\"]]],[[\\\"field\\\",\\\"title\\\"],[\\\"vaccineGroup\\\",\\\"Vaccine Group\\\"]]],false],[0,\\\"\\\\n        \\\"],[1,[27,\\\"component\\\",[[22,10,[\\\"column\\\"]]],[[\\\"field\\\",\\\"title\\\"],[\\\"dueDate\\\",\\\"Due date\\\"]]],false],[0,\\\"\\\\n        \\\"],[1,[27,\\\"component\\\",[[22,10,[\\\"column\\\"]]],[[\\\"field\\\",\\\"title\\\"],[\\\"earliestDateToGive\\\",\\\"Earliest date to give\\\"]]],false],[0,\\\"\\\\n        \\\"],[1,[27,\\\"component\\\",[[22,10,[\\\"column\\\"]]],[[\\\"field\\\",\\\"title\\\"],[\\\"latestDateToGive\\\",\\\"Latest date to give\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[10]},null],[4,\\\"component\\\",[[22,1,[\\\"body\\\"]]],null,{\\\"statements\\\":[[4,\\\"each\\\",[[22,1,[\\\"content\\\"]]],null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,2,[\\\"row\\\"]]],[[\\\"content\\\",\\\"data-element\\\"],[[22,3,[]],[27,\\\"concat\\\",[\\\"vaccine-\\\",[22,4,[]]],null]]],{\\\"statements\\\":[[4,\\\"component\\\",[[22,5,[\\\"cell\\\"]]],[[\\\"field\\\"],[\\\"vaccineGroup\\\"]],{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-left\\\"],[9],[1,[22,9,[\\\"vaccineGroup\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[9]},null],[4,\\\"component\\\",[[22,5,[\\\"cell\\\"]]],[[\\\"field\\\"],[\\\"dueDate\\\"]],{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-left\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[22,8,[\\\"dueDate\\\"]],\\\"MM/DD/YYYY\\\"],null],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[8]},null],[4,\\\"component\\\",[[22,5,[\\\"cell\\\"]]],[[\\\"field\\\"],[\\\"dueDate\\\"]],{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-left\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[22,7,[\\\"earliestDateToGive\\\"]],\\\"MM/DD/YYYY\\\"],null],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[7]},null],[4,\\\"component\\\",[[22,5,[\\\"cell\\\"]]],[[\\\"field\\\"],[\\\"dueDate\\\"]],{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-left\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[22,6,[\\\"latestDateToGive\\\"]],\\\"MM/DD/YYYY\\\"],null],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[6]},null]],\\\"parameters\\\":[5]},null]],\\\"parameters\\\":[3,4]},null]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[1]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"hasNoResults\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"h4\\\"],[9],[0,\\\"No results found\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/registry-results-forecast.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/registry-results-history\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"DsrSBAkc\", \"block\": \"{\\\"symbols\\\":[\\\"table\\\",\\\"vaccineGroup\\\",\\\"vaccineGroupIndex\\\",\\\"body\\\",\\\"vaccine\\\",\\\"index\\\",\\\"row\\\",\\\"vaccine\\\",\\\"vaccine\\\",\\\"vaccine\\\",\\\"vaccine\\\",\\\"vaccine\\\",\\\"header\\\"],\\\"statements\\\":[[4,\\\"data-table-v2\\\",null,[[\\\"content\\\",\\\"classNames\\\",\\\"data-element\\\",\\\"class\\\"],[[23,[\\\"model\\\"]],\\\"vaccine-data-table non-zebra-striped is-hoverable\\\",\\\"table-results-history\\\",[27,\\\"concat\\\",[[27,\\\"if\\\",[[23,[\\\"hasNoResults\\\"]],\\\"flex-no-shrink\\\",\\\"flex-stretch\\\"],null],\\\" \\\"],null]]],{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"header\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[1,[27,\\\"component\\\",[[22,13,[\\\"column\\\"]]],[[\\\"field\\\",\\\"title\\\"],[\\\"vaccineAdministered\\\",\\\"Vaccine Group\\\"]]],false],[0,\\\"\\\\n        \\\"],[1,[27,\\\"component\\\",[[22,13,[\\\"column\\\"]]],[[\\\"field\\\",\\\"title\\\"],[\\\"dateAdministered\\\",\\\"Date Administered\\\"]]],false],[0,\\\"\\\\n        \\\"],[1,[27,\\\"component\\\",[[22,13,[\\\"column\\\"]]],[[\\\"field\\\",\\\"title\\\"],[\\\"ageValue\\\",\\\"Age\\\"]]],false],[0,\\\"\\\\n        \\\"],[1,[27,\\\"component\\\",[[22,13,[\\\"column\\\"]]],[[\\\"field\\\",\\\"title\\\"],[\\\"isValidDose\\\",\\\"Valid dose\\\"]]],false],[0,\\\"\\\\n        \\\"],[1,[27,\\\"component\\\",[[22,13,[\\\"column\\\"]]],[[\\\"field\\\",\\\"title\\\"],[\\\"completionStatus\\\",\\\"Status\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[13]},null],[4,\\\"each\\\",[[22,1,[\\\"content\\\"]]],null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"body\\\"]]],[[\\\"data-element\\\"],[[27,\\\"concat\\\",[\\\"immunization-group-\\\",[22,3,[]]],null]]],{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"tr\\\"],[11,\\\"class\\\",\\\"table-group-header\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"td\\\"],[11,\\\"colspan\\\",\\\"5\\\"],[9],[1,[22,2,[\\\"name\\\"]],false],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[22,2,[\\\"vaccines\\\"]]],null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,4,[\\\"row\\\"]]],[[\\\"content\\\",\\\"data-element\\\"],[[22,5,[]],[27,\\\"concat\\\",[\\\"vaccine-\\\",[22,6,[]]],null]]],{\\\"statements\\\":[[4,\\\"component\\\",[[22,7,[\\\"cell\\\"]]],[[\\\"field\\\"],[\\\"vaccineAdministered\\\"]],{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-left\\\"],[9],[1,[22,12,[\\\"vaccineAdministered\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[12]},null],[4,\\\"component\\\",[[22,7,[\\\"cell\\\"]]],[[\\\"field\\\"],[\\\"dateAdministered\\\"]],{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-left\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[22,11,[\\\"dateAdministered\\\"]],\\\"MM/DD/YYYY\\\"],null],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[11]},null],[4,\\\"component\\\",[[22,7,[\\\"cell\\\"]]],[[\\\"field\\\"],[\\\"ageValue\\\"]],{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"vaccination-age\\\"],[11,\\\"class\\\",\\\"vaccine--no-wrap\\\"],[9],[0,\\\"\\\\n                            \\\"],[1,[27,\\\"age-on-date\\\",[[23,[\\\"patient\\\",\\\"birthDate\\\"]],[22,10,[\\\"dateAdministered\\\"]]],null],false],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[10]},null],[4,\\\"component\\\",[[22,7,[\\\"cell\\\"]]],[[\\\"field\\\"],[\\\"isValidDose\\\"]],{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-left\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[9],[1,[22,9,[\\\"isValidDose\\\"]],false],[10],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[9],[1,[22,9,[\\\"validityReason\\\"]],false],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[9]},null],[4,\\\"component\\\",[[22,7,[\\\"cell\\\"]]],[[\\\"field\\\"],[\\\"completionStatus\\\"]],{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-left\\\"],[9],[1,[22,8,[\\\"completionStatus\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[8]},null]],\\\"parameters\\\":[7]},null]],\\\"parameters\\\":[5,6]},null]],\\\"parameters\\\":[4]},null]],\\\"parameters\\\":[2,3]},null]],\\\"parameters\\\":[1]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"hasNoResults\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"h4\\\"],[9],[0,\\\"No results found\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/registry-results-history.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/registry-search-form\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"ntEcWlRl\", \"block\": \"{\\\"symbols\\\":[\\\"options\\\",\\\"options\\\",\\\"options\\\",\\\"options\\\",\\\"@toggleAdvanced\\\",\\\"@search\\\"],\\\"statements\\\":[[7,\\\"p\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[0,\\\"Please confirm or edit the information below that will be used to locate your patient's immunization history and forecast.\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2 box-padding-Tmd-v2\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-md\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"First name\\\"],[10],[0,\\\"\\\\n        \\\"],[1,[27,\\\"text-field\\\",null,[[\\\"value\\\",\\\"data-element\\\"],[[23,[\\\"model\\\",\\\"firstName\\\"]],\\\"txt-firstname\\\"]]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-md\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Middle name\\\"],[10],[0,\\\"\\\\n        \\\"],[1,[27,\\\"text-field\\\",null,[[\\\"value\\\",\\\"data-element\\\"],[[23,[\\\"model\\\",\\\"middleName\\\"]],\\\"txt-middlename\\\"]]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-md\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Last name\\\"],[10],[0,\\\"\\\\n        \\\"],[1,[27,\\\"text-field\\\",null,[[\\\"value\\\",\\\"data-element\\\"],[[23,[\\\"model\\\",\\\"lastName\\\"]],\\\"txt-lastname\\\"]]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-md box-fixed\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"DOB\\\"],[10],[0,\\\"\\\\n        \\\"],[1,[27,\\\"d-date-picker\\\",null,[[\\\"value\\\",\\\"isLegacy\\\",\\\"data-element\\\",\\\"isShorter\\\",\\\"startDate\\\"],[[23,[\\\"model\\\",\\\"dateOfBirth\\\"]],false,\\\"date-dob\\\",true,\\\"01/01/1900\\\"]]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-md box-fixed\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Sex\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"selection\\\",\\\"optionLabelPath\\\",\\\"onSelect\\\"],[[23,[\\\"genderOptions\\\"]],[23,[\\\"selectedGender\\\"]],\\\"gender\\\",[27,\\\"action\\\",[[22,0,[]],\\\"selectGender\\\"],null]]],{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"component\\\",[[22,4,[\\\"dropdown\\\"]]],[[\\\"prompt\\\"],[\\\"Select value\\\"]]],false],[0,\\\"\\\\n            \\\"],[1,[22,4,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[4]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-md\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Mother's maiden name\\\"],[10],[0,\\\"\\\\n        \\\"],[1,[27,\\\"text-field\\\",null,[[\\\"value\\\",\\\"data-element\\\"],[[23,[\\\"model\\\",\\\"mothersMaidenName\\\"]],\\\"txt-mothersmaidenname\\\"]]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"model\\\",\\\"mothersMaidenName\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-md box-fixed box-padding-Tmd-v2\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\" \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[9],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-clear\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"clearMaidenName\\\"],null]],[9],[10],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-md\\\"],[9],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"nav\\\"],[11,\\\"class\\\",\\\"box-margin-TBmd-v2\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--link\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],[22,5,[]]],null]],[9],[1,[21,\\\"toggleButtonText\\\"],false],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isAdvancedVisible\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-md box-fixed\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"PRN\\\"],[10],[0,\\\"\\\\n            \\\"],[1,[27,\\\"text-field\\\",null,[[\\\"value\\\",\\\"data-element\\\"],[[23,[\\\"model\\\",\\\"patientRecordNumber\\\"]],\\\"txt-prn\\\"]]],false],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"model\\\",\\\"patientRecordNumber\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-md box-fixed box-padding-Tmd-v2\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\" \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[9],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-clear\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"clearPatientRecordNumber\\\"],null]],[9],[10],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-md box-fixed\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Phone Number\\\"],[10],[0,\\\"\\\\n            \\\"],[1,[27,\\\"text-field-phone\\\",null,[[\\\"value\\\",\\\"data-element\\\"],[[23,[\\\"model\\\",\\\"phoneNumber\\\"]],\\\"txt-phone-number\\\"]]],false],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"model\\\",\\\"phoneNumber\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-md box-fixed box-padding-Tmd-v2\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\" \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[9],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-clear\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"clearPhoneNumber\\\"],null]],[9],[10],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-md\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Street address\\\"],[10],[0,\\\"\\\\n            \\\"],[1,[27,\\\"text-field\\\",null,[[\\\"value\\\",\\\"data-element\\\"],[[23,[\\\"model\\\",\\\"address1\\\"]],\\\"txt-address1\\\"]]],false],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"model\\\",\\\"address1\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-md\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Address line 2\\\"],[10],[0,\\\"\\\\n                \\\"],[1,[27,\\\"text-field\\\",null,[[\\\"value\\\",\\\"data-element\\\"],[[23,[\\\"model\\\",\\\"address2\\\"]],\\\"txt-address2\\\"]]],false],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-md box-fixed box-padding-Tmd-v2\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\" \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[9],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-clear\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"clearAddress\\\"],null]],[9],[10],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-md\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"City\\\"],[10],[0,\\\"\\\\n            \\\"],[1,[27,\\\"text-field\\\",null,[[\\\"value\\\",\\\"data-element\\\"],[[23,[\\\"model\\\",\\\"city\\\"]],\\\"txt-city\\\"]]],false],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-md box-fixed\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"State\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"selection\\\",\\\"optionLabelPath\\\",\\\"onSelect\\\"],[[23,[\\\"stateOptions\\\"]],[23,[\\\"selectedState\\\"]],\\\"state\\\",[27,\\\"action\\\",[[22,0,[]],\\\"selectState\\\"],null]]],{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"component\\\",[[22,3,[\\\"dropdown\\\"]]],[[\\\"prompt\\\"],[\\\"Select value\\\"]]],false],[0,\\\"\\\\n                \\\"],[1,[22,3,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-md box-fixed\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Zip\\\"],[10],[0,\\\"\\\\n            \\\"],[1,[27,\\\"text-field\\\",null,[[\\\"value\\\",\\\"data-element\\\"],[[23,[\\\"model\\\",\\\"postalCode\\\"]],\\\"txt-zip\\\"]]],false],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-md\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-md\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Multiple gestation\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"selection\\\",\\\"optionLabelPath\\\",\\\"optionValuePath\\\",\\\"onSelect\\\"],[[23,[\\\"gestationOptions\\\"]],[23,[\\\"selectedGestation\\\"]],\\\"display\\\",\\\"value\\\",[27,\\\"action\\\",[[22,0,[]],\\\"selectGestation\\\"],null]]],{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"component\\\",[[22,2,[\\\"dropdown\\\"]]],[[\\\"prompt\\\"],[\\\"Select value\\\"]]],false],[0,\\\"\\\\n                        \\\"],[1,[22,2,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"model\\\",\\\"isMultipleBirth\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-md\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Birth order\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"selection\\\",\\\"optionLabelPath\\\",\\\"optionValuePath\\\",\\\"onSelect\\\"],[[23,[\\\"birthOrderOptions\\\"]],[23,[\\\"selectedBirthOrder\\\"]],\\\"display\\\",\\\"value\\\",[27,\\\"action\\\",[[22,0,[]],\\\"selectBirthOrder\\\"],null]]],{\\\"statements\\\":[[0,\\\"                            \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"dropdown\\\"]]],[[\\\"prompt\\\"],[\\\"Select value\\\"]]],false],[0,\\\"\\\\n                            \\\"],[1,[22,1,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-md\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-md box-fixed box-padding-Tmd-v2\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"model\\\",\\\"isMultipleBirth\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\" \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-padding-Tsm-v2\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-clear\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"clearGestation\\\"],null]],[9],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[7,\\\"nav\\\"],[11,\\\"class\\\",\\\"box-margin-TBmd-v2\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--brand pull-left box-margin-TBmd-v2\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],[22,6,[]]],null]],[9],[0,\\\"Search\\\"],[10],[0,\\\"\\\\n\\\"],[10]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/registry-search-form.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/registry-search\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"3MyS1SPG\", \"block\": \"{\\\"symbols\\\":[\\\"options\\\"],\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isWaitingMessageVisible\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"section\\\"],[11,\\\"data-element\\\",\\\"query-waiting\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"h2\\\"],[9],[0,\\\"Request history & forecast\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"h3\\\"],[9],[0,\\\"Result is still loading\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"h4 box-padding-TBmd-v2\\\"],[9],[0,\\\"Your query has been sent. Stay on this screen to view the results, which may take up to two minutes to load.\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--link\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"cancelWait\\\"],null]],[9],[0,\\\"Cancel request\\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isSearchVisible\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"section\\\"],[11,\\\"data-element\\\",\\\"query-registry-selection\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"h2\\\"],[9],[0,\\\"Request history & forecast\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"error\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"query-registry-error\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon icon-urgent icon-color-error\\\"],[9],[10],[0,\\\" \\\"],[1,[23,[\\\"error\\\",\\\"errorMessage\\\"]],false],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"hasMultipleConnectedRegistries\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"h4\\\"],[9],[0,\\\"Available registries\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"selection\\\",\\\"optionLabelPath\\\"],[[23,[\\\"connectedRegistries\\\"]],[23,[\\\"selectedRegistry\\\"]],\\\"displayName\\\"]],{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"dropdown\\\"]]],[[\\\"prompt\\\"],[\\\"Select value\\\"]]],false],[0,\\\"\\\\n                    \\\"],[1,[22,1,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"h4\\\"],[9],[1,[23,[\\\"selectedRegistry\\\",\\\"displayName\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"h2\\\"],[9],[1,[23,[\\\"selectedRegistry\\\",\\\"displayName\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"    \\\"],[7,\\\"section\\\"],[11,\\\"data-element\\\",\\\"query-body\\\"],[12,\\\"class\\\",[28,[\\\"query-body \\\",[27,\\\"if\\\",[[23,[\\\"isSearchVisible\\\"]],\\\"with-registry-selector\\\"],null]]]],[9],[0,\\\"\\\\n        \\\"],[1,[27,\\\"component\\\",[\\\"immunizations/registry-search-form\\\"],[[\\\"isVisible\\\",\\\"model\\\",\\\"isAdvancedVisible\\\",\\\"toggleAdvanced\\\",\\\"search\\\"],[[23,[\\\"isSearchVisible\\\"]],[23,[\\\"patientFilters\\\"]],[23,[\\\"isAdvancedVisible\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"toggleAdvanced\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"search\\\"],null]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"isSearchVisible\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"section\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[11,\\\"data-element\\\",\\\"query-patient-summary-info\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-md box-fixed\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[0,\\\"Name:\\\"],[10],[0,\\\" \\\"],[7,\\\"span\\\"],[9],[1,[23,[\\\"searchResults\\\",\\\"patientFilters\\\",\\\"fullName\\\"]],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-md box-fixed\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[0,\\\"DOB:\\\"],[10],[0,\\\" \\\"],[7,\\\"span\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[23,[\\\"searchResults\\\",\\\"patientFilters\\\",\\\"dateOfBirth\\\"]],\\\"MM/DD/YYYY\\\"],null],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-md box-fixed\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[0,\\\"Sex:\\\"],[10],[0,\\\" \\\"],[7,\\\"span\\\"],[9],[1,[23,[\\\"searchResults\\\",\\\"patientFilters\\\",\\\"gender\\\"]],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-md box-fixed\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[0,\\\"PRN:\\\"],[10],[0,\\\" \\\"],[7,\\\"span\\\"],[9],[1,[23,[\\\"searchResults\\\",\\\"patientFilters\\\",\\\"patientRecordNumber\\\"]],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-md\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--link\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"toggleSearch\\\",true],null]],[9],[0,\\\"Edit search\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"nav\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[11,\\\"data-element\\\",\\\"query-result-view-links\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm box-fixed\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--link\\\"],[12,\\\"disabled\\\",[21,\\\"isHistoryVisible\\\"]],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"toggleResultsView\\\",\\\"history\\\"],null]],[9],[0,\\\"History\\\"],[10],[0,\\\" | \\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm box-fixed\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--link\\\"],[12,\\\"disabled\\\",[21,\\\"isForecastVisible\\\"]],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"toggleResultsView\\\",\\\"forecast\\\"],null]],[9],[0,\\\"Forecast\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isForecastVisible\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-lg\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[0,\\\"Schedule:\\\"],[10],[0,\\\" \\\"],[7,\\\"span\\\"],[9],[1,[23,[\\\"searchResults\\\",\\\"schedule\\\"]],false],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n            \\\"],[1,[27,\\\"component\\\",[\\\"immunizations/registry-results-history\\\"],[[\\\"isVisible\\\",\\\"model\\\",\\\"patient\\\"],[[23,[\\\"isHistoryVisible\\\"]],[23,[\\\"searchResults\\\",\\\"history\\\"]],[23,[\\\"patient\\\"]]]]],false],[0,\\\"\\\\n            \\\"],[1,[27,\\\"component\\\",[\\\"immunizations/registry-results-forecast\\\"],[[\\\"isVisible\\\",\\\"model\\\",\\\"patient\\\"],[[23,[\\\"isForecastVisible\\\"]],[23,[\\\"searchResults\\\",\\\"forecast\\\"]],[23,[\\\"patient\\\"]]]]],false],[0,\\\"\\\\n            \\\"],[1,[27,\\\"component\\\",[\\\"immunizations/print-immunizations\\\"],[[\\\"registryContent\\\",\\\"isVisible\\\",\\\"patient\\\",\\\"isRegistryRecord\\\",\\\"registryName\\\"],[[23,[\\\"searchResults\\\"]],[23,[\\\"printRegistryRecord\\\"]],[23,[\\\"patient\\\"]],true,[23,[\\\"selectedRegistry\\\",\\\"displayName\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/registry-search.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/transmission-errors\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"bwjBte6d\", \"block\": \"{\\\"symbols\\\":[\\\"error\\\"],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"transmission-errors-heading\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"toggleExpanded\\\"],null]],[9],[0,\\\"\\\\n    \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-urgent icon-color-error\\\"],[9],[10],[0,\\\" \\\"],[1,[21,\\\"errorCount\\\"],false],[0,\\\" \\\"],[1,[27,\\\"pluralize\\\",[[23,[\\\"errorCount\\\"]],\\\"error\\\",\\\"errors\\\"],null],false],[0,\\\" - The registry has indicated the following errors or warnings from the transmission on \\\"],[1,[21,\\\"date\\\"],false],[0,\\\".\\\\n    \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isExpanded\\\"]]],null,{\\\"statements\\\":[[0,\\\"            Minimize\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            Show \\\"],[1,[27,\\\"pluralize\\\",[[23,[\\\"errorCount\\\"]],\\\"error\\\",\\\"errors\\\"],null],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"transmission-errors-content\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"errors\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"transmission-error\\\"],[9],[1,[22,1,[\\\"errorMessage\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[10]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/transmission-errors.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/vis-edition\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"4kVPovxB\", \"block\": \"{\\\"symbols\\\":[\\\"options\\\",\\\"typeahead\\\",\\\"selection\\\",\\\"pill\\\"],\\\"statements\\\":[[7,\\\"label\\\"],[12,\\\"class\\\",[28,[\\\"field-label \\\",[27,\\\"if\\\",[[23,[\\\"isRequired\\\"]],\\\"required\\\"],null]]]],[9],[0,\\\"\\\\n    VIS edition\\\\n    \\\"],[4,\\\"if\\\",[[23,[\\\"vaccination\\\",\\\"visVersionDate\\\"]]],null,{\\\"statements\\\":[[0,\\\" (\\\"],[1,[27,\\\"format-date-time\\\",[[23,[\\\"vaccination\\\",\\\"visVersionDate\\\"]]],null],false],[0,\\\")\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"disabled\\\",\\\"errorMessage\\\",\\\"optionLabelPath\\\",\\\"optionValuePath\\\",\\\"selections\\\",\\\"onSelectMultiple\\\"],[[23,[\\\"visConcepts\\\"]],[23,[\\\"disabled\\\"]],[23,[\\\"errorMessage\\\"]],\\\"label\\\",\\\"id\\\",[23,[\\\"visConceptList\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"select\\\"],null]]],{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"typeahead-multi-select\\\"]]],[[\\\"shouldSearchOnFocus\\\"],[true]],{\\\"statements\\\":[[4,\\\"each\\\",[[22,2,[\\\"selections\\\"]]],null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,2,[\\\"pill\\\"]]],[[\\\"content\\\"],[[22,3,[]]]],{\\\"statements\\\":[[0,\\\"                \\\"],[1,[22,3,[\\\"label\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[4]},null]],\\\"parameters\\\":[3]},null],[0,\\\"        \\\"],[1,[22,2,[\\\"input\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"    \\\"],[1,[22,1,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/immunizations/vis-edition.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/interaction-alert-duplicate-therapies\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"AV5UDKl2\", \"block\": \"{\\\"symbols\\\":[\\\"group\\\",\\\"index\\\"],\\\"statements\\\":[[7,\\\"h4\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-triangle severitySevere\\\"],[9],[10],[0,\\\"\\\\n    \\\"],[7,\\\"a\\\"],[11,\\\"data-element\\\",\\\"duplicate-therapy-summary\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"toggleExpandDuplications\\\"]],[9],[1,[21,\\\"duplicateTherapySummaryText\\\"],false],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isDuplicationSummaryExpanded\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"panel-body-interaction\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"duplicateTherapyGroups\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label box-margin-Txs\\\"],[12,\\\"data-element\\\",[28,[\\\"alert-label-\\\",[22,2,[]]]]],[9],[1,[22,1,[\\\"alertLabel\\\"]],false],[10],[0,\\\"\\\\n            \\\"],[7,\\\"p\\\"],[12,\\\"data-element\\\",[28,[\\\"alert-text-\\\",[22,2,[]]]]],[9],[0,\\\"\\\\n                \\\"],[1,[22,1,[\\\"alertText\\\"]],false],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[22,1,[\\\"isAlertTextExpanded\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"show-more-less-toggle\\\"],[12,\\\"data-element\\\",[28,[\\\"alert-text-expand-\\\",[22,2,[]]]]],[3,\\\"action\\\",[[22,0,[]],\\\"toggleExpandDuplicationAlertText\\\",[22,1,[]]]],[9],[0,\\\"\\\\n                        Show more...\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"isAlertTextExpanded\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-margin-Bsm\\\"],[9],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"monograph-parser\\\",null,[[\\\"xmlData\\\"],[[22,1,[\\\"monograph\\\"]]]]],false],[0,\\\"\\\\n                    \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"show-more-less-toggle\\\"],[12,\\\"data-element\\\",[28,[\\\"alert-text-detail-expand-\\\",[22,2,[]]]]],[3,\\\"action\\\",[[22,0,[]],\\\"toggleExpandDuplicationAlertText\\\",[22,1,[]]]],[9],[0,\\\"\\\\n                        Show less...\\\\n                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1,2]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/interaction-alert-duplicate-therapies.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/interaction-alert-item\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"tlPTe5oc\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"h4\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"i\\\"],[12,\\\"class\\\",[28,[\\\"icon-triangle \\\",[21,\\\"severityClassName\\\"]]]],[9],[10],[0,\\\"\\\\n    \\\"],[7,\\\"a\\\"],[11,\\\"data-toggle\\\",\\\"collapse\\\"],[11,\\\"href\\\",\\\"#\\\"],[12,\\\"data-element\\\",[28,[\\\"drug-allergy-interaction-btn-\\\",[21,\\\"interactionIndex\\\"],\\\"-\\\",[21,\\\"drugIndex\\\"]]]],[3,\\\"action\\\",[[22,0,[]],\\\"toggleShowSummary\\\"]],[9],[0,\\\"\\\\n        \\\"],[1,[21,\\\"severityText\\\"],false],[0,\\\" \\\"],[1,[21,\\\"inteactionTypeText\\\"],false],[0,\\\": \\\"],[1,[21,\\\"drugOrAllergenText\\\"],false],[0,\\\" \\\"],[1,[23,[\\\"interaction\\\",\\\"reactions\\\"]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"drug\\\",\\\"patientMedication\\\",\\\"isHistorical\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[0,\\\"\\\\n            Stopped \\\"],[1,[27,\\\"datetime-formatted\\\",null,[[\\\"datetime\\\"],[[23,[\\\"drug\\\",\\\"patientMedication\\\",\\\"stopDateTime\\\"]]]]],false],[0,\\\", \\\"],[1,[23,[\\\"interaction\\\",\\\"latencyInDays\\\"]],false],[0,\\\"  \\\"],[1,[27,\\\"pluralize\\\",[[23,[\\\"latencyInDays\\\"]],\\\"day\\\",\\\"days\\\"],null],false],[0,\\\" latency.\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showSummary\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"panel-body-interaction\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n            \\\"],[1,[23,[\\\"interaction\\\",\\\"alertText\\\"]],false],[0,\\\"\\\\n            \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"show-more-less-toggle\\\"],[11,\\\"href\\\",\\\"#\\\"],[12,\\\"data-element\\\",[28,[\\\"drug-allergy-interaction-show-more-btn-\\\",[21,\\\"interactionIndex\\\"],\\\"-\\\",[21,\\\"drugIndex\\\"]]]],[3,\\\"action\\\",[[22,0,[]],\\\"toggleShowDetail\\\"]],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showDetail\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    Show less...\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                    Show more...\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showDetail\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                \\\"],[1,[27,\\\"monograph-parser\\\",null,[[\\\"xmlData\\\"],[[23,[\\\"interaction\\\",\\\"monograph\\\"]]]]],false],[0,\\\"\\\\n                \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"show-more-less-toggle\\\"],[11,\\\"href\\\",\\\"#\\\"],[12,\\\"data-element\\\",[28,[\\\"drug-allergy-interaction-show-more-btn-\\\",[21,\\\"interactionIndex\\\"],\\\"-\\\",[21,\\\"drugIndex\\\"]]]],[3,\\\"action\\\",[[22,0,[]],\\\"toggleShowDetail\\\"]],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showDetail\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        Show less...\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                        Show more...\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/interaction-alert-item.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/interaction-alerts\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"IcrcTkuv\", \"block\": \"{\\\"symbols\\\":[\\\"error\\\",\\\"interaction\\\",\\\"interactionIndex\\\",\\\"drug\\\",\\\"drugIndex\\\"],\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"medication\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Alerts\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isLoading\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"panel-group\\\"],[9],[0,\\\"Loading drug and allergy interaction alerts...\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"loadInteractionsFailed\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"p-red\\\"],[9],[0,\\\"Drug and allergy alerts check could not be performed.\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"hasNoInteraction\\\"]]],null,{\\\"statements\\\":[[0,\\\"            No drug or allergy alerts triggered for this medication.\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-margin-Bsm\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"duplicateTherapies\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"interaction-alert-duplicate-therapies\\\",null,[[\\\"duplicateTherapies\\\"],[[23,[\\\"duplicateTherapies\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"interactions\\\"]]],null,{\\\"statements\\\":[[4,\\\"each\\\",[[22,2,[\\\"drugsInvolved\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[27,\\\"interaction-alert-item\\\",null,[[\\\"drug\\\",\\\"interaction\\\",\\\"drugIndex\\\",\\\"interactionIndex\\\"],[[22,4,[]],[22,2,[]],[22,5,[]],[22,3,[]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[4,5]},null]],\\\"parameters\\\":[2,3]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"drugAlertErrors\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[9],[1,[22,1,[\\\"errorText\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"    \\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/interaction-alerts.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/medication-detail-duplicates\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"suy2Q95K\", \"block\": \"{\\\"symbols\\\":[\\\"duplicateMedication\\\"],\\\"statements\\\":[[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-urgent\\\"],[9],[10],[0,\\\"\\\\n\\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"p-semibold box-margin-Lxs\\\"],[11,\\\"data-element\\\",\\\"you-may-have-duplicates-warning-top-panel\\\"],[9],[0,\\\"\\\\n    You may have therapeutic duplications\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"list list-selectable\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"medicationDuplicates\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"li\\\"],[11,\\\"class\\\",\\\"inline-flex-group\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[11,\\\"data-element\\\",\\\"duplicate-medication-name\\\"],[3,\\\"action\\\",[[22,0,[]],[23,[\\\"editMedication\\\"]],[22,1,[]]]],[9],[0,\\\"\\\\n                    \\\"],[1,[22,1,[\\\"genericAndTradeName\\\"]],false],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"span\\\"],[11,\\\"data-element\\\",\\\"duplicate-medication-strength-route-doseform\\\"],[9],[0,\\\"\\\\n                    \\\"],[1,[22,1,[\\\"productStrength\\\"]],false],[0,\\\" \\\"],[1,[22,1,[\\\"route\\\"]],false],[0,\\\" \\\"],[1,[22,1,[\\\"doseForm\\\"]],false],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"sig\\\",\\\"patientDescription\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"hint-text\\\"],[11,\\\"data-element\\\",\\\"duplicate-medication-sig\\\"],[9],[0,\\\"\\\\n                        \\\"],[1,[22,1,[\\\"sig\\\",\\\"patientDescription\\\"]],false],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[22,1,[\\\"lastModifiedDateTimeUtc\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"small-666\\\"],[9],[0,\\\"Last modified:\\\\n                        \\\"],[1,[27,\\\"datetime-formatted\\\",null,[[\\\"datetime\\\",\\\"isSourceInUtc\\\",\\\"humanize\\\",\\\"data-element\\\"],[[22,1,[\\\"lastModifiedDateTimeUtc\\\"]],false,true,\\\"duplicate-medication-last-modified-datetime\\\"]]],false],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isEntitledToEditMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm box-fixed\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[11,\\\"data-element\\\",\\\"discontinue-duplicate-link\\\"],[3,\\\"action\\\",[[22,0,[]],[23,[\\\"discontinueDuplicate\\\"]],[22,1,[]]]],[9],[0,\\\"\\\\n                        Discontinue\\\\n                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isEditing\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"list\\\"],[9],[0,\\\"\\\\n\\\\n\\\"],[0,\\\"        \\\"],[7,\\\"li\\\"],[11,\\\"class\\\",\\\"inline-flex-group\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"span\\\"],[11,\\\"data-element\\\",\\\"medication-name\\\"],[9],[0,\\\"\\\\n                    \\\"],[1,[23,[\\\"newMedicationFromSearchResult\\\",\\\"fullGenericName\\\"]],false],[0,\\\" (viewing)\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"newMedicationFromSearchResult\\\",\\\"sig\\\",\\\"patientDescription\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"hint-text\\\"],[9],[1,[23,[\\\"newMedicationFromSearchResult\\\",\\\"sig\\\",\\\"patientDescription\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"newMedicationFromSearchResult\\\",\\\"lastModifiedDateTimeUtc\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"small-666\\\"],[9],[0,\\\"\\\\n                        Last modified:\\\\n                        \\\"],[1,[27,\\\"datetime-formatted\\\",null,[[\\\"datetime\\\",\\\"isSourceInUtc\\\",\\\"humanize\\\"],[[23,[\\\"newMedicationFromSearchResult\\\",\\\"lastModifiedDateTimeUtc\\\"]],false,true]]],false],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isEntitledToEditMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm box-fixed\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[3,\\\"action\\\",[[22,0,[]],[23,[\\\"doStopDateTimeToToday\\\"]]]],[9],[0,\\\"Discontinue\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/medication-detail-duplicates.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/medication-detail\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"YMUvRtIJ\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\",\\\"section\\\",\\\"right-module\\\",\\\"footer\\\",\\\"body\\\",\\\"prescription\\\",\\\"transcriptComment\\\",\\\"options\\\",\\\"toolbox\\\"],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"id\\\",\\\"medPane\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"detail-pane-v2\\\",null,[[\\\"classNames\\\"],[\\\"medication-detail\\\"]],{\\\"statements\\\":[[4,\\\"component\\\",[[22,2,[\\\"toolbox\\\"]]],[[\\\"isToolboxVisible\\\",\\\"isSlideOpenToolBox\\\"],[[23,[\\\"isToolboxVisible\\\"]],[23,[\\\"isFrequentMedsOpen\\\"]]]],{\\\"statements\\\":[[0,\\\"            \\\"],[15,\\\"medication-detail-pane-toolbox\\\",[2,9]],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[9]},null],[4,\\\"component\\\",[[22,2,[\\\"right-module\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"component\\\",[[22,3,[\\\"header\\\"]]],[[\\\"bigHeaderText\\\",\\\"smallHeaderText\\\",\\\"closeDetailPane\\\"],[[23,[\\\"bigHeaderText\\\"]],[23,[\\\"smallHeaderText\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"close\\\"],null]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,3,[\\\"body\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"id\\\",\\\"medPane-content\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"shouldShowDuplicateWarning\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"medication-detail-duplicates\\\",null,[[\\\"isEntitledToEditMedications\\\",\\\"newMedicationFromSearchResult\\\",\\\"isEditing\\\",\\\"discontinueDuplicate\\\",\\\"editMedication\\\",\\\"doStopDateTimeToToday\\\"],[[23,[\\\"isEntitledToEditMedications\\\"]],[23,[\\\"newMedicationFromSearchResult\\\"]],[23,[\\\"isEditing\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"discontinueDuplicate\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"editMedication\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"doStopDateTimeToToday\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"unless\\\",[[23,[\\\"isEditing\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isMedicationDeprecated\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"deprecation-choosenew-message\\\"],[9],[0,\\\"\\\\n                                Choose replacement medication for \\\\\\\"\\\"],[1,[23,[\\\"deprecatedMedication\\\",\\\"drugName\\\"]],false],[0,\\\"\\\\\\\"\\\\n                            \\\"],[10],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Medication\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"search-item form-group medication-search\\\"],[9],[0,\\\"\\\\n                            \\\"],[1,[27,\\\"medication-select\\\",null,[[\\\"isShorter\\\",\\\"select\\\",\\\"clearSearchOnFocus\\\",\\\"clearSearchOnSelect\\\",\\\"query\\\",\\\"addCustomItemTemplateText\\\",\\\"selectedLabel\\\",\\\"addItem\\\",\\\"data-element\\\"],[true,\\\"newMedicationSelected\\\",false,true,[23,[\\\"searchText\\\"]],\\\"Add custom med for \\\\\\\"%@\\\\\\\"\\\",[23,[\\\"searchText\\\"]],\\\"addCustomMedication\\\",\\\"medications-search\\\"]]],false],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"loadMedicationFailed\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[0,\\\"Can't load medication. Please\\\\n                            \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"loadMedication\\\"]],[9],[0,\\\"try again.\\\"],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"favorites\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"newMedicationFromSearchResult\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"header14\\\"],[11,\\\"data-element\\\",\\\"medication-detail-drug-name\\\"],[9],[0,\\\"\\\\n                                    \\\"],[1,[23,[\\\"newMedicationFromSearchResult\\\",\\\"drugName\\\"]],false],[0,\\\"\\\\n                                \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"controlledSubstanceSchedule\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"header14 lead-red\\\"],[11,\\\"data-test\\\",\\\"\\\"],[9],[0,\\\" (Schedule \\\"],[1,[21,\\\"controlledSubstanceSchedule\\\"],false],[0,\\\" drug)\\\"],[10],[0,\\\"\\\\n                                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                                \\\"],[1,[27,\\\"interaction-alerts\\\",null,[[\\\"patientGuid\\\",\\\"medication\\\"],[[23,[\\\"patientGuid\\\"]],[23,[\\\"newMedicationFromSearchResult\\\"]]]]],false],[0,\\\"\\\\n                            \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isEditing\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"RECORDED\\\"],[10],[0,\\\"\\\\n                                    \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                                        \\\"],[1,[21,\\\"recordedText\\\"],false],[0,\\\"   \\\"],[1,[23,[\\\"recordedProvider\\\",\\\"providerName\\\"]],false],[0,\\\"\\\\n                                    \\\"],[10],[0,\\\"\\\\n                                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"showProliaPanel\\\"]]],null,{\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"newMedicationAssessmentCardModel\\\",\\\"isDismissed\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"panel-container\\\"],[9],[0,\\\"\\\\n                                        \\\"],[1,[27,\\\"new-medication-assessment-card\\\",null,[[\\\"openAssessment\\\",\\\"patientPracticeGuid\\\",\\\"recorded\\\",\\\"reopenAssessment\\\",\\\"token\\\"],[[27,\\\"action\\\",[[22,0,[]],\\\"openAssessment\\\"],null],[23,[\\\"patientGuid\\\"]],\\\"newMedicationAssessmentCardRecorded\\\",[27,\\\"action\\\",[[22,0,[]],\\\"reopenAssessment\\\"],null],[23,[\\\"newMedicationAssessmentCardToken\\\"]]]]],false],[0,\\\"\\\\n                                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                            \\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null],[0,\\\"                    \\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"newMedicationFromSearchResult\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"sigSearch\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"SIG\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isEntitledToEditMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"search-item form-group\\\"],[9],[0,\\\"\\\\n                                    \\\"],[1,[27,\\\"medication-sig-typeahead\\\",null,[[\\\"content\\\",\\\"data-element\\\",\\\"disabled\\\",\\\"select\\\"],[[23,[\\\"sigResults\\\"]],\\\"sig-search\\\",[23,[\\\"disabled\\\"]],\\\"sigSelected\\\"]]],false],[0,\\\"\\\\n                                \\\"],[10],[0,\\\"\\\\n                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"sig-text form-group box-margin-Bsm\\\"],[9],[0,\\\"\\\\n                                    \\\"],[1,[27,\\\"text-area-counter\\\",null,[[\\\"dataElement\\\",\\\"errorMessage\\\",\\\"isDisabled\\\",\\\"isErrorHighlightingAutomatic\\\",\\\"isShorter\\\",\\\"maxlength\\\",\\\"placeholderText\\\",\\\"rows\\\",\\\"value\\\"],[\\\"sig-txt\\\",[23,[\\\"errors\\\",\\\"sigText\\\"]],[23,[\\\"disabled\\\"]],true,true,\\\"140\\\",\\\"Enter a sig for this medication\\\",\\\"3\\\",[23,[\\\"sigText\\\"]]]]],false],[0,\\\"\\\\n                                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                \\\"],[1,[27,\\\"text-with-empty-state\\\",null,[[\\\"text\\\",\\\"title\\\"],[[23,[\\\"sigText\\\"]],\\\"sig\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isEntitledToEditMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"composable-popover\\\",null,[[\\\"classNames\\\"],[\\\"item gutter-sm dismissible-help-message\\\"]],{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label box-margin-TBn\\\"],[9],[0,\\\"Dispense\\\"],[10],[0,\\\"\\\\n                                    \\\"],[1,[27,\\\"component\\\",[[22,8,[\\\"popover-target\\\"]]],[[\\\"tagName\\\",\\\"classNames\\\"],[\\\"i\\\",\\\"icon-info icon-slate-dark\\\"]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,8,[\\\"popover\\\"]]],[[\\\"popoverClass\\\"],[\\\"popover-prescription-benefits\\\"]],{\\\"statements\\\":[[0,\\\"                                        \\\"],[7,\\\"header\\\"],[9],[0,\\\"\\\\n                                            \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"icon-go-away pull-right\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],[22,8,[\\\"hidePopover\\\"]]],null]],[9],[10],[0,\\\"\\\\n                                            \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-info icon-slate-dark box-margin-Rxs\\\"],[9],[10],[0,\\\"\\\\n                                            \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"title\\\"],[9],[0,\\\"Enter quantity to see patient cost\\\"],[10],[0,\\\"\\\\n                                        \\\"],[10],[0,\\\"\\\\n                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"popover-content\\\"],[9],[0,\\\"\\\\n                                            Dispense, unit, and days supply must be entered to see real-time patient cost and cost-saving alternatives based on patient's coverage.\\\\n                                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                                    \\\"],[1,[27,\\\"erx-numeric-text-field\\\",null,[[\\\"value\\\",\\\"placeholderText\\\",\\\"classNames\\\",\\\"isShorter\\\",\\\"maxlength\\\",\\\"data-element\\\"],[[23,[\\\"quantity\\\"]],\\\"Quantity\\\",\\\"numeric quantity\\\",true,\\\"11\\\",\\\"quantity-txt\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[8]},null],[0,\\\"                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm\\\"],[9],[0,\\\"\\\\n                                    \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label box-margin-TBn\\\"],[9],[0,\\\"Unit\\\"],[10],[0,\\\"\\\\n                                    \\\"],[1,[27,\\\"rx-unit-select\\\",null,[[\\\"prompt\\\",\\\"optionLabelPath\\\",\\\"optionValuePath\\\",\\\"selectType\\\",\\\"query\\\",\\\"content\\\",\\\"selection\\\",\\\"clearSearchOnSelect\\\",\\\"clearSearchOnFocus\\\",\\\"openOnFocus\\\",\\\"tooltipMsg\\\",\\\"classNames\\\",\\\"data-element\\\",\\\"isShorter\\\",\\\"class\\\"],[\\\"Select Unit\\\",\\\"name\\\",\\\"ncitCode\\\",\\\"typeahead\\\",[23,[\\\"prescriptionUnitQuery\\\"]],[23,[\\\"prescriptionUnits\\\"]],[23,[\\\"selectedPrescriptionUnit\\\"]],false,true,true,[23,[\\\"errors\\\",\\\"selectedPrescriptionUnit\\\"]],\\\"rx-units\\\",\\\"doseForm-search\\\",true,[27,\\\"concat\\\",[[27,\\\"if\\\",[[23,[\\\"errors\\\",\\\"selectedPrescriptionUnit\\\"]],\\\"error\\\"],null],\\\" \\\"],null]]]],false],[0,\\\"\\\\n                                \\\"],[10],[0,\\\"\\\\n                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm\\\"],[9],[0,\\\"\\\\n                                    \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label box-margin-TBn\\\"],[9],[0,\\\"Days Supply\\\"],[10],[0,\\\"\\\\n                                    \\\"],[1,[27,\\\"erx-numeric-text-field\\\",null,[[\\\"value\\\",\\\"allowDecimals\\\",\\\"isShorter\\\",\\\"classNames\\\",\\\"maxlength\\\",\\\"data-element\\\"],[[23,[\\\"daysSupply\\\"]],false,true,\\\"numeric\\\",\\\"3\\\",\\\"daysSupply-txt\\\"]]],false],[0,\\\"\\\\n                                \\\"],[10],[0,\\\"\\\\n                            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"sigAssociatedDiagnosis\\\"],[11,\\\"data-element\\\",\\\"sigAssociatedDiagnosis\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"ASSOCIATED DIAGNOSIS\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"selectedDiagnosis\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"d-complex-list-container\\\"],[9],[0,\\\"\\\\n                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item\\\"],[9],[0,\\\"\\\\n                                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"long-word\\\"],[9],[1,[21,\\\"selectedDiagnosisText\\\"],false],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isEntitledToEditMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"close-box\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"removeAssociatedDiagnosis\\\"]],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                                    \\\"],[10],[0,\\\"\\\\n                                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isEntitledToEditMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"search-item form-group\\\"],[11,\\\"data-element\\\",\\\"associated-diagnosis\\\"],[9],[0,\\\"\\\\n                                    \\\"],[1,[27,\\\"single-select\\\",null,[[\\\"content\\\",\\\"data-element\\\",\\\"disabled\\\",\\\"includeSearchIcon\\\",\\\"isShorter\\\",\\\"openOnFocus\\\",\\\"optionLabelPath\\\",\\\"optionValuePath\\\",\\\"placeholder\\\",\\\"select\\\",\\\"selectType\\\"],[[23,[\\\"patientAssociatedDiagnoses\\\"]],\\\"diagnosis-search\\\",[23,[\\\"disabled\\\"]],true,true,true,\\\"name\\\",\\\"diagnosisGuid\\\",\\\"Search existing diagnoses for this patient\\\",\\\"selectedAssociatedDiag\\\",\\\"typeahead\\\"]]],false],[0,\\\"\\\\n                                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"div\\\"],[9],[0,\\\"No associated diagnosis\\\"],[10],[0,\\\"\\\\n                            \\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"id\\\",\\\"start-dates\\\"],[11,\\\"class\\\",\\\"encounter-date\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"START DATE\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isEntitledToEditMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[1,[27,\\\"d-date-picker\\\",null,[[\\\"isLegacy\\\",\\\"value\\\",\\\"placeholder\\\",\\\"disabled\\\",\\\"isValid\\\",\\\"autoCorrectYear\\\",\\\"data-element\\\",\\\"isShorter\\\"],[false,[23,[\\\"startDateTime\\\"]],\\\"MM/DD/YYYY\\\",[23,[\\\"disabled\\\"]],[23,[\\\"startDateIsValid\\\"]],true,\\\"start-date-txt\\\",true]]],false],[0,\\\"\\\\n                                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-sm\\\"],[11,\\\"data-element\\\",\\\"start-date-btn\\\"],[12,\\\"disabled\\\",[21,\\\"disabled\\\"]],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"doStartDateTimeToToday\\\"]],[9],[0,\\\"Today\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                \\\"],[1,[27,\\\"text-with-empty-state\\\",null,[[\\\"text\\\",\\\"title\\\"],[[23,[\\\"startDateTime\\\"]],\\\"start date\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"id\\\",\\\"start-stop\\\"],[11,\\\"class\\\",\\\"encounter-date stop-date\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"STOP DATE\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isEntitledToEditMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[1,[27,\\\"d-date-picker\\\",null,[[\\\"isLegacy\\\",\\\"value\\\",\\\"placeholder\\\",\\\"disabled\\\",\\\"isValid\\\",\\\"autoCorrectYear\\\",\\\"data-element\\\",\\\"isShorter\\\"],[false,[23,[\\\"stopDateTime\\\"]],\\\"MM/DD/YYYY\\\",[23,[\\\"disabled\\\"]],[23,[\\\"stopDateIsValid\\\"]],true,\\\"stop-date-txt\\\",true]]],false],[0,\\\"\\\\n                                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-sm\\\"],[11,\\\"data-element\\\",\\\"restart-btn\\\"],[12,\\\"disabled\\\",[21,\\\"disabled\\\"]],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"restartMedication\\\"]],[9],[1,[21,\\\"restartStopLabel\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                \\\"],[1,[27,\\\"text-with-empty-state\\\",null,[[\\\"text\\\",\\\"title\\\",\\\"class\\\"],[[23,[\\\"stopDateTime\\\"]],\\\"stop date\\\",\\\"box-margin-Txs\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"stopDateTime\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"showDiscontinuedWarning\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group box-margin-Tmd-v2\\\"],[9],[0,\\\"\\\\n                                    \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon icon-info\\\"],[9],[10],[0,\\\"\\\\n                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"flex-grow box-padding-Lsm-v2\\\"],[11,\\\"data-element\\\",\\\"discontinue-warning\\\"],[9],[0,\\\"\\\\n                                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[0,\\\"This action will not cancel associated prescriptions.\\\"],[10],[0,\\\"\\\\n                                        \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"https://help.practicefusion.com/s/article/How-do-I-cancel-an-eRx-request\\\"],[11,\\\"target\\\",\\\"_blank\\\"],[9],[0,\\\"Learn more about cancelling Rx\\\"],[10],[0,\\\"\\\\n                                    \\\"],[10],[0,\\\"\\\\n                                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                            \\\"],[7,\\\"div\\\"],[11,\\\"id\\\",\\\"start-stop\\\"],[11,\\\"class\\\",\\\"form-group encounter-date\\\"],[9],[0,\\\"\\\\n                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"DISCONTINUE REASON\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isEntitledToEditMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[1,[27,\\\"single-select\\\",null,[[\\\"class\\\",\\\"content\\\",\\\"data-element\\\",\\\"disabled\\\",\\\"optionLabelPath\\\",\\\"selection\\\"],[\\\"dropup full-width\\\",[23,[\\\"medicationDiscontinuedReasons\\\"]],\\\"medication-discontinued-reason-search\\\",[23,[\\\"disabled\\\"]],\\\"description\\\",[23,[\\\"selectedMedicationDiscontinuedReason\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"div\\\"],[9],[1,[21,\\\"selectedMedicationDiscontinuedReason\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"MEDICATION COMMENT\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isEntitledToEditMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"sig-text form-group\\\"],[9],[0,\\\"\\\\n                                    \\\"],[1,[27,\\\"text-area-counter\\\",null,[[\\\"dataElement\\\",\\\"errorMessage\\\",\\\"isDisabled\\\",\\\"isErrorHighlightingAutomatic\\\",\\\"isShorter\\\",\\\"maxlength\\\",\\\"placeholderText\\\",\\\"rows\\\",\\\"value\\\"],[\\\"medication-comment-txt\\\",[23,[\\\"errors\\\",\\\"medicationComment\\\"]],[23,[\\\"disabled\\\"]],true,true,\\\"500\\\",\\\"Enter a comment about this medication\\\",\\\"3\\\",[23,[\\\"medicationComment\\\"]]]]],false],[0,\\\"\\\\n                                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                \\\"],[1,[27,\\\"text-with-empty-state\\\",null,[[\\\"text\\\",\\\"title\\\",\\\"class\\\"],[[23,[\\\"medicationComment\\\"]],\\\"medication comment\\\",\\\"box-margin-Bsm\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"canToggleAttachToEncounter\\\"]]],null,{\\\"statements\\\":[[4,\\\"d-check-box\\\",null,[[\\\"checked\\\",\\\"disabled\\\",\\\"data-element\\\"],[[23,[\\\"attachToEncounter\\\"]],[23,[\\\"disabledOrNotEntitled\\\"]],\\\"attachToEncounter-ck\\\"]],{\\\"statements\\\":[[0,\\\"                                Attach medication to this encounter\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"attachToEncounter\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"COMMENT FOR THIS ENCOUNTER\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isEntitledToEditMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"sig-text form-group\\\"],[9],[0,\\\"\\\\n                                        \\\"],[1,[27,\\\"text-area-counter\\\",null,[[\\\"value\\\",\\\"placeholderText\\\",\\\"maxlength\\\",\\\"rows\\\",\\\"isDisabled\\\",\\\"dataElement\\\",\\\"isShorter\\\"],[[23,[\\\"encounterComment\\\"]],\\\"Enter a comment about this medication for the current encounter\\\",\\\"500\\\",\\\"3\\\",[23,[\\\"disabled\\\"]],\\\"encounter-comment-txt\\\",true]]],false],[0,\\\"\\\\n                                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                    \\\"],[1,[27,\\\"text-with-empty-state\\\",null,[[\\\"text\\\",\\\"title\\\"],[[23,[\\\"encounterComment\\\"]],\\\"comment for this encounter\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"newMedicationFromSearchResult\\\",\\\"encounterCommentsWithComment\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"d-complex-list-container\\\"],[9],[0,\\\"\\\\n                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"ENCOUNTER COMMENTS\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"newMedicationFromSearchResult\\\",\\\"encounterCommentsWithComment\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item\\\"],[9],[0,\\\"\\\\n                                        \\\"],[1,[27,\\\"transcript-comment\\\",null,[[\\\"transcriptComment\\\",\\\"patientPracticeGuid\\\"],[[22,7,[]],[23,[\\\"patientGuid\\\"]]]]],false],[0,\\\"\\\\n                                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[7]},null],[0,\\\"                            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"sortedPrescriptions\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"d-complex-list-container\\\"],[9],[0,\\\"\\\\n                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"PRESCRIPTIONS\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"sortedPrescriptions\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"goToPrescriptionDetails\\\",[22,6,[]]]],[9],[0,\\\"\\\\n                                        \\\"],[1,[27,\\\"prescription-item\\\",null,[[\\\"prescription\\\",\\\"erxProviders\\\"],[[22,6,[]],[23,[\\\"erxProviders\\\"]]]]],false],[0,\\\"\\\\n                                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[6]},null],[0,\\\"                            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"patientEducation d-complex-list-container\\\"],[11,\\\"data-element\\\",\\\"resources-section\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"RESOURCES\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"newMedicationFromSearchResult\\\",\\\"ndc\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item\\\"],[9],[0,\\\"\\\\n                                        \\\"],[1,[27,\\\"patient-education-link\\\",null,[[\\\"code\\\",\\\"searchString\\\",\\\"patientPracticeGuid\\\"],[[23,[\\\"newMedicationFromSearchResult\\\",\\\"ndc\\\"]],[23,[\\\"newMedicationFromSearchResult\\\",\\\"tradeName\\\"]],[23,[\\\"patientGuid\\\"]]]]],false],[0,\\\"\\\\n                                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[5]},null],[4,\\\"component\\\",[[22,3,[\\\"footer\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[15,\\\"medication-detail-pane-footer\\\",[2,3,4]],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[4]},null]],\\\"parameters\\\":[3]},null]],\\\"parameters\\\":[2]},null],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"content-modal\\\",null,[[\\\"modalStyle\\\",\\\"isVisible\\\",\\\"isCloseByXorOutsideVisible\\\"],[7,[23,[\\\"showDeprecatedMedicationWarning\\\"]],true]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"header\\\"]]],[[\\\"title\\\",\\\"notifyCloseByX\\\"],[\\\"Medication not available\\\",[27,\\\"action\\\",[[22,0,[]],\\\"closeDeprecatedMedicationWarning\\\"],null]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,1,[\\\"body\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"p\\\"],[9],[0,\\\"The medication you selected is outdated or no longer available. Please select a new medication to continue.\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"deprecation-popup-link\\\"],[12,\\\"href\\\",[23,[\\\"config\\\",\\\"erxDeprecationHelpUrl\\\"]]],[11,\\\"target\\\",\\\"_blank\\\"],[9],[0,\\\"Why am I seeing this?\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"footer\\\"]]],[[\\\"buttonRightSecondaryText\\\",\\\"buttonRightPrimaryText\\\",\\\"buttonRightSecondaryAction\\\",\\\"buttonRightPrimaryAction\\\"],[\\\"Cancel\\\",\\\"Choose new\\\",[27,\\\"action\\\",[[22,0,[]],\\\"closeDeprecatedMedicationWarning\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"chooseNewMedication\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":true}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/medication-detail.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/medication-typeahead-item\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"uVOZcTHQ\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"option-description\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"selectSingleOption\\\"],null]],[9],[1,[21,\\\"description\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/medication-typeahead-item.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/medications-flyout\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"nxCTVx1T\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"navbar navbar-secondary\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"nav\\\"],[9],[0,\\\"\\\\n      \\\"],[7,\\\"li\\\"],[12,\\\"class\\\",[28,[[27,\\\"if\\\",[[23,[\\\"frequentMedsSelected\\\"]],\\\"active\\\"],null]]]],[11,\\\"data-element\\\",\\\"medications-tab-frequent\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"setCurrentTab\\\",\\\"frequent-meds\\\"]],[9],[0,\\\"Frequent\\\"],[10],[0,\\\"\\\\n      \\\"],[7,\\\"li\\\"],[12,\\\"class\\\",[28,[[27,\\\"if\\\",[[23,[\\\"previousMedsSelected\\\"]],\\\"active\\\"],null]]]],[11,\\\"data-element\\\",\\\"medications-tab-previous\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"setCurrentTab\\\",\\\"previous-meds\\\"]],[9],[0,\\\"Previous\\\"],[10],[0,\\\"\\\\n      \\\"],[7,\\\"li\\\"],[11,\\\"data-element\\\",\\\"medications-tab-record\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"recordMedication\\\"]],[9],[0,\\\"Record\\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"previousMedsSelected\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"previous-medication\\\",null,[[\\\"patientGuid\\\",\\\"transcriptGuid\\\",\\\"selectMedication\\\",\\\"deselectMedication\\\",\\\"removeMedication\\\",\\\"saveError\\\"],[[23,[\\\"patientGuid\\\"]],[23,[\\\"transcriptGuid\\\"]],\\\"selectMedication\\\",\\\"removeMedication\\\",\\\"removeMedication\\\",\\\"saveError\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"frequent-medications\\\",null,[[\\\"hideFilter\\\",\\\"selectMedication\\\"],[true,\\\"selectMedication\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/medications-flyout.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/medications-grid\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"AKguoyx6\", \"block\": \"{\\\"symbols\\\":[\\\"medication\\\",\\\"medication\\\",\\\"medication\\\",\\\"medication\\\",\\\"medication\\\",\\\"medication\\\",\\\"medication\\\",\\\"medication\\\",\\\"medication\\\",\\\"medication\\\",\\\"medication\\\",\\\"medication\\\",\\\"medication\\\",\\\"medication\\\"],\\\"statements\\\":[[7,\\\"section\\\"],[11,\\\"class\\\",\\\"medications\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"heading\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"span\\\"],[9],[0,\\\"\\\\n              \\\"],[7,\\\"h3\\\"],[9],[0,\\\"Medications\\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"canRecordMedication\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"btn heading-action\\\"],[11,\\\"data-element\\\",\\\"encounter-record-medication-btn\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"recordMedication\\\"]],[9],[0,\\\"Record\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"medications\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"med-grid-checkbox-dropdown\\\"],[9],[0,\\\"\\\\n                \\\"],[1,[27,\\\"d-checkbox-dropdown-grouping\\\",null,[[\\\"menuLabel\\\",\\\"dropdownItems\\\",\\\"selections\\\"],[\\\"Show\\\",[23,[\\\"showOptions\\\"]],[23,[\\\"medicationColumnItemsSelection\\\"]]]]],false],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[1,[27,\\\"print-dropdown\\\",null,[[\\\"data-element\\\",\\\"options\\\",\\\"print\\\"],[\\\"medication-print-preview\\\",[23,[\\\"printOptions\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"selectPrintOption\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"section\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isLoading\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"medications--content\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"p\\\"],[9],[0,\\\"Loading medications...\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"medicationsError\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"medications--content\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[0,\\\"Can't load medications. Please\\\\n                    \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"reloadMedications\\\"]],[9],[0,\\\"try again.\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"medications\\\",\\\"groupOfDuplicates\\\"]]],null,{\\\"statements\\\":[[4,\\\"popover-info\\\",null,[[\\\"popoverContent\\\",\\\"classNames\\\",\\\"popoverClass\\\",\\\"tagName\\\",\\\"triggerOn\\\",\\\"placement\\\"],[\\\"Select a medication to reconcile therapeutic duplications.\\\",\\\"duplicate-medications-alert\\\",\\\"duplicate-medications-alert-popover\\\",\\\"div\\\",\\\"hover\\\",\\\"right\\\"]],{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"span\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-urgent\\\"],[11,\\\"data-element\\\",\\\"duplicate-medication-icon-on-encounter\\\"],[9],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"p-semibold\\\"],[11,\\\"data-element\\\",\\\"duplicate-medication-warning-on-encounter\\\"],[9],[0,\\\"\\\\n                            You may have therapeutic duplications (\\\"],[1,[23,[\\\"medications\\\",\\\"groupOfDuplicates\\\",\\\"length\\\"]],false],[0,\\\")\\\\n                        \\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"hasErxOrderDrafts\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-margin-Lmd box-margin-Bmd-v2\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-pending icon-slate-dark\\\"],[9],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"p-semibold\\\"],[11,\\\"data-element\\\",\\\"prescription-drafts\\\"],[9],[1,[21,\\\"erxOrderDraftCount\\\"],false],[0,\\\" prescription \\\"],[1,[27,\\\"pluralize\\\",[[23,[\\\"erxOrderDraftCount\\\"]],\\\"draft\\\",\\\"drafts\\\"],null],false],[10],[0,\\\"\\\\n                    \\\"],[4,\\\"link-to\\\",[\\\"timeline.events\\\",[23,[\\\"patientGuid\\\"]],\\\"erx-order\\\"],[[\\\"class\\\"],[\\\"box-margin-Lmd-v2\\\"]],{\\\"statements\\\":[[0,\\\"View\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"activePatientMedications\\\"]]],null,{\\\"statements\\\":[[4,\\\"data-grid\\\",null,[[\\\"content\\\",\\\"class\\\",\\\"height\\\",\\\"sortProperty\\\",\\\"sortAscending\\\",\\\"selectedItem\\\"],[[23,[\\\"activePatientMedications\\\"]],\\\"medications-grid medications--content\\\",\\\"300px\\\",[23,[\\\"activeGridPreferences\\\",\\\"sortProperty\\\"]],[23,[\\\"activeGridPreferences\\\",\\\"sortAscending\\\"]],[23,[\\\"selectedMedication\\\"]]]],{\\\"statements\\\":[[4,\\\"data-grid-column\\\",null,[[\\\"field\\\",\\\"title\\\",\\\"isFrozen\\\",\\\"width\\\"],[\\\"fullGenericName\\\",\\\"Name\\\",\\\"true\\\",\\\"300px\\\"]],{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"editMedication\\\",[22,14,[]]]],[9],[0,\\\"\\\\n                            \\\"],[1,[22,14,[\\\"genericAndTradeName\\\"]],false],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n                        \\\"],[1,[22,14,[\\\"productStrength\\\"]],false],[0,\\\" \\\"],[1,[22,14,[\\\"route\\\"]],false],[0,\\\" \\\"],[1,[22,14,[\\\"doseForm\\\"]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,14,[\\\"hasProliaPermanentPlacelink\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[22,14,[\\\"duplicates\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"duplicate-medication-text\\\"],[11,\\\"data-element\\\",\\\"duplicate-medication-text--shortened-on-encounter\\\"],[9],[0,\\\"\\\\n                                    (Duplicate)\\\\n                                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"isEntitledToEditMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"br\\\"],[9],[10],[0,\\\"\\\\n                                \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"prolia-modal-open-link\\\"],[11,\\\"data-element\\\",\\\"prolia-permanent-link\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"openAssessment\\\",\\\"proliaAesiModal\\\"],null]],[9],[0,\\\"Record adverse events for Prolia safety\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[22,14,[\\\"duplicates\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"duplicate-medication-text\\\"],[11,\\\"data-element\\\",\\\"duplicate-medication-text-on-encounter\\\"],[9],[0,\\\"\\\\n                                    (Duplicate therapy)\\\\n                                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[14]},null],[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"data-grid-scroll\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"data-grid-column\\\",null,[[\\\"field\\\",\\\"title\\\",\\\"width\\\"],[\\\"sig.patientDescription\\\",\\\"Sig\\\",\\\"250px\\\"]],{\\\"statements\\\":[[0,\\\"                            \\\"],[1,[27,\\\"dash-if-null\\\",[[22,13,[\\\"sig\\\",\\\"patientDescription\\\"]]],null],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[13]},null],[4,\\\"data-grid-column\\\",null,[[\\\"field\\\",\\\"title\\\",\\\"width\\\"],[\\\"startDateTime\\\",\\\"Start\\\",\\\"100px\\\"]],{\\\"statements\\\":[[4,\\\"if\\\",[[22,12,[\\\"startDateTime\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[1,[27,\\\"format-date-time-local\\\",[[22,12,[\\\"startDateTime\\\"]]],[[\\\"format\\\"],[\\\"MM/DD/YY\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                -\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[12]},null],[4,\\\"data-grid-column\\\",null,[[\\\"field\\\",\\\"isSortable\\\",\\\"title\\\",\\\"width\\\",\\\"shown\\\"],[\\\"medicationComment\\\",false,\\\"Medication Comment\\\",\\\"300px\\\",[23,[\\\"showMedicationComments\\\"]]]],{\\\"statements\\\":[[4,\\\"if\\\",[[22,11,[\\\"medicationComment\\\",\\\"comment\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[1,[27,\\\"transcript-comment\\\",null,[[\\\"transcriptComment\\\",\\\"isCollapsible\\\"],[[22,11,[\\\"medicationComment\\\"]],false]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                -\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[11]},null],[4,\\\"data-grid-column\\\",null,[[\\\"field\\\",\\\"isSortable\\\",\\\"title\\\",\\\"width\\\",\\\"shown\\\"],[\\\"encounterCommentsWithComment\\\",false,\\\"Encounter Comments\\\",\\\"300px\\\",[23,[\\\"showEncounterComments\\\"]]]],{\\\"statements\\\":[[0,\\\"                            \\\"],[1,[27,\\\"transcript-comments\\\",null,[[\\\"items\\\",\\\"emptyPlaceHolder\\\",\\\"patientPracticeGuid\\\",\\\"isCollapsible\\\"],[[22,10,[\\\"encounterCommentsWithComment\\\"]],\\\"-\\\",[22,10,[\\\"patientPracticeGuid\\\"]],false]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[10]},null],[0,\\\"\\\\n\\\"],[4,\\\"data-grid-column\\\",null,[[\\\"field\\\",\\\"isSortable\\\",\\\"title\\\",\\\"width\\\",\\\"shown\\\"],[\\\"diagnosis\\\",false,\\\"Diagnosis\\\",\\\"300px\\\",[23,[\\\"showDiagnosis\\\"]]]],{\\\"statements\\\":[[4,\\\"if\\\",[[22,9,[\\\"diagnosis\\\",\\\"isPending\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                ...\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[22,9,[\\\"diagnosis\\\",\\\"description\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[1,[22,9,[\\\"diagnosis\\\",\\\"description\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                    -\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[9]},null],[0,\\\"\\\\n\\\"],[4,\\\"data-grid-column\\\",null,[[\\\"field\\\",\\\"isSortable\\\",\\\"title\\\",\\\"width\\\",\\\"shown\\\"],[\\\"prescriptions\\\",false,\\\"Prescriptions\\\",\\\"300px\\\",[23,[\\\"showPrescriptions\\\"]]]],{\\\"statements\\\":[[0,\\\"                            \\\"],[1,[27,\\\"prescriptions-list\\\",null,[[\\\"items\\\",\\\"emptyPlaceHolder\\\"],[[22,8,[\\\"prescriptions\\\"]],\\\"-\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[8]},null],[0,\\\"                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isEntitledToEditMedications\\\"]]],null,{\\\"statements\\\":[[4,\\\"d-check-box\\\",null,[[\\\"checked\\\",\\\"disabled\\\",\\\"classNames\\\"],[[23,[\\\"isNoKnownChecked\\\"]],[23,[\\\"isLoadingNoKnown\\\"]],\\\"noKnowCheckBox\\\"]],{\\\"statements\\\":[[0,\\\"                    Patient has no active medications\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isNoKnownChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-margin-Lmd\\\"],[9],[0,\\\"Patient has no active medications\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"text-charcoal-light box-margin-Lmd\\\"],[9],[0,\\\"No active medications recorded\\\"],[10],[0,\\\"\\\\n            \\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"historicalPatientMedications\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"historicalMedicationsVisible\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"p\\\"],[9],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"h3\\\"],[11,\\\"class\\\",\\\"header3b\\\"],[9],[0,\\\"Historical medications\\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"section-group\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"data-grid\\\",null,[[\\\"content\\\",\\\"class\\\",\\\"height\\\",\\\"sortProperty\\\",\\\"sortAscending\\\",\\\"selectedItem\\\"],[[23,[\\\"historicalPatientMedications\\\"]],\\\"medications-grid medications--content\\\",\\\"300px\\\",[23,[\\\"historicalGridPreferences\\\",\\\"sortProperty\\\"]],[23,[\\\"historicalGridPreferences\\\",\\\"sortAscending\\\"]],[23,[\\\"selectedMedication\\\"]]]],{\\\"statements\\\":[[4,\\\"data-grid-column\\\",null,[[\\\"field\\\",\\\"title\\\",\\\"isFrozen\\\",\\\"width\\\"],[\\\"fullGenericName\\\",\\\"Name\\\",\\\"true\\\",\\\"300px\\\"]],{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"editMedication\\\",[22,7,[]]]],[9],[0,\\\"\\\\n                                    \\\"],[1,[22,7,[\\\"genericAndTradeName\\\"]],false],[0,\\\"\\\\n                                \\\"],[10],[0,\\\"\\\\n                                \\\"],[1,[22,7,[\\\"productStrength\\\"]],false],[0,\\\" \\\"],[1,[22,7,[\\\"route\\\"]],false],[0,\\\" \\\"],[1,[22,7,[\\\"doseForm\\\"]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,7,[\\\"hasProliaPermanentPlacelink\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isEntitledToEditMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                        \\\"],[7,\\\"br\\\"],[9],[10],[0,\\\"\\\\n                                        \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"prolia-modal-open-link\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"openAssessment\\\",\\\"proliaAesiModal\\\"],null]],[9],[0,\\\"Record adverse events for Prolia safety\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[7]},null],[0,\\\"                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"data-grid-scroll\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"data-grid-column\\\",null,[[\\\"field\\\",\\\"title\\\",\\\"width\\\"],[\\\"sig.patientDescription\\\",\\\"Sig\\\",\\\"250px\\\"]],{\\\"statements\\\":[[0,\\\"                                    \\\"],[1,[27,\\\"dash-if-null\\\",[[22,6,[\\\"sig\\\",\\\"patientDescription\\\"]]],null],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[6]},null],[4,\\\"data-grid-column\\\",null,[[\\\"field\\\",\\\"title\\\",\\\"width\\\"],[\\\"stopDateTime\\\",\\\"Stop\\\",\\\"100px\\\"]],{\\\"statements\\\":[[4,\\\"if\\\",[[22,5,[\\\"stopDateTime\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                        \\\"],[1,[27,\\\"format-date-time-local\\\",[[22,5,[\\\"stopDateTime\\\"]]],[[\\\"format\\\"],[\\\"MM/DD/YY\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                        -\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[5]},null],[4,\\\"data-grid-column\\\",null,[[\\\"field\\\",\\\"isSortable\\\",\\\"title\\\",\\\"width\\\",\\\"shown\\\"],[\\\"medicationComment\\\",false,\\\"Medication Comment\\\",\\\"300px\\\",[23,[\\\"showMedicationComments\\\"]]]],{\\\"statements\\\":[[4,\\\"if\\\",[[22,4,[\\\"medicationComment\\\",\\\"comment\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                        \\\"],[1,[27,\\\"transcript-comment\\\",null,[[\\\"transcriptComment\\\",\\\"isCollapsible\\\"],[[22,4,[\\\"medicationComment\\\"]],false]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                        -\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[4]},null],[0,\\\"\\\\n\\\"],[4,\\\"data-grid-column\\\",null,[[\\\"field\\\",\\\"isSortable\\\",\\\"title\\\",\\\"width\\\",\\\"shown\\\"],[\\\"encounterCommentsWithComment\\\",false,\\\"Encounter Comments\\\",\\\"300px\\\",[23,[\\\"showEncounterComments\\\"]]]],{\\\"statements\\\":[[0,\\\"                                    \\\"],[1,[27,\\\"transcript-comments\\\",null,[[\\\"items\\\",\\\"emptyPlaceHolder\\\",\\\"patientPracticeGuid\\\",\\\"isCollapsible\\\"],[[22,3,[\\\"encounterCommentsWithComment\\\"]],\\\"-\\\",[22,3,[\\\"patientPracticeGuid\\\"]],false]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3]},null],[0,\\\"\\\\n\\\"],[4,\\\"data-grid-column\\\",null,[[\\\"field\\\",\\\"isSortable\\\",\\\"title\\\",\\\"width\\\",\\\"shown\\\"],[\\\"diagnosis\\\",false,\\\"Diagnosis\\\",\\\"300px\\\",[23,[\\\"showDiagnosis\\\"]]]],{\\\"statements\\\":[[4,\\\"if\\\",[[22,2,[\\\"diagnosis\\\",\\\"isPending\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                        ...\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[22,2,[\\\"diagnosis\\\",\\\"description\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                            \\\"],[1,[22,2,[\\\"diagnosis\\\",\\\"description\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                            -\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[2]},null],[0,\\\"\\\\n\\\"],[4,\\\"data-grid-column\\\",null,[[\\\"field\\\",\\\"isSortable\\\",\\\"title\\\",\\\"width\\\",\\\"shown\\\"],[\\\"prescriptions\\\",false,\\\"Prescriptions\\\",\\\"300px\\\",[23,[\\\"showPrescriptions\\\"]]]],{\\\"statements\\\":[[0,\\\"                                    \\\"],[1,[27,\\\"prescriptions-list\\\",null,[[\\\"items\\\",\\\"emptyPlaceHolder\\\"],[[22,1,[\\\"prescriptions\\\"]],\\\"-\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"                            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"show-hide-toggle\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"toggleHistoricalMedications\\\"]],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"historicalMedicationsVisible\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            Hide historical\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                            Show historical (\\\"],[1,[23,[\\\"historicalPatientMedications\\\",\\\"length\\\"]],false],[0,\\\")\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n        \\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"print-preview-content\\\",null,[[\\\"isVisible\\\",\\\"printTitle\\\"],[[23,[\\\"isPrintVisible\\\"]],[23,[\\\"printTitle\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"print-medications\\\",null,[[\\\"class\\\",\\\"patient\\\",\\\"showComments\\\",\\\"showEncounterComments\\\",\\\"showScripts\\\",\\\"sortProperty\\\",\\\"sortAscending\\\",\\\"showHistoricalMeds\\\",\\\"showActiveMeds\\\"],[\\\"chart-print-container\\\",[23,[\\\"patient\\\"]],[23,[\\\"showMedicationComments\\\"]],[23,[\\\"showEncounterComments\\\"]],[23,[\\\"showPrescriptions\\\"]],[23,[\\\"printSortProperty\\\"]],[23,[\\\"printSortAscending\\\"]],[23,[\\\"showHistoricalMeds\\\"]],[23,[\\\"showActiveMeds\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/medications-grid.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/medications-plan-list-read-only\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"tg9jaJIP\", \"block\": \"{\\\"symbols\\\":[\\\"med\\\",\\\"medication\\\"],\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"displayChartNoteMedications\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"chartNoteMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"read-only-header\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"p\\\"],[9],[0,\\\"Medications attached to this encounter:\\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"list read-only-list\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"chartNoteMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"li\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"span\\\"],[9],[1,[22,2,[\\\"description\\\"]],false],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,2,[\\\"prescription\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"spaced-item\\\"],[9],[0,\\\"prescription: \\\"],[1,[22,2,[\\\"prescription\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isLoading\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-666 auto-saving-section--content\\\"],[9],[0,\\\"Loading medications...\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"medicationsError\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-666 auto-saving-section--content\\\"],[9],[0,\\\"Can't load medications. Please\\\\n                \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"reloadMedications\\\"]],[9],[0,\\\"try again.\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"encounterMedications\\\",\\\"inEncounter\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"read-only-header\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"p\\\"],[9],[0,\\\"Medications attached to this encounter:\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"list read-only-list\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"sortedMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"li\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"span\\\"],[9],[1,[22,1,[\\\"fullGenericName\\\"]],false],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showWarningOnDuplicateMedications\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[22,1,[\\\"duplicates\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"duplicate-medication-text\\\"],[9],[0,\\\"(Duplicate)\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[22,1,[\\\"sig\\\",\\\"patientDescription\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"hint-text spaced-item\\\"],[9],[0,\\\"Sig:\\\"],[10],[0,\\\"\\\\n                                \\\"],[7,\\\"span\\\"],[9],[1,[22,1,[\\\"sig\\\",\\\"patientDescription\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                            \\\"],[1,[27,\\\"transcript-comments\\\",null,[[\\\"class\\\",\\\"items\\\",\\\"isCollapsible\\\",\\\"commentType\\\",\\\"patientPracticeGuid\\\",\\\"isExpanded\\\",\\\"hideCollapseLink\\\",\\\"oneline\\\",\\\"firstCommentOneLine\\\"],[\\\"medications-plan-list-read-only--comments\\\",[22,1,[\\\"encounterCommentsWithComment\\\"]],false,\\\"Encounter Comments\\\",[22,1,[\\\"patientPracticeGuid\\\"]],[23,[\\\"isExpanded\\\"]],[23,[\\\"hideCollapseLink\\\"]],[23,[\\\"oneline\\\"]],[23,[\\\"firstCommentOneLine\\\"]]]]],false],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/medications-plan-list-read-only.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/medications-plan-list\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"Sz+bFDQE\", \"block\": \"{\\\"symbols\\\":[\\\"item\\\"],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Medications attached to this encounter\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"encounterMedications\\\",\\\"inEncounter\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item\\\"],[9],[0,\\\"No attached medications\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"id\\\",\\\"medication-list-container\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"sortedMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"medication-list-item\\\"],[12,\\\"data-guid\\\",[28,[[22,1,[\\\"medicationGuid\\\"]]]]],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"close-box-small\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"removeMedication\\\",[22,1,[]]]],[9],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"medication-display\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"a\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"editMedication\\\",[22,1,[]]]],[9],[1,[22,1,[\\\"fullGenericName\\\"]],false],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"duplicates\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"duplicate-medication-text\\\"],[9],[0,\\\"(Duplicate)\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[22,1,[\\\"startDateTime\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"hint-text\\\"],[9],[0,\\\"Start:\\\"],[10],[0,\\\"\\\\n                        \\\"],[1,[27,\\\"datetime-formatted\\\",null,[[\\\"datetime\\\"],[[22,1,[\\\"startDateTime\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[22,1,[\\\"stopDateTime\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"hint-text\\\"],[9],[0,\\\"Stop:\\\"],[10],[0,\\\"\\\\n                        \\\"],[1,[27,\\\"datetime-formatted\\\",null,[[\\\"datetime\\\"],[[22,1,[\\\"stopDateTime\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[22,1,[\\\"sig\\\",\\\"patientDescription\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"hint-text\\\"],[9],[0,\\\"Sig:\\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"span\\\"],[9],[1,[22,1,[\\\"sig\\\",\\\"patientDescription\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"medicationComment\\\",\\\"comment\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"hint-text\\\"],[9],[0,\\\"Comment:\\\"],[10],[0,\\\"\\\\n                        \\\"],[1,[27,\\\"transcript-comment\\\",null,[[\\\"transcriptComment\\\"],[[22,1,[\\\"medicationComment\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[22,1,[\\\"encounterCommentsWithComment\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"hint-text\\\"],[9],[0,\\\"Encounter Comments:\\\"],[10],[0,\\\"\\\\n                        \\\"],[1,[27,\\\"transcript-comments\\\",null,[[\\\"items\\\"],[[22,1,[\\\"encounterCommentsWithComment\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"prescriptions\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"prescriptions-list\\\",null,[[\\\"items\\\"],[[22,1,[\\\"prescriptions\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/medications-plan-list.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/medications-summary-list-item\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"V/QQ1JcB\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"a\\\"],[11,\\\"data-element\\\",\\\"medication-name\\\"],[9],[1,[23,[\\\"medication\\\",\\\"genericAndTradeName\\\"]],false],[10],[0,\\\" \\\"],[1,[23,[\\\"medication\\\",\\\"productStrength\\\"]],false],[0,\\\" \\\"],[1,[23,[\\\"medication\\\",\\\"route\\\"]],false],[0,\\\" \\\"],[1,[23,[\\\"medication\\\",\\\"doseForm\\\"]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"medication\\\",\\\"startDateTime\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[9],[7,\\\"span\\\"],[9],[0,\\\"Start:\\\"],[10],[0,\\\" \\\"],[1,[27,\\\"datetime-formatted\\\",null,[[\\\"datetime\\\"],[[23,[\\\"medication\\\",\\\"startDateTime\\\"]]]]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"medication\\\",\\\"stopDateTime\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[9],[7,\\\"span\\\"],[9],[0,\\\"Stop:\\\"],[10],[0,\\\" \\\"],[1,[27,\\\"datetime-formatted\\\",null,[[\\\"datetime\\\"],[[23,[\\\"medication\\\",\\\"stopDateTime\\\"]]]]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"showProliaModalLink\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"stopBubble\\\"],[[\\\"bubbles\\\"],[false]]],[9],[0,\\\"\\\\n        \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"prolia-modal-open-link\\\"],[11,\\\"data-element\\\",\\\"prolia-permanent-link\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"openAssessment\\\",\\\"proliaAesiModal\\\"],null]],[9],[0,\\\"Record adverse events for Prolia safety\\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"medication\\\",\\\"duplicates\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"duplicate-medication-text\\\"],[11,\\\"data-element\\\",\\\"duplicate-medication-text-on-summary\\\"],[9],[0,\\\"(Duplicate therapy)\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/medications-summary-list-item.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/medications-summary-list\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"0Pm9DvWX\", \"block\": \"{\\\"symbols\\\":[\\\"card\\\",\\\"medication\\\",\\\"medication\\\",\\\"header\\\"],\\\"statements\\\":[[1,[27,\\\"data-tunnel\\\",null,[[\\\"name\\\",\\\"onDataReceived\\\"],[\\\"medications-summary-list\\\",[27,\\\"action\\\",[[22,0,[]],\\\"reloadMedications\\\"],null]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"composable-card\\\",null,null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"header\\\"]]],null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,4,[\\\"title\\\"]]],null,{\\\"statements\\\":[[0,\\\"            Medications\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"canRecordMedication\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"a\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"recordMedicationOnSummary\\\"],null]],[11,\\\"data-element\\\",\\\"record-medication\\\"],[11,\\\"class\\\",\\\"icon icon-add  icon--md text-color-placeholder box-margin-Lmd-v2\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"unless\\\",[[23,[\\\"isLoading\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"print-dropdown\\\",null,[[\\\"data-element\\\",\\\"options\\\",\\\"print\\\",\\\"useIcons\\\"],[\\\"print-medications\\\",[23,[\\\"printOptions\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"print\\\"],null],true]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[4]},null],[4,\\\"component\\\",[[22,1,[\\\"content\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isLoading\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"p\\\"],[9],[0,\\\"Loading medications...\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"medicationsError\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"text-color-placeholder\\\"],[9],[0,\\\"Can't load medications. Please \\\"],[7,\\\"a\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"reloadMedications\\\"],null]],[9],[0,\\\"try again.\\\"],[10],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isEditing\\\"]]],null,{\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"selectedDeviceGuid\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"section\\\"],[11,\\\"class\\\",\\\"active\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[9],[0,\\\"Record device\\\"],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"medications\\\",\\\"groupOfDuplicates\\\"]]],null,{\\\"statements\\\":[[4,\\\"popover-info\\\",null,[[\\\"popoverContent\\\",\\\"classNames\\\",\\\"popoverClass\\\",\\\"tagName\\\",\\\"triggerOn\\\"],[\\\"Select a medication to reconcile therapeutic duplications.\\\",\\\"duplicate-medications-alert bg-color-warning box-padding-LRlg-v2 box-padding-TBxs-v2\\\",\\\"duplicate-medications-alert-popover\\\",\\\"div\\\",\\\"hover\\\"]],{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"span\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-urgent\\\"],[11,\\\"data-element\\\",\\\"duplicate-medication-icon-on-summary\\\"],[9],[10],[0,\\\"\\\\n                            \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"p-semibold\\\"],[11,\\\"data-element\\\",\\\"duplicate-medication-warning-on-summary\\\"],[9],[0,\\\"\\\\n                                You may have therapeutic duplications (\\\"],[1,[23,[\\\"medications\\\",\\\"groupOfDuplicates\\\",\\\"length\\\"]],false],[0,\\\")\\\\n                            \\\"],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"hasErxOrderDrafts\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-margin-Bxs-v2\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-pending icon-slate-dark\\\"],[9],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"p-semibold\\\"],[11,\\\"data-element\\\",\\\"prescription-drafts\\\"],[9],[1,[21,\\\"erxOrderDraftCount\\\"],false],[0,\\\" prescription \\\"],[1,[27,\\\"pluralize\\\",[[23,[\\\"erxOrderDraftCount\\\"]],\\\"draft\\\",\\\"drafts\\\"],null],false],[10],[0,\\\"\\\\n                        \\\"],[4,\\\"link-to\\\",[\\\"timeline.events\\\",[23,[\\\"patientGuid\\\"]],\\\"erx-order\\\"],[[\\\"class\\\",\\\"data-element\\\"],[\\\"box-margin-Lmd-v2\\\",\\\"view-prescription-drafts\\\"]],{\\\"statements\\\":[[0,\\\"View\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"sortedActiveMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"list list--selectable list--hover\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"sortedActiveMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[1,[27,\\\"medications-summary-list-item\\\",null,[[\\\"isEntitledToEditMedications\\\",\\\"editMedicationOnSummary\\\",\\\"openAssessment\\\",\\\"medication\\\",\\\"selectedMedicationGuid\\\",\\\"class\\\"],[[23,[\\\"isEntitledToEditMedications\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"editMedicationOnSummary\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"openAssessment\\\"],null],[22,3,[]],[23,[\\\"selectedMedicationGuid\\\"]],\\\"active-medication\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3]},null],[0,\\\"                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"canRecordMedication\\\"]]],null,{\\\"statements\\\":[[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"disabled\\\",\\\"data-element\\\"],[[23,[\\\"isNoKnownChecked\\\"]],[23,[\\\"isLoadingNoKnown\\\"]],\\\"no-active-medications-label\\\"]],{\\\"statements\\\":[[0,\\\"                            Patient has no active medications\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isNoKnownChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            Patient has no active medications\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                            No medication recorded\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}],[4,\\\"if\\\",[[23,[\\\"historicalMedicationsVisible\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-margin-Txs-v2\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"h4\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[0,\\\"Historical medications\\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"list list--selectable list--hover\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"sortedHistoricalMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[1,[27,\\\"medications-summary-list-item\\\",null,[[\\\"isEntitledToEditMedications\\\",\\\"editMedicationOnSummary\\\",\\\"openAssessment\\\",\\\"medication\\\",\\\"selectedMedicationGuid\\\",\\\"class\\\"],[[23,[\\\"isEntitledToEditMedications\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"editMedicationOnSummary\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"openAssessment\\\"],null],[22,2,[]],[23,[\\\"selectedMedicationGuid\\\"]],\\\"historical-medication\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"historicalPatientMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-margin-Txs-v2\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"a\\\"],[11,\\\"data-element\\\",\\\"historical-medications\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"toggleHistoricalMedications\\\"],null]],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"historicalMedicationsVisible\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                Hide historical\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                Show historical (\\\"],[1,[23,[\\\"historicalPatientMedications\\\",\\\"length\\\"]],false],[0,\\\")\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null],[0,\\\"\\\\n\\\"],[4,\\\"print-preview-content\\\",null,[[\\\"isVisible\\\",\\\"printTitle\\\"],[[23,[\\\"isPrintVisible\\\"]],[23,[\\\"printTitle\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"print-medications\\\",null,[[\\\"class\\\",\\\"patient\\\",\\\"sortProperty\\\",\\\"sortAscending\\\",\\\"showHistoricalMeds\\\",\\\"showActiveMeds\\\"],[\\\"chart-print-container\\\",[23,[\\\"patient\\\"]],\\\"fullGenericName\\\",true,[23,[\\\"showMedicationsHistorical\\\"]],[23,[\\\"showMedicationsActive\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/medications-summary-list.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/medline-plus-link\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"DDPgiG8t\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"medlinePlusUrl\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"a\\\"],[12,\\\"href\\\",[21,\\\"medlinePlusUrl\\\"]],[11,\\\"target\\\",\\\"_blank\\\"],[11,\\\"data-element\\\",\\\"medlinePlus-btn\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"useIcon\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-medline-plus\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            MedlinePlus\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/medline-plus-link.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/monograph-parser\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"n0iCdU+6\", \"block\": \"{\\\"symbols\\\":[\\\"citation\\\",\\\"documentParagraph\\\",\\\"description\\\",\\\"paragraph\\\"],\\\"statements\\\":[[4,\\\"each\\\",[[23,[\\\"document\\\",\\\"paragraphs\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"b\\\"],[9],[1,[22,2,[\\\"title\\\"]],false],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[22,2,[\\\"description\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[22,3,[\\\"paragraphs\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[22,4,[\\\"isReference\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"sup\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,4,[\\\"citeUrl\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"a\\\"],[12,\\\"href\\\",[22,4,[\\\"citeUrl\\\"]]],[11,\\\"target\\\",\\\"_blank\\\"],[9],[0,\\\"[\\\"],[1,[22,4,[\\\"value\\\"]],false],[0,\\\"]\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"a\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"scrollToCitations\\\"]],[9],[0,\\\"[\\\"],[1,[22,4,[\\\"value\\\"]],false],[0,\\\"]\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[22,4,[\\\"value\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[4]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3]},null]],\\\"parameters\\\":[2]},null],[0,\\\"\\\\n\\\"],[7,\\\"p\\\"],[9],[0,\\\"Interaction Developer: Wolters Kluwer Health, Inc.\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"citations\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"document\\\",\\\"citations\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"li\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"citeUrl\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"a\\\"],[12,\\\"href\\\",[22,1,[\\\"citeUrl\\\"]]],[11,\\\"target\\\",\\\"_blank\\\"],[9],[0,\\\"[\\\"],[1,[22,1,[\\\"refId\\\"]],false],[0,\\\"] \\\"],[1,[22,1,[\\\"citation\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                [\\\"],[1,[22,1,[\\\"refId\\\"]],false],[0,\\\"] \\\"],[1,[22,1,[\\\"citation\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/monograph-parser.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/osteoporosis-dexa-modal\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"X0U6YrDb\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\"],\\\"statements\\\":[[4,\\\"content-modal\\\",null,[[\\\"modalStyle\\\",\\\"modalSize\\\",\\\"isVisible\\\",\\\"class\\\"],[0,\\\"fixed480w\\\",[23,[\\\"isVisible\\\"]],\\\"osteoporosis-dexa-modal\\\"]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"header\\\"]]],[[\\\"title\\\",\\\"isCloseByXorOutsideVisible\\\"],[\\\"Osteoporosis Screening\\\",true]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,1,[\\\"body\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-padding-LRmd box-padding-TBmd\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"p\\\"],[9],[0,\\\"The USPSTF recommends screening for osteoporosis in women aged 65 to 85. Consider ordering DXA or document results.\\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"text-center\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isOrderVisible\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"p\\\"],[9],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"btn-sm\\\"],[11,\\\"data-element\\\",\\\"imaging-order-btn\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"goToAddImagingOrder\\\"],null]],[9],[0,\\\"Order DXA\\\"],[10],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[7,\\\"p\\\"],[9],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"btn-sm\\\"],[11,\\\"data-element\\\",\\\"imaging-result-btn\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"goToAddImagingResult\\\"],null]],[9],[0,\\\"Enter DXA result\\\"],[10],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"footer\\\"]]],[[\\\"buttonRightPrimaryText\\\",\\\"buttonRightPrimaryAction\\\"],[\\\"Close\\\",[27,\\\"action\\\",[[22,0,[]],\\\"closeOsteoporosisModal\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/osteoporosis-dexa-modal.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-alerts-popover-modal\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"67UETZAt\", \"block\": \"{\\\"symbols\\\":[\\\"alert\\\"],\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isComponentEnabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"patient-alert-icon\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"togglePopoverModal\\\"]],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"hasUnresolvedAlerts\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"alert-icon-numeric\\\"],[9],[0,\\\"\\\\n                \\\"],[1,[21,\\\"numUnresolvedAlerts\\\"],false],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"alert-icon icon-flag\\\"],[9],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"popover-modal\\\",null,[[\\\"isPopoverVisible\\\",\\\"targetSelector\\\",\\\"containerSelector\\\",\\\"height\\\",\\\"minimumArrowPadding\\\",\\\"width\\\"],[[23,[\\\"showAlertsPopover\\\"]],\\\".patient-alerts-component\\\",\\\".charts.outlet\\\",[23,[\\\"height\\\"]],200,\\\"600\\\"]],{\\\"statements\\\":[[0,\\\"\\\\n        \\\"],[7,\\\"header\\\"],[11,\\\"class\\\",\\\"patient-alerts-header\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6 pull-left\\\"],[9],[0,\\\"\\\\n                    Patient alerts\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"isLoading\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        (\\\"],[1,[21,\\\"numUnresolvedAlerts\\\"],false],[0,\\\")\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                        (...)\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[11,\\\"class\\\",\\\"alert-tool icon-go-away\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"togglePopoverModal\\\"]],[9],[10],[0,\\\"\\\\n                    \\\"],[4,\\\"link-to\\\",[\\\"settings.cds\\\"],[[\\\"class\\\"],[\\\"alert-tool icon-wrench\\\"]],{\\\"statements\\\":[],\\\"parameters\\\":[]},null],[0,\\\"\\\\n                    \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[12,\\\"class\\\",[28,[\\\"alert-tool icon-refresh \\\",[27,\\\"if\\\",[[23,[\\\"isLoading\\\"]],\\\"disabled\\\"],null]]]],[3,\\\"action\\\",[[22,0,[]],\\\"refreshAlerts\\\"]],[9],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"hasUnresolvedAlerts\\\"]]],null,{\\\"statements\\\":[[4,\\\"popover-confirm\\\",null,[[\\\"action\\\",\\\"title\\\",\\\"allowHtmlCode\\\",\\\"popoverContent\\\",\\\"confirmLabel\\\",\\\"cancelLabel\\\",\\\"classNames\\\",\\\"placement\\\"],[\\\"dismissAllAlerts\\\",\\\"Dismiss all alerts\\\",true,\\\"<p>This will record all unacknowledged alerts as dismissed for this patient. This action is final. Some alerts require a response and will reappear.</p>\\\",\\\"Dismiss all\\\",\\\"Cancel\\\",\\\"alert-tool\\\",\\\"left\\\"]],{\\\"statements\\\":[[0,\\\"                            Dismiss all\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"patient-alerts-component-status\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"isPatientAlertsAllowedForUser\\\"]]],null,{\\\"statements\\\":[[0,\\\"                Patient Alerts are viewable by providers only.\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isPatientAlertsDisabledByProviderPreference\\\"]]],null,{\\\"statements\\\":[[0,\\\"                Accountable Care Organization alerts are currently turned off for all your patients. Go to the \\\"],[4,\\\"link-to\\\",[\\\"settings.cds\\\"],null,{\\\"statements\\\":[[0,\\\"Notification and Alerts settings\\\"]],\\\"parameters\\\":[]},null],[0,\\\" page to enable these alerts.\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"patient-alerts-body\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"hasFetchAlertErrors\\\"]]],null,{\\\"statements\\\":[[4,\\\"each\\\",[[23,[\\\"alerts\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[27,\\\"patient-alert\\\",null,[[\\\"alert\\\",\\\"respond\\\"],[[22,1,[]],\\\"resolveAlert\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"patient-alert-fetch-error patient-alerts-component-status\\\"],[9],[0,\\\"\\\\n                    Fetching patient alerts failed. Please try again by clicking on the\\\\n                    refresh \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-refresh\\\"],[9],[10],[0,\\\" button.\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-alerts-popover-modal.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-education-link\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"JV0HK2Sh\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"a\\\"],[11,\\\"data-element\\\",\\\"patientSpecificEducationMaterials-btn\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"useIcon\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-test-01\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"        Patient education materials\\\\n\\\"]],\\\"parameters\\\":[]}],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-education-link.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-email-popover\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"KthhGCw5\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"patientInfo\\\",\\\"emailAddress\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"patient-ribbon-email\\\"],[12,\\\"title\\\",[23,[\\\"patientInfo\\\",\\\"emailAddress\\\"]]],[9],[1,[23,[\\\"patientInfo\\\",\\\"emailAddress\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn-sm btn-primary popover-email-target\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"toggleEmailPopover\\\"]],[9],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-add\\\"],[9],[10],[0,\\\" Add email\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[4,\\\"popover-modal\\\",null,[[\\\"isPopoverVisible\\\",\\\"targetSelector\\\",\\\"height\\\",\\\"width\\\"],[[23,[\\\"isPopoverVisible\\\"]],\\\".popover-email-target\\\",\\\"135\\\",\\\"250\\\"]],{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"user-email\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Patient Email\\\"],[10],[0,\\\"\\\\n        \\\"],[1,[27,\\\"validated-textfield\\\",null,[[\\\"placeholderText\\\",\\\"value\\\",\\\"errorMessage\\\",\\\"class\\\"],[\\\"example@email.com\\\",[23,[\\\"patientEmailAddress\\\"]],[23,[\\\"errorMessage\\\"]],[27,\\\"concat\\\",[[27,\\\"if\\\",[[23,[\\\"errorClass\\\"]],[27,\\\"-normalize-class\\\",[\\\"errorClass\\\",[23,[\\\"errorClass\\\"]]],null]],null],\\\" \\\"],null]]]],false],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"onCheckboxSelect\\\"]],[9],[0,\\\"\\\\n\\\"],[4,\\\"d-check-box\\\",null,[[\\\"smaller\\\",\\\"checked\\\"],[true,[23,[\\\"patientInfo\\\",\\\"isUserOfEmail\\\"]]]],{\\\"statements\\\":[[0,\\\"                Patient has no email address\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"toggleEmailPopover\\\"]],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-primary\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"onSavePatient\\\"]],[9],[0,\\\"Save\\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-email-popover.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-header-insurance-info\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"vgDh9kli\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"ellipses\\\"],[11,\\\"data-element\\\",\\\"patient-ribbon-plan-name\\\"],[12,\\\"title\\\",[23,[\\\"patient\\\",\\\"primaryInsurancePlan\\\",\\\"planName\\\"]]],[9],[1,[23,[\\\"patient\\\",\\\"primaryInsurancePlan\\\",\\\"planName\\\"]],false],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"popover-modal\\\",null,[[\\\"isPopoverVisible\\\",\\\"targetSelector\\\",\\\"width\\\",\\\"height\\\"],[[23,[\\\"isPopoverVisible\\\"]],[23,[\\\"targetSelector\\\"]],200,\\\"auto\\\"]],{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Primary insurance\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-margin-Bmd\\\"],[9],[1,[23,[\\\"patient\\\",\\\"primaryInsurancePlan\\\",\\\"planName\\\"]],false],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"patient\\\",\\\"primaryInsurancePlan\\\",\\\"claimsContactPhoneNumber\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Claims phone number\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-margin-Bmd\\\"],[9],[1,[27,\\\"format-phone\\\",[[23,[\\\"patient\\\",\\\"primaryInsurancePlan\\\",\\\"claimsContactPhoneNumber\\\"]]],null],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-margin-Bmd\\\"],[9],[0,\\\"\\\\n        \\\"],[4,\\\"link-to\\\",[\\\"patient.profile\\\",[23,[\\\"patient\\\",\\\"patientPracticeGuid\\\"]],[27,\\\"query-params\\\",null,[[\\\"sectionName\\\"],[\\\"insurance\\\"]]]],null,{\\\"statements\\\":[[0,\\\"See more insurance information\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-primary btn-sm pull-right\\\"],[9],[0,\\\"Close\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-header-insurance-info.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-header-phone-column\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"w1XmChfv\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"span\\\"],[11,\\\"class\\\",\\\"bold\\\"],[9],[1,[21,\\\"type\\\"],false],[0,\\\":\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"span\\\"],[9],[1,[27,\\\"format-phone\\\",[[23,[\\\"phoneNumber\\\"]]],null],false],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-header-phone-column.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-header\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"wc67+WzP\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"patient\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[\\\"patient-photo \\\",[27,\\\"unless\\\",[[23,[\\\"isEntitledToEditHeader\\\"]],\\\"disabled\\\"],null]]]],[3,\\\"action\\\",[[22,0,[]],\\\"addPhoto\\\"]],[9],[0,\\\"\\\\n        \\\"],[1,[27,\\\"patient-image\\\",null,[[\\\"hasPatientImage\\\",\\\"patientPracticeGuid\\\"],[[23,[\\\"patient\\\",\\\"hasPatientImage\\\"]],[23,[\\\"patient\\\",\\\"patientPracticeGuid\\\"]]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"patientImageExists\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"photo-overlay\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-add\\\"],[9],[10],[0,\\\"\\\\n                \\\"],[7,\\\"span\\\"],[9],[0,\\\"Add Photo\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"patient-name-column patient-info-column with-right-border\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"patient-name\\\"],[11,\\\"data-element\\\",\\\"patient-ribbon-patient-name\\\"],[9],[0,\\\"\\\\n            \\\"],[1,[23,[\\\"patient\\\",\\\"displayName\\\"]],false],[4,\\\"if\\\",[[23,[\\\"patient\\\",\\\"nickname\\\"]]],null,{\\\"statements\\\":[[0,\\\" (\\\"],[1,[23,[\\\"patient\\\",\\\"nickname\\\"]],false],[0,\\\") \\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"flex-grow patient-details-container\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"patient-details\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"flex-row\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"patient-info-column with-right-border flex-no-shrink\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"bold\\\"],[9],[0,\\\"PRN:\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"span\\\"],[11,\\\"data-element\\\",\\\"patient-ribbon-prn\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"patient\\\",\\\"patientRecordNumber\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[1,[23,[\\\"patient\\\",\\\"patientRecordNumber\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                            n/a\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"patient-info-column with-right-border flex-no-shrink\\\"],[11,\\\"data-element\\\",\\\"patient-ribbon-age-gender\\\"],[9],[1,[23,[\\\"patient\\\",\\\"age\\\"]],false],[0,\\\" \\\"],[1,[21,\\\"gender\\\"],false],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isPhrStatusVisible\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"patient-info-column with-right-border component-phr-enrollment flex-shrink\\\"],[9],[0,\\\"\\\\n                        \\\"],[1,[27,\\\"phr-status\\\",null,[[\\\"patientPracticeGuid\\\",\\\"openPhrEnrollment\\\",\\\"hide\\\"],[[23,[\\\"patient\\\",\\\"patientPracticeGuid\\\"]],\\\"openPhrEnrollment\\\",[27,\\\"action\\\",[[22,0,[]],\\\"hidePhrStatus\\\"],null]]]],false],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"patient\\\",\\\"primaryInsurancePlan\\\",\\\"planName\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[27,\\\"patient-header-insurance-info\\\",null,[[\\\"patient\\\",\\\"class\\\"],[[23,[\\\"patient\\\"]],\\\"patient-info-column with-right-border hidden-sm hidden-xs flex-shrink\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"patient-info-column with-right-border visible-xl flex-no-shrink\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"bold\\\"],[9],[0,\\\"DOB:\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"span\\\"],[11,\\\"data-element\\\",\\\"patient-ribbon-dob\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[23,[\\\"patient\\\",\\\"birthDate\\\"]]],null],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"patient\\\",\\\"mobilePhone\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[27,\\\"patient-header-phone-column\\\",null,[[\\\"phoneNumber\\\",\\\"type\\\",\\\"class\\\",\\\"data-element\\\"],[[23,[\\\"patient\\\",\\\"mobilePhone\\\"]],\\\"M\\\",\\\"visible-xl flex-no-shrink\\\",\\\"patient-ribbon-mobile-phone\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"patient-info-column ellipsis-column flex-no-shrink\\\"],[9],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-ellipsis\\\"],[11,\\\"data-element\\\",\\\"patient-ribbon-ellipsis\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"toggleIsExpanded\\\"]],[9],[10],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isExpanded\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"flex-row\\\"],[11,\\\"data-element\\\",\\\"patient-ribbon-second-row\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"patient\\\",\\\"primaryInsurancePlan\\\",\\\"planName\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"patient-header-insurance-info\\\",null,[[\\\"patient\\\",\\\"class\\\"],[[23,[\\\"patient\\\"]],\\\"patient-info-column with-right-border hidden-md hidden-lg flex-shrink\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"patient-info-column with-right-border hidden-xl flex-no-shrink\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"bold\\\"],[9],[0,\\\"DOB:\\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"span\\\"],[11,\\\"data-element\\\",\\\"patient-ribbon-dob\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[23,[\\\"patient\\\",\\\"birthDate\\\"]]],null],false],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"patient\\\",\\\"mobilePhone\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"patient-header-phone-column\\\",null,[[\\\"phoneNumber\\\",\\\"type\\\",\\\"class\\\",\\\"data-element\\\"],[[23,[\\\"patient\\\",\\\"mobilePhone\\\"]],\\\"M\\\",\\\"hidden-sm hidden-xs hidden-xl flex-no-shrink\\\",\\\"patient-ribbon-mobile-phone\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"patient\\\",\\\"homePhone\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"patient-header-phone-column\\\",null,[[\\\"phoneNumber\\\",\\\"type\\\",\\\"class\\\",\\\"data-element\\\"],[[23,[\\\"patient\\\",\\\"homePhone\\\"]],\\\"H\\\",\\\"hidden-sm hidden-xs flex-no-shrink\\\",\\\"patient-ribbon-home-phone\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"patient\\\",\\\"officePhone\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"patient-header-phone-column\\\",null,[[\\\"phoneNumber\\\",\\\"type\\\",\\\"class\\\",\\\"data-element\\\"],[[23,[\\\"patient\\\",\\\"officePhone\\\"]],\\\"W\\\",\\\"hidden-sm hidden-xs flex-no-shrink\\\",\\\"patient-ribbon-work-phone\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"hidden-md hidden-lg\\\"],[11,\\\"data-element\\\",\\\"patient-ribbon-third-row\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"patient\\\",\\\"mobilePhone\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"patient-header-phone-column\\\",null,[[\\\"phoneNumber\\\",\\\"type\\\",\\\"data-element\\\"],[[23,[\\\"patient\\\",\\\"mobilePhone\\\"]],\\\"M\\\",\\\"patient-ribbon-mobile-phone\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"patient\\\",\\\"homePhone\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"patient-header-phone-column\\\",null,[[\\\"phoneNumber\\\",\\\"type\\\",\\\"data-element\\\"],[[23,[\\\"patient\\\",\\\"homePhone\\\"]],\\\"H\\\",\\\"patient-ribbon-home-phone\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"patient\\\",\\\"officePhone\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"patient-header-phone-column\\\",null,[[\\\"phoneNumber\\\",\\\"type\\\",\\\"data-element\\\"],[[23,[\\\"patient\\\",\\\"officePhone\\\"]],\\\"W\\\",\\\"patient-ribbon-work-phone\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"patient-name-column patient-info-column with-right-border\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"patient-name\\\"],[11,\\\"data-element\\\",\\\"patient-ribbon-no-patient-message\\\"],[9],[1,[21,\\\"patientMissingMessage\\\"],false],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"patientMissingMessageDetail\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"patient-info-column\\\"],[11,\\\"data-element\\\",\\\"patient-ribbon-no-patient-details\\\"],[9],[1,[21,\\\"patientMissingMessageDetail\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-header.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-health-concern-note\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"hs0xTGpC\", \"block\": \"{\\\"symbols\\\":[\\\"options\\\"],\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isEditing\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-margin-Bxs-v2\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[27,\\\"text-area\\\",null,[[\\\"autosize\\\",\\\"autofocus\\\",\\\"class\\\",\\\"maxlength\\\",\\\"placeholderText\\\",\\\"value\\\"],[true,true,\\\"box-margin-Bmd-v2\\\",1024,\\\"Add health concern note\\\",[23,[\\\"textAreaValue\\\"]]]]],false],[0,\\\"\\\\n        \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--brand\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"saveNote\\\"],null]],[11,\\\"data-element\\\",\\\"btn-save-health-concern-note\\\"],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"Save\\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"healthConcernNote\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-margin-Bxs-v2\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"box-margin-Bn text-wrap\\\"],[11,\\\"data-element\\\",\\\"saved-health-concern-note-text\\\"],[9],[1,[27,\\\"preserve-linebreak\\\",[[23,[\\\"healthConcernNote\\\",\\\"healthConcernNote\\\"]]],null],false],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isAllowedToEditHealthConcerns\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"a\\\"],[11,\\\"role\\\",\\\"link\\\"],[11,\\\"class\\\",\\\"box-margin-Lmd-v2\\\"],[11,\\\"data-element\\\",\\\"edit-health-concern-note-button\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],[23,[\\\"editNote\\\"]]],null]],[9],[0,\\\"Edit\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isAllowedToEditHealthConcerns\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-margin-Bxs-v2\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"reveal-input\\\",null,[[\\\"data-element\\\",\\\"inputComponent\\\"],[\\\"add-health-concern-note-button\\\",\\\"text-area\\\"]],{\\\"statements\\\":[[0,\\\"                \\\"],[4,\\\"component\\\",[[22,1,[\\\"link\\\"]]],[[\\\"hideIconOnReveal\\\"],[true]],{\\\"statements\\\":[[0,\\\"Add a health concern note\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n                \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"input\\\"]]],[[\\\"autofocus\\\",\\\"autosize\\\",\\\"class\\\",\\\"maxlength\\\",\\\"placeholderText\\\",\\\"value\\\"],[true,true,\\\"box-margin-Bmd-v2\\\",1024,\\\"Add health concern note\\\",[23,[\\\"textAreaValue\\\"]]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"isRevealed\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--brand\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"saveNote\\\"],null]],[11,\\\"data-element\\\",\\\"btn-save-health-concern-note\\\"],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"Save\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n    \\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-health-concern-note.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-health-concerns-list-section\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"dUIKiAVq\", \"block\": \"{\\\"symbols\\\":[\\\"healthConcern\\\",\\\"index\\\"],\\\"statements\\\":[[4,\\\"each\\\",[[23,[\\\"healthConcerns\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"li\\\"],[12,\\\"onclick\\\",[27,\\\"if\\\",[[23,[\\\"isAllowedToEditHealthConcerns\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"edit\\\",[22,1,[]]],null]],null]],[12,\\\"class\\\",[28,[[27,\\\"if\\\",[[23,[\\\"isNotAllowedToEditHealthConcerns\\\"]],\\\"disabled-hover\\\"],null]]]],[12,\\\"data-element\\\",[28,[\\\"health-concern-item-\\\",[22,2,[]]]]],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"health-concern-title\\\"],[11,\\\"class\\\",\\\"text-color-link text-wrap\\\"],[9],[1,[22,1,[\\\"title\\\"]],false],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"healthConcernReferenceItem\\\",\\\"severityText\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"i\\\"],[12,\\\"class\\\",[28,[\\\"icon-triangle icon--md box-margin-Rsm-v2 \\\",[22,1,[\\\"healthConcernReferenceItem\\\",\\\"severityClass\\\"]]]]],[9],[10],[0,\\\"\\\\n                \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"h4 box-margin-Rmd-v2\\\"],[11,\\\"data-element\\\",\\\"severity-text\\\"],[9],[1,[22,1,[\\\"healthConcernReferenceItem\\\",\\\"severityText\\\"]],false],[10],[0,\\\"\\\\n                \\\"],[7,\\\"span\\\"],[9],[1,[22,1,[\\\"healthConcernReferenceItem\\\",\\\"reactionsText\\\"]],false],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"span\\\"],[9],[0,\\\"Start: \\\"],[7,\\\"span\\\"],[11,\\\"data-element\\\",\\\"health-concern-effective-date\\\"],[9],[1,[22,1,[\\\"effectiveDate\\\"]],false],[10],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1,2]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-health-concerns-list-section.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-health-concerns-list\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"5gTVr00x\", \"block\": \"{\\\"symbols\\\":[\\\"card\\\",\\\"header\\\"],\\\"statements\\\":[[1,[27,\\\"data-tunnel\\\",null,[[\\\"name\\\",\\\"onDataReceived\\\"],[\\\"patient-risk-score\\\",[27,\\\"perform\\\",[[23,[\\\"loadHealthConcerns\\\"]]],null]]]],false],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"composable-card\\\",null,null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"header\\\"]]],null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,2,[\\\"title\\\"]]],null,{\\\"statements\\\":[[0,\\\"            Health concerns\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isAllowedToEditHealthConcerns\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"transcriptGuid\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[4,\\\"link-to\\\",[[23,[\\\"healthConcernRoute\\\"]],[23,[\\\"patientPracticeGuid\\\"]],[23,[\\\"transcriptGuid\\\"]],\\\"new\\\"],[[\\\"class\\\",\\\"data-element\\\"],[[23,[\\\"addHealthConcernClass\\\"]],\\\"add-health-concern-button\\\"]],{\\\"statements\\\":[[1,[21,\\\"addHealthConcernButtonText\\\"],false]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                    \\\"],[4,\\\"link-to\\\",[[23,[\\\"healthConcernRoute\\\"]],[23,[\\\"patientPracticeGuid\\\"]],\\\"new\\\"],[[\\\"class\\\",\\\"data-element\\\"],[[23,[\\\"addHealthConcernClass\\\"]],\\\"add-health-concern-button\\\"]],{\\\"statements\\\":[[1,[21,\\\"addHealthConcernButtonText\\\"],false]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[1,[27,\\\"print-dropdown\\\",null,[[\\\"class\\\",\\\"data-element\\\",\\\"options\\\",\\\"print\\\",\\\"useIcons\\\"],[[23,[\\\"printDropdownClass\\\"]],\\\"print-health-concerns\\\",[23,[\\\"printOptions\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"print\\\"],null],[23,[\\\"useIcons\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[2]},null],[4,\\\"component\\\",[[22,1,[\\\"content\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isLoadingOrError\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"box-margin-Bn\\\"],[9],[1,[21,\\\"loadingOrErrorText\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"patient-health-concern-note\\\",null,[[\\\"isAllowedToEditHealthConcerns\\\",\\\"healthConcernNote\\\",\\\"isEditing\\\",\\\"value\\\",\\\"saveNote\\\",\\\"editNote\\\"],[[23,[\\\"isAllowedToEditHealthConcerns\\\"]],[23,[\\\"healthConcernNote\\\"]],[23,[\\\"isEditingNote\\\"]],[23,[\\\"noteText\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"saveNote\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"editNote\\\"],null]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"healthConcerns\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"patient-health-concerns-list-section\\\",null,[[\\\"isAllowedToEditHealthConcerns\\\",\\\"isNotAllowedToEditHealthConcerns\\\",\\\"healthConcerns\\\",\\\"healthConcernRoute\\\"],[[23,[\\\"isAllowedToEditHealthConcerns\\\"]],[23,[\\\"isNotAllowedToEditHealthConcerns\\\"]],[23,[\\\"activeHealthConcerns\\\"]],[23,[\\\"healthConcernRoute\\\"]]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"inactiveHealthConcerns\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"showInactiveHealthConcerns\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"h4\\\"],[11,\\\"class\\\",\\\"box-margin-TBsm-v2 h4\\\"],[9],[0,\\\"Inactive\\\"],[10],[0,\\\"\\\\n                        \\\"],[1,[27,\\\"patient-health-concerns-list-section\\\",null,[[\\\"isAllowedToEditHealthConcerns\\\",\\\"isNotAllowedToEditHealthConcerns\\\",\\\"healthConcerns\\\",\\\"healthConcernRoute\\\"],[[23,[\\\"isAllowedToEditHealthConcerns\\\"]],[23,[\\\"isNotAllowedToEditHealthConcerns\\\"]],[23,[\\\"inactiveHealthConcerns\\\"]],[23,[\\\"healthConcernRoute\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                    \\\"],[7,\\\"a\\\"],[11,\\\"role\\\",\\\"link\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"toggleShowInactive\\\"],null]],[11,\\\"class\\\",\\\"ib box-margin-Txs-v2\\\"],[11,\\\"data-element\\\",\\\"health-concerns-toggle-inactive\\\"],[9],[1,[21,\\\"toggleInactiveText\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                  \\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isAllowedToEditHealthConcerns\\\"]]],null,{\\\"statements\\\":[[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"onChecked\\\"],[[23,[\\\"noKnownHealthConcerns\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"noKnownChecked\\\"],null]]],{\\\"statements\\\":[[0,\\\"                        Patient has no health concerns\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"noKnownHealthConcerns\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        Patient has no health concerns\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                        No health concerns recorded\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null],[0,\\\"\\\\n\\\"],[4,\\\"print-preview-content\\\",null,[[\\\"isVisible\\\",\\\"printTitle\\\"],[[23,[\\\"isPrintVisible\\\"]],[23,[\\\"printTitle\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"print-health-concerns\\\",null,[[\\\"patient\\\",\\\"class\\\",\\\"healthConcerns\\\",\\\"includeHeaderAndFooter\\\",\\\"noKnownHealthConcerns\\\",\\\"showActiveHealthConcerns\\\",\\\"showInactiveHealthConcerns\\\"],[[23,[\\\"patient\\\"]],\\\"chart-print-container\\\",[23,[\\\"healthConcerns\\\"]],true,[23,[\\\"noKnownHealthConcerns\\\"]],[23,[\\\"printActiveHealthConcerns\\\"]],[23,[\\\"printInactiveHealthConcerns\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-health-concerns-list.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-list-phone-number\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"HM5xBNJq\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"span\\\"],[11,\\\"class\\\",\\\"text-color-placeholder\\\"],[9],[1,[21,\\\"type\\\"],false],[0,\\\" \\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"span\\\"],[9],[1,[27,\\\"format-phone\\\",[[23,[\\\"value\\\"]]],null],false],[10]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-list-phone-number.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-persistent-navigation\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"434zjPTh\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"patient\\\",\\\"patientPracticeGuid\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"patient-previews\\\",null,[[\\\"patient\\\"],[[23,[\\\"patient\\\"]]]]],false],[0,\\\"\\\\n    \\\"],[1,[27,\\\"patient-pinned-note\\\",null,[[\\\"patientId\\\",\\\"patientName\\\",\\\"editPinnedNote\\\",\\\"location\\\"],[[23,[\\\"patient\\\",\\\"id\\\"]],[23,[\\\"patient\\\",\\\"fullName\\\"]],[23,[\\\"editPinnedNote\\\"]],\\\"Patient ribbon\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-persistent-navigation.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-pinned-note-provider-section\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"n92WHIAV\", \"block\": \"{\\\"symbols\\\":[\\\"@editPinnedNote\\\"],\\\"statements\\\":[[7,\\\"h3\\\"],[11,\\\"class\\\",\\\"header3a notes\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"icon-pushpin\\\"],[9],[10],[0,\\\"\\\\n    Pinned note\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"isDisabledOrNewPatient\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"i\\\"],[12,\\\"class\\\",[28,[[27,\\\"if\\\",[[23,[\\\"pinnedNote\\\"]],\\\"icon-pencil-record\\\",\\\"icon-add\\\"],null],\\\" box-padding-Lsm-v2\\\"]]],[3,\\\"action\\\",[[22,0,[]],[22,1,[]]]],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-padding-LRmd-v2 box-padding-Tmd-v2\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"pinnedNote\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-padding-Bmd-v2\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"toggleProperty\\\",\\\"expandedNote\\\"]],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[\\\"icon-caret \\\",[27,\\\"if\\\",[[23,[\\\"expandedNote\\\"]],\\\"icon-caret-expanded\\\",\\\"icon-caret-collapsed\\\"],null]]]],[9],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"provider-name-date-time\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"provider-name p-semibold box-padding-Lsm-v2\\\"],[9],[0,\\\" Edited by \\\"],[1,[21,\\\"provider\\\"],false],[0,\\\" \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"last-edited-date-time pull-right\\\"],[9],[1,[21,\\\"lastModifiedDate\\\"],false],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"expandedNote\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[\\\"pinned-note-body \\\",[27,\\\"if\\\",[[23,[\\\"disabled\\\"]],\\\"disabled\\\"],null]]]],[9],[0,\\\" \\\"],[1,[21,\\\"pinnedNote\\\"],true],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"showViewMoreLink\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-padding-Tmd-v2\\\"],[9],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"view-more-link\\\"],[3,\\\"action\\\",[[22,0,[]],[22,1,[]]]],[9],[0,\\\" View and edit all note text \\\"],[10],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"        No pinned note for this patient\\\\n\\\"]],\\\"parameters\\\":[]}],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-pinned-note-provider-section.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-pinned-note\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"44PYgPIU\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\"],\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"pinnedNote\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"active-patient-alert\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"icon-pushpin\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"toggleProperty\\\",\\\"isPopoverVisible\\\"]],[9],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"content-popover\\\",null,[[\\\"bodyEventName\\\",\\\"isPopoverVisible\\\",\\\"target\\\",\\\"popoverClass\\\",\\\"placement\\\"],[\\\"mousedown touchstart\\\",[23,[\\\"isPopoverVisible\\\"]],[23,[\\\"popoverTarget\\\"]],[23,[\\\"popoverConfirmClass\\\"]],[23,[\\\"popoverPlacement\\\"]]]],{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"header\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"icon-go-away pull-right box-padding-Tsm-v2\\\"],[11,\\\"data-dismiss\\\",\\\"modal\\\"],[11,\\\"aria-hidden\\\",\\\"true\\\"],[11,\\\"data-element\\\",\\\"close-pinned-note\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"toggleProperty\\\",\\\"isPopoverVisible\\\"]],[9],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"title\\\"],[9],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon icon-info box-padding-Rmd-v2\\\"],[9],[10],[0,\\\" \\\"],[1,[21,\\\"patientName\\\"],false],[0,\\\" - Pinned note\\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"pinnedNote\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"popover-content box-padding-LRlg-v2 box-padding-Tlg-v2 box-padding-Bn\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"patient-pinned-note-text\\\"],[9],[1,[21,\\\"pinnedNote\\\"],true],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"pinned-note-last-modified-by\\\"],[11,\\\"class\\\",\\\"field-label box-padding-TBsm-v2\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label long-provider-name\\\"],[9],[0,\\\"Edited by \\\"],[1,[21,\\\"lastEditedByProviderName\\\"],false],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[1,[21,\\\"lastEditedByDateTime\\\"],false],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"footer\\\"],[12,\\\"class\\\",[28,[\\\"box-padding-Alg-v2 \\\",[27,\\\"if\\\",[[23,[\\\"containsScrollableContent\\\"]],\\\"footer-divider\\\"],null],\\\" \\\",[27,\\\"unless\\\",[[23,[\\\"isEntitledToEdit\\\"]],\\\"text-right\\\"],null]]]],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isEntitledToEdit\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-sm\\\"],[11,\\\"data-element\\\",\\\"btn-delete\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"toggleDeleteModal\\\",true]],[9],[0,\\\"Delete\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[7,\\\"button\\\"],[12,\\\"class\\\",[28,[\\\"btn btn-sm btn-primary confirm-btn \\\",[27,\\\"if\\\",[[23,[\\\"isEntitledToEdit\\\"]],\\\"pull-right\\\"],null]]]],[11,\\\"data-element\\\",\\\"btn-cancel\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"toggleProperty\\\",\\\"isPopoverVisible\\\"]],[9],[0,\\\"Close\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isEntitledToEdit\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-sm box-margin-Rsm-v2 pull-right\\\"],[11,\\\"data-element\\\",\\\"btn-edit\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"edit\\\"]],[9],[0,\\\"Edit\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"empty-pinned-note box-padding-Alg-v2\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"p-semibold\\\"],[9],[0,\\\"No pinned note for this patient\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"empty-pinned-note-text\\\"],[9],[0,\\\"\\\\n                    Alert your staff and providers with a pinned note when scheduling this patient or viewing the chart.\\\\n                    \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"learn-more\\\"],[11,\\\"target\\\",\\\"_blank\\\"],[12,\\\"href\\\",[23,[\\\"config\\\",\\\"patientPinnedNoteLearnMoreLink\\\"]]],[9],[0,\\\"Learn more\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isEntitledToEdit\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"pull-right box-padding-Rlg-v2 box-padding-Blg-v2\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-sm btn-primary\\\"],[11,\\\"data-element\\\",\\\"btn-pin-note\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"edit\\\"]],[9],[0,\\\"Pin note\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"content-modal\\\",null,[[\\\"includeBackdrop\\\",\\\"isCloseByXorOutsideVisible\\\",\\\"isDraggable\\\",\\\"isVisible\\\",\\\"modalStyle\\\"],[true,false,true,[23,[\\\"isDeleteModalVisable\\\"]],7]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"header\\\"]]],[[\\\"title\\\",\\\"notifyCloseByX\\\"],[\\\"Delete pinned note\\\",[27,\\\"action\\\",[[22,0,[]],\\\"toggleDeleteModal\\\",false],null]]]],false],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"delete-popover-body\\\"],[11,\\\"class\\\",\\\"box-padding-LRlg-v2 box-padding-Tlg-v2\\\"],[9],[0,\\\"All text for this note will be erased and cannot be recovered.\\\"],[10],[0,\\\"\\\\n    \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"footer\\\"]]],[[\\\"buttonLeftText\\\",\\\"buttonLeftAction\\\",\\\"buttonRightPrimaryText\\\",\\\"buttonRightPrimaryAction\\\"],[\\\"Cancel\\\",[27,\\\"action\\\",[[22,0,[]],\\\"toggleDeleteModal\\\",false],null],\\\"Delete note\\\",[27,\\\"action\\\",[[22,0,[]],\\\"delete\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-pinned-note.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-preview-encounter\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"TgncrYO/\", \"block\": \"{\\\"symbols\\\":[\\\"am\\\",\\\"rx\\\",\\\"dx\\\",\\\"allergy\\\",\\\"vital\\\"],\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"encounter\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row col-4\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"column\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Encounter type\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"span\\\"],[11,\\\"data-element\\\",\\\"preview-encounter-type\\\"],[9],[4,\\\"if\\\",[[23,[\\\"encounter\\\",\\\"encounterType\\\"]]],null,{\\\"statements\\\":[[1,[23,[\\\"encounter\\\",\\\"encounterType\\\",\\\"eventType\\\",\\\"displayName\\\"]],false]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"Not recorded\\\"]],\\\"parameters\\\":[]}],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"column\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Age on DOS\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"span\\\"],[11,\\\"data-element\\\",\\\"preview-encounter-age\\\"],[9],[1,[23,[\\\"encounter\\\",\\\"ageOnDOS\\\"]],false],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"column\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Seen by\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"span\\\"],[11,\\\"data-element\\\",\\\"preview-encounter-seen-by\\\"],[9],[1,[23,[\\\"encounter\\\",\\\"seenByProviderName\\\"]],false],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"column\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Seen on\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"span\\\"],[11,\\\"data-element\\\",\\\"preview-encounter-seen-on\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[23,[\\\"encounter\\\",\\\"dateOfServiceUtc\\\"]]],[[\\\"format\\\"],[\\\"MMM DD YYYY\\\"]]],false],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"encounter\\\",\\\"isSigned\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row col-2\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"column\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Electronically signed by\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"span\\\"],[11,\\\"data-element\\\",\\\"preview-encounter-signed-by\\\"],[9],[1,[23,[\\\"encounter\\\",\\\"signedByProviderName\\\"]],false],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"column\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Signed on\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"span\\\"],[11,\\\"data-element\\\",\\\"preview-encounter-signed-on\\\"],[9],[1,[27,\\\"format-date-time-local\\\",[[23,[\\\"encounter\\\",\\\"signedDateTimeUtc\\\"]]],[[\\\"format\\\",\\\"defaultText\\\"],[\\\"MM/DD/YYYY hh:mm a\\\",\\\"n/a\\\"]]],false],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"encounter\\\",\\\"addenda\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"column\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Addenda\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"span\\\"],[11,\\\"data-element\\\",\\\"preview-encounter-addenda-count\\\"],[9],[1,[23,[\\\"encounter\\\",\\\"addenda\\\",\\\"length\\\"]],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"CC\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"preview-encounter-cc\\\"],[9],[4,\\\"if\\\",[[23,[\\\"encounter\\\",\\\"chiefComplaint\\\"]]],null,{\\\"statements\\\":[[1,[23,[\\\"encounter\\\",\\\"chiefComplaint\\\"]],false]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"No chief complaint recorded\\\"]],\\\"parameters\\\":[]}],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[11,\\\"data-element\\\",\\\"preview-encounter-vitals\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"vitals\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"column\\\"],[12,\\\"data-vital\\\",[22,5,[\\\"display\\\"]]],[9],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[1,[22,5,[\\\"display\\\"]],false],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,5,[\\\"observation\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[27,\\\"encounter-vital\\\",null,[[\\\"vital\\\"],[[22,5,[\\\"observation\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                    -\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[5]},null],[4,\\\"if\\\",[[23,[\\\"hasMoreVitals\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[9],[7,\\\"a\\\"],[11,\\\"data-element\\\",\\\"preview-encounter-more-vitals\\\"],[3,\\\"action\\\",[[22,0,[]],[23,[\\\"openPreview\\\"]]]],[9],[0,\\\"More vitals...\\\"],[10],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[11,\\\"data-element\\\",\\\"preview-encounter-subjective\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"encounter\\\",\\\"isSoapNote\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"encounter-note-section\\\",null,[[\\\"disabled\\\",\\\"isPreview\\\",\\\"section\\\",\\\"value\\\"],[true,true,\\\"subjective\\\",[23,[\\\"encounter\\\",\\\"subjective\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"encounter-note-section\\\",null,[[\\\"disabled\\\",\\\"isPreview\\\",\\\"section\\\",\\\"value\\\",\\\"sectionTitle\\\"],[true,true,\\\"subjective\\\",[23,[\\\"encounter\\\",\\\"subjective\\\"]],[23,[\\\"encounter\\\",\\\"noteTypeHeading\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"encounter\\\",\\\"isSoapNote\\\"]]],null,{\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"encounter\\\",\\\"noAllergies\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[9],[0,\\\"Allergies recorded in this encounter:\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"read-only-complex-list\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"encounter\\\",\\\"allergies\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"li\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"span\\\"],[9],[1,[22,4,[\\\"description\\\"]],false],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,4,[\\\"comments\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"span\\\"],[9],[0,\\\"Comment: \\\"],[1,[22,4,[\\\"comments\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[4]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[11,\\\"data-element\\\",\\\"preview-encounter-objective\\\"],[9],[0,\\\"\\\\n            \\\"],[1,[27,\\\"encounter-note-section\\\",null,[[\\\"disabled\\\",\\\"isPreview\\\",\\\"section\\\",\\\"value\\\"],[true,true,\\\"objective\\\",[23,[\\\"encounter\\\",\\\"objective\\\"]]]]],false],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[11,\\\"data-element\\\",\\\"preview-encounter-assessment\\\"],[9],[0,\\\"\\\\n            \\\"],[1,[27,\\\"encounter-note-section\\\",null,[[\\\"disabled\\\",\\\"isPreview\\\",\\\"section\\\",\\\"value\\\"],[true,true,\\\"assessment\\\",[23,[\\\"encounter\\\",\\\"assessment\\\"]]]]],false],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"encounter\\\",\\\"noDiagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[9],[0,\\\"Diagnoses recorded in this encounter:\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"read-only-complex-list\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"encounter\\\",\\\"diagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"li\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"span\\\"],[9],[1,[22,3,[\\\"description\\\"]],false],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,3,[\\\"comments\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"span\\\"],[9],[0,\\\"Comment: \\\"],[1,[22,3,[\\\"comments\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[11,\\\"data-element\\\",\\\"preview-encounter-plan\\\"],[9],[0,\\\"\\\\n            \\\"],[1,[27,\\\"encounter-note-section\\\",null,[[\\\"disabled\\\",\\\"isPreview\\\",\\\"section\\\",\\\"value\\\"],[true,true,\\\"plan\\\",[23,[\\\"encounter\\\",\\\"plan\\\"]]]]],false],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"encounter\\\",\\\"noMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[9],[0,\\\"Medications recorded in this encounter:\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"read-only-complex-list\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"encounter\\\",\\\"medications\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"li\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"span\\\"],[9],[1,[22,2,[\\\"description\\\"]],false],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,2,[\\\"comments\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"span\\\"],[9],[0,\\\"Comment: \\\"],[1,[22,2,[\\\"comments\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"encounter\\\",\\\"addenda\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[11,\\\"data-element\\\",\\\"preview-encounter-addenda\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Addenda\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"read-only-complex-list\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"encounter\\\",\\\"addenda\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"li\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"span\\\"],[9],[1,[22,1,[\\\"note\\\"]],false],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"details\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[9],[1,[27,\\\"format-date-time-local\\\",[[22,1,[\\\"lastModifiedDateTimeUtc\\\"]]],[[\\\"format\\\",\\\"defaultText\\\"],[\\\"MM/DD/YYYY hh:mm a\\\",\\\"n/a\\\"]]],false],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"providerName\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"div\\\"],[9],[1,[22,1,[\\\"status\\\"]],false],[0,\\\" by \\\"],[1,[22,1,[\\\"provider\\\",\\\"providerName\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[22,1,[\\\"source\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"div\\\"],[9],[1,[22,1,[\\\"source\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-preview-encounter.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-preview-list\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"5sNHbWhM\", \"block\": \"{\\\"symbols\\\":[\\\"preview\\\",\\\"index\\\"],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"filter-bar\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[27,\\\"single-select\\\",null,[[\\\"value\\\",\\\"content\\\",\\\"data-element\\\",\\\"optionLabelPath\\\",\\\"optionValuePath\\\",\\\"sortLabels\\\",\\\"isShorter\\\"],[[23,[\\\"selectedPreviewType\\\"]],[23,[\\\"previewTypes\\\"]],\\\"preview-type\\\",\\\"label\\\",\\\"value\\\",false,true]]],false],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"previews\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"sortedPreviews\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[\\\"slc-row \\\",[27,\\\"if\\\",[[22,1,[\\\"isSelected\\\"]],\\\"active\\\"],null]]]],[12,\\\"data-guid\\\",[28,[[22,1,[\\\"identifyingGuid\\\"]]]]],[12,\\\"data-element\\\",[28,[\\\"preview-\\\",[22,2,[]]]]],[3,\\\"action\\\",[[22,0,[]],\\\"selectPreview\\\",[22,1,[]]]],[9],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"isSigned\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right icon-lock\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"isAbnormal\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right icon-disk\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"isEncounter\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"p\\\"],[12,\\\"class\\\",[28,[[27,\\\"unless\\\",[[22,1,[\\\"isSelected\\\"]],\\\"p-link\\\"],null]]]],[9],[1,[27,\\\"format-date-time-utc\\\",[[22,1,[\\\"eventDateTimeUtc\\\"]]],[[\\\"format\\\"],[\\\"MMM DD YYYY\\\"]]],false],[10],[0,\\\"\\\\n                \\\"],[4,\\\"if\\\",[[22,1,[\\\"secondaryEventType\\\"]]],null,{\\\"statements\\\":[[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[1,[22,1,[\\\"secondaryEventType\\\"]],false],[10]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n                \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[1,[22,1,[\\\"primaryEventType\\\"]],false],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"eventDetail\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[0,\\\"CC: \\\"],[1,[22,1,[\\\"eventDetail\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"p\\\"],[12,\\\"class\\\",[28,[[27,\\\"unless\\\",[[22,1,[\\\"isSelected\\\"]],\\\"p-link\\\"],null]]]],[9],[1,[27,\\\"format-date-time-local\\\",[[22,1,[\\\"eventDateTimeUtc\\\"]]],[[\\\"format\\\"],[\\\"MMM DD YYYY\\\"]]],false],[10],[0,\\\"\\\\n                \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[1,[22,1,[\\\"displayText\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1,2]},null],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-preview-list.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-preview-order\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"pljddc8W\", \"block\": \"{\\\"symbols\\\":[\\\"test\\\",\\\"index\\\"],\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"order\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"order-history\\\",null,[[\\\"history\\\",\\\"status\\\"],[[23,[\\\"order\\\",\\\"history\\\"]],[23,[\\\"order\\\",\\\"currentStatus\\\"]]]]],false],[0,\\\"\\\\n\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row col-3\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"column wrap\\\"],[11,\\\"data-element\\\",\\\"preview-order-lab\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[1,[27,\\\"unbound\\\",[[23,[\\\"order\\\",\\\"labDescription\\\"]]],null],false],[10],[0,\\\"\\\\n            \\\"],[1,[23,[\\\"order\\\",\\\"labDisplayName\\\"]],false],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"column wrap\\\"],[11,\\\"data-element\\\",\\\"preview-order-number\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"ORDER NUMBER\\\"],[10],[0,\\\"\\\\n            \\\"],[1,[23,[\\\"order\\\",\\\"orderNumber\\\"]],false],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"column wrap\\\"],[11,\\\"data-element\\\",\\\"preview-order-provider\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"REQUESTING PROVIDER\\\"],[10],[0,\\\"\\\\n            \\\"],[1,[23,[\\\"order\\\",\\\"requestingProviderName\\\"]],false],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[11,\\\"data-element\\\",\\\"preview-order-tests\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[1,[27,\\\"unbound\\\",[[23,[\\\"order\\\",\\\"serviceDescription\\\"]]],null],false],[0,\\\" ORDERED\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"d-complex-list-container\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"order\\\",\\\"tests\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"li\\\"],[11,\\\"class\\\",\\\"item\\\"],[12,\\\"data-element\\\",[28,[\\\"preview-order-test-\\\",[22,2,[]]]]],[9],[1,[27,\\\"unbound\\\",[[22,1,[]]],null],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1,2]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-preview-order.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-preview-result\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"oPARGrQt\", \"block\": \"{\\\"symbols\\\":[\\\"item\\\",\\\"index\\\",\\\"observation\\\",\\\"index\\\",\\\"signer\\\",\\\"index\\\"],\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"result\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-4\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[11,\\\"data-element\\\",\\\"preview-result-lab-description\\\"],[9],[1,[23,[\\\"result\\\",\\\"labDescription\\\"]],false],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"preview-result-lab\\\"],[9],[1,[23,[\\\"result\\\",\\\"labDisplayName\\\"]],false],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"preview-result-medical-director\\\"],[9],[1,[23,[\\\"result\\\",\\\"medicalDirector\\\"]],false],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-4\\\"],[11,\\\"data-element\\\",\\\"preview-result-accession-number\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Accession Number\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[9],[1,[23,[\\\"result\\\",\\\"labAccessionNumber\\\"]],false],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-4\\\"],[11,\\\"data-element\\\",\\\"preview-result-provider\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Requesting Provider\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[9],[1,[23,[\\\"result\\\",\\\"requestingProviderName\\\"]],false],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"result\\\",\\\"isSigned\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12 signers clearfix\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"SIGNED\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isSignersExpanded\\\"]]],null,{\\\"statements\\\":[[4,\\\"each\\\",[[23,[\\\"result\\\",\\\"signers\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[12,\\\"data-element\\\",[28,[\\\"preview-result-signer-\\\",[22,6,[]]]]],[9],[0,\\\"\\\\n                            \\\"],[1,[22,5,[\\\"signedBy\\\"]],false],[0,\\\" \\\"],[1,[22,5,[\\\"signedOn\\\"]],false],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[5,6]},null],[0,\\\"                    \\\"],[7,\\\"a\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"toggleMoreLessSigners\\\"],[[\\\"bubbles\\\"],[false]]],[9],[0,\\\"less\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"preview-result-signer\\\"],[9],[0,\\\"\\\\n                        \\\"],[1,[23,[\\\"firstSigner\\\",\\\"signedBy\\\"]],false],[0,\\\" \\\"],[1,[23,[\\\"firstSigner\\\",\\\"signedOn\\\"]],false],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"result\\\",\\\"hasMultipleSigners\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"a\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"toggleMoreLessSigners\\\"],[[\\\"bubbles\\\"],[false]]],[9],[0,\\\"more\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}],[0,\\\"            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"result\\\",\\\"comment\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"COMMENT\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"preview-result-comment\\\"],[9],[1,[23,[\\\"result\\\",\\\"comment\\\"]],false],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[11,\\\"data-element\\\",\\\"preview-result-tests\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[1,[23,[\\\"result\\\",\\\"serviceDescription\\\"]],false],[0,\\\" and Results\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"list list-hover list-icon\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"resultItemsWrapper\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"li\\\"],[12,\\\"class\\\",[28,[\\\"icon-exand-collapse \\\",[27,\\\"if\\\",[[22,1,[\\\"isExpanded\\\"]],\\\"icon-pf-color-40\\\",\\\"icon-pf-color-02\\\"],null],\\\" \\\",[27,\\\"if\\\",[[22,1,[\\\"isExpanded\\\"]],\\\"is-expanded\\\"],null]]]],[12,\\\"data-element\\\",[28,[\\\"preview-result-test-\\\",[22,2,[]]]]],[3,\\\"action\\\",[[22,0,[]],\\\"toggleExpansion\\\",[22,1,[]]],[[\\\"bubbles\\\"],[false]]],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"isAbnormal\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon icon-disk\\\"],[11,\\\"data-element\\\",\\\"abnormal-icon\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                            \\\"],[1,[22,1,[\\\"testName\\\"]],false],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"isExpanded\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"observations\\\"],[9],[0,\\\"\\\\n                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"slc-header clearfix no-icon\\\"],[9],[0,\\\"\\\\n                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"slc-header-inner row\\\"],[9],[0,\\\"\\\\n                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[0,\\\"OBSERVATION\\\"],[10],[0,\\\"\\\\n                                        \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[[27,\\\"if\\\",[[23,[\\\"result\\\",\\\"isDiagnostic\\\"]],\\\"col-xs-2\\\",\\\"col-xs-5\\\"],null]]]],[9],[0,\\\"RESULT\\\"],[10],[0,\\\"\\\\n                                        \\\"],[4,\\\"if\\\",[[23,[\\\"result\\\",\\\"isDiagnostic\\\"]]],null,{\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[0,\\\"REFERENCE / UoM\\\"],[10]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-4\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"result\\\",\\\"isDiagnostic\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                                RESULTED DATE/TIME\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                                PERFORMED DATE/TIME\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                                        \\\"],[10],[0,\\\"\\\\n                                    \\\"],[10],[0,\\\"\\\\n                                \\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"each\\\",[[22,1,[\\\"observations\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[\\\"slc-row clearfix \\\",[27,\\\"unless\\\",[[23,[\\\"result\\\",\\\"isDiagnostic\\\"]],\\\"imaging\\\"],null]]]],[9],[0,\\\"\\\\n                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[12,\\\"data-element\\\",[28,[\\\"preview-obs-\\\",[22,4,[]]]]],[9],[0,\\\"\\\\n                                            \\\"],[7,\\\"p\\\"],[9],[1,[22,3,[\\\"value\\\"]],false],[10],[0,\\\"\\\\n                                        \\\"],[10],[0,\\\"\\\\n                                        \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[[27,\\\"if\\\",[[23,[\\\"result\\\",\\\"isDiagnostic\\\"]],\\\"col-xs-2\\\",\\\"col-xs-5\\\"],null]]]],[12,\\\"data-element\\\",[28,[\\\"preview-obs-result-\\\",[22,4,[]]]]],[9],[0,\\\"\\\\n                                            \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-semibold\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,3,[\\\"isAbnormal\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                                    \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon icon-disk\\\"],[11,\\\"data-element\\\",\\\"abnormal-icon\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                                                \\\"],[1,[22,3,[\\\"observationValue\\\"]],true],[0,\\\"\\\\n                                            \\\"],[10],[0,\\\"\\\\n                                        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"result\\\",\\\"isDiagnostic\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[12,\\\"data-element\\\",[28,[\\\"preview-obs-range-\\\",[22,4,[]]]]],[9],[0,\\\"\\\\n                                                \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,3,[\\\"abnormalFlag\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"abnormal\\\"],[9],[1,[22,3,[\\\"abnormalFlag\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                                                    \\\"],[1,[22,3,[\\\"referencesRange\\\"]],false],[0,\\\"\\\\n                                                \\\"],[10],[0,\\\"\\\\n                                            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-4\\\"],[12,\\\"data-element\\\",[28,[\\\"preview-obs-date-\\\",[22,4,[]]]]],[9],[0,\\\"\\\\n                                            \\\"],[7,\\\"p\\\"],[9],[1,[27,\\\"format-date-time-ignore-offset\\\",[[22,3,[\\\"observationDateTimeOffset\\\"]]],null],false],[10],[0,\\\"\\\\n                                        \\\"],[10],[0,\\\"\\\\n                                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3,4]},null],[0,\\\"                            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1,2]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-preview-result.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-preview\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"uWI0UB6I\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"header\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isAbnormal\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-disk\\\"],[11,\\\"data-element\\\",\\\"preview-abnormal\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"isLocked\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-lock\\\"],[11,\\\"data-element\\\",\\\"preview-lock\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"icon-go-away\\\"],[11,\\\"data-dismiss\\\",\\\"modal\\\"],[11,\\\"data-element\\\",\\\"preview-close\\\"],[11,\\\"aria-hidden\\\",\\\"true\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"closePreviews\\\"]],[9],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"title\\\"],[11,\\\"data-element\\\",\\\"preview-header-title\\\"],[9],[1,[21,\\\"headerTitle\\\"],false],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"errorMessage\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"error-message\\\"],[11,\\\"data-element\\\",\\\"preview-error-message\\\"],[9],[1,[21,\\\"errorMessage\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"preview-pane-container\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[27,\\\"component\\\",[[23,[\\\"previewContext\\\",\\\"componentName\\\"]]],[[\\\"previewContext\\\",\\\"openPreview\\\"],[[23,[\\\"previewContext\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"openPreview\\\"],null]]]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-preview.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-previews\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"zxdXlMcJ\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"patient\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"icon-history\\\"],[11,\\\"data-element\\\",\\\"quick-preview-icon\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"togglePreviews\\\"]],[9],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"popover-modal\\\",null,[[\\\"isPopoverVisible\\\",\\\"targetSelector\\\",\\\"containerSelector\\\",\\\"height\\\",\\\"width\\\",\\\"minimumArrowPadding\\\"],[[23,[\\\"arePreviewsVisible\\\"]],\\\".patient-previews .icon-history\\\",\\\".charts.outlet\\\",[23,[\\\"height\\\"]],748,200]],{\\\"statements\\\":[[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"popover-content\\\"],[9],[0,\\\"\\\\n            \\\"],[1,[27,\\\"patient-preview-list\\\",null,[[\\\"isVisible\\\",\\\"patientPracticeGuid\\\",\\\"selectPreview\\\",\\\"clearError\\\",\\\"updateHeader\\\",\\\"previewError\\\"],[[23,[\\\"arePreviewsVisible\\\"]],[23,[\\\"patientPracticeGuid\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"selectPreview\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"clearError\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"updateHeader\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"previewError\\\"],null]]]],false],[0,\\\"\\\\n            \\\"],[1,[27,\\\"patient-preview\\\",null,[[\\\"patient\\\",\\\"currentPreview\\\",\\\"errorMessage\\\",\\\"headerTitle\\\",\\\"isLocked\\\",\\\"isAbnormal\\\",\\\"openPreview\\\",\\\"togglePreviews\\\",\\\"previewError\\\"],[[23,[\\\"patient\\\"]],[23,[\\\"currentPreview\\\"]],[23,[\\\"previewErrorMessage\\\"]],[23,[\\\"headerTitle\\\"]],[23,[\\\"showHeaderLock\\\"]],[23,[\\\"showHeaderAbnormal\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"openPreview\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"togglePreviews\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"previewError\\\"],null]]]],false],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\\n        \\\"],[7,\\\"footer\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"noPreviewSelected\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn pull-right\\\"],[11,\\\"data-element\\\",\\\"open-preview\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"openPreview\\\"]],[9],[0,\\\"\\\\n                    \\\"],[1,[21,\\\"openPreviewText\\\"],false],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n            \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn\\\"],[11,\\\"data-element\\\",\\\"preview-footer-close\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"togglePreviews\\\"]],[9],[0,\\\"Close\\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-previews.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-risk-score\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"DTT/ZMWe\", \"block\": \"{\\\"symbols\\\":[\\\"card\\\",\\\"header\\\"],\\\"statements\\\":[[1,[27,\\\"data-tunnel\\\",null,[[\\\"name\\\",\\\"onDataReceived\\\"],[\\\"patient-risk-score\\\",[27,\\\"perform\\\",[[23,[\\\"loadSocialHistory\\\"]]],null]]]],false],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"composable-card\\\",null,[[\\\"data-element\\\"],[\\\"patient-risk-score-card\\\"]],{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"header\\\"]]],null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,2,[\\\"title\\\"]]],null,{\\\"statements\\\":[[0,\\\"            Patient risk score\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"isLoading\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isAllowedToEditSummary\\\"]]],null,{\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"patientRiskScore\\\",\\\"optionGuid\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"a\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"edit\\\"],null]],[11,\\\"class\\\",\\\"icon icon-add icon--md text-color-placeholder box-margin-Lmd-v2\\\"],[11,\\\"data-element\\\",\\\"patient-risk-score-add-button\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[7,\\\"a\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"print\\\"],null]],[11,\\\"class\\\",\\\"icon icon-printer icon--md text-color-placeholder box-margin-Lmd-v2\\\"],[11,\\\"data-element\\\",\\\"print-patient-risk-score-button\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[2]},null],[4,\\\"component\\\",[[22,1,[\\\"content\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"patientRiskScore\\\",\\\"optionGuid\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"ul\\\"],[12,\\\"class\\\",[28,[\\\"list list--default \\\",[27,\\\"if\\\",[[23,[\\\"isAllowedToEditSummary\\\"]],\\\"list--selectable list--hover\\\"],null]]]],[9],[0,\\\"\\\\n                \\\"],[7,\\\"li\\\"],[12,\\\"onclick\\\",[27,\\\"if\\\",[[23,[\\\"isAllowedToEditSummary\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"edit\\\"],null]],null]],[11,\\\"data-element\\\",\\\"patient-risk-score-item\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"a\\\"],[9],[1,[23,[\\\"patientRiskScore\\\",\\\"description\\\"]],false],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"box-margin-Lmd-v2\\\"],[9],[1,[23,[\\\"patientRiskScore\\\",\\\"riskScore\\\"]],false],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"box-margin-Lmd-v2\\\"],[9],[1,[23,[\\\"patientRiskScore\\\",\\\"dateAssigned\\\"]],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"text-color-placeholder box-margin-Bn\\\"],[11,\\\"data-element\\\",\\\"patient-risk-score-placeholder-text\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isLoading\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    Loading patient risk score...\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"error\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        Could not load patient risk score. Try again later.\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                        No patient risk score recorded\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null],[0,\\\"\\\\n\\\"],[4,\\\"print-preview-content\\\",null,[[\\\"printTitle\\\",\\\"isVisible\\\"],[[23,[\\\"printTitle\\\"]],[23,[\\\"isPrintPreviewVisible\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"print-patient-risk-score-section\\\",null,[[\\\"content\\\",\\\"patient\\\",\\\"class\\\"],[[23,[\\\"patientRiskScore\\\"]],[23,[\\\"patient\\\"]],\\\"sh-print chart-print-container\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-risk-score.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-search\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"2S9L1/sg\", \"block\": \"{\\\"symbols\\\":[\\\"patient\\\",\\\"patient\\\",\\\"patient\\\"],\\\"statements\\\":[[7,\\\"div\\\"],[12,\\\"class\\\",[28,[\\\"textfield-wrapper \\\",[27,\\\"if\\\",[[23,[\\\"hasError\\\"]],\\\"error\\\"],null]]]],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"selectedPatients\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[\\\"pill \\\",[27,\\\"if\\\",[[23,[\\\"isDisabled\\\"]],\\\"disabled\\\"],null]]]],[9],[0,\\\"\\\\n        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"name\\\"],[9],[1,[22,3,[\\\"firstName\\\"]],false],[0,\\\" \\\"],[1,[22,3,[\\\"lastName\\\"]],false],[10],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"remove\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"removeSelectedPatient\\\",[22,3,[]]]],[9],[0,\\\"×\\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3]},null],[4,\\\"if\\\",[[23,[\\\"showInput\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[1,[27,\\\"d-text-field\\\",null,[[\\\"classNames\\\",\\\"placeholder\\\",\\\"type\\\",\\\"value\\\",\\\"data-element\\\",\\\"disabled\\\",\\\"isShorter\\\",\\\"class\\\"],[\\\"left filtered-search-input\\\",\\\"Search patient name, DOB or SSN\\\",\\\"text\\\",[23,[\\\"searchTerm\\\"]],\\\"patient-search\\\",[23,[\\\"isDisabled\\\"]],[23,[\\\"isShorter\\\"]],[27,\\\"concat\\\",[[27,\\\"if\\\",[[23,[\\\"hasError\\\"]],\\\"error\\\"],null],\\\" \\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn filtered-search-btn\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"search\\\"]],[9],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"glyphicon glyphicon-search\\\"],[9],[10],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showHints\\\"]]],null,{\\\"statements\\\":[[7,\\\"div\\\"],[12,\\\"class\\\",[28,[\\\"search-hints \\\",[27,\\\"if\\\",[[23,[\\\"isShorter\\\"]],\\\"is-shorter\\\"],null]]]],[9],[0,\\\"\\\\n    \\\"],[7,\\\"ul\\\"],[9],[0,\\\"\\\\n        \\\"],[4,\\\"if\\\",[[23,[\\\"searchType\\\",\\\"name\\\"]]],null,{\\\"statements\\\":[[7,\\\"li\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"term-label\\\"],[9],[0,\\\"Name:\\\"],[10],[7,\\\"b\\\"],[9],[1,[21,\\\"valueName\\\"],false],[10],[10]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n        \\\"],[4,\\\"if\\\",[[23,[\\\"searchType\\\",\\\"date\\\"]]],null,{\\\"statements\\\":[[7,\\\"li\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"term-label\\\"],[9],[0,\\\"DOB:\\\"],[10],[7,\\\"b\\\"],[9],[1,[21,\\\"valueDate\\\"],false],[10],[10]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n        \\\"],[4,\\\"if\\\",[[23,[\\\"searchType\\\",\\\"ssn\\\"]]],null,{\\\"statements\\\":[[7,\\\"li\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"term-label\\\"],[9],[0,\\\"SSN:\\\"],[10],[7,\\\"b\\\"],[9],[1,[21,\\\"valueSSN\\\"],false],[10],[10]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n        \\\"],[4,\\\"if\\\",[[23,[\\\"searchType\\\",\\\"prn\\\"]]],null,{\\\"statements\\\":[[7,\\\"li\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"term-label\\\"],[9],[0,\\\"PRN:\\\"],[10],[7,\\\"b\\\"],[9],[1,[21,\\\"valuePRN\\\"],false],[10],[10]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n        \\\"],[4,\\\"if\\\",[[23,[\\\"invalidSearchTerm\\\"]]],null,{\\\"statements\\\":[[7,\\\"li\\\"],[11,\\\"class\\\",\\\"invalid-search-term\\\"],[9],[0,\\\"Invalid Search Term\\\"],[10]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"useSchedulerResults\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"showResults\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"id\\\",\\\"search-results\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"header\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"data\\\"],[9],[0,\\\"PATIENT/ID\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"data\\\"],[9],[0,\\\"DOB/SSN\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"data\\\"],[9],[0,\\\"PHONE/CITY\\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"ul\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"results\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"li\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"selectPatient\\\",[22,2,[]]],null]],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"data\\\"],[9],[1,[22,2,[\\\"fullName\\\"]],false],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"data\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[22,2,[\\\"birthDate\\\"]]],null],false],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,2,[\\\"homePhone\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"data\\\"],[9],[0,\\\"H \\\"],[1,[27,\\\"format-phone\\\",[[22,2,[\\\"homePhone\\\"]]],null],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[22,2,[\\\"mobilePhone\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"data\\\"],[9],[0,\\\"M \\\"],[1,[27,\\\"format-phone\\\",[[22,2,[\\\"mobilePhone\\\"]]],null],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[22,2,[\\\"officePhone\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"data\\\"],[9],[0,\\\"O \\\"],[1,[27,\\\"format-phone\\\",[[22,2,[\\\"officePhone\\\"]]],null],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"h19\\\"],[11,\\\"class\\\",\\\"header19  no-patients-found\\\"],[9],[0,\\\"No Patients Found\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"useSchedulerResults\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"showResults\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[\\\"scheduler-search-results \\\",[27,\\\"if\\\",[[23,[\\\"isShorter\\\"]],\\\"is-shorter\\\"],null]]]],[9],[0,\\\"\\\\n        \\\"],[7,\\\"ul\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"results\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"li\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"selectPatient\\\",[22,1,[]]],null]],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item-image\\\"],[9],[1,[27,\\\"patient-image\\\",null,[[\\\"hasPatientImage\\\",\\\"patientPracticeGuid\\\"],[[22,1,[\\\"hasPatientImage\\\"]],[22,1,[\\\"patientPracticeGuid\\\"]]]]],false],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item-data\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"data-name\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"h19\\\"],[11,\\\"class\\\",\\\"full-name header19\\\"],[9],[1,[22,1,[\\\"fullName\\\"]],false],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-666 age\\\"],[9],[1,[22,1,[\\\"age\\\"]],false],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"patientRecordNumber\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"data\\\"],[9],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"light-color\\\"],[9],[0,\\\"PRN\\\"],[10],[0,\\\" \\\"],[1,[22,1,[\\\"patientRecordNumber\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"data\\\"],[9],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"light-color\\\"],[9],[0,\\\"DOB\\\"],[10],[0,\\\" \\\"],[1,[27,\\\"format-date-time-utc\\\",[[22,1,[\\\"birthDate\\\"]]],null],false],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"data\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"light-color\\\"],[9],[1,[22,1,[\\\"genderChar\\\"]],false],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"mobilePhone\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[1,[27,\\\"format-phone\\\",[[22,1,[\\\"mobilePhone\\\"]]],null],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                    \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"hasAddress\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"data data-address clear-fix\\\"],[9],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"light-color\\\"],[9],[0,\\\"Address\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"streetAddress1\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[1,[22,1,[\\\"streetAddress1\\\"]],false],[0,\\\" \\\"],[1,[22,1,[\\\"streetAddress2\\\"]],false],[0,\\\",\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                            \\\"],[1,[22,1,[\\\"city\\\"]],false],[0,\\\", \\\"],[1,[22,1,[\\\"state\\\"]],false],[0,\\\" \\\"],[1,[22,1,[\\\"postalCode\\\"]],false],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"li\\\"],[11,\\\"class\\\",\\\"no-border\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"h19\\\"],[11,\\\"class\\\",\\\"header19 no-patients-found\\\"],[9],[0,\\\"No Patients Found\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showFooter\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"footer-action\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"footerActionLink\\\"]],[9],[0,\\\"\\\\n                \\\"],[7,\\\"h12\\\"],[11,\\\"class\\\",\\\"header12\\\"],[9],[1,[21,\\\"footerText\\\"],false],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-search.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-search2-item\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"p5Zquhfx\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"a\\\"],[9],[1,[23,[\\\"content\\\",\\\"label\\\"]],false],[0,\\\": \\\"],[1,[23,[\\\"content\\\",\\\"valuePlaceHolder\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-search2-item.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-search2-selected-item\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"Gt3QTh8T\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"div\\\"],[9],[1,[23,[\\\"content\\\",\\\"label\\\"]],false],[0,\\\": \\\"],[1,[23,[\\\"content\\\",\\\"valuePlaceHolder\\\"]],false],[10],[0,\\\"\\\\n\\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"ember-select-search-choice-close icon-go-away-small\\\"],[11,\\\"href\\\",\\\"#\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"removeSelectItem\\\"]],[9],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-search2-selected-item.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-search2\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"semOzgiB\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\" \\\"],[1,[27,\\\"multi-select\\\",null,[[\\\"content\\\",\\\"class\\\",\\\"placeholder\\\",\\\"optionLabelPath\\\",\\\"optionValuePath\\\",\\\"selections\\\",\\\"query\\\",\\\"maxSelections\\\",\\\"optionComponent\\\",\\\"selectionItemComponent\\\",\\\"noResultsText\\\",\\\"openOnFocus\\\",\\\"includeSearchIcon\\\",\\\"searchIconPressesEnter\\\",\\\"isShorter\\\"],[[23,[\\\"searchOptions\\\"]],\\\"block\\\",[23,[\\\"prompt\\\"]],\\\"value\\\",\\\"value\\\",[23,[\\\"searchFilters\\\"]],[23,[\\\"searchQuery\\\"]],[23,[\\\"allSearchOptions\\\",\\\"length\\\"]],[23,[\\\"optionComponent\\\"]],[23,[\\\"selectionItemComponent\\\"]],\\\"\\\",true,true,true,true]]],false]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/patient-search2.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/pmh-detail\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"G/ZqqP0i\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\",\\\"section\\\"],\\\"statements\\\":[[4,\\\"detail-pane\\\",null,[[\\\"close\\\",\\\"class\\\",\\\"resizables\\\",\\\"resizeOnBreakPoint\\\",\\\"topSpacing\\\",\\\"isToolBoxVisible\\\",\\\"smallHeaderText\\\",\\\"bigHeaderText\\\"],[\\\"save\\\",\\\"side-fixed col-xs-5 summary-details pmh-detail\\\",[23,[\\\"resizables\\\"]],true,50,false,\\\"Past medical history\\\",\\\"Record past medical history\\\"]],{\\\"statements\\\":[[4,\\\"detail-pane-body\\\",null,[[\\\"sectionContext\\\"],[[22,1,[]]]],{\\\"statements\\\":[[0,\\\"        \\\"],[1,[27,\\\"view-spinner\\\",null,[[\\\"isLoading\\\"],[[23,[\\\"save\\\",\\\"isRunning\\\"]]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"visibleSections\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[12,\\\"data-element\\\",[28,[\\\"past-medical-history-section-\\\",[22,2,[\\\"key\\\"]]]]],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[1,[22,2,[\\\"title\\\"]],false],[10],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[22,2,[\\\"isFreeTextDisabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[27,\\\"text-area-counter\\\",null,[[\\\"autosize\\\",\\\"value\\\",\\\"placeholderText\\\",\\\"maxlength\\\",\\\"rows\\\"],[true,[22,2,[\\\"value\\\"]],[22,2,[\\\"placeholder\\\"]],\\\"4000\\\",\\\"3\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[22,2,[\\\"structuredInstructions\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[22,2,[\\\"structuredRoute\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[4,\\\"link-to\\\",[[22,2,[\\\"structuredRoute\\\"]],[23,[\\\"patient\\\",\\\"patientPracticeGuid\\\"]]],null,{\\\"statements\\\":[[1,[22,2,[\\\"structuredInstructions\\\"]],false]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[22,2,[\\\"structuredAction\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"a\\\"],[12,\\\"data-element\\\",[28,[\\\"pmh-action-\\\",[22,2,[\\\"key\\\"]]]]],[11,\\\"href\\\",\\\"#\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"pmhAction\\\",[22,2,[\\\"structuredAction\\\"]]]],[9],[1,[22,2,[\\\"structuredInstructions\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[]},null],[4,\\\"detail-pane-footer\\\",null,[[\\\"sectionContext\\\"],[[22,1,[]]]],{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"revert\\\"]],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-primary\\\"],[11,\\\"data-element\\\",\\\"pmh-save-btn\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"save\\\"]],[9],[0,\\\"Save\\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/pmh-detail.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/pmh-section\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"Ehh7BuMd\", \"block\": \"{\\\"symbols\\\":[\\\"card\\\",\\\"field\\\",\\\"header\\\"],\\\"statements\\\":[[1,[27,\\\"data-tunnel\\\",null,[[\\\"name\\\",\\\"onDataReceived\\\"],[\\\"update-editing-past-medical-history\\\",[27,\\\"action\\\",[[22,0,[]],\\\"setIsEditing\\\"],null]]]],false],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"composable-card\\\",null,null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"header\\\"]]],null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,3,[\\\"title\\\"]]],null,{\\\"statements\\\":[[0,\\\"            Past medical history\\\\n            \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"icon-printer icon--md text-color-placeholder box-margin-Lmd-v2\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"print\\\"],null]],[11,\\\"data-element\\\",\\\"print-pmh-button\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[3]},null],[4,\\\"component\\\",[[22,1,[\\\"content\\\"]]],null,{\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"defaultMessage\\\"]]],null,{\\\"statements\\\":[[4,\\\"each\\\",[[23,[\\\"cardFields\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"card-field\\\",null,[[\\\"isAllowedToEdit\\\",\\\"isEditing\\\",\\\"selectedItem\\\",\\\"data-element\\\",\\\"card-data-element\\\",\\\"content\\\",\\\"title\\\",\\\"create\\\",\\\"edit\\\"],[[23,[\\\"isAllowedToEdit\\\"]],[22,2,[\\\"isEditing\\\"]],[23,[\\\"selectedItem\\\"]],[27,\\\"concat\\\",[[22,2,[\\\"key\\\"]],\\\"-section\\\"],null],\\\"past-medical-history\\\",[22,2,[\\\"content\\\"]],[22,2,[\\\"title\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"create\\\",[22,2,[]]],null],[27,\\\"action\\\",[[22,0,[]],\\\"edit\\\",[22,2,[]]],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[7,\\\"p\\\"],[12,\\\"class\\\",[28,[\\\"text-color-placeholder box-margin-Bn box-padding-Txs-v2 \\\",[27,\\\"unless\\\",[[23,[\\\"defaultMessage\\\"]],\\\"hidden\\\"],null]]]],[11,\\\"data-element\\\",\\\"past-medical-history-placeholder-message\\\"],[9],[1,[21,\\\"defaultMessage\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null],[0,\\\"\\\\n\\\"],[4,\\\"print-preview-content\\\",null,[[\\\"printTitle\\\",\\\"isVisible\\\"],[[23,[\\\"printTitle\\\"]],[23,[\\\"isPrintPreviewVisible\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"print-pmh-section\\\",null,[[\\\"content\\\",\\\"patient\\\",\\\"class\\\"],[[23,[\\\"pastMedicalHistory\\\",\\\"sections\\\"]],[23,[\\\"patient\\\"]],\\\"pmh-print chart-print-container\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/pmh-section.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/pmh-tab\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"FdFgCWn9\", \"block\": \"{\\\"symbols\\\":[\\\"item\\\"],\\\"statements\\\":[[7,\\\"header\\\"],[9],[0,\\\"\\\\n    \\\"],[4,\\\"if\\\",[[23,[\\\"pastMedicalHistory\\\"]]],null,{\\\"statements\\\":[[7,\\\"a\\\"],[11,\\\"data-element\\\",\\\"add-all-pmh-link\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"addAll\\\"]],[9],[0,\\\"Add all\\\"],[10]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"results-list\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isLoading\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"results-error\\\"],[9],[0,\\\"Loading past medical history...\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"error\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"results-error\\\"],[9],[1,[21,\\\"error\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"each\\\",[[23,[\\\"sortedPastMedicalHistory\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-link flex-template-item-container\\\"],[12,\\\"title\\\",[22,1,[\\\"text\\\"]]],[3,\\\"action\\\",[[22,0,[]],\\\"insertText\\\",[22,1,[]]]],[9],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"template-item\\\"],[9],[1,[22,1,[\\\"text\\\"]],false],[10],[4,\\\"if\\\",[[22,1,[\\\"wasInserted\\\"]]],null,{\\\"statements\\\":[[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon icon-checkmark\\\"],[9],[10]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"results-error\\\"],[9],[0,\\\"No past medical history\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/pmh-tab.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/prescription-item\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"/cV3x6t9\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"span\\\"],[11,\\\"class\\\",\\\"hint-text\\\"],[9],[1,[23,[\\\"prescription\\\",\\\"prescriptionType\\\"]],false],[1,[21,\\\"prescriptionStatusDisplay\\\"],false],[0,\\\":\\\"],[10],[0,\\\"\\\\n\\\"],[1,[27,\\\"datetime-formatted\\\",null,[[\\\"datetime\\\",\\\"isSourceInUtc\\\"],[[23,[\\\"prescription\\\",\\\"prescriptionDate\\\"]],false]]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"providerName\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"hint-text\\\"],[9],[0,\\\"Prescriber:\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"span\\\"],[9],[1,[21,\\\"providerName\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"hint-text\\\"],[9],[0,\\\"Refills:\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"prescription\\\",\\\"refillAsNeeded\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"span\\\"],[9],[0,\\\"PRN\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"span\\\"],[9],[1,[23,[\\\"prescription\\\",\\\"refills\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"prescription\\\",\\\"quantity\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"hint-text\\\"],[9],[0,\\\"Quantity:\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"span\\\"],[9],[1,[23,[\\\"prescription\\\",\\\"quantity\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/prescription-item.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/prescriptions-list\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"jz/eHxW7\", \"block\": \"{\\\"symbols\\\":[\\\"item\\\"],\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"sortedItems\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"prescription-item\\\",null,[[\\\"prescription\\\"],[[23,[\\\"sortedItems\\\",\\\"firstObject\\\"]]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"filteredItems\\\"]]],null,{\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"isExpanded\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"expand\\\"]],[9],[0,\\\"Show history (\\\"],[1,[23,[\\\"filteredItems\\\",\\\"length\\\"]],false],[0,\\\")\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"ul\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"filteredItems\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"li\\\"],[9],[1,[27,\\\"prescription-item\\\",null,[[\\\"prescription\\\"],[[22,1,[]]]]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"collapse\\\"]],[9],[0,\\\"Hide history\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"emptyPlaceHolder\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[1,[21,\\\"emptyPlaceHolder\\\"],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/prescriptions-list.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/previous-diagnoses\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"qYpqdOYA\", \"block\": \"{\\\"symbols\\\":[\\\"diagnosis\\\",\\\"diagnosis\\\"],\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"loadDiagnosesFailed\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[0,\\\"Can't load diagnoses. Please\\\\n        \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"loadDiagnoses\\\"]],[9],[0,\\\"try again.\\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"diagnoses\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"header\\\"],[9],[7,\\\"a\\\"],[11,\\\"data-element\\\",\\\"add-all-active-dx\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"addAllDiagnoses\\\"]],[9],[0,\\\"Add all active\\\"],[10],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"previous-diagnoses-results-list\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"h6\\\"],[11,\\\"class\\\",\\\"header6b\\\"],[9],[0,\\\"Active\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"diagnoses\\\",\\\"active\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"previous-diagnosis\\\",null,[[\\\"diagnosis\\\",\\\"transcriptGuid\\\",\\\"diagnosisSelected\\\",\\\"diagnosisDeselected\\\"],[[22,2,[]],[23,[\\\"transcriptGuid\\\"]],\\\"diagnosisSelected\\\",\\\"diagnosisDeselected\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[0,\\\"No active diagnoses\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"\\\\n        \\\"],[7,\\\"h6\\\"],[11,\\\"class\\\",\\\"header6b\\\"],[9],[0,\\\"Historical\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"diagnoses\\\",\\\"historical\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"previous-diagnosis\\\",null,[[\\\"diagnosis\\\",\\\"transcriptGuid\\\",\\\"diagnosisSelected\\\",\\\"diagnosisDeselected\\\"],[[22,1,[]],[23,[\\\"transcriptGuid\\\"]],\\\"diagnosisSelected\\\",\\\"diagnosisDeselected\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[0,\\\"No historical diagnoses\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[0,\\\"There are no diagnoses.\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/previous-diagnoses.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/previous-diagnosis\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"svcNxvnR\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-link\\\"],[11,\\\"data-element\\\",\\\"previous-diagnosis-item\\\"],[12,\\\"data-guid\\\",[28,[[23,[\\\"diagnosis\\\",\\\"diagnosisGuid\\\"]]]]],[3,\\\"action\\\",[[22,0,[]],\\\"toggleSelection\\\",[23,[\\\"diagnosis\\\"]]]],[9],[0,\\\"\\\\n    \\\"],[7,\\\"span\\\"],[9],[1,[23,[\\\"diagnosis\\\",\\\"description\\\"]],false],[10],[0,\\\"\\\\n    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"box-padding-Lsm-v2 acuity-display\\\"],[9],[1,[23,[\\\"diagnosis\\\",\\\"acuityDisplay\\\"]],false],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isEncounterDiagnosis\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon icon-checkmark pull-right\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/previous-diagnosis.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/previous-medication\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"NKQlhVMh\", \"block\": \"{\\\"symbols\\\":[\\\"item\\\",\\\"item\\\"],\\\"statements\\\":[[7,\\\"header\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"medications\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"a\\\"],[11,\\\"data-element\\\",\\\"add-all-active-meds\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"addAllMedications\\\"]],[9],[0,\\\"Add all active\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"previous-medications-results-list flex-grow\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"h6\\\"],[11,\\\"class\\\",\\\"header6b\\\"],[9],[0,\\\"ACTIVE MEDICATIONS FOR PATIENT\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"activeMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[15,\\\"components/encounter-medication\\\",[2]],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[0,\\\"No active medications\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"\\\\n    \\\"],[7,\\\"h6\\\"],[11,\\\"class\\\",\\\"header6b\\\"],[9],[0,\\\"HISTORICAL MEDICATIONS FOR PATIENT\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"historicalMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[15,\\\"components/encounter-medication\\\",[1]],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[0,\\\"No historical medications\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":true}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/previous-medication.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-access-history-section\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"uOitKC/z\", \"block\": \"{\\\"symbols\\\":[\\\"item\\\"],\\\"statements\\\":[[4,\\\"print-chart-section\\\",null,[[\\\"patientSummary\\\",\\\"title\\\"],[[23,[\\\"patient\\\"]],[23,[\\\"title\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table-content\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[9],[0,\\\"Access History\\\"],[10],[10],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Date\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-5\\\"],[9],[0,\\\"Accessed by provider\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-5\\\"],[9],[0,\\\"From practice\\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"content\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row even-stripe\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[1,[27,\\\"datetime-formatted\\\",null,[[\\\"datetime\\\"],[[22,1,[\\\"date\\\"]]]]],false],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-5 ellipses\\\"],[9],[1,[22,1,[\\\"providerName\\\"]],false],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-5 ellipses\\\"],[9],[1,[22,1,[\\\"practiceName\\\"]],false],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row even-stripe\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"No access history available for this patient\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-access-history-section.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-advanced-directives-section\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"dwFibdzT\", \"block\": \"{\\\"symbols\\\":[\\\"item\\\"],\\\"statements\\\":[[4,\\\"print-chart-section\\\",null,[[\\\"chartNote\\\",\\\"patientSummary\\\",\\\"title\\\",\\\"includeHeaderAndFooter\\\",\\\"chartNotePrintInfo\\\"],[[23,[\\\"chartNote\\\"]],[23,[\\\"patient\\\"]],[23,[\\\"title\\\"]],[23,[\\\"includeHeaderAndFooter\\\"]],[23,[\\\"chartNotePrintInfo\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table-content\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[9],[0,\\\"Advance Directive\\\"],[10],[10],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10\\\"],[9],[0,\\\"Directive\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Recorded\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"content\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10\\\"],[9],[1,[22,1,[\\\"comments\\\"]],false],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[22,1,[\\\"dateOfService\\\"]]],null],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"No advance directives recorded for this patient.\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-advanced-directives-section.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-allergies-section\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"vkA3kc1L\", \"block\": \"{\\\"symbols\\\":[\\\"allergy\\\",\\\"allergy\\\"],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[9],[1,[21,\\\"title\\\"],false],[0,\\\" Allergies\\\"],[10],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-7\\\"],[9],[0,\\\"Active Allergies\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[0,\\\"Severity/Reactions\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Onset\\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"data\\\"]]],null,{\\\"statements\\\":[[4,\\\"each\\\",[[23,[\\\"data\\\",\\\"active\\\",\\\"severitySorted\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[1,[27,\\\"print-allergy-item\\\",null,[[\\\"allergy\\\",\\\"showComments\\\",\\\"showEncounterComments\\\"],[[22,2,[]],[23,[\\\"showComments\\\"]],[23,[\\\"showEncounterComments\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"noKnownAllergies\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    Patient has no known active drug allergies\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                    No active \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"lowercase\\\"],[9],[1,[21,\\\"title\\\"],false],[10],[0,\\\" allergies\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[4,\\\"if\\\",[[23,[\\\"data\\\",\\\"inactive\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-7\\\"],[9],[0,\\\"Inactive Allergies\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[0,\\\"Severity/Reactions\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Onset\\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"data\\\",\\\"inactive\\\",\\\"severitySorted\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"print-allergy-item\\\",null,[[\\\"allergy\\\",\\\"showComments\\\",\\\"showEncounterComments\\\"],[[22,1,[]],[23,[\\\"showComments\\\"]],[23,[\\\"showEncounterComments\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"noKnownAllergies\\\"]]],null,{\\\"statements\\\":[[0,\\\"                Patient has no known drug allergies\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                No \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"lowercase\\\"],[9],[1,[21,\\\"title\\\"],false],[10],[0,\\\" allergies recorded\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-allergies-section.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-allergies\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"xCMN/h8A\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"print-chart-section\\\",null,[[\\\"patientSummary\\\",\\\"title\\\",\\\"chartNote\\\",\\\"includeHeaderAndFooter\\\",\\\"chartNotePrintInfo\\\"],[[23,[\\\"patient\\\"]],[23,[\\\"title\\\"]],[23,[\\\"chartNote\\\"]],[23,[\\\"includeHeaderAndFooter\\\"]],[23,[\\\"chartNotePrintInfo\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table-content\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[27,\\\"print-allergies-section\\\",null,[[\\\"data\\\",\\\"noKnownAllergies\\\",\\\"showAllComments\\\",\\\"title\\\",\\\"visibleComments\\\"],[[23,[\\\"drugAllergies\\\"]],[23,[\\\"noKnownAllergies\\\"]],[23,[\\\"showAllComments\\\"]],\\\"Drug\\\",[23,[\\\"visibleComments\\\"]]]]],false],[0,\\\"\\\\n        \\\"],[1,[27,\\\"print-allergies-section\\\",null,[[\\\"data\\\",\\\"showAllComments\\\",\\\"title\\\",\\\"visibleComments\\\"],[[23,[\\\"foodAllergies\\\"]],[23,[\\\"showAllComments\\\"]],\\\"Food\\\",[23,[\\\"visibleComments\\\"]]]]],false],[0,\\\"\\\\n        \\\"],[1,[27,\\\"print-allergies-section\\\",null,[[\\\"data\\\",\\\"showAllComments\\\",\\\"title\\\",\\\"visibleComments\\\"],[[23,[\\\"environmentalAllergies\\\"]],[23,[\\\"showAllComments\\\"]],\\\"Environmental\\\",[23,[\\\"visibleComments\\\"]]]]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-allergies.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-allergy-item\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"T5RR1gd6\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-7\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"print-allergen-text\\\"],[9],[1,[23,[\\\"allergy\\\",\\\"allergenText\\\"]],false],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"sub-paragraph\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showComments\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"allergy\\\",\\\"comments\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"transcript-comment\\\",null,[[\\\"transcriptComment\\\",\\\"comment\\\",\\\"commentType\\\",\\\"classNames\\\",\\\"isCollapsible\\\"],[[23,[\\\"allergy\\\"]],[23,[\\\"allergy\\\",\\\"comments\\\"]],\\\"Provider comment\\\",\\\"allergy-comment\\\",false]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"print-allergen-severity\\\"],[9],[1,[23,[\\\"allergy\\\",\\\"severityText\\\"]],false],[10],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"print-allergen-reaction\\\"],[9],[1,[23,[\\\"allergy\\\",\\\"reactionsText\\\"]],false],[10],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[11,\\\"data-element\\\",\\\"print-allergen-onset-date\\\"],[9],[1,[23,[\\\"allergy\\\",\\\"onsetText\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-allergy-item.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-chart-section\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"poKxR0jS\", \"block\": \"{\\\"symbols\\\":[\\\"&default\\\"],\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"includeHeaderAndFooter\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[27,\\\"print-patient-header\\\",null,[[\\\"patientSummary\\\",\\\"patientSnapshot\\\",\\\"showZip\\\"],[[23,[\\\"patientSummary\\\"]],[23,[\\\"patientSnapshot\\\"]],[23,[\\\"showZip\\\"]]]]],false],[0,\\\"\\\\n        \\\"],[1,[27,\\\"print-facility-header\\\",null,[[\\\"facilityGuid\\\",\\\"facilitySnapshot\\\"],[[23,[\\\"chartNote\\\",\\\"facilityGuid\\\"]],[23,[\\\"facilitySnapshot\\\"]]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"chartNote\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"print-encounter-header\\\",null,[[\\\"chartNote\\\",\\\"chartNotePrintInfo\\\",\\\"encounterType\\\",\\\"patient\\\"],[[23,[\\\"chartNote\\\"]],[23,[\\\"chartNotePrintInfo\\\"]],[23,[\\\"encounterType\\\"]],[23,[\\\"patientSummary\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"superbill\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"print-bill-header\\\",null,[[\\\"superbill\\\"],[[23,[\\\"superbill\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"includeChiefComplaint\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"header\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"h2\\\"],[9],[0,\\\"Chief complaint\\\"],[10],[0,\\\"\\\\n            \\\"],[1,[27,\\\"text-with-empty-state\\\",null,[[\\\"text\\\",\\\"title\\\",\\\"tagName\\\",\\\"class\\\"],[[23,[\\\"chartNote\\\",\\\"chiefComplaint\\\"]],\\\"chief complaint\\\",\\\"p\\\",\\\"formatted-text\\\"]]],false],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[14,1],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"includeFooter\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-logo\\\"],[9],[1,[27,\\\"pf-logo\\\",null,[[\\\"width\\\"],[\\\"150\\\"]]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-chart-section.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-device\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"JzdTjSFN\", \"block\": \"{\\\"symbols\\\":[\\\"snomedItem\\\"],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[11,\\\"data-element\\\",\\\"print-device-title\\\"],[9],[1,[23,[\\\"device\\\",\\\"userEnteredInfo\\\",\\\"userEnteredDeviceTypeName\\\"]],false],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe no-borders\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3 field-label\\\"],[9],[0,\\\"Unique Device Identifier\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-9\\\"],[9],[1,[23,[\\\"device\\\",\\\"udiInfo\\\",\\\"uniqueDeviceIdentifier\\\"]],false],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe no-borders\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3 field-label\\\"],[9],[0,\\\"GMDN PT name\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-9\\\"],[9],[1,[23,[\\\"device\\\",\\\"udiInfo\\\",\\\"gmdnPtName\\\"]],false],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe no-borders\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3 field-label\\\"],[9],[0,\\\"GMDN PT description\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-9\\\"],[9],[1,[23,[\\\"device\\\",\\\"udiInfo\\\",\\\"gmdnPtDefinition\\\"]],false],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe no-borders\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3 field-label\\\"],[9],[0,\\\"Expiration date\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-9\\\"],[9],[1,[21,\\\"expirationDateDisplay\\\"],false],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe no-borders\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3 field-label\\\"],[9],[0,\\\"Manufacture date\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-9\\\"],[9],[1,[21,\\\"manufactureDateDisplay\\\"],false],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe no-borders\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3 field-label\\\"],[9],[0,\\\"What MRI safety information does the labeling contain?\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-9\\\"],[9],[1,[23,[\\\"device\\\",\\\"udiInfo\\\",\\\"mriSafetyStatusDescription\\\"]],false],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe no-borders\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3 field-label\\\"],[9],[0,\\\"Device required to be labeled as containing natural rubber latex or dry natural rubber (21 CFR 801.437)\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-9\\\"],[9],[1,[23,[\\\"device\\\",\\\"udiInfo\\\",\\\"isNaturalRubberLatexInformationOnLabel\\\"]],false],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe no-borders\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3 field-label\\\"],[9],[0,\\\"Company name\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-9\\\"],[9],[1,[23,[\\\"device\\\",\\\"udiInfo\\\",\\\"companyName\\\"]],false],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe no-borders\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3 field-label\\\"],[9],[0,\\\"Brand name\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-9\\\"],[9],[1,[23,[\\\"device\\\",\\\"udiInfo\\\",\\\"brandName\\\"]],false],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe no-borders\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3 field-label\\\"],[9],[0,\\\"Serial number\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-9\\\"],[9],[1,[23,[\\\"device\\\",\\\"udiInfo\\\",\\\"deviceSerialNumber\\\"]],false],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe no-borders\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3 field-label\\\"],[9],[0,\\\"Lot/batch\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-9\\\"],[9],[1,[23,[\\\"device\\\",\\\"udiInfo\\\",\\\"lotNumber\\\"]],false],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe no-borders\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3 field-label\\\"],[9],[0,\\\"Version/model number\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-9\\\"],[9],[1,[23,[\\\"device\\\",\\\"udiInfo\\\",\\\"versionModelNumber\\\"]],false],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe no-borders\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3 field-label\\\"],[9],[0,\\\"Device description\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-9\\\"],[9],[1,[23,[\\\"device\\\",\\\"udiInfo\\\",\\\"deviceDescription\\\"]],false],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe no-borders\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3 field-label\\\"],[9],[0,\\\"Human cell, tissue or cellular or tissue-based product (HCT/P)\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-9\\\"],[9],[1,[27,\\\"yes-no\\\",[[23,[\\\"device\\\",\\\"udiInfo\\\",\\\"isHumanCellOrTissueProduct\\\"]]],null],false],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe no-borders\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3 field-label\\\"],[9],[0,\\\"Device Active\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-9\\\"],[11,\\\"data-element\\\",\\\"print-device-isactive\\\"],[9],[1,[21,\\\"activeDisplay\\\"],false],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe no-borders\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3 field-label\\\"],[9],[0,\\\"Implant date\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-9\\\"],[11,\\\"data-element\\\",\\\"print-device-implant-date\\\"],[9],[1,[21,\\\"implantDateDisplay\\\"],false],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe no-borders\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3 field-label\\\"],[9],[0,\\\"Notes\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-9\\\"],[9],[1,[21,\\\"notesDisplay\\\"],false],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"device\\\",\\\"udiInfo\\\",\\\"snomed\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe no-borders\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3 field-label\\\"],[9],[0,\\\"SNOMED CT Id\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-9\\\"],[9],[1,[22,1,[\\\"snomedCtCode\\\"]],false],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe no-borders\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3 field-label\\\"],[9],[0,\\\"SNOMED CT description\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-9\\\"],[9],[1,[22,1,[\\\"snomedCtDescription\\\"]],false],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-device.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-devices-section\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"SI6+p/DF\", \"block\": \"{\\\"symbols\\\":[\\\"device\\\"],\\\"statements\\\":[[4,\\\"print-chart-section\\\",null,[[\\\"patientSummary\\\",\\\"includeHeaderAndFooter\\\"],[[23,[\\\"patient\\\"]],[23,[\\\"includeHeaderAndFooter\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table-content\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row print-devices-header header-row\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[9],[7,\\\"h2\\\"],[9],[0,\\\"Implantable devices\\\"],[10],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"devices\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"print-device\\\",null,[[\\\"device\\\",\\\"users\\\"],[[22,1,[]],[23,[\\\"users\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"noImplantableDevices\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        Patient has no implantable devices\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                        No implantable devices recorded\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-devices-section.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-diagnoses-section\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"113mzyrz\", \"block\": \"{\\\"symbols\\\":[\\\"diagnosis\\\",\\\"medication\\\"],\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isIcd10\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6\\\"],[9],[7,\\\"h2\\\"],[9],[1,[21,\\\"title\\\"],false],[0,\\\" Diagnoses\\\"],[10],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2 box-padding-Tmd-v2\\\"],[9],[0,\\\"Acuity\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2 box-padding-Tmd-v2\\\"],[9],[0,\\\"Start\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2 box-padding-Tmd-v2\\\"],[9],[0,\\\"Stop\\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-8\\\"],[9],[1,[21,\\\"title\\\"],false],[0,\\\" Diagnoses\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Start\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Stop\\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"content\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe no-borders\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isIcd10\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6\\\"],[9],[0,\\\"\\\\n                \\\"],[1,[27,\\\"diagnosis-description\\\",null,[[\\\"diagnosis\\\",\\\"isIcd10Display\\\",\\\"hideAcuity\\\"],[[22,1,[]],true,true]]],false],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[11,\\\"data-element\\\",\\\"print-diagnosis-acuity-display\\\"],[9],[1,[22,1,[\\\"acuityDisplay\\\"]],false],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[11,\\\"data-element\\\",\\\"print-diagnosis-start-date\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[22,1,[\\\"startDate\\\"]]],null],false],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[11,\\\"data-element\\\",\\\"print-diagnosis-stop-date\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[22,1,[\\\"stopDate\\\"]]],null],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-8\\\"],[9],[0,\\\"\\\\n                \\\"],[1,[27,\\\"diagnosis-description\\\",null,[[\\\"diagnosis\\\"],[[22,1,[]]]]],false],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[11,\\\"data-element\\\",\\\"print-diagnosis-start-date\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[22,1,[\\\"startDate\\\"]]],null],false],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[11,\\\"data-element\\\",\\\"print-diagnosis-stop-date\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[22,1,[\\\"stopDate\\\"]]],null],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row sub-paragraph\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showDiagnosisComment\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[22,1,[\\\"diagnosisComment\\\",\\\"comment\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[27,\\\"transcript-comment\\\",null,[[\\\"transcriptComment\\\",\\\"isCollapsible\\\",\\\"commentType\\\",\\\"patientPracticeGuid\\\",\\\"oneline\\\"],[[22,1,[\\\"diagnosisComment\\\"]],false,\\\"Comment\\\",[22,1,[\\\"patientPracticeGuid\\\"]],false]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"showEncounterComment\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[22,1,[\\\"encounterCommentsWithComment\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[27,\\\"transcript-comments\\\",null,[[\\\"items\\\",\\\"isCollapsible\\\",\\\"commentType\\\",\\\"patientPracticeGuid\\\",\\\"isExpanded\\\",\\\"hideCollapseLink\\\",\\\"oneline\\\",\\\"firstCommentOneLine\\\"],[[22,1,[\\\"encounterCommentsWithComment\\\"]],false,\\\"Encounter comment\\\",[22,1,[\\\"patientPracticeGuid\\\"]],true,true,false,false]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"showMedication\\\"]]],null,{\\\"statements\\\":[[4,\\\"each\\\",[[22,1,[\\\"medications\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"br\\\"],[9],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"hint-text13\\\"],[9],[0,\\\"Medication\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"span\\\"],[11,\\\"data-element\\\",\\\"print-diagnosis-medication-name\\\"],[9],[1,[22,2,[\\\"tradeName\\\"]],false],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,2,[\\\"startDateTime\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"hint-text13\\\"],[9],[0,\\\"Start:\\\"],[10],[0,\\\"\\\\n                        \\\"],[1,[27,\\\"datetime-formatted\\\",null,[[\\\"datetime\\\",\\\"data-element\\\"],[[22,2,[\\\"startDateTime\\\"]],\\\"print-diagnosis-medication-start-date\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[22,2,[\\\"stopDateTime\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"hint-text13\\\"],[9],[0,\\\"Stop:\\\"],[10],[0,\\\"\\\\n                        \\\"],[1,[27,\\\"datetime-formatted\\\",null,[[\\\"datetime\\\",\\\"data-element\\\"],[[22,2,[\\\"stopDateTime\\\"]],\\\"print-diagnosis-medication-stop-date\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\\n\\\"]],\\\"parameters\\\":[1]},{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"\\\\n            No  \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"lowercase\\\"],[9],[1,[21,\\\"title\\\"],false],[10],[0,\\\" diagnoses\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-diagnoses-section.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-diagnoses\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"RQF5sKu+\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"print-chart-section\\\",null,[[\\\"patientSummary\\\",\\\"title\\\",\\\"chartNote\\\",\\\"includeHeaderAndFooter\\\",\\\"chartNotePrintInfo\\\"],[[23,[\\\"patient\\\"]],[23,[\\\"title\\\"]],[23,[\\\"chartNote\\\"]],[23,[\\\"includeHeaderAndFooter\\\"]],[23,[\\\"chartNotePrintInfo\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table-content\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table\\\"],[9],[0,\\\"\\\\n            \\\"],[1,[27,\\\"print-diagnoses-section\\\",null,[[\\\"content\\\",\\\"title\\\",\\\"isIcd10\\\",\\\"showDiagnosisComment\\\",\\\"showEncounterComment\\\",\\\"showMedication\\\"],[[23,[\\\"activeDiagnoses\\\"]],\\\"Current\\\",true,[23,[\\\"showDiagnosisComment\\\"]],[23,[\\\"showEncounterComment\\\"]],[23,[\\\"showMedication\\\"]]]]],false],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table\\\"],[9],[0,\\\"\\\\n            \\\"],[1,[27,\\\"print-diagnoses-section\\\",null,[[\\\"content\\\",\\\"title\\\",\\\"isIcd10\\\",\\\"showDiagnosisComment\\\",\\\"showEncounterComment\\\",\\\"showMedication\\\"],[[23,[\\\"historicalDiagnoses\\\"]],\\\"Historical\\\",true,[23,[\\\"showDiagnosisComment\\\"]],[23,[\\\"showEncounterComment\\\"]],[23,[\\\"showMedication\\\"]]]]],false],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-diagnoses.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-dropdown\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"4e6RW8i1\", \"block\": \"{\\\"symbols\\\":[\\\"option\\\",\\\"@print\\\"],\\\"statements\\\":[[7,\\\"button\\\"],[12,\\\"class\\\",[28,[\\\"btn dropdown-toggle borderless box-margin-Lmd-v2 \\\",[27,\\\"if\\\",[[23,[\\\"useIcons\\\"]],\\\"icon print-icon print-icon-button box-padding-An\\\"],null]]]],[11,\\\"data-toggle\\\",\\\"dropdown\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"useIcons\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"a\\\"],[12,\\\"data-element\\\",[27,\\\"concat\\\",[[23,[\\\"dataElement\\\"]],\\\"-button\\\"],null]],[11,\\\"class\\\",\\\"icon-printer icon--md\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"        Print\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"icon-caret box-margin-Lsm-v2\\\"],[9],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"dropdown-menu\\\"],[12,\\\"data-element\\\",[27,\\\"concat\\\",[[23,[\\\"dataElement\\\"]],\\\"-dropdown\\\"],null]],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"options\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"li\\\"],[9],[7,\\\"a\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],[22,2,[]],[22,1,[\\\"value\\\"]]],null]],[9],[1,[22,1,[\\\"label\\\"]],false],[10],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-dropdown.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-encounter-header\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"Hfqq6sEL\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"div\\\"],[9],[0,\\\"ENCOUNTER\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"h2\\\"],[9],[1,[23,[\\\"encounterType\\\",\\\"eventType\\\",\\\"displayName\\\"]],false],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-5 uppercase semibold\\\"],[9],[0,\\\"Note type\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-7\\\"],[9],[1,[21,\\\"noteTypeHeading\\\"],false],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-5 uppercase semibold\\\"],[9],[0,\\\"Seen by\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-7\\\"],[11,\\\"data-element\\\",\\\"print-header-seen-by-provider\\\"],[9],[1,[21,\\\"seenByProviderName\\\"],false],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-5 uppercase semibold\\\"],[9],[0,\\\"Date\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-7\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[23,[\\\"chartNote\\\",\\\"dateOfServiceUtc\\\"]]],null],false],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-5 uppercase semibold\\\"],[9],[0,\\\"Age at DOS\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-7\\\"],[9],[1,[21,\\\"ageOnDOS\\\"],false],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"chartNote\\\",\\\"signedDateTimeUtc\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[11,\\\"data-element\\\",\\\"print-header-signed-by-provider\\\"],[9],[0,\\\"Electronically signed by \\\"],[1,[21,\\\"signedByProviderName\\\"],false],[0,\\\" at \\\"],[1,[27,\\\"format-date-time-local\\\",[[23,[\\\"chartNote\\\",\\\"signedDateTimeUtc\\\"]]],[[\\\"format\\\",\\\"defaultText\\\"],[\\\"MM/DD/YYYY hh:mm a\\\",\\\"n/a\\\"]]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"Not signed\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-encounter-header.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-encounter-section\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"ptsIoxcd\", \"block\": \"{\\\"symbols\\\":[\\\"am\\\",\\\"item\\\",\\\"item\\\",\\\"item\\\",\\\"item\\\",\\\"child\\\"],\\\"statements\\\":[[4,\\\"print-chart-section\\\",null,[[\\\"patientSummary\\\",\\\"title\\\",\\\"chartNote\\\",\\\"encounterType\\\",\\\"patientSnapshot\\\",\\\"includeHeaderAndFooter\\\",\\\"chartNotePrintInfo\\\",\\\"facilitySnapshot\\\",\\\"showFooter\\\"],[[23,[\\\"patient\\\"]],[23,[\\\"title\\\"]],[23,[\\\"chartNote\\\"]],[23,[\\\"encounterType\\\"]],[23,[\\\"patientSnapshot\\\"]],[23,[\\\"includeHeaderAndFooter\\\"]],[23,[\\\"chartNotePrintInfo\\\"]],[23,[\\\"facilitySnapshot\\\"]],[23,[\\\"showFooter\\\"]]]],{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"includeAllSections\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[1,[27,\\\"print-encounter-vitals\\\",null,[[\\\"vitalsFlowsheet\\\"],[[23,[\\\"vitalsFlowsheet\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table-content\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"includeNoteTable\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[1,[21,\\\"tableHeader\\\"],false],[10],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isSoapNote\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"includeAllSections\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"\\\\n                                \\\"],[1,[27,\\\"rich-text-with-empty-state\\\",null,[[\\\"title\\\",\\\"value\\\",\\\"isEmptyStateDisabled\\\"],[\\\"subjective\\\",[23,[\\\"chartNote\\\",\\\"subjective\\\"]],true]]],false],[0,\\\"\\\\n                            \\\"],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"Objective\\\"],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"\\\\n                               \\\"],[1,[27,\\\"rich-text-with-empty-state\\\",null,[[\\\"title\\\",\\\"value\\\",\\\"isEmptyStateDisabled\\\"],[\\\"objective\\\",[23,[\\\"chartNote\\\",\\\"objective\\\"]],true]]],false],[0,\\\"\\\\n                            \\\"],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"Assessment\\\"],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"\\\\n                                \\\"],[1,[27,\\\"rich-text-with-empty-state\\\",null,[[\\\"title\\\",\\\"value\\\",\\\"isEmptyStateDisabled\\\"],[\\\"assessment\\\",[23,[\\\"chartNote\\\",\\\"assessment\\\"]],true]]],false],[0,\\\"\\\\n                                \\\"],[1,[27,\\\"diagnoses-assessment-list-read-only\\\",null,[[\\\"patientGuid\\\",\\\"transcriptGuid\\\",\\\"isExpanded\\\",\\\"hideCollapseLink\\\",\\\"oneline\\\",\\\"firstCommentOneLine\\\",\\\"chartNoteDiagnoses\\\",\\\"isSigned\\\"],[[23,[\\\"patient\\\",\\\"patientPracticeGuid\\\"]],[23,[\\\"chartNote\\\",\\\"transcriptGuid\\\"]],true,true,false,false,[23,[\\\"chartNote\\\",\\\"diagnoses\\\"]],[23,[\\\"isSigned\\\"]]]]],false],[0,\\\"\\\\n                            \\\"],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"Plan\\\"],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"includePlan\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"\\\\n                                \\\"],[1,[27,\\\"rich-text-with-empty-state\\\",null,[[\\\"title\\\",\\\"value\\\",\\\"isEmptyStateDisabled\\\"],[\\\"plan\\\",[23,[\\\"chartNote\\\",\\\"plan\\\"]],true]]],false],[0,\\\"\\\\n                                \\\"],[1,[27,\\\"medications-plan-list-read-only\\\",null,[[\\\"patientGuid\\\",\\\"transcriptGuid\\\",\\\"chartNoteMedications\\\",\\\"isSigned\\\",\\\"isExpanded\\\",\\\"hideCollapseLink\\\",\\\"oneline\\\",\\\"firstCommentOneLine\\\",\\\"showWarningOnDuplicateMedications\\\"],[[23,[\\\"patient\\\",\\\"patientPracticeGuid\\\"]],[23,[\\\"chartNote\\\",\\\"transcriptGuid\\\"]],[23,[\\\"chartNote\\\",\\\"medications\\\"]],[23,[\\\"isSigned\\\"]],true,true,false,false,false]]],false],[0,\\\"\\\\n                            \\\"],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                        \\\"],[1,[27,\\\"rich-text-with-empty-state\\\",null,[[\\\"title\\\",\\\"value\\\",\\\"class\\\",\\\"isEmptyStateDisabled\\\"],[[23,[\\\"noteTypeHeading\\\"]],[23,[\\\"chartNote\\\",\\\"subjective\\\"]],\\\"col-xs-12\\\",true]]],false],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"includeAllSections\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"events\\\",\\\"eventItems\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[9],[0,\\\"Screenings/ Interventions/ Assessments\\\"],[10],[10],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-4\\\"],[9],[0,\\\"Category\\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6\\\"],[9],[0,\\\"Name\\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Status\\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"events\\\",\\\"eventItems\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-4\\\"],[9],[1,[22,5,[\\\"eventType\\\",\\\"category\\\"]],false],[10],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6\\\"],[9],[0,\\\"\\\\n                                \\\"],[7,\\\"p\\\"],[9],[1,[22,5,[\\\"eventType\\\",\\\"displayName\\\"]],false],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,5,[\\\"children\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Follow-up plan\\\"],[10],[0,\\\"\\\\n                                    \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"list\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[22,5,[\\\"children\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                            \\\"],[7,\\\"li\\\"],[9],[1,[22,6,[\\\"eventType\\\",\\\"category\\\"]],false],[0,\\\": \\\"],[1,[22,6,[\\\"eventType\\\",\\\"displayName\\\"]],false],[0,\\\" - \\\"],[1,[22,6,[\\\"selectedStatus\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[6]},null],[0,\\\"                                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                            \\\"],[10],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[1,[22,5,[\\\"selectedStatus\\\"]],false],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[5]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"observations\\\",\\\"eventItems\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[9],[0,\\\"Observations\\\"],[10],[10],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"observations\\\",\\\"eventItems\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[1,[22,4,[\\\"eventType\\\",\\\"displayName\\\"]],false],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[27,\\\"compare\\\",[[22,4,[\\\"resultCode\\\",\\\"codeValue\\\"]],[23,[\\\"observations\\\",\\\"nullResult\\\",\\\"codeValue\\\"]]],null]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12 formatted-text\\\"],[9],[0,\\\"No impairment.\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12 formatted-text\\\"],[9],[1,[22,4,[\\\"comments\\\"]],false],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[4]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"careQuality\\\",\\\"selectedEvents\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[9],[0,\\\"Quality of care\\\"],[10],[10],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"careQuality\\\",\\\"selectedEvents\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[1,[22,3,[\\\"eventType\\\",\\\"displayName\\\"]],false],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"includeCarePlan\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[9],[0,\\\"Care plan\\\"],[10],[10],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"carePlan\\\",\\\"eventItems\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12 formatted-text\\\"],[9],[1,[22,2,[\\\"comments\\\"]],false],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"includeAllSections\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"amendments\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[9],[0,\\\"Addenda\\\"],[10],[10],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-4\\\"],[9],[0,\\\"Addendum\\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[0,\\\"Status\\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Source\\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[0,\\\"Date/Time\\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"amendments\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-4\\\"],[11,\\\"data-element\\\",\\\"print-encounter-section-am-note\\\"],[9],[1,[22,1,[\\\"note\\\"]],false],[10],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[11,\\\"data-element\\\",\\\"print-encounter-section-am-status-name\\\"],[9],[1,[22,1,[\\\"status\\\"]],false],[0,\\\" by \\\"],[1,[22,1,[\\\"providerName\\\"]],false],[10],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[1,[22,1,[\\\"source\\\"]],false],[10],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[1,[27,\\\"format-date-time-local\\\",[[22,1,[\\\"lastModifiedDateTimeUtc\\\"]]],[[\\\"format\\\",\\\"defaultText\\\"],[\\\"MM/DD/YYYY hh:mm a\\\",\\\"n/a\\\"]]],false],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-encounter-section.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-external-image\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"Y4hRWZQL\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"print-external-document\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"img\\\"],[12,\\\"src\\\",[21,\\\"src\\\"]],[9],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-external-image.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-facility-header\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"LqHisukh\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"div\\\"],[9],[0,\\\"FACILITY\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"h2\\\"],[11,\\\"data-element\\\",\\\"print-header-facility-name\\\"],[9],[1,[23,[\\\"facility\\\",\\\"name\\\"]],false],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"char-label semibold\\\"],[9],[4,\\\"if\\\",[[23,[\\\"facility\\\",\\\"phone\\\"]]],null,{\\\"statements\\\":[[0,\\\"T\\\"]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"ib\\\"],[11,\\\"data-element\\\",\\\"print-header-facility-phone\\\"],[9],[1,[27,\\\"format-phone\\\",[[23,[\\\"facility\\\",\\\"phone\\\"]]],null],false],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"facility\\\",\\\"fax\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"char-label semibold\\\"],[9],[4,\\\"if\\\",[[23,[\\\"facility\\\",\\\"fax\\\"]]],null,{\\\"statements\\\":[[0,\\\"F\\\"]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"ib\\\"],[11,\\\"data-element\\\",\\\"print-header-facility-fax\\\"],[9],[1,[27,\\\"format-phone\\\",[[23,[\\\"facility\\\",\\\"fax\\\"]]],null],false],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"print-header-facility-address\\\"],[9],[1,[23,[\\\"facility\\\",\\\"address\\\"]],false],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"print-header-facility-address\\\"],[9],[1,[23,[\\\"facility\\\",\\\"suite\\\"]],false],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"print-header-facility-city-state-zip\\\"],[9],[1,[21,\\\"facilityCityStateZip\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-facility-header.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-family-health-history-section\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"wH18PJ5j\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"print-chart-section\\\",null,[[\\\"chartNote\\\",\\\"patientSummary\\\",\\\"title\\\",\\\"includeHeaderAndFooter\\\",\\\"chartNotePrintInfo\\\"],[[23,[\\\"chartNote\\\"]],[23,[\\\"patient\\\"]],[23,[\\\"title\\\"]],[23,[\\\"includeHeaderAndFooter\\\"]],[23,[\\\"chartNotePrintInfo\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table-content\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[9],[0,\\\"Family health history\\\"],[10],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12 formatted-text\\\"],[9],[4,\\\"if\\\",[[23,[\\\"content\\\"]]],null,{\\\"statements\\\":[[1,[21,\\\"content\\\"],false]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"No family health history available for this patient.\\\"]],\\\"parameters\\\":[]}],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-family-health-history-section.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-family-health-history\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"Q3d8uUgF\", \"block\": \"{\\\"symbols\\\":[\\\"relative\\\",\\\"observation\\\"],\\\"statements\\\":[[4,\\\"print-chart-section\\\",null,[[\\\"chartNote\\\",\\\"patientSummary\\\",\\\"title\\\",\\\"includeHeaderAndFooter\\\",\\\"chartNotePrintInfo\\\"],[[23,[\\\"chartNote\\\"]],[23,[\\\"patient\\\"]],[23,[\\\"title\\\"]],[23,[\\\"includeHeaderAndFooter\\\"]],[23,[\\\"chartNotePrintInfo\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table-content\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[9],[0,\\\"Family health history\\\"],[10],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10\\\"],[9],[0,\\\"Diagnosis\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Onset date\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"relatives\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row sub-header-row\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[11,\\\"data-element\\\",\\\"relative\\\"],[9],[1,[22,1,[\\\"relationshipType\\\",\\\"description\\\"]],false],[0,\\\" - \\\"],[1,[22,1,[\\\"firstName\\\"]],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[22,1,[\\\"observations\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe no-borders\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10\\\"],[11,\\\"data-element\\\",\\\"dx\\\"],[9],[1,[22,2,[\\\"diagnosis\\\",\\\"snomedDescription\\\"]],false],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[11,\\\"data-element\\\",\\\"dx-onset-date\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[22,2,[\\\"onsetDate\\\"]]],null],false],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe sub-paragraph\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,2,[\\\"comment\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[11,\\\"data-element\\\",\\\"observation-comment\\\"],[9],[0,\\\"Comments: \\\"],[1,[22,2,[\\\"comment\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"No diagnoses recorded\\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[1]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"p\\\"],[9],[0,\\\"No Family health history recorded\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-family-health-history.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-goals-section\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"cYwP4Iti\", \"block\": \"{\\\"symbols\\\":[\\\"item\\\"],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[9],[1,[21,\\\"title\\\"],false],[0,\\\" Goals\\\"],[10],[10],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10\\\"],[9],[0,\\\"Description\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Effective Date\\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"data\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10 formatted-text\\\"],[9],[1,[22,1,[\\\"description\\\"]],false],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[1,[22,1,[\\\"effectiveDate\\\"]],false],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[1,[21,\\\"noGoalsText\\\"],false],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-goals-section.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-goals\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"4WCuLLpt\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"print-chart-section\\\",null,[[\\\"patientSummary\\\",\\\"includeHeaderAndFooter\\\"],[[23,[\\\"patient\\\"]],[23,[\\\"includeHeaderAndFooter\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table-content\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showActiveGoals\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"print-goals-section\\\",null,[[\\\"data\\\",\\\"title\\\",\\\"noGoalsText\\\"],[[23,[\\\"activeGoals\\\"]],\\\"Active\\\",[23,[\\\"noActiveGoalsText\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"showInactiveGoals\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"print-goals-section\\\",null,[[\\\"data\\\",\\\"title\\\",\\\"noGoalsText\\\"],[[23,[\\\"inactiveGoals\\\"]],\\\"Inactive\\\",[23,[\\\"noInactiveGoalsText\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-goals.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-health-concerns-section\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"6PmNXeN/\", \"block\": \"{\\\"symbols\\\":[\\\"item\\\"],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[9],[1,[21,\\\"title\\\"],false],[0,\\\" health concerns\\\"],[10],[10],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10\\\"],[9],[0,\\\"Description\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Effective Date\\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"data\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10 formatted-text\\\"],[11,\\\"data-element\\\",\\\"health-concern-item-title\\\"],[9],[1,[22,1,[\\\"title\\\"]],false],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[11,\\\"data-element\\\",\\\"health-concern-item-date\\\"],[9],[1,[22,1,[\\\"effectiveDate\\\"]],false],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"noKnownHealthConcerns\\\"]]],null,{\\\"statements\\\":[[0,\\\"                Patient has no health concerns\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                No \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"lowercase\\\"],[9],[1,[21,\\\"title\\\"],false],[10],[0,\\\" health concerns recorded\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-health-concerns-section.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-health-concerns\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"UtOdl09q\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"print-chart-section\\\",null,[[\\\"patientSummary\\\",\\\"title\\\",\\\"chartNote\\\",\\\"includeHeaderAndFooter\\\",\\\"chartNotePrintInfo\\\"],[[23,[\\\"patient\\\"]],[23,[\\\"title\\\"]],[23,[\\\"chartNote\\\"]],[23,[\\\"includeHeaderAndFooter\\\"]],[23,[\\\"chartNotePrintInfo\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table-content\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"healthConcernNote\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[9],[0,\\\"Health concern note\\\"],[10],[10],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12 print-health-concern-note\\\"],[9],[1,[23,[\\\"healthConcernNote\\\",\\\"healthConcernNote\\\"]],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"showActiveHealthConcerns\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"print-health-concerns-section\\\",null,[[\\\"class\\\",\\\"data\\\",\\\"noKnownHealthConcerns\\\",\\\"title\\\"],[\\\"table\\\",[23,[\\\"sortedActiveHealthConcerns\\\"]],[23,[\\\"noKnownHealthConcerns\\\"]],\\\"Active\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"showInactiveHealthConcerns\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"print-health-concerns-section\\\",null,[[\\\"class\\\",\\\"data\\\",\\\"title\\\"],[\\\"table\\\",[23,[\\\"sortedInactiveHealthConcerns\\\"]],\\\"Inactive\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-health-concerns.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-immunizations-section\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"HRFs/AKG\", \"block\": \"{\\\"symbols\\\":[\\\"immunization\\\",\\\"vaccination\\\",\\\"vaccination\\\"],\\\"statements\\\":[[4,\\\"print-chart-section\\\",null,[[\\\"chartNote\\\",\\\"patientSummary\\\",\\\"title\\\",\\\"includeHeaderAndFooter\\\",\\\"chartNotePrintInfo\\\"],[[23,[\\\"chartNote\\\"]],[23,[\\\"patient\\\"]],[23,[\\\"title\\\"]],[23,[\\\"includeHeaderAndFooter\\\"]],[23,[\\\"chartNotePrintInfo\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table-content\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[9],[0,\\\"Immunizations\\\"],[10],[10],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showComments\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Date\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Vaccine\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Source\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-1\\\"],[9],[0,\\\"Lot Number\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Expires\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[0,\\\"Comment\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Date\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[0,\\\"Vaccine\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[0,\\\"Source\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Lot Number\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Expires\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"content\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row sub-header-row\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[1,[22,1,[\\\"description\\\"]],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showComments\\\"]]],null,{\\\"statements\\\":[[4,\\\"each\\\",[[22,1,[\\\"sortedVaccinations\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,3,[\\\"administeredDate\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[1,[22,3,[\\\"administeredDate\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[22,3,[\\\"vaccinationDate\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[1,[22,3,[\\\"vaccinationDate\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                    Unknown\\\\n                                \\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}],[0,\\\"                            \\\"],[10],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[1,[22,3,[\\\"vaccineName\\\"]],false],[10],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[1,[22,3,[\\\"administeredByText\\\"]],false],[10],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-1\\\"],[9],[0,\\\"\\\\n                                \\\"],[1,[22,3,[\\\"vaccineInventoryLotNumber\\\"]],false],[0,\\\"\\\\n                            \\\"],[10],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"\\\\n                                \\\"],[1,[22,3,[\\\"vaccineExpirationDate\\\"]],false],[0,\\\"\\\\n                            \\\"],[10],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[1,[22,3,[\\\"comment\\\"]],false],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"each\\\",[[22,1,[\\\"sortedVaccinations\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,2,[\\\"administeredDate\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[1,[22,2,[\\\"administeredDate\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[22,2,[\\\"vaccinationDate\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[1,[22,2,[\\\"vaccinationDate\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                    Unknown\\\\n                                \\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}],[0,\\\"                            \\\"],[10],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[1,[22,2,[\\\"vaccineName\\\"]],false],[10],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[1,[22,2,[\\\"administeredByText\\\"]],false],[10],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"\\\\n                                \\\"],[1,[22,2,[\\\"vaccineInventoryLotNumber\\\"]],false],[0,\\\"\\\\n                            \\\"],[10],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"\\\\n                                \\\"],[1,[22,2,[\\\"vaccineExpirationDate\\\"]],false],[0,\\\"\\\\n                            \\\"],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[1]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"No immunizations recorded for this patient.\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-immunizations-section.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-medications-section\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"ugWHxP6k\", \"block\": \"{\\\"symbols\\\":[\\\"medication\\\",\\\"script\\\",\\\"comment\\\"],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[9],[1,[21,\\\"title\\\"],false],[0,\\\" Medications\\\"],[10],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-4\\\"],[9],[0,\\\"Medication\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[0,\\\"Sig\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Start/Stop\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[0,\\\"Associated Dx\\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"medications\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe no-borders\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-4\\\"],[11,\\\"data-element\\\",\\\"medication-item-text\\\"],[9],[0,\\\"\\\\n            \\\"],[1,[22,1,[\\\"fullGenericName\\\"]],false],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[11,\\\"data-element\\\",\\\"medication-item-sig\\\"],[9],[1,[22,1,[\\\"sig\\\",\\\"patientDescription\\\"]],false],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[11,\\\"data-element\\\",\\\"medication-item-dates\\\"],[9],[1,[27,\\\"datetime-formatted\\\",null,[[\\\"datetime\\\"],[[22,1,[\\\"startDateTime\\\"]]]]],false],[0,\\\" - \\\"],[1,[27,\\\"datetime-formatted\\\",null,[[\\\"datetime\\\"],[[22,1,[\\\"stopDateTime\\\"]]]]],false],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[11,\\\"data-element\\\",\\\"medication-item-diagnosis\\\"],[9],[4,\\\"if\\\",[[22,1,[\\\"diagnosis\\\",\\\"name\\\"]]],null,{\\\"statements\\\":[[1,[22,1,[\\\"diagnosis\\\",\\\"name\\\"]],false]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"-\\\"]],\\\"parameters\\\":[]}],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe sub-paragraph\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"anyComments\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showComments\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[22,1,[\\\"medicationComment\\\",\\\"comment\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"transcript-comment\\\",null,[[\\\"transcriptComment\\\",\\\"commentType\\\",\\\"isCollapsible\\\",\\\"oneline\\\"],[[22,1,[\\\"medicationComment\\\"]],\\\"Provider comment\\\",false,false]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"showEncounterComments\\\"]]],null,{\\\"statements\\\":[[4,\\\"each\\\",[[22,1,[\\\"encounterCommentsWithComment\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"transcript-comment\\\",null,[[\\\"patientPracticeGuid\\\",\\\"transcriptComment\\\",\\\"commentType\\\",\\\"isCollapsible\\\",\\\"oneline\\\"],[[22,1,[\\\"patientPracticeGuid\\\"]],[22,3,[]],\\\"Encounter comment\\\",false,false]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3]},null]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"showScripts\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[22,1,[\\\"prescriptions\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"read-only-complex-list\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[22,1,[\\\"prescriptions\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[1,[27,\\\"prescription-item\\\",null,[[\\\"prescription\\\",\\\"tagName\\\"],[[22,2,[]],\\\"li\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"noKnownMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"                Patient has no known medications\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                No \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"lowercase\\\"],[9],[1,[21,\\\"title\\\"],false],[10],[0,\\\" medications recorded\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-medications-section.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-medications\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"hFDHEbMk\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"print-chart-section\\\",null,[[\\\"patientSummary\\\",\\\"title\\\",\\\"chartNote\\\",\\\"includeHeaderAndFooter\\\",\\\"chartNotePrintInfo\\\"],[[23,[\\\"patient\\\"]],[23,[\\\"title\\\"]],[23,[\\\"chartNote\\\"]],[23,[\\\"includeHeaderAndFooter\\\"]],[23,[\\\"chartNotePrintInfo\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table-content\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showActiveMeds\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"print-medications-section\\\",null,[[\\\"data\\\",\\\"noKnownMedications\\\",\\\"showComments\\\",\\\"showEncounterComments\\\",\\\"showScripts\\\",\\\"sortProperty\\\",\\\"sortAscending\\\",\\\"title\\\"],[[23,[\\\"activePatientMedications\\\"]],[23,[\\\"medications\\\",\\\"noKnownMedications\\\"]],[23,[\\\"showComments\\\"]],[23,[\\\"showEncounterComments\\\"]],[23,[\\\"showScripts\\\"]],[23,[\\\"sortProperty\\\"]],[23,[\\\"sortAscending\\\"]],\\\"Active\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"showHistoricalMeds\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"print-medications-section\\\",null,[[\\\"data\\\",\\\"showComments\\\",\\\"showEncounterComments\\\",\\\"showScripts\\\",\\\"sortProperty\\\",\\\"sortAscending\\\",\\\"title\\\"],[[23,[\\\"historicalPatientMedications\\\"]],[23,[\\\"showComments\\\"]],[23,[\\\"showEncounterComments\\\"]],[23,[\\\"showScripts\\\"]],[23,[\\\"sortProperty\\\"]],[23,[\\\"sortAscending\\\"]],\\\"Historical\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-medications.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-patient-demographics\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"iC9JAtbA\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"print-chart-section\\\",null,[[\\\"patientSummary\\\",\\\"title\\\",\\\"chartNote\\\",\\\"includeHeaderAndFooter\\\",\\\"chartNotePrintInfo\\\"],[[23,[\\\"patientSummary\\\"]],[23,[\\\"printTitle\\\"]],[23,[\\\"chartNote\\\"]],[23,[\\\"includeHeaderAndFooter\\\"]],[23,[\\\"chartNotePrintInfo\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table-content\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table compact-table\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[9],[0,\\\"Patient identifying details and demographics\\\"],[10],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-4\\\"],[9],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"print-patient-row\\\",null,[[\\\"title\\\",\\\"value\\\"],[\\\"First name\\\",[23,[\\\"patient\\\",\\\"firstName\\\"]]]]],false],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"print-patient-row\\\",null,[[\\\"title\\\",\\\"value\\\"],[\\\"Middle name\\\",[23,[\\\"patient\\\",\\\"middleName\\\"]]]]],false],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"print-patient-row\\\",null,[[\\\"title\\\",\\\"value\\\"],[\\\"Last name\\\",[23,[\\\"patient\\\",\\\"lastName\\\"]]]]],false],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"print-patient-row\\\",null,[[\\\"title\\\",\\\"value\\\"],[\\\"SSN\\\",[23,[\\\"patient\\\",\\\"socialSecurityNumber\\\"]]]]],false],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-4\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"span\\\"],[11,\\\"data-element\\\",\\\"print-patient-demographics-birth-sex\\\"],[9],[0,\\\"\\\\n                        \\\"],[1,[27,\\\"print-patient-row\\\",null,[[\\\"title\\\",\\\"value\\\"],[\\\"Sex\\\",[23,[\\\"patientSummary\\\",\\\"genderDescription\\\"]]]]],false],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"print-patient-row\\\",null,[[\\\"title\\\",\\\"dateValue\\\"],[\\\"Date of birth\\\",[23,[\\\"patient\\\",\\\"birthDate\\\"]]]]],false],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"print-patient-row\\\",null,[[\\\"title\\\",\\\"dateValue\\\"],[\\\"Date of death\\\",[23,[\\\"patient\\\",\\\"deathDate\\\"]]]]],false],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"print-patient-row\\\",null,[[\\\"title\\\",\\\"value\\\"],[\\\"PRN\\\",[23,[\\\"patient\\\",\\\"patientRecordNumber\\\"]]]]],false],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-4\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"span\\\"],[11,\\\"data-element\\\",\\\"print-patient-demographics-ethnicity\\\"],[9],[0,\\\"\\\\n                        \\\"],[1,[27,\\\"print-patient-row\\\",null,[[\\\"title\\\",\\\"value\\\"],[\\\"Ethnicity\\\",[23,[\\\"ethnicity\\\"]]]]],false],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"print-patient-row\\\",null,[[\\\"title\\\",\\\"value\\\"],[\\\"Pref. language\\\",[23,[\\\"language\\\"]]]]],false],[0,\\\"\\\\n                    \\\"],[7,\\\"span\\\"],[11,\\\"data-element\\\",\\\"print-patient-demographics-race\\\"],[9],[0,\\\"\\\\n                        \\\"],[1,[27,\\\"print-patient-row\\\",null,[[\\\"title\\\",\\\"value\\\"],[\\\"Race\\\",[23,[\\\"race\\\"]]]]],false],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"print-patient-row\\\",null,[[\\\"title\\\",\\\"value\\\"],[\\\"Status\\\",[23,[\\\"status\\\"]]]]],false],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"Contact information\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-4\\\"],[9],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"print-patient-row\\\",null,[[\\\"title\\\",\\\"value\\\"],[\\\"Address line 1\\\",[23,[\\\"patient\\\",\\\"streetAddress1\\\"]]]]],false],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"print-patient-row\\\",null,[[\\\"title\\\",\\\"value\\\"],[\\\"Address line 2\\\",[23,[\\\"patient\\\",\\\"streetAddress2\\\"]]]]],false],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"print-patient-row\\\",null,[[\\\"title\\\",\\\"value\\\"],[\\\"City\\\",[23,[\\\"patient\\\",\\\"city\\\"]]]]],false],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"print-patient-row\\\",null,[[\\\"title\\\",\\\"value\\\"],[\\\"State\\\",[23,[\\\"patient\\\",\\\"state\\\"]]]]],false],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"print-patient-row\\\",null,[[\\\"title\\\",\\\"value\\\"],[\\\"ZIP code\\\",[23,[\\\"patient\\\",\\\"postalCode\\\"]]]]],false],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-4\\\"],[9],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"print-patient-row\\\",null,[[\\\"title\\\",\\\"value\\\"],[\\\"Contact by\\\",[23,[\\\"patient\\\",\\\"preferredMethodOfCommunication\\\"]]]]],false],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"print-patient-row\\\",null,[[\\\"title\\\",\\\"value\\\"],[\\\"Email\\\",[23,[\\\"patient\\\",\\\"emailAddress\\\"]]]]],false],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"print-patient-row\\\",null,[[\\\"title\\\",\\\"value\\\"],[\\\"Home phone\\\",[23,[\\\"patient\\\",\\\"homePhone\\\"]]]]],false],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"print-patient-row\\\",null,[[\\\"title\\\",\\\"value\\\"],[\\\"Mobile phone\\\",[23,[\\\"mobile\\\"]]]]],false],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"print-patient-row\\\",null,[[\\\"title\\\",\\\"value\\\"],[\\\"Office phone\\\",[23,[\\\"patient\\\",\\\"officePhone\\\"]]]]],false],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"print-patient-row\\\",null,[[\\\"title\\\",\\\"value\\\"],[\\\"Office extension\\\",[23,[\\\"patient\\\",\\\"officePhoneExtension\\\"]]]]],false],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"Family information\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6\\\"],[9],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"print-patient-row\\\",null,[[\\\"title\\\",\\\"value\\\"],[\\\"Next of kin\\\",[23,[\\\"nextOfKin\\\"]]]]],false],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"print-patient-row\\\",null,[[\\\"title\\\",\\\"value\\\"],[\\\"Relation to patient\\\",[23,[\\\"nokRelationship\\\"]]]]],false],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"print-patient-row\\\",null,[[\\\"title\\\",\\\"value\\\"],[\\\"Phone\\\",[23,[\\\"patient\\\",\\\"nokPhoneNumber\\\"]]]]],false],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"print-patient-row\\\",null,[[\\\"title\\\",\\\"value\\\"],[\\\"Address\\\",[23,[\\\"nokAddress\\\"]]]]],false],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6\\\"],[9],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"print-patient-row\\\",null,[[\\\"title\\\",\\\"value\\\"],[\\\"Patient's mother's maiden name\\\",[23,[\\\"patient\\\",\\\"mothersMaidenName\\\"]]]]],false],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"patient\\\",\\\"notes\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"Patient Notes\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[1,[23,[\\\"patient\\\",\\\"notes\\\"]],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-patient-demographics.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-patient-header\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"q7TR8Gsw\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"div\\\"],[9],[0,\\\"PATIENT\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"h2\\\"],[11,\\\"data-element\\\",\\\"print-header-patient-name\\\"],[11,\\\"class\\\",\\\"wrap-all\\\"],[9],[1,[21,\\\"patientName\\\"],false],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3 semibold\\\"],[9],[0,\\\"DOB\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-9\\\"],[11,\\\"data-element\\\",\\\"print-header-patient-dob\\\"],[9],[1,[27,\\\"format-date-time\\\",[[23,[\\\"patient\\\",\\\"birthDate\\\"]]],null],false],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3 semibold\\\"],[9],[0,\\\"AGE\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-9\\\"],[11,\\\"data-element\\\",\\\"print-header-patient-age\\\"],[9],[1,[23,[\\\"patientSummary\\\",\\\"age\\\"]],false],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3 semibold\\\"],[9],[0,\\\"\\\\n        SEX\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-9\\\"],[11,\\\"data-element\\\",\\\"print-header-patient-gender\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[23,[\\\"patientSummary\\\",\\\"genderString\\\"]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3 semibold\\\"],[9],[0,\\\"PRN\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-9\\\"],[11,\\\"data-element\\\",\\\"print-header-patient-prn\\\"],[9],[1,[23,[\\\"patient\\\",\\\"patientRecordNumber\\\"]],false],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showZip\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3 semibold\\\"],[9],[0,\\\"ZIP\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-9\\\"],[11,\\\"data-element\\\",\\\"print-header-patient-zip\\\"],[9],[1,[23,[\\\"patient\\\",\\\"postalCode\\\"]],false],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-patient-header.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-patient-modal\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"4Ynv4TLp\", \"block\": \"{\\\"symbols\\\":[\\\"adherenceMaterial\\\",\\\"encounter\\\",\\\"am\\\",\\\"item\\\",\\\"item\\\",\\\"item\\\",\\\"cog\\\",\\\"func\\\",\\\"item\\\",\\\"child\\\",\\\"flowsheet\\\",\\\"section\\\",\\\"flowsheet\\\"],\\\"statements\\\":[[4,\\\"content-modal\\\",null,[[\\\"isVisible\\\",\\\"modalStyle\\\"],[[23,[\\\"isVisible\\\"]],4]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,12,[\\\"header\\\"]]],[[\\\"title\\\",\\\"isCloseByXorOutsideVisible\\\"],[[23,[\\\"modalTitle\\\"]],true]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,12,[\\\"body\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"print-patient-modal-selection\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Select patient information to print\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"span\\\"],[9],[0,\\\"Select: \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[11,\\\"data-element\\\",\\\"print-modal-select-all\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"selectAll\\\"]],[9],[0,\\\"all\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"span\\\"],[9],[0,\\\" | \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[11,\\\"data-element\\\",\\\"print-modal-select-none\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"selectNone\\\"]],[9],[0,\\\"none\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"isLoading\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row print-chart-options\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"chartNote\\\"]]],null,{\\\"statements\\\":[[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"class\\\"],[[23,[\\\"isChiefComplaintChecked\\\"]],\\\"checkbox-row\\\"]],{\\\"statements\\\":[[0,\\\"                        Chief complaint\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"class\\\"],[[23,[\\\"isDemographicsChecked\\\"]],\\\"checkbox-row\\\"]],{\\\"statements\\\":[[0,\\\"                    Patient demographics\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"checkbox-row dropdown-print-row\\\"],[11,\\\"data-element\\\",\\\"print-insurance-options\\\"],[9],[0,\\\"\\\\n                    \\\"],[4,\\\"check-box\\\",null,[[\\\"checked\\\"],[[23,[\\\"isInsuranceChecked\\\"]]]],{\\\"statements\\\":[[0,\\\"Patient insurance\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"print-options-dropdown\\\",null,[[\\\"class\\\",\\\"content\\\",\\\"selectedValue\\\",\\\"dataValueField\\\",\\\"dataLabelField\\\",\\\"dataSelectedLabelField\\\"],[\\\"theme-borderless\\\",[23,[\\\"insuranceOptions\\\"]],[23,[\\\"selectedInsuranceOption\\\"]],\\\"key\\\",\\\"label\\\",\\\"selectedLabel\\\"]]],false],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"chartNote\\\"]]],null,{\\\"statements\\\":[[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"class\\\"],[[23,[\\\"isEncounterVitalsChecked\\\"]],\\\"checkbox-row\\\"]],{\\\"statements\\\":[[0,\\\"                        Vitals for this encounter\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[4,\\\"each\\\",[[23,[\\\"sortedFlowsheets\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"checkbox-row flowsheet-print-row\\\"],[9],[0,\\\"\\\\n                        \\\"],[4,\\\"check-box\\\",null,[[\\\"checked\\\"],[[22,13,[\\\"isSelected\\\"]]]],{\\\"statements\\\":[[1,[22,13,[\\\"flowsheetDefinition\\\",\\\"flowsheetName\\\"]],false],[0,\\\" flowsheet\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n                        \\\"],[1,[27,\\\"flowsheet-print-range-select\\\",null,[[\\\"range\\\"],[[22,13,[]]]]],false],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[13]},null],[0,\\\"                \\\"],[1,[27,\\\"select-all-checkbox-dropdown\\\",null,[[\\\"menuLabel\\\",\\\"includeNumSelected\\\",\\\"dropdownItems\\\",\\\"selections\\\",\\\"class\\\"],[\\\"growth charts\\\",true,[23,[\\\"growthChartsOptions\\\"]],[23,[\\\"selectedGrowthCharts\\\"]],\\\"checkbox-row\\\"]]],false],[0,\\\"\\\\n\\\"],[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"class\\\"],[[23,[\\\"isDiagnosesChecked\\\"]],\\\"checkbox-row\\\"]],{\\\"statements\\\":[[0,\\\"                    Diagnoses\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"class\\\"],[[23,[\\\"isAllergiesChecked\\\"]],\\\"checkbox-row\\\"]],{\\\"statements\\\":[[0,\\\"                    Allergies\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"checkbox-row dropdown-print-row\\\"],[11,\\\"data-element\\\",\\\"print-medications-options\\\"],[9],[0,\\\"\\\\n                    \\\"],[4,\\\"check-box\\\",null,[[\\\"checked\\\"],[[23,[\\\"isMedicationsChecked\\\"]]]],{\\\"statements\\\":[[0,\\\"Medications \\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"print-options-dropdown\\\",null,[[\\\"class\\\",\\\"content\\\",\\\"selectedValue\\\",\\\"dataValueField\\\",\\\"dataLabelField\\\",\\\"dataSelectedLabelField\\\"],[\\\"theme-borderless\\\",[23,[\\\"medicationOptions\\\"]],[23,[\\\"selectedMedicationOption\\\"]],\\\"key\\\",\\\"label\\\",\\\"selectedLabel\\\"]]],false],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"_loadAdherenceMaterials\\\",\\\"isRunning\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"option-row p-666\\\"],[9],[0,\\\"Loading adherence materials...\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"_loadAdherenceMaterials\\\",\\\"isError\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"option-row  p-666\\\"],[9],[0,\\\"Couldn't load adherence materials. \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"loadAdherenceMaterials\\\"]],[9],[0,\\\"Please try again.\\\"],[10],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"adherenceMaterials\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"select-all-checkbox-dropdown\\\",null,[[\\\"menuLabel\\\",\\\"includeNumSelected\\\",\\\"dropdownItems\\\",\\\"selections\\\",\\\"class\\\"],[\\\"adherence materials\\\",true,[23,[\\\"sortedAdherenceMaterials\\\",\\\"arrangedContent\\\"]],[23,[\\\"selectedAdherenceMaterials\\\"]],\\\"checkbox-row\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                        \\\"],[4,\\\"check-box\\\",null,[[\\\"disabled\\\",\\\"class\\\"],[true,\\\"checkbox-row\\\"]],{\\\"statements\\\":[[0,\\\"No adherence materials available\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                \\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}],[0,\\\"\\\\n\\\"],[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"class\\\"],[[23,[\\\"isImmunizationsChecked\\\"]],\\\"checkbox-row\\\"]],{\\\"statements\\\":[[0,\\\"                    Immunizations\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"class\\\"],[[23,[\\\"isSocialChecked\\\"]],\\\"checkbox-row\\\"]],{\\\"statements\\\":[[0,\\\"                    Social history\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"class\\\"],[[23,[\\\"isPmhChecked\\\"]],\\\"checkbox-row\\\"]],{\\\"statements\\\":[[0,\\\"                    Past medical history\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"class\\\"],[[23,[\\\"isFamilyHistoryChecked\\\"]],\\\"checkbox-row\\\"]],{\\\"statements\\\":[[0,\\\"                    Family history\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"class\\\"],[[23,[\\\"isAdvancedDirectivesChecked\\\"]],\\\"checkbox-row\\\"]],{\\\"statements\\\":[[0,\\\"                    Advance directives\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"class\\\"],[[23,[\\\"isImplantableDevicesChecked\\\"]],\\\"checkbox-row\\\"]],{\\\"statements\\\":[[0,\\\"                    Implantable devices\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"checkbox-row dropdown-print-row\\\"],[11,\\\"data-element\\\",\\\"print-health-concerns-options\\\"],[9],[0,\\\"\\\\n                    \\\"],[4,\\\"check-box\\\",null,[[\\\"checked\\\"],[[23,[\\\"isHealthConcernsChecked\\\"]]]],{\\\"statements\\\":[[0,\\\"Health concerns\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"print-options-dropdown\\\",null,[[\\\"class\\\",\\\"content\\\",\\\"selectedValue\\\",\\\"dataValueField\\\",\\\"dataLabelField\\\",\\\"dataSelectedLabelField\\\"],[\\\"theme-borderless\\\",[23,[\\\"healthConcernsOptions\\\"]],[23,[\\\"selectedHealthConcernsOption\\\"]],\\\"key\\\",\\\"label\\\",\\\"selectedLabel\\\"]]],false],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"checkbox-row dropdown-print-row\\\"],[11,\\\"data-element\\\",\\\"print-goal-options\\\"],[9],[0,\\\"\\\\n                    \\\"],[4,\\\"check-box\\\",null,[[\\\"checked\\\"],[[23,[\\\"isGoalsChecked\\\"]]]],{\\\"statements\\\":[[0,\\\"Goals \\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"print-options-dropdown\\\",null,[[\\\"class\\\",\\\"content\\\",\\\"selectedValue\\\",\\\"dataValueField\\\",\\\"dataLabelField\\\",\\\"dataSelectedLabelField\\\"],[\\\"theme-borderless\\\",[23,[\\\"goalOptions\\\"]],[23,[\\\"selectedGoalOption\\\"]],\\\"key\\\",\\\"label\\\",\\\"selectedLabel\\\"]]],false],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"chartNote\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isSoapNote\\\"]]],null,{\\\"statements\\\":[[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"class\\\"],[[23,[\\\"isSubjectiveChecked\\\"]],\\\"checkbox-row\\\"]],{\\\"statements\\\":[[0,\\\"                            Subjective\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"class\\\"],[[23,[\\\"isObjectiveChecked\\\"]],\\\"checkbox-row\\\"]],{\\\"statements\\\":[[0,\\\"                            Objective\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"class\\\"],[[23,[\\\"isAssessmentChecked\\\"]],\\\"checkbox-row\\\"]],{\\\"statements\\\":[[0,\\\"                            Assessment\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"class\\\"],[[23,[\\\"isPlanChecked\\\"]],\\\"checkbox-row\\\"]],{\\\"statements\\\":[[0,\\\"                            Plan\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"class\\\"],[[23,[\\\"isSimpleNoteChecked\\\"]],\\\"checkbox-row\\\"]],{\\\"statements\\\":[[0,\\\"                            \\\"],[1,[21,\\\"noteTypeHeading\\\"],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}],[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"class\\\"],[[23,[\\\"isOrdersChecked\\\"]],\\\"checkbox-row\\\"]],{\\\"statements\\\":[[0,\\\"                        Orders\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"class\\\"],[[23,[\\\"isSIAChecked\\\"]],\\\"checkbox-row\\\"]],{\\\"statements\\\":[[0,\\\"                        Screenings/ Interventions/ Assessments\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"class\\\"],[[23,[\\\"isObservationsChecked\\\"]],\\\"checkbox-row\\\"]],{\\\"statements\\\":[[0,\\\"                        Observations\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"class\\\"],[[23,[\\\"isQualityOfCareChecked\\\"]],\\\"checkbox-row\\\"]],{\\\"statements\\\":[[0,\\\"                        Quality of care\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"class\\\"],[[23,[\\\"isCarePlanChecked\\\"]],\\\"checkbox-row\\\"]],{\\\"statements\\\":[[0,\\\"                        Care plan\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"class\\\"],[[23,[\\\"isAddendaChecked\\\"]],\\\"checkbox-row\\\"]],{\\\"statements\\\":[[0,\\\"                        Addenda\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"class\\\"],[[23,[\\\"isSummarySiaChecked\\\"]],\\\"checkbox-row\\\"]],{\\\"statements\\\":[[0,\\\"                        Screenings/ Interventions/ Assessments\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                    \\\"],[1,[27,\\\"select-all-checkbox-dropdown\\\",null,[[\\\"menuLabel\\\",\\\"includeNumSelected\\\",\\\"dropdownItems\\\",\\\"selections\\\",\\\"class\\\",\\\"data-element\\\"],[\\\"notes\\\",true,[23,[\\\"encounterOptions\\\"]],[23,[\\\"selectedEncounterOptions\\\"]],\\\"checkbox-row\\\",\\\"print-chart-notes-dropdown\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[4,\\\"if\\\",[[23,[\\\"canPrintPHR\\\"]]],null,{\\\"statements\\\":[[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"class\\\"],[[23,[\\\"isPHRChecked\\\"]],\\\"checkbox-row\\\"]],{\\\"statements\\\":[[0,\\\"                        Patient health record (Patient Fusion)\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,12,[\\\"footer\\\"]]],[[\\\"buttonRightPrimaryText\\\",\\\"buttonRightPrimaryAction\\\",\\\"buttonRightSecondaryAction\\\",\\\"buttonRightSecondaryText\\\"],[\\\"Print\\\",[27,\\\"action\\\",[[22,0,[]],\\\"print\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"close\\\"],null],\\\"Cancel\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[12]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isPrintVisible\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"chart-print-container\\\"],[12,\\\"id\\\",[21,\\\"printContentId\\\"]],[9],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"isOnlyPrintingEncounters\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"container-fluid\\\"],[9],[0,\\\"\\\\n\\\"],[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"print-patient-header\\\",null,[[\\\"patientSummary\\\",\\\"patientSnapshot\\\",\\\"showZip\\\"],[[23,[\\\"patientSummary\\\"]],[23,[\\\"patientSnapshot\\\"]],[23,[\\\"showZip\\\"]]]]],false],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"print-facility-header\\\",null,[[\\\"facilityGuid\\\",\\\"facilitySnapshot\\\"],[[23,[\\\"chartNote\\\",\\\"facilityGuid\\\"]],[23,[\\\"facilitySnapshot\\\"]]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"chartNote\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"print-encounter-header\\\",null,[[\\\"chartNote\\\",\\\"chartNotePrintInfo\\\",\\\"encounterType\\\",\\\"patient\\\"],[[23,[\\\"chartNote\\\"]],[23,[\\\"chartNotePrintInfo\\\"]],[23,[\\\"encounterType\\\"]],[23,[\\\"patientSummary\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"superbill\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"print-bill-header\\\",null,[[\\\"superbill\\\"],[[23,[\\\"superbill\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"chartNote\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isChiefComplaintChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"header\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"h2\\\"],[9],[0,\\\"Chief complaint\\\"],[10],[0,\\\"\\\\n                            \\\"],[1,[27,\\\"text-with-empty-state\\\",null,[[\\\"text\\\",\\\"title\\\",\\\"tagName\\\",\\\"class\\\"],[[23,[\\\"chartNote\\\",\\\"chiefComplaint\\\"]],\\\"chief complaint\\\",\\\"p\\\",\\\"formatted-text\\\"]]],false],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isDemographicsChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"print-patient-demographics\\\",null,[[\\\"patient\\\",\\\"patientSummary\\\",\\\"chartNote\\\",\\\"chartNotePrintInfo\\\",\\\"includeHeaderAndFooter\\\"],[[23,[\\\"patient\\\"]],[23,[\\\"patientSummary\\\"]],[23,[\\\"chartNote\\\"]],[23,[\\\"chartNotePrintInfo\\\"]],[23,[\\\"includeHeaderAndFooter\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"isInsuranceChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"print-insurance\\\",null,[[\\\"chartNote\\\",\\\"chartNotePrintInfo\\\",\\\"billingInformation\\\",\\\"insurancePlans\\\",\\\"patient\\\",\\\"includeHeaderAndFooter\\\",\\\"showActiveInsurances\\\",\\\"showInactiveInsurances\\\"],[[23,[\\\"chartNote\\\"]],[23,[\\\"chartNotePrintInfo\\\"]],[23,[\\\"billingInformation\\\"]],[23,[\\\"insurancePlans\\\"]],[23,[\\\"patientSummary\\\"]],[23,[\\\"includeHeaderAndFooter\\\"]],[23,[\\\"includeActiveInsurances\\\"]],[23,[\\\"includeInactiveInsurances\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"chartNote\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isEncounterVitalsChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"print-encounter-vitals\\\",null,[[\\\"class\\\",\\\"vitalsFlowsheet\\\"],[\\\"container-fluid\\\",[23,[\\\"printVitalsFlowsheet\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[4,\\\"each\\\",[[23,[\\\"selectedFlowsheets\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"print-flowsheet-section\\\",null,[[\\\"chartNote\\\",\\\"columns\\\",\\\"patient\\\",\\\"seriesDefinitions\\\",\\\"flowsheetName\\\",\\\"includeHeaderAndFooter\\\",\\\"chartNotePrintInfo\\\"],[[23,[\\\"chartNote\\\"]],[22,11,[\\\"printColumns\\\"]],[23,[\\\"patientSummary\\\"]],[22,11,[\\\"sortedSeriesDefinitions\\\"]],[22,11,[\\\"flowsheetDefinition\\\",\\\"flowsheetName\\\"]],[23,[\\\"includeHeaderAndFooter\\\"]],[23,[\\\"chartNotePrintInfo\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[11]},null],[4,\\\"if\\\",[[23,[\\\"anyGrowthChartsChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"print-growth-charts-section\\\",null,[[\\\"class\\\",\\\"chartNote\\\",\\\"chartNotePrintInfo\\\",\\\"history\\\",\\\"patient\\\",\\\"printLengthWeight\\\",\\\"printHeadCirc\\\",\\\"printHeightWeight\\\",\\\"printBmi\\\",\\\"includeHeaderAndFooter\\\"],[\\\"growth-charts-print print-section\\\",[23,[\\\"chartNote\\\"]],[23,[\\\"chartNotePrintInfo\\\"]],[23,[\\\"sortedVitalsHistory\\\"]],[23,[\\\"patientController\\\"]],[23,[\\\"isLengthWeightChecked\\\"]],[23,[\\\"isHeadCircChecked\\\"]],[23,[\\\"isHeightWeightChecked\\\"]],[23,[\\\"isBMIChecked\\\"]],[23,[\\\"includeHeaderAndFooter\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"isDiagnosesChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"print-diagnoses\\\",null,[[\\\"class\\\",\\\"chartNote\\\",\\\"chartNotePrintInfo\\\",\\\"patient\\\",\\\"activeDiagnoses\\\",\\\"historicalDiagnoses\\\",\\\"chronicActiveDiagnoses\\\",\\\"chronicHistoricalDiagnoses\\\",\\\"acuteActiveDiagnoses\\\",\\\"acuteHistoricalDiagnoses\\\",\\\"chartNote\\\",\\\"showDiagnosisComment\\\",\\\"showEncounterComment\\\",\\\"showMedication\\\",\\\"includeHeaderAndFooter\\\"],[\\\"chart-print-container\\\",[23,[\\\"chartNote\\\"]],[23,[\\\"chartNotePrintInfo\\\"]],[23,[\\\"patientSummary\\\"]],[23,[\\\"allActiveDiagnoses\\\"]],[23,[\\\"allHistoricalDiagnoses\\\"]],[23,[\\\"chronicActiveDiagnoses\\\"]],[23,[\\\"chronicHistoricalDiagnoses\\\"]],[23,[\\\"acuteActiveDiagnoses\\\"]],[23,[\\\"acuteHistoricalDiagnoses\\\"]],[23,[\\\"chartNote\\\"]],true,true,true,[23,[\\\"includeHeaderAndFooter\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"isAllergiesChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"print-allergies\\\",null,[[\\\"chartNote\\\",\\\"patient\\\",\\\"visibleComments\\\",\\\"includeHeaderAndFooter\\\",\\\"chartNotePrintInfo\\\"],[[23,[\\\"chartNote\\\"]],[23,[\\\"patientSummary\\\"]],[23,[\\\"visibleAllergiesComments\\\"]],[23,[\\\"includeHeaderAndFooter\\\"]],[23,[\\\"chartNotePrintInfo\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"isMedicationsChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"print-medications\\\",null,[[\\\"chartNote\\\",\\\"patient\\\",\\\"sortProperty\\\",\\\"sortAscending\\\",\\\"showComments\\\",\\\"showEncounterComments\\\",\\\"showScripts\\\",\\\"includeHeaderAndFooter\\\",\\\"chartNotePrintInfo\\\",\\\"showHistoricalMeds\\\",\\\"showActiveMeds\\\"],[[23,[\\\"chartNote\\\"]],[23,[\\\"patientSummary\\\"]],\\\"fullGenericName\\\",true,true,true,true,[23,[\\\"includeHeaderAndFooter\\\"]],[23,[\\\"chartNotePrintInfo\\\"]],[23,[\\\"showMedicationsHistorical\\\"]],[23,[\\\"showMedicationsActive\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isImmunizationsChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"print-immunizations-section\\\",null,[[\\\"chartNote\\\",\\\"content\\\",\\\"patient\\\",\\\"class\\\",\\\"showComments\\\",\\\"title\\\",\\\"includeHeaderAndFooter\\\",\\\"chartNotePrintInfo\\\"],[[23,[\\\"chartNote\\\"]],[23,[\\\"immunizations\\\"]],[23,[\\\"patientSummary\\\"]],\\\"immu-print print-section\\\",true,[23,[\\\"immunizationsTitle\\\"]],[23,[\\\"includeHeaderAndFooter\\\"]],[23,[\\\"chartNotePrintInfo\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"isSocialChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"print-social-behavioral-health-section\\\",null,[[\\\"chartNote\\\",\\\"content\\\",\\\"patient\\\",\\\"includeHeaderAndFooter\\\",\\\"chartNotePrintInfo\\\"],[[23,[\\\"chartNote\\\"]],[23,[\\\"socialBehavioralHistoryInfo\\\"]],[23,[\\\"patientSummary\\\"]],[23,[\\\"includeHeaderAndFooter\\\"]],[23,[\\\"chartNotePrintInfo\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"isPmhChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"print-pmh-section\\\",null,[[\\\"chartNote\\\",\\\"content\\\",\\\"patient\\\",\\\"includeHeaderAndFooter\\\",\\\"chartNotePrintInfo\\\"],[[23,[\\\"chartNote\\\"]],[23,[\\\"pmhSections\\\"]],[23,[\\\"patientSummary\\\"]],[23,[\\\"includeHeaderAndFooter\\\"]],[23,[\\\"chartNotePrintInfo\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"isFamilyHistoryChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"print-family-health-history\\\",null,[[\\\"chartNote\\\",\\\"patient\\\",\\\"relatives\\\",\\\"includeHeaderAndFooter\\\",\\\"chartNotePrintInfo\\\"],[[23,[\\\"chartNote\\\"]],[23,[\\\"patientSummary\\\"]],[23,[\\\"familyHistory\\\"]],[23,[\\\"includeHeaderAndFooter\\\"]],[23,[\\\"chartNotePrintInfo\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"isAdvancedDirectivesChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"print-advanced-directives-section\\\",null,[[\\\"chartNote\\\",\\\"content\\\",\\\"patient\\\",\\\"includeHeaderAndFooter\\\",\\\"chartNotePrintInfo\\\"],[[23,[\\\"chartNote\\\"]],[23,[\\\"advancedDirectives\\\"]],[23,[\\\"patientSummary\\\"]],[23,[\\\"includeHeaderAndFooter\\\"]],[23,[\\\"chartNotePrintInfo\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"isImplantableDevicesChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"print-devices-section\\\",null,[[\\\"data\\\",\\\"noDevices\\\",\\\"users\\\",\\\"title\\\",\\\"includeHeaderAndFooter\\\"],[[23,[\\\"devices\\\"]],[23,[\\\"noImplantableDevices\\\"]],[23,[\\\"practiceUsers\\\"]],\\\"Implantable devices\\\",[23,[\\\"includeHeaderAndFooter\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"isHealthConcernsChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"print-health-concerns\\\",null,[[\\\"healthConcerns\\\",\\\"includeHeaderAndFooter\\\",\\\"noKnownHealthConcerns\\\",\\\"showActiveHealthConcerns\\\",\\\"showInactiveHealthConcerns\\\"],[[23,[\\\"healthConcerns\\\"]],[23,[\\\"includeHeaderAndFooter\\\"]],[23,[\\\"noKnownHealthConcerns\\\"]],[23,[\\\"includeActiveHealthConcerns\\\"]],[23,[\\\"includeInactiveHealthConcerns\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"isGoalsChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"print-goals\\\",null,[[\\\"activeGoals\\\",\\\"inactiveGoals\\\",\\\"includeHeaderAndFooter\\\",\\\"showActiveGoals\\\",\\\"showInactiveGoals\\\"],[[23,[\\\"activeGoals\\\"]],[23,[\\\"inactiveGoals\\\"]],[23,[\\\"includeHeaderAndFooter\\\"]],[23,[\\\"showActiveGoals\\\"]],[23,[\\\"showInactiveGoals\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"chartNote\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isAnyEncounterDataChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"container-fluid table-content\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isSoapNote\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isSubjectiveChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[9],[0,\\\"Subjective\\\"],[10],[10],[10],[0,\\\"\\\\n                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"\\\\n                                        \\\"],[1,[27,\\\"rich-text-with-empty-state\\\",null,[[\\\"title\\\",\\\"value\\\",\\\"isEmptyStateDisabled\\\"],[\\\"subjective\\\",[23,[\\\"chartNote\\\",\\\"subjective\\\"]],true]]],false],[0,\\\"\\\\n                                    \\\"],[10],[0,\\\"\\\\n                                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"isObjectiveChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[9],[0,\\\"Objective\\\"],[10],[10],[10],[0,\\\"\\\\n                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"\\\\n                                        \\\"],[1,[27,\\\"rich-text-with-empty-state\\\",null,[[\\\"title\\\",\\\"value\\\",\\\"isEmptyStateDisabled\\\"],[\\\"objective\\\",[23,[\\\"chartNote\\\",\\\"objective\\\"]],true]]],false],[0,\\\"\\\\n                                    \\\"],[10],[0,\\\"\\\\n                                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"isAssessmentChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[9],[0,\\\"Assessment\\\"],[10],[10],[10],[0,\\\"\\\\n                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"\\\\n                                        \\\"],[1,[27,\\\"rich-text-with-empty-state\\\",null,[[\\\"title\\\",\\\"value\\\",\\\"isEmptyStateDisabled\\\"],[\\\"assessment\\\",[23,[\\\"chartNote\\\",\\\"assessment\\\"]],true]]],false],[0,\\\"\\\\n                                        \\\"],[1,[27,\\\"diagnoses-assessment-list-read-only\\\",null,[[\\\"patientGuid\\\",\\\"transcriptGuid\\\",\\\"isExpanded\\\",\\\"hideCollapseLink\\\",\\\"oneline\\\",\\\"firstCommentOneLine\\\",\\\"chartNoteDiagnoses\\\",\\\"isSigned\\\"],[[23,[\\\"patient\\\",\\\"id\\\"]],[23,[\\\"chartNote\\\",\\\"transcriptGuid\\\"]],true,true,false,false,[23,[\\\"chartNote\\\",\\\"diagnoses\\\"]],[23,[\\\"isSigned\\\"]]]]],false],[0,\\\"\\\\n                                    \\\"],[10],[0,\\\"\\\\n                                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"isPlanChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[9],[0,\\\"Plan\\\"],[10],[10],[10],[0,\\\"\\\\n                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"\\\\n                                        \\\"],[1,[27,\\\"rich-text-with-empty-state\\\",null,[[\\\"title\\\",\\\"value\\\",\\\"isEmptyStateDisabled\\\"],[\\\"plan\\\",[23,[\\\"chartNote\\\",\\\"plan\\\"]],true]]],false],[0,\\\"\\\\n                                        \\\"],[1,[27,\\\"medications-plan-list-read-only\\\",null,[[\\\"patientGuid\\\",\\\"transcriptGuid\\\",\\\"chartNoteMedications\\\",\\\"isSigned\\\",\\\"isExpanded\\\",\\\"hideCollapseLink\\\",\\\"oneline\\\",\\\"firstCommentOneLine\\\",\\\"showWarningOnDuplicateMedications\\\"],[[23,[\\\"patient\\\",\\\"id\\\"]],[23,[\\\"chartNote\\\",\\\"transcriptGuid\\\"]],[23,[\\\"chartNote\\\",\\\"medications\\\"]],[23,[\\\"isSigned\\\"]],true,true,false,false,false]]],false],[0,\\\"\\\\n                                    \\\"],[10],[0,\\\"\\\\n                                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isSimpleNoteChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[9],[1,[21,\\\"noteTypeHeading\\\"],false],[10],[10],[10],[0,\\\"\\\\n                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                                    \\\"],[1,[27,\\\"rich-text-with-empty-state\\\",null,[[\\\"title\\\",\\\"value\\\",\\\"class\\\",\\\"isEmptyStateDisabled\\\"],[[23,[\\\"noteTypeHeading\\\"]],[23,[\\\"chartNote\\\",\\\"subjective\\\"]],\\\"col-xs-12\\\",true]]],false],[0,\\\"\\\\n                                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}],[0,\\\"                    \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isOrdersChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10\\\"],[9],[0,\\\"\\\\n                                    \\\"],[7,\\\"h2\\\"],[9],[0,\\\"Orders\\\"],[10],[0,\\\"\\\\n                                \\\"],[10],[0,\\\"\\\\n                            \\\"],[10],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10 print-order-type-title\\\"],[9],[0,\\\"LAB ORDERS\\\"],[10],[0,\\\"\\\\n                            \\\"],[10],[0,\\\"\\\\n                                \\\"],[1,[27,\\\"print-order-attached-to-encounter-section\\\",null,[[\\\"orders\\\"],[[23,[\\\"diagnosticOrders\\\"]]]]],false],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10 print-order-type-title\\\"],[9],[0,\\\"IMAGING ORDERS\\\"],[10],[0,\\\"\\\\n                            \\\"],[10],[0,\\\"\\\\n                                \\\"],[1,[27,\\\"print-order-attached-to-encounter-section\\\",null,[[\\\"orders\\\"],[[23,[\\\"imagingOrders\\\"]]]]],false],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isSIAChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[11,\\\"data-element\\\",\\\"print-sia-header\\\"],[9],[0,\\\"Screenings/ Interventions/ Assessments\\\"],[10],[10],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"events\\\",\\\"eventItems\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-4\\\"],[9],[0,\\\"Category\\\"],[10],[0,\\\"\\\\n                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6\\\"],[9],[0,\\\"Name\\\"],[10],[0,\\\"\\\\n                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Status\\\"],[10],[0,\\\"\\\\n                                \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"events\\\",\\\"eventItems\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-4\\\"],[9],[1,[22,9,[\\\"eventType\\\",\\\"category\\\"]],false],[10],[0,\\\"\\\\n                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6\\\"],[9],[0,\\\"\\\\n                                            \\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"print-sia-display-name\\\"],[9],[1,[22,9,[\\\"eventType\\\",\\\"displayName\\\"]],false],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,9,[\\\"children\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                                \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Follow-up plan\\\"],[10],[0,\\\"\\\\n                                                \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"list\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[22,9,[\\\"children\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                                        \\\"],[7,\\\"li\\\"],[9],[1,[22,10,[\\\"eventType\\\",\\\"category\\\"]],false],[0,\\\": \\\"],[7,\\\"span\\\"],[11,\\\"data-element\\\",\\\"print-sia-child-item\\\"],[9],[0,\\\" \\\"],[1,[22,10,[\\\"eventType\\\",\\\"displayName\\\"]],false],[0,\\\" \\\"],[10],[0,\\\" - \\\"],[1,[22,10,[\\\"selectedStatus\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[10]},null],[0,\\\"                                                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                                        \\\"],[10],[0,\\\"\\\\n                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[1,[22,9,[\\\"selectedStatus\\\"]],false],[10],[0,\\\"\\\\n                                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[9]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"formatted-text\\\"],[9],[0,\\\"No screenings/interventions/assessments recorded.\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isObservationsChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[9],[0,\\\"Observations\\\"],[10],[10],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showStructuredObservations\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"hasNoStructuredObservations\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"formatted-text\\\"],[11,\\\"data-element\\\",\\\"print-observations-empty-text\\\"],[9],[0,\\\"No observations recorded.\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-4\\\"],[9],[0,\\\"Category\\\"],[10],[0,\\\"\\\\n                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6\\\"],[9],[0,\\\"Name\\\"],[10],[0,\\\"\\\\n                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Date\\\"],[10],[0,\\\"\\\\n                                    \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"functionalStatuses\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-4 formatted-text\\\"],[9],[0,\\\"Functional status\\\"],[10],[0,\\\"\\\\n                                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6 formatted-text\\\"],[11,\\\"data-element\\\",\\\"print-functional-status-text\\\"],[9],[1,[22,8,[\\\"eventType\\\",\\\"displayName\\\"]],false],[10],[0,\\\"\\\\n                                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2 formatted-text\\\"],[11,\\\"data-element\\\",\\\"print-functional-status-date\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[22,8,[\\\"startDateTimeUtc\\\"]]],null],false],[10],[0,\\\"\\\\n                                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[8]},null],[4,\\\"each\\\",[[23,[\\\"cognitiveStatuses\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-4 formatted-text\\\"],[9],[0,\\\"Cognitive status\\\"],[10],[0,\\\"\\\\n                                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6 formatted-text\\\"],[11,\\\"data-element\\\",\\\"print-cognitive-status-text\\\"],[9],[1,[22,7,[\\\"eventType\\\",\\\"displayName\\\"]],false],[10],[0,\\\"\\\\n                                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2 formatted-text\\\"],[11,\\\"data-element\\\",\\\"print-cognitive-status-date\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[22,7,[\\\"startDateTimeUtc\\\"]]],null],false],[10],[0,\\\"\\\\n                                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[7]},null]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"each\\\",[[23,[\\\"observations\\\",\\\"eventItems\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[1,[22,6,[\\\"eventType\\\",\\\"displayName\\\"]],false],[10],[0,\\\"\\\\n                                    \\\"],[10],[0,\\\"\\\\n                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[27,\\\"compare\\\",[[22,6,[\\\"resultCode\\\",\\\"codeValue\\\"]],[23,[\\\"observations\\\",\\\"nullResult\\\",\\\"codeValue\\\"]]],null]],null,{\\\"statements\\\":[[0,\\\"                                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12 formatted-text\\\"],[11,\\\"data-element\\\",\\\"print-observation-no-impairment-text\\\"],[9],[0,\\\"No impairment.\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12 formatted-text\\\"],[11,\\\"data-element\\\",\\\"print-observation-text\\\"],[9],[1,[22,6,[\\\"comments\\\"]],false],[10],[0,\\\"\\\\n                                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[6]},{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"formatted-text\\\"],[11,\\\"data-element\\\",\\\"print-observation-no-observations-text\\\"],[9],[0,\\\"No observations recorded.\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isQualityOfCareChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[9],[0,\\\"Quality of care\\\"],[10],[10],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"careQuality\\\",\\\"selectedEvents\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[11,\\\"data-element\\\",\\\"print-encounter-quality-of-care\\\"],[9],[1,[22,5,[\\\"eventType\\\",\\\"displayName\\\"]],false],[10],[0,\\\"\\\\n                                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[5]},{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"formatted-text\\\"],[9],[0,\\\"No quality of care events recorded.\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isCarePlanChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[9],[0,\\\"Care plan\\\"],[10],[10],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"carePlan\\\",\\\"eventItems\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12 formatted-text\\\"],[9],[1,[22,4,[\\\"comments\\\"]],false],[10],[0,\\\"\\\\n                                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[4]},{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"formatted-text\\\"],[9],[0,\\\"No care plan recorded.\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isAddendaChecked\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"amendments\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table\\\"],[9],[0,\\\"\\\\n                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[9],[0,\\\"Addenda\\\"],[10],[10],[10],[0,\\\"\\\\n                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-4\\\"],[9],[0,\\\"Addendum\\\"],[10],[0,\\\"\\\\n                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[0,\\\"Status\\\"],[10],[0,\\\"\\\\n                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Source\\\"],[10],[0,\\\"\\\\n                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[0,\\\"Date/Time\\\"],[10],[0,\\\"\\\\n                                \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"amendments\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-4 formatted-text\\\"],[11,\\\"data-element\\\",\\\"print-patient-am-note\\\"],[9],[1,[22,3,[\\\"note\\\"]],false],[10],[0,\\\"\\\\n                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[11,\\\"data-element\\\",\\\"print-patient-am-status-name\\\"],[9],[1,[22,3,[\\\"status\\\"]],false],[0,\\\" by \\\"],[1,[22,3,[\\\"providerName\\\"]],false],[10],[0,\\\"\\\\n                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[1,[22,3,[\\\"source\\\"]],false],[10],[0,\\\"\\\\n                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[1,[27,\\\"format-date-time-local\\\",[[22,3,[\\\"lastModifiedDateTimeUtc\\\"]]],[[\\\"format\\\",\\\"defaultText\\\"],[\\\"MM/DD/YYYY hh:mm a\\\",\\\"n/a\\\"]]],false],[10],[0,\\\"\\\\n                                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3]},null],[0,\\\"                            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-logo\\\"],[9],[1,[27,\\\"pf-logo\\\",null,[[\\\"width\\\"],[\\\"150\\\"]]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"each\\\",[[23,[\\\"sortedEncounters\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"print-encounter-section\\\",null,[[\\\"amendments\\\",\\\"careQuality\\\",\\\"carePlan\\\",\\\"chartNote\\\",\\\"events\\\",\\\"observations\\\",\\\"patient\\\",\\\"transcriptGuid\\\",\\\"vitals\\\",\\\"includeAllSections\\\",\\\"encounterType\\\",\\\"isSigned\\\",\\\"vitalsFlowsheet\\\",\\\"includeHeaderAndFooter\\\",\\\"chartNotePrintInfo\\\",\\\"patientSnapshot\\\",\\\"facilitySnapshot\\\",\\\"showFooter\\\"],[[22,2,[\\\"addenda\\\"]],[22,2,[\\\"careQuality\\\"]],[22,2,[\\\"carePlan\\\"]],[22,2,[]],[22,2,[\\\"events\\\"]],[22,2,[\\\"observations\\\"]],[23,[\\\"patientSummary\\\"]],[22,2,[\\\"id\\\"]],[22,2,[\\\"vitals\\\"]],true,[22,2,[\\\"encounterType\\\"]],[22,2,[\\\"isSigned\\\"]],[22,2,[\\\"vitalsFlowsheet\\\"]],true,[22,2,[\\\"chartNotePrintInfo\\\"]],[22,2,[\\\"patientSnapshot\\\"]],[22,2,[\\\"facilitySnapshot\\\"]],false]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[4,\\\"if\\\",[[23,[\\\"isSummarySiaChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"print-patient-sia-section\\\",null,[[\\\"printSummarySIAs\\\",\\\"patient\\\",\\\"includeHeaderAndFooter\\\"],[[23,[\\\"printSummarySIAs\\\"]],[23,[\\\"patientSummary\\\"]],[23,[\\\"includeHeaderAndFooter\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-logo\\\"],[9],[1,[27,\\\"pf-logo\\\",null,[[\\\"width\\\"],[\\\"150\\\"]]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[4,\\\"if\\\",[[23,[\\\"canPrintPHR\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isPHRChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"                TODO: PHR print goes here\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"selectedAdherenceMaterials\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"print-external-document\\\",null,[[\\\"patient\\\",\\\"documentUrl\\\"],[[23,[\\\"patientSummary\\\"]],[22,1,[\\\"documentUrl\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-patient-modal.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-patient-risk-score-section\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"V/j3oZBv\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"print-chart-section\\\",null,[[\\\"chartNote\\\",\\\"patientSummary\\\",\\\"title\\\",\\\"chartNotePrintInfo\\\",\\\"includeHeaderAndFooter\\\"],[[23,[\\\"chartNote\\\"]],[23,[\\\"patient\\\"]],[23,[\\\"title\\\"]],[23,[\\\"chartNotePrintInfo\\\"]],[23,[\\\"includeHeaderAndFooter\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table-content\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[9],[0,\\\"Patient risk score\\\"],[10],[10],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-5\\\"],[9],[0,\\\"Risk score type\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-5\\\"],[9],[0,\\\"Risk score\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Date assigned\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"content\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-5\\\"],[11,\\\"data-element\\\",\\\"print-patient-risk-score-description\\\"],[9],[1,[23,[\\\"content\\\",\\\"description\\\"]],false],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-5\\\"],[11,\\\"data-element\\\",\\\"print-patient-risk-score\\\"],[9],[1,[23,[\\\"content\\\",\\\"riskScore\\\"]],false],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[11,\\\"data-element\\\",\\\"print-patient-risk-score-date\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[23,[\\\"content\\\",\\\"dateAssigned\\\"]]],null],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"No risk score available for this patient\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-patient-risk-score-section.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-patient-row\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"6TU3GNXg\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6 uppercase semibold\\\"],[9],[1,[21,\\\"title\\\"],false],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"value\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6 formatted-text\\\"],[9],[1,[27,\\\"unbound\\\",[[23,[\\\"value\\\"]]],null],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-6\\\"],[9],[4,\\\"if\\\",[[23,[\\\"dateValue\\\"]]],null,{\\\"statements\\\":[[1,[27,\\\"format-date-time\\\",[[23,[\\\"dateValue\\\"]]],null],false]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"-\\\"]],\\\"parameters\\\":[]}],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-patient-row.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-patient-sia-section\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"Yfc4RbcP\", \"block\": \"{\\\"symbols\\\":[\\\"item\\\"],\\\"statements\\\":[[4,\\\"print-chart-section\\\",null,[[\\\"patientSummary\\\",\\\"includeHeaderAndFooter\\\"],[[23,[\\\"patient\\\"]],[23,[\\\"includeHeaderAndFooter\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table-content\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[9],[0,\\\"Screenings/ Interventions/ Assessments\\\"],[10],[10],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"printSummarySIAs\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"print-sia-name\\\"],[11,\\\"class\\\",\\\"col-12\\\"],[9],[1,[22,1,[\\\"displayName\\\"]],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"print-sia-start-date\\\"],[11,\\\"class\\\",\\\"col-12 formatted-text\\\"],[9],[0,\\\"Start date: \\\"],[1,[22,1,[\\\"startDate\\\"]],false],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"print-sia-status\\\"],[11,\\\"class\\\",\\\"col-12 formatted-text\\\"],[9],[0,\\\"Status: \\\"],[1,[22,1,[\\\"status\\\"]],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"No active screening/interventions/assessments recorded.\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-patient-sia-section.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-pmh-section\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"L7fDffpG\", \"block\": \"{\\\"symbols\\\":[\\\"pmh\\\",\\\"index\\\"],\\\"statements\\\":[[4,\\\"print-chart-section\\\",null,[[\\\"chartNote\\\",\\\"patientSummary\\\",\\\"title\\\",\\\"includeHeaderAndFooter\\\",\\\"chartNotePrintInfo\\\"],[[23,[\\\"chartNote\\\"]],[23,[\\\"patient\\\"]],[23,[\\\"title\\\"]],[23,[\\\"includeHeaderAndFooter\\\"]],[23,[\\\"chartNotePrintInfo\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table-content\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[11,\\\"data-element\\\",\\\"print-past-medical-history-header\\\"],[9],[0,\\\"Past medical history\\\"],[10],[10],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"pmhWithValue\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"print-past-medical-history-title\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[1,[22,1,[\\\"title\\\"]],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12 formatted-text\\\"],[12,\\\"data-element\\\",[28,[\\\"print-past-medical-history-field-value-\\\",[22,2,[]]]]],[9],[1,[22,1,[\\\"value\\\"]],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1,2]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"No past medical history available for this patient.\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-pmh-section.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-social-behavioral-health-section\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"uGLfIFcH\", \"block\": \"{\\\"symbols\\\":[\\\"item\\\"],\\\"statements\\\":[[4,\\\"print-chart-section\\\",null,[[\\\"chartNote\\\",\\\"patientSummary\\\",\\\"title\\\",\\\"chartNotePrintInfo\\\",\\\"includeHeaderAndFooter\\\"],[[23,[\\\"chartNote\\\"]],[23,[\\\"patient\\\"]],[23,[\\\"title\\\"]],[23,[\\\"chartNotePrintInfo\\\"]],[23,[\\\"includeHeaderAndFooter\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table-content print-behavioral-health-section\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[9],[0,\\\"Social history\\\"],[10],[10],[10],[0,\\\"\\\\n\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10\\\"],[9],[0,\\\"Tobacco use\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Recorded\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"tobaccoUse\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12 box-padding-Bn\\\"],[9],[0,\\\"Current tobacco use\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10 box-padding-Tn\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"h4\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[1,[23,[\\\"tobaccoUse\\\",\\\"content\\\",\\\"firstObject\\\",\\\"description\\\"]],false],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2 box-padding-Tn\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[23,[\\\"tobaccoUse\\\",\\\"content\\\",\\\"firstObject\\\",\\\"effectiveDate\\\"]]],null],false],[10],[0,\\\"\\\\n                    \\\"],[4,\\\"if\\\",[[23,[\\\"tobaccoUsePastEntries\\\"]]],null,{\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12 box-padding-Bn\\\"],[9],[0,\\\"Past entries\\\"],[10]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"tobaccoUsePastEntries\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10 box-padding-Tn\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"h4\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[1,[22,1,[\\\"description\\\"]],false],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2 box-padding-Tn\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[22,1,[\\\"effectiveDate\\\"]]],null],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10\\\"],[9],[0,\\\"No tobacco use history available for this patient\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10\\\"],[9],[0,\\\"Alcohol use\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Recorded\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"alcoholUseWorksheet\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"print-worksheet\\\",null,[[\\\"worksheet\\\"],[[23,[\\\"alcoholUseWorksheet\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10\\\"],[9],[0,\\\"No alcohol use history available for this patient\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"Social history (free-text)\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12 box-padding-Tn\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"socialHealth\\\",\\\"socialHistory\\\",\\\"description\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[23,[\\\"socialHealth\\\",\\\"socialHistory\\\",\\\"description\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                        No social history (free-text) recorded for this patient\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10\\\"],[9],[0,\\\"Financial resources\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Recorded\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10 box-padding-Tn\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"socialHealth\\\",\\\"financialResourceStatus\\\",\\\"description\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[9],[0,\\\"Describe your difficulty paying for the very basics like food, housing, medical care, and heating\\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"h4\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[1,[23,[\\\"socialHealth\\\",\\\"financialResourceStatus\\\",\\\"description\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                        No financial resources recorded for this patient\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2 box-padding-Tn\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[23,[\\\"socialHealth\\\",\\\"financialResourceStatus\\\",\\\"effectiveDate\\\"]]],null],false],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10\\\"],[9],[0,\\\"Education\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Recorded\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10 box-padding-Tn\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"socialHealth\\\",\\\"education\\\",\\\"description\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[9],[0,\\\"Highest education level completed\\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"h4\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[1,[23,[\\\"socialHealth\\\",\\\"education\\\",\\\"description\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                        No education recorded for this patient\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2 box-padding-Tn\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[23,[\\\"socialHealth\\\",\\\"education\\\",\\\"effectiveDate\\\"]]],null],false],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10\\\"],[9],[0,\\\"Physical activity\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Recorded\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"physicalActivityWorksheet\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"print-worksheet\\\",null,[[\\\"worksheet\\\"],[[23,[\\\"physicalActivityWorksheet\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10\\\"],[9],[0,\\\"No physical activity available for this patient\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10\\\"],[9],[0,\\\"Nutrition history\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Recorded\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"nutritionHistory\\\",\\\"content\\\",\\\"description\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10\\\"],[9],[1,[23,[\\\"nutritionHistory\\\",\\\"content\\\",\\\"description\\\"]],false],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10\\\"],[9],[0,\\\"No nutrition history available for this patient\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10\\\"],[9],[0,\\\"Stress\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Recorded\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"stressWorksheet\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"print-worksheet\\\",null,[[\\\"worksheet\\\"],[[23,[\\\"stressWorksheet\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10\\\"],[9],[0,\\\"No stress available for this patient\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10\\\"],[9],[0,\\\"Social isolation and connection\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Recorded\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"socialIsolationWorksheet\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"print-worksheet\\\",null,[[\\\"worksheet\\\"],[[23,[\\\"socialIsolationWorksheet\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10\\\"],[9],[0,\\\"No social isolation and connection available for this patient\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10\\\"],[9],[0,\\\"Exposure to violence\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"Recorded\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"exposureToViolenceWorksheet\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"print-worksheet\\\",null,[[\\\"worksheet\\\"],[[23,[\\\"exposureToViolenceWorksheet\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"No exposure to violence history available for this patient\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"Gender identity\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12 box-padding-Tn\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"socialHealth\\\",\\\"genderIdentity\\\",\\\"description\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[23,[\\\"socialHealth\\\",\\\"genderIdentity\\\",\\\"description\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                        No gender identity recorded for this patient\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"Sexual orientation\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12 box-padding-Tn\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"socialHealth\\\",\\\"sexualOrientation\\\",\\\"description\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[23,[\\\"socialHealth\\\",\\\"sexualOrientation\\\",\\\"description\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                        No sexual orientation recorded for this patient\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-social-behavioral-health-section.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-social-history-section\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"f1sW29hf\", \"block\": \"{\\\"symbols\\\":[\\\"item\\\"],\\\"statements\\\":[[4,\\\"print-chart-section\\\",null,[[\\\"chartNote\\\",\\\"patientSummary\\\",\\\"title\\\",\\\"chartNotePrintInfo\\\",\\\"includeHeaderAndFooter\\\"],[[23,[\\\"chartNote\\\"]],[23,[\\\"patient\\\"]],[23,[\\\"title\\\"]],[23,[\\\"chartNotePrintInfo\\\"]],[23,[\\\"includeHeaderAndFooter\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table-content print-smoking-status-section\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[9],[0,\\\"Smoking History\\\"],[10],[10],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"content\\\",\\\"smokingStatuses\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[11,\\\"data-element\\\",\\\"print-smoking-history-description\\\"],[9],[1,[22,1,[\\\"description\\\"]],false],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"Effective date: \\\"],[7,\\\"span\\\"],[11,\\\"data-element\\\",\\\"print-smoking-history-effective-date\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[22,1,[\\\"effectiveDate\\\"]]],null],false],[10],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"No smoking history available for this patient\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table-content print-gender-identity-section\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[9],[0,\\\"Gender identity\\\"],[10],[10],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"content\\\",\\\"genderIdentity\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[11,\\\"data-element\\\",\\\"print-gender-identity-description\\\"],[9],[1,[23,[\\\"content\\\",\\\"genderIdentity\\\",\\\"description\\\"]],false],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"content\\\",\\\"genderIdentity\\\",\\\"notes\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[11,\\\"data-element\\\",\\\"print-gender-identity-notes\\\"],[9],[0,\\\"Notes: \\\"],[1,[23,[\\\"content\\\",\\\"genderIdentity\\\",\\\"notes\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"No gender identity available for this patient\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table-content print-sexual-orientation-section\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row header-row\\\"],[9],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[7,\\\"h2\\\"],[9],[0,\\\"Sexual orientation\\\"],[10],[10],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"content\\\",\\\"sexualOrientation\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[11,\\\"data-element\\\",\\\"print-sexual-orientation-description\\\"],[9],[1,[23,[\\\"content\\\",\\\"sexualOrientation\\\",\\\"description\\\"]],false],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"content\\\",\\\"sexualOrientation\\\",\\\"notes\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[11,\\\"data-element\\\",\\\"print-sexual-orientation-notes\\\"],[9],[0,\\\"Notes: \\\"],[1,[23,[\\\"content\\\",\\\"sexualOrientation\\\",\\\"notes\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"No sexual orientation available for this patient\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-social-history-section.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-vitals-history-section\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"ko4aNr3X\", \"block\": \"{\\\"symbols\\\":[\\\"table\\\",\\\"column\\\",\\\"cell\\\",\\\"header\\\",\\\"line\\\"],\\\"statements\\\":[[4,\\\"print-chart-section\\\",null,[[\\\"patientSummary\\\",\\\"chartNote\\\",\\\"title\\\",\\\"includeHeaderAndFooter\\\",\\\"chartNotePrintInfo\\\"],[[23,[\\\"patient\\\"]],[23,[\\\"chartNote\\\"]],[23,[\\\"title\\\"]],[23,[\\\"includeHeaderAndFooter\\\"]],[23,[\\\"chartNotePrintInfo\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table-content vitals-history\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"historyTables\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"table with-cell-borders\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[22,1,[\\\"headers\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"stacked-column col-xs-2\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"stacked-cell\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[22,4,[]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"div\\\"],[9],[1,[22,5,[]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[5]},null],[0,\\\"                            \\\"],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[4]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[22,1,[\\\"columns\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"stacked-column col-xs-2\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[22,2,[]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"stacked-cell\\\"],[9],[0,\\\"\\\\n                                    \\\"],[1,[22,3,[]],false],[0,\\\"\\\\n                                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3]},null],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-vitals-history-section.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-worksheet\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"7hHoUbAf\", \"block\": \"{\\\"symbols\\\":[\\\"question\\\",\\\"index\\\"],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row no-stripe\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"worksheet\\\",\\\"isDeclinedChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10\\\"],[9],[0,\\\"Patient declined to specify on all questions\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[23,[\\\"worksheet\\\",\\\"content\\\",\\\"updatedAt\\\"]]],null],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"each\\\",[[23,[\\\"allOtherQuestions\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[22,1,[\\\"isShowing\\\"]]],null,{\\\"statements\\\":[[4,\\\"unless\\\",[[22,1,[\\\"isSeparator\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[12,\\\"data-element\\\",[28,[\\\"worksheet-question-\\\",[22,2,[]]]]],[9],[0,\\\"\\\\n                                \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"box-margin-Bn\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"numbering\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                        \\\"],[1,[22,1,[\\\"numbering\\\"]],false],[0,\\\".\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                                    \\\"],[7,\\\"span\\\"],[12,\\\"data-element\\\",[28,[\\\"worksheet-question-label-\\\",[22,2,[]]]]],[9],[1,[22,1,[\\\"label\\\"]],true],[10],[0,\\\"\\\\n                                \\\"],[10],[0,\\\"\\\\n                                \\\"],[7,\\\"h4\\\"],[12,\\\"data-element\\\",[28,[\\\"worksheet-question-anwser-\\\",[22,2,[]]]]],[11,\\\"class\\\",\\\"h4\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"isRadioQuestion\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                        \\\"],[1,[27,\\\"if\\\",[[22,1,[\\\"responseText\\\"]],[22,1,[\\\"responseText\\\"]],\\\"--\\\"],null],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                                    \\\"],[4,\\\"if\\\",[[22,1,[\\\"isNumericType\\\"]]],null,{\\\"statements\\\":[[1,[27,\\\"if\\\",[[22,1,[\\\"value\\\"]],[22,1,[\\\"value\\\"]],\\\"--\\\"],null],false]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n                                \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"secondaryLabel\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"secondary-label\\\"],[9],[1,[22,1,[\\\"secondaryLabel\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                            \\\"],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[4,\\\"if\\\",[[23,[\\\"showUpdatedDate\\\"]]],null,{\\\"statements\\\":[[1,[27,\\\"format-date-time-utc\\\",[[22,1,[\\\"enteredAt\\\"]]],null],false]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[22,1,[\\\"isTextSeparator\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[12,\\\"data-element\\\",[28,[\\\"worksheet-question-label-\\\",[22,2,[]]]]],[9],[1,[22,1,[\\\"label\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1,2]},null],[4,\\\"if\\\",[[23,[\\\"worksheet\\\",\\\"scoreMethod\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-10\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Score\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"h4\\\"],[11,\\\"data-element\\\",\\\"worksheet-score\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"worksheet\\\",\\\"scoreText\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[23,[\\\"worksheet\\\",\\\"scoreText\\\"]],false],[4,\\\"if\\\",[[23,[\\\"worksheet\\\",\\\"resultDescription\\\"]]],null,{\\\"statements\\\":[[0,\\\" - \\\"],[1,[23,[\\\"worksheet\\\",\\\"resultDescription\\\"]],false]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                        No score\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[23,[\\\"worksheet\\\",\\\"content\\\",\\\"updatedAt\\\"]]],null],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"worksheet\\\",\\\"content\\\",\\\"worksheet\\\",\\\"summary\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"worksheet\\\",\\\"displaySummary\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-summary\\\"],[9],[1,[23,[\\\"worksheet\\\",\\\"content\\\",\\\"worksheet\\\",\\\"summary\\\"]],true],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"worksheet\\\",\\\"content\\\",\\\"worksheet\\\",\\\"secondarySummary\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"worksheet\\\",\\\"displaySecondarySummary\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-12\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-secondary-summary\\\"],[9],[1,[23,[\\\"worksheet\\\",\\\"content\\\",\\\"worksheet\\\",\\\"secondarySummary\\\"]],true],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/print-worksheet.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/risk-score-detail\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"wN1U9ogT\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\",\\\"section\\\"],\\\"statements\\\":[[4,\\\"detail-pane\\\",null,[[\\\"close\\\",\\\"class\\\",\\\"resizables\\\",\\\"resizeOnBreakPoint\\\",\\\"topSpacing\\\",\\\"isToolBoxVisible\\\",\\\"bigHeaderText\\\",\\\"persistedHistory\\\",\\\"patientRiskScore\\\"],[\\\"cancel\\\",\\\"side-fixed col-xs-5 summary-details patient-risk-score-detail\\\",[23,[\\\"resizables\\\"]],true,50,false,\\\"Patient risk score\\\",[23,[\\\"persistedHistory\\\"]],[23,[\\\"patientRiskScore\\\"]]]],{\\\"statements\\\":[[4,\\\"detail-pane-body\\\",null,[[\\\"sectionContext\\\"],[[22,2,[]]]],{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"panel-section\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"required\\\"],[9],[0,\\\"Risk score type\\\"],[10],[0,\\\"\\\\n                        \\\"],[1,[27,\\\"popover-info\\\",null,[[\\\"classNames\\\",\\\"data-element\\\",\\\"allowHtmlCode\\\",\\\"popoverContent\\\"],[\\\"icon-info\\\",\\\"risk-score-info\\\",\\\"true\\\",[23,[\\\"riskScoreHelpHtml\\\"]]]]],false],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"single-select\\\",null,[[\\\"classNames\\\",\\\"prompt\\\",\\\"content\\\",\\\"data-element\\\",\\\"refocusOnError\\\",\\\"optionLabelPath\\\",\\\"optionValuePath\\\",\\\"value\\\",\\\"sortLabels\\\",\\\"hasError\\\",\\\"tooltipMsg\\\",\\\"tooltipPlacement\\\",\\\"isShorter\\\"],[\\\"risk-type\\\",\\\"Select risk score type\\\",[23,[\\\"socialHistoryOptions\\\",\\\"riskScoreOptions\\\"]],\\\"risk-type\\\",\\\"true\\\",\\\"description\\\",\\\"optionGuid\\\",[23,[\\\"riskScoreType\\\"]],false,[23,[\\\"errors\\\",\\\"riskScoreType\\\"]],[23,[\\\"errors\\\",\\\"riskScoreType\\\"]],\\\"top\\\",true]]],false],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item box-fixed-md\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label required\\\"],[9],[0,\\\"Risk score\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                        \\\"],[1,[27,\\\"validated-textfield\\\",null,[[\\\"data-element\\\",\\\"class\\\",\\\"disabled\\\",\\\"errorMessage\\\",\\\"value\\\",\\\"placeholder\\\",\\\"inputMask\\\",\\\"isErrorHighlightingAutomatic\\\"],[\\\"risk-score\\\",\\\"risk-score\\\",[23,[\\\"disabled\\\"]],[23,[\\\"errors\\\",\\\"riskScore\\\"]],[23,[\\\"riskScore\\\"]],\\\"\\\",\\\"###.###\\\",true]]],false],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label required\\\"],[9],[0,\\\"Date assigned\\\"],[10],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"d-date-picker\\\",null,[[\\\"isLegacy\\\",\\\"value\\\",\\\"placeholder\\\",\\\"disabled\\\",\\\"autoCorrectYear\\\",\\\"data-element\\\",\\\"isShorter\\\",\\\"endDate\\\",\\\"customErrorMessageAfterEndDate\\\",\\\"errorMessage\\\"],[false,[23,[\\\"dateAssigned\\\"]],\\\"MM/DD/YYYY\\\",[23,[\\\"disabled\\\"]],true,\\\"date-assigned-txt\\\",true,[23,[\\\"dateMax\\\"]],\\\"Cannot select a future date\\\",[23,[\\\"errors\\\",\\\"dateAssigned\\\"]]]]],false],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"detail-pane-footer\\\",null,[[\\\"sectionContext\\\"],[[22,2,[]]]],{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-sm\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"],null]],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"canDelete\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-sm box-margin-Lxs\\\"],[11,\\\"data-element\\\",\\\"delete-risk-score-button\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"showDelete\\\"],null]],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"Delete\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-sm btn-primary\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"save\\\"],null]],[12,\\\"disabled\\\",[23,[\\\"socialHistory\\\",\\\"saveDisabled\\\"]]],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"Save\\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[2]},null],[4,\\\"content-modal\\\",null,[[\\\"modalStyle\\\",\\\"isVisible\\\"],[7,[23,[\\\"showDeleteConfirm\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"header\\\"]]],[[\\\"title\\\",\\\"isCloseByXorOutsideVisible\\\"],[\\\"Delete patient risk score\\\",true]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,1,[\\\"body\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"p\\\"],[9],[0,\\\"This action is final, and will remove this Patient risk score from this patient's record.\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"footer\\\"]]],[[\\\"buttonLeftText\\\",\\\"buttonRightPrimaryText\\\",\\\"buttonLeftAction\\\",\\\"buttonRightPrimaryAction\\\"],[\\\"Cancel\\\",\\\"Delete\\\",[27,\\\"action\\\",[[22,0,[]],\\\"closeDeleteConfirm\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"delete\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/risk-score-detail.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/sia-detail\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"Oa5x+bbD\", \"block\": \"{\\\"symbols\\\":[\\\"@openEncounterClicked\\\"],\\\"statements\\\":[[7,\\\"h4\\\"],[11,\\\"data-element\\\",\\\"sia-detail-display-name\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[1,[23,[\\\"eventType\\\",\\\"displayName\\\"]],false],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Status\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"sia-detail-status\\\"],[9],[1,[21,\\\"selectedStatus\\\"],false],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"reasonCodes\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Reason\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"sia-detail-reason\\\"],[9],[1,[27,\\\"if\\\",[[23,[\\\"reasonCode\\\",\\\"displayName\\\"]],[23,[\\\"reasonCode\\\",\\\"displayName\\\"]],\\\"No reason recorded.\\\"],null],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Result\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"sia-detail-result\\\"],[9],[1,[27,\\\"if\\\",[[23,[\\\"resultCode\\\",\\\"displayName\\\"]],[23,[\\\"resultCode\\\",\\\"displayName\\\"]],\\\"No result recorded.\\\"],null],false],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Start date\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"sia-detail-start-date\\\"],[9],[1,[27,\\\"if\\\",[[23,[\\\"startDateTimeUtc\\\"]],[23,[\\\"startDateTimeUtc\\\"]],\\\"--\\\"],null],false],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"End date\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"sia-detail-end-date\\\"],[9],[1,[27,\\\"if\\\",[[23,[\\\"endDateTimeUtc\\\"]],[23,[\\\"endDateTimeUtc\\\"]],\\\"--\\\"],null],false],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Encounter type\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"sia-detail-encounter-type\\\"],[9],[1,[21,\\\"encounterAndNoteType\\\"],false],[7,\\\"a\\\"],[11,\\\"data-element\\\",\\\"sia-detail-encounter-link\\\"],[11,\\\"class\\\",\\\"box-margin-Lmd-v2\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],[22,1,[]]],null]],[9],[0,\\\"View encounter\\\"],[10],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Date of service\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"sia-detail-date-of-service\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[23,[\\\"dateOfService\\\"]]],null],false],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Comment\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"sia-detail-comments\\\"],[11,\\\"class\\\",\\\"box-margin-Bn\\\"],[9],[1,[27,\\\"if\\\",[[23,[\\\"comments\\\"]],[23,[\\\"comments\\\"]],\\\"No comments recorded.\\\"],null],false],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/sia-detail.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/sia-worksheet/default-readonly\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"eFSkq3KS\", \"block\": \"{\\\"symbols\\\":[\\\"question\\\",\\\"index\\\",\\\"@openEncounterClicked\\\"],\\\"statements\\\":[[7,\\\"h4\\\"],[11,\\\"data-element\\\",\\\"worksheet-display-name\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[1,[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"title\\\"]],false],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-description\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"description\\\"]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"printoutUrl\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"a\\\"],[11,\\\"target\\\",\\\"_blank\\\"],[12,\\\"href\\\",[28,[[27,\\\"unbound\\\",[[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"printoutUrl\\\"]]],null]]]],[9],[0,\\\"Print Test\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Status\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-status\\\"],[9],[1,[21,\\\"selectedStatus\\\"],false],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"reasonCodes\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Reason\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-reason\\\"],[9],[1,[27,\\\"if\\\",[[23,[\\\"reasonCode\\\",\\\"displayName\\\"]],[23,[\\\"reasonCode\\\",\\\"displayName\\\"]],\\\"No reason recorded.\\\"],null],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Result\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-result\\\"],[9],[1,[27,\\\"if\\\",[[23,[\\\"resultCode\\\",\\\"displayName\\\"]],[23,[\\\"resultCode\\\",\\\"displayName\\\"]],\\\"No result recorded.\\\"],null],false],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs box-padding-TBn\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Start date\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-start-date\\\"],[9],[1,[27,\\\"if\\\",[[23,[\\\"startDateTimeUtc\\\"]],[23,[\\\"startDateTimeUtc\\\"]],\\\"--\\\"],null],false],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs box-padding-TBn\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"End date\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-end-date\\\"],[9],[1,[27,\\\"if\\\",[[23,[\\\"endDateTimeUtc\\\"]],[23,[\\\"endDateTimeUtc\\\"]],\\\"--\\\"],null],false],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Encounter type\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-encounter-type\\\"],[9],[1,[21,\\\"encounterAndNoteType\\\"],false],[7,\\\"a\\\"],[11,\\\"data-element\\\",\\\"worksheet-encounter-link\\\"],[11,\\\"class\\\",\\\"box-margin-Lmd-v2\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],[22,3,[]]],null]],[9],[0,\\\"View encounter\\\"],[10],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Date of service\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-date-of-service\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[23,[\\\"dateOfService\\\"]]],null],false],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Comment\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-comments\\\"],[9],[1,[27,\\\"if\\\",[[23,[\\\"comments\\\"]],[23,[\\\"comments\\\"]],\\\"No comments recorded.\\\"],null],false],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"reasonCodes\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Assessment responses\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"ol\\\"],[11,\\\"data-element\\\",\\\"worksheet-questions\\\"],[11,\\\"class\\\",\\\"list list--unstyled\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"responses\\\",\\\"questions\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[22,1,[\\\"isShowing\\\"]]],null,{\\\"statements\\\":[[4,\\\"unless\\\",[[22,1,[\\\"isSeparator\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"li\\\"],[12,\\\"data-element\\\",[28,[\\\"worksheet-question-\\\",[22,2,[]]]]],[11,\\\"class\\\",\\\"box-padding-Tn box-padding-Bn box-margin-Blg-v2\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"box-margin-Bn\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"numbering\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[1,[22,1,[\\\"numbering\\\"]],false],[0,\\\".\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                            \\\"],[7,\\\"span\\\"],[12,\\\"data-element\\\",[28,[\\\"worksheet-question-label-\\\",[22,2,[]]]]],[9],[1,[22,1,[\\\"label\\\"]],true],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[12,\\\"data-element\\\",[28,[\\\"worksheet-question-anwser-\\\",[22,2,[]]]]],[11,\\\"class\\\",\\\"p-semibold\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"isRadioQuestion\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[1,[22,1,[\\\"responseText\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"secondaryLabel\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"secondary-label\\\"],[9],[1,[22,1,[\\\"secondaryLabel\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[22,1,[\\\"isTextSeparator\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"li\\\"],[12,\\\"data-element\\\",[28,[\\\"worksheet-question-label-\\\",[22,2,[]]]]],[11,\\\"class\\\",\\\"box-padding-Tn box-padding-Bn box-margin-Bmd-v2\\\"],[9],[1,[22,1,[\\\"label\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1,2]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"scoreMethod\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Score\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"h4\\\"],[11,\\\"data-element\\\",\\\"worksheet-score\\\"],[11,\\\"class\\\",\\\"box-margin-Bmd-v2\\\"],[9],[1,[27,\\\"if\\\",[[23,[\\\"responses\\\",\\\"score\\\"]],[23,[\\\"responses\\\",\\\"score\\\"]],\\\"No score\\\"],null],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"summary\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"displaySummary\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-summary\\\"],[9],[1,[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"summary\\\"]],true],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"secondarySummary\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"displaySecondarySummary\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-secondary-summary\\\"],[9],[1,[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"secondarySummary\\\"]],true],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"copyright\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"worksheet-copyright\\\"],[11,\\\"class\\\",\\\"text-color-placeholder\\\"],[9],[1,[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"copyright\\\"]],true],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/sia-worksheet/default-readonly.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/sia-worksheet/default-v2\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"Uu2qpe0v\", \"block\": \"{\\\"symbols\\\":[\\\"question\\\",\\\"index\\\",\\\"option\\\",\\\"index\\\",\\\"option\\\",\\\"index\\\",\\\"options\\\",\\\"options\\\"],\\\"statements\\\":[[7,\\\"h4\\\"],[11,\\\"data-element\\\",\\\"worksheet-display-name\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[1,[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"title\\\"]],false],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-description\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"description\\\"]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"printoutUrl\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"a\\\"],[11,\\\"target\\\",\\\"_blank\\\"],[12,\\\"href\\\",[28,[[27,\\\"unbound\\\",[[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"printoutUrl\\\"]]],null]]]],[9],[0,\\\"Print Test\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label box-margin-Tn\\\"],[11,\\\"data-element\\\",\\\"worksheet-status-label\\\"],[9],[0,\\\"Status\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"optionLabelPath\\\",\\\"optionValuePath\\\",\\\"value\\\",\\\"disabled\\\",\\\"onSelect\\\"],[[23,[\\\"statusOptions\\\"]],\\\"label\\\",\\\"value\\\",[23,[\\\"selectedStatus\\\"]],[23,[\\\"disabled\\\"]],[27,\\\"action\\\",[[22,0,[]],[23,[\\\"selectWorksheetStatus\\\"]]],null]]],{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"component\\\",[[22,8,[\\\"dropdown\\\"]]],[[\\\"prompt\\\",\\\"class\\\",\\\"data-element\\\"],[\\\"Select a status\\\",\\\"box-padding-Rn\\\",\\\"worksheet-status-selection\\\"]]],false],[0,\\\"\\\\n            \\\"],[1,[22,8,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[8]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[\\\"inline-flex-group-v2 \\\",[27,\\\"unless\\\",[[23,[\\\"reasonCodes\\\"]],\\\"hidden\\\"],null]]]],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label box-margin-Tn\\\"],[11,\\\"data-element\\\",\\\"worksheet-reason-label\\\"],[9],[0,\\\"Reason\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"selection\\\",\\\"optionLabelPath\\\",\\\"optionValuePath\\\",\\\"onSelect\\\",\\\"disabled\\\"],[[23,[\\\"reasonCodes\\\"]],[23,[\\\"reason\\\"]],\\\"displayName\\\",\\\"id\\\",[27,\\\"action\\\",[[22,0,[]],[23,[\\\"selectWorksheetReason\\\"]]],null],[23,[\\\"disabled\\\"]]]],{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"component\\\",[[22,7,[\\\"dropdown\\\"]]],[[\\\"prompt\\\",\\\"class\\\",\\\"data-element\\\"],[\\\"Select a reason\\\",\\\"box-padding-Rn\\\",\\\"worksheet-reason-selection\\\"]]],false],[0,\\\"\\\\n            \\\"],[1,[22,7,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[7]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[1,[27,\\\"sia-worksheet/transcript-event-fields\\\",null,[[\\\"class\\\",\\\"responses\\\",\\\"setErrors\\\",\\\"isDisabled\\\"],[\\\"box-padding-Bsm-v2\\\",[23,[\\\"responses\\\"]],[23,[\\\"setErrors\\\"]],[23,[\\\"disabled\\\"]]]]],false],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"reasonCodes\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Assessment responses\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"ol\\\"],[11,\\\"data-element\\\",\\\"worksheet-questions\\\"],[11,\\\"class\\\",\\\"list list--unstyled migraine-worksheet\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"responses\\\",\\\"questions\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[22,1,[\\\"isShowing\\\"]]],null,{\\\"statements\\\":[[4,\\\"unless\\\",[[22,1,[\\\"isSeparator\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"li\\\"],[12,\\\"data-element\\\",[28,[\\\"worksheet-question-\\\",[22,2,[]]]]],[11,\\\"class\\\",\\\"box-padding-Tn box-padding-Bn box-margin-Blg-v2\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"box-margin-Bn\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"numbering\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[1,[22,1,[\\\"numbering\\\"]],false],[0,\\\".\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                            \\\"],[7,\\\"span\\\"],[12,\\\"data-element\\\",[28,[\\\"worksheet-question-label-\\\",[22,2,[]]]]],[9],[1,[22,1,[\\\"label\\\"]],true],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[[27,\\\"if\\\",[[22,1,[\\\"isHorizontalRadioType\\\"]],\\\"box-margin-Txs-v2\\\"],null]]]],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"isRadioQuestion\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[22,1,[\\\"isHorizontalRadioType\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group box-margin-Ln\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[22,1,[\\\"options\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs box-fixed\\\"],[12,\\\"data-element\\\",[28,[\\\"option-\\\",[22,6,[]]]]],[9],[0,\\\"\\\\n                                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"clearfix\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"disabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                                        \\\"],[1,[27,\\\"d-radio-button\\\",null,[[\\\"id\\\",\\\"name\\\",\\\"value\\\",\\\"selectedValue\\\",\\\"disabled\\\"],[[22,5,[\\\"id\\\"]],[22,1,[\\\"componentGuid\\\"]],[22,5,[\\\"value\\\"]],[22,1,[\\\"selectedOptionValue\\\"]],true]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                                        \\\"],[1,[27,\\\"d-radio-button\\\",null,[[\\\"id\\\",\\\"name\\\",\\\"value\\\",\\\"selectedValue\\\",\\\"disabled\\\",\\\"radioChecked\\\"],[[22,5,[\\\"id\\\"]],[22,1,[\\\"componentGuid\\\"]],[22,5,[\\\"value\\\"]],[22,1,[\\\"selectedOptionValue\\\"]],[22,1,[\\\"isDisabled\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"responseChecked\\\",[22,1,[]],[22,5,[]]],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                                                    \\\"],[7,\\\"label\\\"],[12,\\\"for\\\",[28,[[22,5,[\\\"id\\\"]]]]],[11,\\\"class\\\",\\\"pf-input pf-input--radio-label box-margin-Bn\\\"],[9],[10],[0,\\\"\\\\n                                                \\\"],[10],[0,\\\"\\\\n                                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"text-center box-margin-Txs-v\\\"],[9],[0,\\\"\\\\n                                                    \\\"],[1,[22,5,[\\\"label\\\"]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,5,[\\\"showValue\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[0,\\\"(\\\"],[1,[22,5,[\\\"displayValue\\\"]],false],[0,\\\")\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                                                \\\"],[10],[0,\\\"\\\\n                                            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[5,6]},null],[0,\\\"                                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"each\\\",[[22,1,[\\\"options\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                        \\\"],[7,\\\"div\\\"],[12,\\\"data-element\\\",[28,[\\\"option-\\\",[22,4,[]]]]],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"disabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                                \\\"],[1,[27,\\\"d-radio-button\\\",null,[[\\\"id\\\",\\\"name\\\",\\\"value\\\",\\\"selectedValue\\\",\\\"disabled\\\"],[[22,3,[\\\"id\\\"]],[22,1,[\\\"componentGuid\\\"]],[22,3,[\\\"value\\\"]],[22,1,[\\\"selectedOptionValue\\\"]],true]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                                \\\"],[1,[27,\\\"d-radio-button\\\",null,[[\\\"id\\\",\\\"name\\\",\\\"value\\\",\\\"selectedValue\\\",\\\"disabled\\\",\\\"radioChecked\\\"],[[22,3,[\\\"id\\\"]],[22,1,[\\\"componentGuid\\\"]],[22,3,[\\\"value\\\"]],[22,1,[\\\"selectedOptionValue\\\"]],[22,1,[\\\"isDisabled\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"responseChecked\\\",[22,1,[]],[22,3,[]]],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                                            \\\"],[7,\\\"label\\\"],[12,\\\"for\\\",[28,[[22,3,[\\\"id\\\"]]]]],[11,\\\"class\\\",\\\"pf-input pf-input--radio-label\\\"],[9],[0,\\\"\\\\n                                                \\\"],[1,[22,3,[\\\"label\\\"]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,3,[\\\"showValue\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                                    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[0,\\\"(\\\"],[1,[22,3,[\\\"displayValue\\\"]],false],[0,\\\")\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                                            \\\"],[10],[0,\\\"\\\\n                                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3,4]},null]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"secondaryLabel\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"secondary-label\\\"],[9],[1,[22,1,[\\\"secondaryLabel\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1,2]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"scoreMethod\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Score\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"h4\\\"],[11,\\\"data-element\\\",\\\"worksheet-score\\\"],[11,\\\"class\\\",\\\"box-margin-Bmd-v2\\\"],[9],[1,[27,\\\"if\\\",[[23,[\\\"responses\\\",\\\"score\\\"]],[23,[\\\"responses\\\",\\\"score\\\"]],\\\"No score\\\"],null],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"summary\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"displaySummary\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-summary\\\"],[11,\\\"class\\\",\\\"box-margin-Bmd-v2\\\"],[9],[1,[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"summary\\\"]],true],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"secondarySummary\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"displaySecondarySummary\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-secondary-summary\\\"],[11,\\\"class\\\",\\\"box-margin-Bmd-v2\\\"],[9],[1,[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"secondarySummary\\\"]],true],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"copyright\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"worksheet-copyright\\\"],[11,\\\"class\\\",\\\"text-color-placeholder\\\"],[9],[1,[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"copyright\\\"]],true],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/sia-worksheet/default-v2.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/sia-worksheet/default\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"lbqwEb+Q\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\",\\\"question\\\",\\\"option\\\"],\\\"statements\\\":[[4,\\\"detail-pane\\\",null,[[\\\"bigHeaderText\\\",\\\"smallHeaderText\\\",\\\"close\\\",\\\"resizables\\\"],[\\\"Record\\\",\\\"Screenings, interventions, and assessments\\\",[23,[\\\"close\\\"]],[23,[\\\"resizables\\\"]]]],{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"detail-pane-body\\\",null,[[\\\"sectionContext\\\"],[[22,1,[]]]],{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"lead-333\\\"],[9],[1,[23,[\\\"responses\\\",\\\"worksheet\\\",\\\"title\\\"]],false],[10],[0,\\\"\\\\n        \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n            \\\"],[1,[23,[\\\"responses\\\",\\\"worksheet\\\",\\\"description\\\"]],true],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"worksheet\\\",\\\"printoutUrl\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"a\\\"],[11,\\\"target\\\",\\\"_blank\\\"],[12,\\\"href\\\",[28,[[27,\\\"unbound\\\",[[23,[\\\"responses\\\",\\\"worksheet\\\",\\\"printoutUrl\\\"]]],null]]]],[9],[0,\\\"Print Test\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Status\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"disabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"title\\\"],[9],[1,[21,\\\"selectedStatus\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"single-select\\\",null,[[\\\"prompt\\\",\\\"value\\\",\\\"content\\\",\\\"sortLabels\\\",\\\"select\\\"],[\\\"Select a status\\\",[23,[\\\"selectedStatus\\\"]],[23,[\\\"permittedStates\\\"]],false,[23,[\\\"selectStatus\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[4,\\\"if\\\",[[23,[\\\"reasonCodes\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Reason\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"disabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"text-with-empty-state\\\",null,[[\\\"text\\\",\\\"title\\\",\\\"class\\\"],[[23,[\\\"reasonCode\\\",\\\"displayName\\\"]],\\\"reason\\\",\\\"title\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"single-select\\\",null,[[\\\"prompt\\\",\\\"content\\\",\\\"optionLabelPath\\\",\\\"optionValuePath\\\",\\\"selection\\\",\\\"sortLabels\\\",\\\"select\\\"],[\\\"Select a reason\\\",[23,[\\\"reasonCodes\\\"]],\\\"displayName\\\",\\\"id\\\",[23,[\\\"reason\\\"]],false,[23,[\\\"selectReason\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"hr\\\"],[9],[10],[0,\\\"\\\\n            \\\"],[7,\\\"ol\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"responses\\\",\\\"questions\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[22,2,[\\\"isShowing\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"li\\\"],[12,\\\"class\\\",[28,[[27,\\\"if\\\",[[22,2,[\\\"isDisabled\\\"]],\\\"is-disabled\\\"],null]]]],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,2,[\\\"numbering\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[1,[22,2,[\\\"numbering\\\"]],false],[0,\\\".\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                                \\\"],[7,\\\"span\\\"],[11,\\\"data-element\\\",\\\"worksheet-question-label\\\"],[9],[1,[22,2,[\\\"label\\\"]],true],[10],[0,\\\"\\\\n                            \\\"],[10],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"options\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,2,[\\\"isRadioQuestion\\\"]]],null,{\\\"statements\\\":[[4,\\\"each\\\",[[22,2,[\\\"options\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                        \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[27,\\\"if\\\",[[22,2,[\\\"isHorizontalRadioType\\\"]],\\\"horizontal-radio\\\"],null]],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"disabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                                \\\"],[1,[27,\\\"d-radio-button\\\",null,[[\\\"id\\\",\\\"name\\\",\\\"value\\\",\\\"selectedValue\\\",\\\"disabled\\\"],[[22,3,[\\\"id\\\"]],[22,2,[\\\"componentGuid\\\"]],[22,3,[\\\"value\\\"]],[22,2,[\\\"selectedOptionValue\\\"]],true]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                                \\\"],[1,[27,\\\"d-radio-button\\\",null,[[\\\"id\\\",\\\"name\\\",\\\"value\\\",\\\"selectedValue\\\",\\\"disabled\\\",\\\"radioChecked\\\"],[[22,3,[\\\"id\\\"]],[22,2,[\\\"componentGuid\\\"]],[22,3,[\\\"value\\\"]],[22,2,[\\\"selectedOptionValue\\\"]],[22,2,[\\\"isDisabled\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"responseChecked\\\",[22,2,[]],[22,3,[]]],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                                            \\\"],[7,\\\"label\\\"],[12,\\\"for\\\",[28,[[22,3,[\\\"id\\\"]]]]],[11,\\\"class\\\",\\\"pf-input pf-input--radio-label\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[22,2,[\\\"isHorizontalRadioType\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                                    \\\"],[1,[22,3,[\\\"label\\\"]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,3,[\\\"showValue\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[0,\\\"(\\\"],[1,[22,3,[\\\"displayValue\\\"]],false],[0,\\\")\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"                                            \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,2,[\\\"isHorizontalRadioType\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"radio-value\\\"],[9],[0,\\\"\\\\n                                                    \\\"],[1,[22,3,[\\\"label\\\"]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,3,[\\\"showValue\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[0,\\\"(\\\"],[1,[22,3,[\\\"displayValue\\\"]],false],[0,\\\")\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                                                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3]},null]],\\\"parameters\\\":[]},null],[0,\\\"                            \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,2,[\\\"secondaryLabel\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"secondary-label\\\"],[9],[1,[22,2,[\\\"secondaryLabel\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[22,2,[\\\"isSeparator\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"hr\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[2]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"hr\\\"],[9],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"scoreMethod\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"score\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"header14\\\"],[9],[0,\\\"Your total: \\\"],[10],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"lead-333\\\"],[9],[1,[23,[\\\"responses\\\",\\\"score\\\"]],false],[0,\\\" points\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"worksheet\\\",\\\"summary\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"displaySummary\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"p\\\"],[9],[1,[23,[\\\"responses\\\",\\\"worksheet\\\",\\\"summary\\\"]],true],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"worksheet\\\",\\\"secondarySummary\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"displaySecondarySummary\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"p\\\"],[9],[1,[23,[\\\"responses\\\",\\\"worksheet\\\",\\\"secondarySummary\\\"]],true],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"worksheet\\\",\\\"copyright\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"small-666 copyright\\\"],[9],[1,[23,[\\\"responses\\\",\\\"worksheet\\\",\\\"copyright\\\"]],true],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"detail-pane-footer\\\",null,[[\\\"sectionContext\\\"],[[22,1,[]]]],{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isEntitledToEditEncounter\\\"]]],null,{\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"disabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],[23,[\\\"cancel\\\"]]]],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"responsesGuid\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],[23,[\\\"delete\\\"]]]],[9],[0,\\\"Delete\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-primary\\\"],[12,\\\"disabled\\\",[23,[\\\"responses\\\",\\\"isIncomplete\\\"]]],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],[23,[\\\"save\\\"]]]],[9],[0,\\\"Save\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],[23,[\\\"cancel\\\"]]]],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/sia-worksheet/default.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/sia-worksheet/depression-phq-2-readonly\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"J/6rFz44\", \"block\": \"{\\\"symbols\\\":[\\\"question\\\",\\\"index\\\",\\\"@openEncounterClicked\\\"],\\\"statements\\\":[[7,\\\"h4\\\"],[11,\\\"data-element\\\",\\\"worksheet-display-name\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[1,[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"title\\\"]],false],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Status\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-status\\\"],[9],[1,[21,\\\"selectedStatus\\\"],false],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"reasonCodes\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Reason\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-reason\\\"],[9],[1,[27,\\\"if\\\",[[23,[\\\"reasonCode\\\",\\\"displayName\\\"]],[23,[\\\"reasonCode\\\",\\\"displayName\\\"]],\\\"No reason recorded.\\\"],null],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Result\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-result\\\"],[9],[1,[27,\\\"if\\\",[[23,[\\\"resultCode\\\",\\\"displayName\\\"]],[23,[\\\"resultCode\\\",\\\"displayName\\\"]],\\\"No result recorded.\\\"],null],false],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs box-padding-TBn\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Start date\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-start-date\\\"],[9],[1,[27,\\\"if\\\",[[23,[\\\"startDateTimeUtc\\\"]],[23,[\\\"startDateTimeUtc\\\"]],\\\"--\\\"],null],false],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs box-padding-TBn\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"End date\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-end-date\\\"],[9],[1,[27,\\\"if\\\",[[23,[\\\"endDateTimeUtc\\\"]],[23,[\\\"endDateTimeUtc\\\"]],\\\"--\\\"],null],false],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Encounter type\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-encounter-type\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[21,\\\"encounterAndNoteType\\\"],false],[0,\\\"\\\\n    \\\"],[7,\\\"a\\\"],[11,\\\"role\\\",\\\"link\\\"],[11,\\\"data-element\\\",\\\"worksheet-encounter-link\\\"],[11,\\\"class\\\",\\\"box-margin-Lmd-v2\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],[22,3,[]]],null]],[9],[0,\\\"\\\\n        View encounter\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Date of service\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-date-of-service\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[23,[\\\"dateOfService\\\"]]],null],false],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Comment\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-comments\\\"],[9],[1,[27,\\\"if\\\",[[23,[\\\"comments\\\"]],[23,[\\\"comments\\\"]],\\\"No comments recorded.\\\"],null],false],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"reasonCodes\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Assessment responses\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"ul\\\"],[11,\\\"data-element\\\",\\\"worksheet-questions\\\"],[11,\\\"class\\\",\\\"list list--unstyled\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"isDeclinedChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"li\\\"],[11,\\\"data-element\\\",\\\"worksheet-question-0\\\"],[11,\\\"class\\\",\\\"box-padding-Tn box-padding-Bn box-margin-Blg-v2\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"h4\\\"],[11,\\\"data-element\\\",\\\"worksheet-question-anwser-0\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[0,\\\"\\\\n                    Patient declined to specify on all questions\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"each\\\",[[23,[\\\"responses\\\",\\\"scorableQuestions\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[22,1,[\\\"isShowing\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"li\\\"],[12,\\\"data-element\\\",[28,[\\\"worksheet-question-\\\",[22,2,[]]]]],[11,\\\"class\\\",\\\"box-padding-Tn box-padding-Bn box-margin-Blg-v2\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"box-margin-Bn\\\"],[9],[0,\\\"\\\\n                            \\\"],[1,[22,1,[\\\"numbering\\\"]],false],[0,\\\".\\\\n                            \\\"],[7,\\\"span\\\"],[12,\\\"data-element\\\",[28,[\\\"worksheet-question-label-\\\",[22,2,[]]]]],[9],[1,[22,1,[\\\"label\\\"]],false],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"h4\\\"],[12,\\\"data-element\\\",[28,[\\\"worksheet-question-anwser-\\\",[22,2,[]]]]],[11,\\\"class\\\",\\\"h4\\\"],[9],[0,\\\"\\\\n                            \\\"],[1,[22,1,[\\\"responseText\\\"]],false],[0,\\\" (\\\"],[1,[22,1,[\\\"value\\\"]],false],[0,\\\")\\\\n                        \\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1,2]},null]],\\\"parameters\\\":[]}],[0,\\\"    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Score\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"h4\\\"],[11,\\\"data-element\\\",\\\"worksheet-score\\\"],[11,\\\"class\\\",\\\"box-margin-Bmd-v2\\\"],[9],[1,[27,\\\"if\\\",[[23,[\\\"responses\\\",\\\"score\\\"]],[23,[\\\"responses\\\",\\\"score\\\"]],\\\"No score\\\"],null],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/sia-worksheet/depression-phq-2-readonly.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/sia-worksheet/depression-phq-2-v2\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"8enu+gj0\", \"block\": \"{\\\"symbols\\\":[\\\"question\\\",\\\"index\\\",\\\"option\\\",\\\"optionIndex\\\",\\\"options\\\",\\\"options\\\"],\\\"statements\\\":[[7,\\\"h4\\\"],[11,\\\"data-element\\\",\\\"worksheet-header\\\"],[9],[1,[23,[\\\"responses\\\",\\\"worksheet\\\",\\\"title\\\"]],false],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label box-margin-Tn\\\"],[9],[0,\\\"Status\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"optionLabelPath\\\",\\\"optionValuePath\\\",\\\"disabled\\\",\\\"value\\\",\\\"data-element\\\",\\\"onSelect\\\"],[[23,[\\\"statusOptions\\\"]],\\\"label\\\",\\\"value\\\",[23,[\\\"disabled\\\"]],[23,[\\\"selectedStatus\\\"]],\\\"select-status\\\",[27,\\\"action\\\",[[22,0,[]],[23,[\\\"selectWorksheetStatus\\\"]]],null]]],{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"component\\\",[[22,6,[\\\"dropdown\\\"]]],[[\\\"prompt\\\",\\\"class\\\"],[\\\"Select a status\\\",\\\"box-padding-Rn\\\"]]],false],[0,\\\"\\\\n            \\\"],[1,[22,6,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[6]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[\\\"inline-flex-group-v2 \\\",[27,\\\"unless\\\",[[23,[\\\"reasonCodes\\\"]],\\\"hidden\\\"],null]]]],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label box-margin-Tn\\\"],[9],[0,\\\"Reason\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"optionLabelPath\\\",\\\"optionValuePath\\\",\\\"disabled\\\",\\\"selection\\\",\\\"onSelect\\\",\\\"data-element\\\"],[[23,[\\\"reasonCodes\\\"]],\\\"displayName\\\",\\\"id\\\",[23,[\\\"disabled\\\"]],[23,[\\\"reason\\\"]],[27,\\\"action\\\",[[22,0,[]],[23,[\\\"selectWorksheetReason\\\"]]],null],\\\"select-reason\\\"]],{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"component\\\",[[22,5,[\\\"dropdown\\\"]]],[[\\\"prompt\\\",\\\"class\\\"],[\\\"Select a reason\\\",\\\"box-padding-Rn\\\"]]],false],[0,\\\"\\\\n            \\\"],[1,[22,5,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[5]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[1,[27,\\\"sia-worksheet/transcript-event-fields\\\",null,[[\\\"class\\\",\\\"responses\\\",\\\"setErrors\\\",\\\"isDisabled\\\"],[\\\"box-padding-Bsm-v2\\\",[23,[\\\"responses\\\"]],[23,[\\\"setErrors\\\"]],[23,[\\\"disabled\\\"]]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"reasonCodes\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"h4\\\"],[9],[0,\\\"Complete questionnaire to generate a score.\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"list list--unstyled\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"responses\\\",\\\"questions\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[22,1,[\\\"isShowing\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"li\\\"],[12,\\\"data-element\\\",[28,[\\\"question-\\\",[22,2,[]]]]],[12,\\\"class\\\",[28,[\\\"box-margin-Tn box-padding-TBsm-v2 \\\",[27,\\\"if\\\",[[22,1,[\\\"isDisabled\\\"]],\\\"is-disabled\\\"],null]]]],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"isCheckboxQuestion\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label box-margin-Tn\\\"],[9],[0,\\\"Assessment Responses\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"check-box\\\",null,[[\\\"disabled\\\",\\\"checked\\\",\\\"class\\\",\\\"data-element\\\",\\\"onChecked\\\"],[[23,[\\\"disabled\\\"]],[22,1,[\\\"response\\\",\\\"value\\\"]],\\\"box-margin-Bmd-v2 box-padding-Bsm-v2\\\",\\\"decline-checkbox\\\",[27,\\\"action\\\",[[22,0,[]],\\\"declineChecked\\\",[22,1,[]]],null]]],{\\\"statements\\\":[[0,\\\"                            \\\"],[1,[22,1,[\\\"label\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"box-margin-Bmd-v2\\\"],[9],[0,\\\"\\\\n                            \\\"],[1,[22,1,[\\\"numbering\\\"]],false],[0,\\\".\\\\n                            \\\"],[7,\\\"span\\\"],[11,\\\"data-element\\\",\\\"worksheet-question-label\\\"],[9],[1,[22,1,[\\\"label\\\"]],false],[10],[0,\\\"\\\\n                            \\\"],[7,\\\"a\\\"],[11,\\\"role\\\",\\\"link\\\"],[12,\\\"data-element\\\",[28,[\\\"undo-question-\\\",[22,2,[]]]]],[12,\\\"class\\\",[28,[\\\"box-margin-Lmd-v2 \\\",[27,\\\"unless\\\",[[22,1,[\\\"showUndo\\\"]],\\\"hidden\\\"],null]]]],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"undo\\\",[22,1,[]]],null]],[9],[0,\\\"\\\\n                                Undo\\\\n                            \\\"],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"isRadioQuestion\\\"]]],null,{\\\"statements\\\":[[4,\\\"each\\\",[[22,1,[\\\"options\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                                    \\\"],[1,[27,\\\"d-radio-button\\\",null,[[\\\"id\\\",\\\"name\\\",\\\"value\\\",\\\"data-element\\\",\\\"selectedValue\\\",\\\"disabled\\\",\\\"radioChecked\\\"],[[22,3,[\\\"id\\\"]],[22,1,[\\\"componentGuid\\\"]],[22,3,[\\\"value\\\"]],[27,\\\"concat\\\",[\\\"option-radio-\\\",[22,4,[]]],null],[22,1,[\\\"selectedOptionValue\\\"]],[27,\\\"if\\\",[[23,[\\\"disabled\\\"]],true,[22,1,[\\\"isDisabled\\\"]]],null],[27,\\\"action\\\",[[22,0,[]],\\\"responseChecked\\\",[22,1,[]],[22,3,[]]],null]]]],false],[0,\\\"\\\\n                                    \\\"],[7,\\\"label\\\"],[12,\\\"for\\\",[28,[[22,3,[\\\"id\\\"]]]]],[11,\\\"class\\\",\\\"pf-input pf-input--radio-label text-color-default ib\\\"],[12,\\\"data-element\\\",[28,[\\\"option-label-\\\",[22,4,[]]]]],[9],[0,\\\"\\\\n                                        \\\"],[1,[22,3,[\\\"label\\\"]],false],[0,\\\"\\\\n                                        \\\"],[7,\\\"span\\\"],[12,\\\"class\\\",[28,[\\\"p-666 \\\",[27,\\\"unless\\\",[[22,3,[\\\"showValue\\\"]],\\\"hidden\\\"],null]]]],[9],[0,\\\"(\\\"],[1,[22,3,[\\\"displayValue\\\"]],false],[0,\\\")\\\"],[10],[0,\\\"\\\\n                                    \\\"],[10],[0,\\\"\\\\n                                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3,4]},null]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1,2]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label box-margin-Tn\\\"],[9],[0,\\\"Score\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"h4\\\"],[11,\\\"data-element\\\",\\\"worksheet-score\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"scoreText\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[23,[\\\"responses\\\",\\\"scoreText\\\"]],false],[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"resultDescription\\\"]]],null,{\\\"statements\\\":[[0,\\\" - \\\"],[1,[23,[\\\"responses\\\",\\\"resultDescription\\\"]],false]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                    No score\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/sia-worksheet/depression-phq-2-v2.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/sia-worksheet/migraine-readonly\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"/XDJF+ij\", \"block\": \"{\\\"symbols\\\":[\\\"question\\\",\\\"index\\\"],\\\"statements\\\":[[7,\\\"h4\\\"],[11,\\\"data-element\\\",\\\"worksheet-display-name\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[1,[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"title\\\"]],false],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-description\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"description\\\"]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"printoutUrl\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"a\\\"],[11,\\\"target\\\",\\\"_blank\\\"],[12,\\\"href\\\",[28,[[27,\\\"unbound\\\",[[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"printoutUrl\\\"]]],null]]]],[9],[0,\\\"Print Test\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Status\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-status\\\"],[9],[1,[21,\\\"selectedStatus\\\"],false],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"reasonCodes\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Reason\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-reason\\\"],[9],[1,[27,\\\"if\\\",[[23,[\\\"reasonCode\\\",\\\"displayName\\\"]],[23,[\\\"reasonCode\\\",\\\"displayName\\\"]],\\\"No reason recorded.\\\"],null],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Result\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-result\\\"],[9],[1,[27,\\\"if\\\",[[23,[\\\"resultCode\\\",\\\"displayName\\\"]],[23,[\\\"resultCode\\\",\\\"displayName\\\"]],\\\"No result recorded.\\\"],null],false],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs box-padding-TBn\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Start date\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-start-date\\\"],[9],[1,[27,\\\"if\\\",[[23,[\\\"startDateTimeUtc\\\"]],[23,[\\\"startDateTimeUtc\\\"]],\\\"--\\\"],null],false],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs box-padding-TBn\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"End date\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-end-date\\\"],[9],[1,[27,\\\"if\\\",[[23,[\\\"endDateTimeUtc\\\"]],[23,[\\\"endDateTimeUtc\\\"]],\\\"--\\\"],null],false],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Encounter type\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-encounter-type\\\"],[9],[1,[21,\\\"encounterAndNoteType\\\"],false],[7,\\\"a\\\"],[11,\\\"data-element\\\",\\\"worksheet-encounter-link\\\"],[11,\\\"class\\\",\\\"box-margin-Lmd-v2\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],[23,[\\\"openEncounterClicked\\\"]]],null]],[9],[0,\\\"View encounter\\\"],[10],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Comment\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-comments\\\"],[9],[1,[27,\\\"if\\\",[[23,[\\\"comments\\\"]],[23,[\\\"comments\\\"]],\\\"No comments recorded.\\\"],null],false],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"reasonCodes\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Assessment responses\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"ol\\\"],[11,\\\"data-element\\\",\\\"worksheet-questions\\\"],[11,\\\"class\\\",\\\"list list--unstyled\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"responses\\\",\\\"questions\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[22,1,[\\\"isShowing\\\"]]],null,{\\\"statements\\\":[[4,\\\"unless\\\",[[22,1,[\\\"isSeparator\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"li\\\"],[12,\\\"data-element\\\",[28,[\\\"worksheet-question-\\\",[22,2,[]]]]],[11,\\\"class\\\",\\\"box-padding-Tn box-padding-Bn box-margin-Blg-v2\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"box-margin-Bn\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"numbering\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[1,[22,1,[\\\"numbering\\\"]],false],[0,\\\".\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                            \\\"],[7,\\\"span\\\"],[12,\\\"data-element\\\",[28,[\\\"worksheet-question-label-\\\",[22,2,[]]]]],[9],[1,[22,1,[\\\"label\\\"]],true],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[12,\\\"data-element\\\",[28,[\\\"worksheet-question-anwser-\\\",[22,2,[]]]]],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"isRadioQuestion\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"p-semibold\\\"],[9],[1,[22,1,[\\\"responseText\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[22,1,[\\\"isNumericType\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                Number of days:\\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"box-margin-Lmd-v2 p-semibold\\\"],[9],[1,[22,1,[\\\"value\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"secondaryLabel\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"secondary-label\\\"],[9],[1,[22,1,[\\\"secondaryLabel\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[22,1,[\\\"isTextSeparator\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"li\\\"],[12,\\\"data-element\\\",[28,[\\\"worksheet-question-\\\",[22,2,[]]]]],[11,\\\"class\\\",\\\"box-padding-Tn box-padding-Bn box-margin-Bmd-v2\\\"],[9],[7,\\\"span\\\"],[11,\\\"data-element\\\",\\\"worksheet-question-label\\\"],[9],[1,[22,1,[\\\"label\\\"]],true],[10],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1,2]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Score\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"isComplete\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"h4\\\"],[11,\\\"data-element\\\",\\\"worksheet-score\\\"],[11,\\\"class\\\",\\\"box-margin-Bmd-v2\\\"],[9],[1,[23,[\\\"responses\\\",\\\"score\\\"]],false],[0,\\\" - \\\"],[1,[23,[\\\"responses\\\",\\\"midasAssessmentResult\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"h4\\\"],[11,\\\"data-element\\\",\\\"worksheet-score\\\"],[11,\\\"class\\\",\\\"box-margin-Bmd-v2\\\"],[9],[0,\\\"No score\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"summary\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Score key\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-summary\\\"],[11,\\\"class\\\",\\\"box-margin-Bn\\\"],[9],[1,[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"summary\\\"]],true],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/sia-worksheet/migraine-readonly.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/sia-worksheet/migraine-v2\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"FK/+T/nD\", \"block\": \"{\\\"symbols\\\":[\\\"question\\\",\\\"index\\\",\\\"option\\\",\\\"option\\\",\\\"options\\\",\\\"options\\\"],\\\"statements\\\":[[7,\\\"h4\\\"],[11,\\\"data-element\\\",\\\"worksheet-display-name\\\"],[11,\\\"class\\\",\\\"h4\\\"],[9],[1,[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"title\\\"]],false],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"worksheet-description\\\"],[11,\\\"class\\\",\\\"box-margin-Bxs-v2\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"description\\\"]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"printoutUrl\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"a\\\"],[11,\\\"target\\\",\\\"_blank\\\"],[12,\\\"href\\\",[28,[[27,\\\"unbound\\\",[[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"printoutUrl\\\"]]],null]]]],[9],[0,\\\"Print Test\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label box-margin-Tn\\\"],[9],[0,\\\"Status\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"optionLabelPath\\\",\\\"optionValuePath\\\",\\\"value\\\",\\\"disabled\\\",\\\"onSelect\\\"],[[23,[\\\"statusOptions\\\"]],\\\"label\\\",\\\"value\\\",[23,[\\\"selectedStatus\\\"]],[23,[\\\"disabled\\\"]],[27,\\\"action\\\",[[22,0,[]],[23,[\\\"selectWorksheetStatus\\\"]]],null]]],{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"component\\\",[[22,6,[\\\"dropdown\\\"]]],[[\\\"prompt\\\",\\\"class\\\"],[\\\"Select a status\\\",\\\"box-padding-Rn\\\"]]],false],[0,\\\"\\\\n            \\\"],[1,[22,6,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[6]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[\\\"inline-flex-group-v2 \\\",[27,\\\"unless\\\",[[23,[\\\"reasonCodes\\\"]],\\\"hidden\\\"],null]]]],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label box-margin-Tn\\\"],[9],[0,\\\"Reason\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"selection\\\",\\\"optionLabelPath\\\",\\\"optionValuePath\\\",\\\"onSelect\\\",\\\"disabled\\\"],[[23,[\\\"reasonCodes\\\"]],[23,[\\\"reason\\\"]],\\\"displayName\\\",\\\"id\\\",[27,\\\"action\\\",[[22,0,[]],[23,[\\\"selectWorksheetReason\\\"]]],null],[23,[\\\"disabled\\\"]]]],{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"component\\\",[[22,5,[\\\"dropdown\\\"]]],[[\\\"prompt\\\",\\\"class\\\"],[\\\"Select a reason\\\",\\\"box-padding-Rn\\\"]]],false],[0,\\\"\\\\n            \\\"],[1,[22,5,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[5]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[1,[27,\\\"sia-worksheet/transcript-event-fields\\\",null,[[\\\"class\\\",\\\"responses\\\",\\\"setErrors\\\",\\\"isDisabled\\\"],[\\\"box-padding-Bsm-v2\\\",[23,[\\\"responses\\\"]],[23,[\\\"setErrors\\\"]],[23,[\\\"disabled\\\"]]]]],false],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"reasonCodes\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Assessment responses\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"ol\\\"],[11,\\\"data-element\\\",\\\"worksheet-questions\\\"],[11,\\\"class\\\",\\\"list list--unstyled migraine-worksheet\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"responses\\\",\\\"questions\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[22,1,[\\\"isShowing\\\"]]],null,{\\\"statements\\\":[[4,\\\"unless\\\",[[22,1,[\\\"isSeparator\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"li\\\"],[12,\\\"data-element\\\",[28,[\\\"worksheet-question-\\\",[22,2,[]]]]],[11,\\\"class\\\",\\\"box-padding-Tn box-padding-Bn box-margin-Blg-v2\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"box-margin-Bn\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"numbering\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[1,[22,1,[\\\"numbering\\\"]],false],[0,\\\".\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                            \\\"],[7,\\\"span\\\"],[12,\\\"data-element\\\",[28,[\\\"worksheet-question-label-\\\",[22,2,[]]]]],[9],[1,[22,1,[\\\"label\\\"]],true],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[[27,\\\"if\\\",[[22,1,[\\\"isHorizontalRadioType\\\"]],\\\"box-margin-Txs-v2\\\"],null]]]],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"isRadioQuestion\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[22,1,[\\\"isHorizontalRadioType\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group box-margin-Ln\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[22,1,[\\\"options\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs box-fixed\\\"],[9],[0,\\\"\\\\n                                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"clearfix\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"disabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                                        \\\"],[1,[27,\\\"d-radio-button\\\",null,[[\\\"id\\\",\\\"name\\\",\\\"value\\\",\\\"selectedValue\\\",\\\"disabled\\\"],[[22,4,[\\\"id\\\"]],[22,1,[\\\"componentGuid\\\"]],[22,4,[\\\"value\\\"]],[22,1,[\\\"selectedOptionValue\\\"]],true]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                                        \\\"],[1,[27,\\\"d-radio-button\\\",null,[[\\\"id\\\",\\\"name\\\",\\\"value\\\",\\\"selectedValue\\\",\\\"disabled\\\",\\\"radioChecked\\\"],[[22,4,[\\\"id\\\"]],[22,1,[\\\"componentGuid\\\"]],[22,4,[\\\"value\\\"]],[22,1,[\\\"selectedOptionValue\\\"]],[22,1,[\\\"isDisabled\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"responseChecked\\\",[22,1,[]],[22,4,[]]],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                                                    \\\"],[7,\\\"label\\\"],[12,\\\"for\\\",[28,[[22,4,[\\\"id\\\"]]]]],[11,\\\"class\\\",\\\"pf-input pf-input--radio-label box-margin-Bn\\\"],[9],[10],[0,\\\"\\\\n                                                \\\"],[10],[0,\\\"\\\\n                                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"text-center box-margin-Txs-v\\\"],[9],[0,\\\"\\\\n                                                    \\\"],[1,[22,4,[\\\"label\\\"]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,4,[\\\"showValue\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[0,\\\"(\\\"],[1,[22,4,[\\\"displayValue\\\"]],false],[0,\\\")\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                                                \\\"],[10],[0,\\\"\\\\n                                            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[4]},null],[0,\\\"                                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"each\\\",[[22,1,[\\\"options\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                        \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"disabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                                \\\"],[1,[27,\\\"d-radio-button\\\",null,[[\\\"id\\\",\\\"name\\\",\\\"value\\\",\\\"selectedValue\\\",\\\"disabled\\\"],[[22,3,[\\\"id\\\"]],[22,1,[\\\"componentGuid\\\"]],[22,3,[\\\"value\\\"]],[22,1,[\\\"selectedOptionValue\\\"]],true]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                                \\\"],[1,[27,\\\"d-radio-button\\\",null,[[\\\"id\\\",\\\"name\\\",\\\"value\\\",\\\"selectedValue\\\",\\\"disabled\\\",\\\"radioChecked\\\"],[[22,3,[\\\"id\\\"]],[22,1,[\\\"componentGuid\\\"]],[22,3,[\\\"value\\\"]],[22,1,[\\\"selectedOptionValue\\\"]],[22,1,[\\\"isDisabled\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"responseChecked\\\",[22,1,[]],[22,3,[]]],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                                            \\\"],[7,\\\"label\\\"],[12,\\\"for\\\",[28,[[22,3,[\\\"id\\\"]]]]],[11,\\\"class\\\",\\\"pf-input pf-input--radio-label\\\"],[9],[0,\\\"\\\\n                                                \\\"],[1,[22,3,[\\\"label\\\"]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,3,[\\\"showValue\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                                    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[0,\\\"(\\\"],[1,[22,3,[\\\"displayValue\\\"]],false],[0,\\\")\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                                            \\\"],[10],[0,\\\"\\\\n                                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3]},null]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[22,1,[\\\"isNumericType\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[\\\"field-label \\\",[27,\\\"if\\\",[[22,1,[\\\"isRequired\\\"]],\\\"required\\\"],null]]]],[9],[0,\\\"Number of days\\\"],[10],[0,\\\"\\\\n                                \\\"],[1,[27,\\\"d-editable-select\\\",null,[[\\\"contents\\\",\\\"class\\\",\\\"inputType\\\",\\\"inputMin\\\",\\\"inputMax\\\",\\\"isTooltipVisible\\\",\\\"errorMessage\\\",\\\"inputStep\\\",\\\"highlightErrors\\\",\\\"value\\\",\\\"isShorter\\\",\\\"optionLabelPath\\\",\\\"optionValuePath\\\",\\\"disabled\\\",\\\"select\\\"],[[23,[\\\"numericInputValues\\\"]],\\\"days-selector\\\",\\\"number\\\",0,[23,[\\\"maxInputValue\\\"]],true,[22,1,[\\\"rangeError\\\"]],1,true,[22,1,[\\\"value\\\"]],true,\\\"label\\\",\\\"value\\\",[23,[\\\"disabled\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"responseEntered\\\",[22,1,[]]],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"secondaryLabel\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"secondary-label\\\"],[9],[1,[22,1,[\\\"secondaryLabel\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[22,1,[\\\"isTextSeparator\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"li\\\"],[12,\\\"data-element\\\",[28,[\\\"worksheet-question-\\\",[22,2,[]]]]],[11,\\\"class\\\",\\\"box-padding-Tn box-padding-Bn box-margin-Bmd-v2\\\"],[9],[7,\\\"span\\\"],[11,\\\"data-element\\\",\\\"worksheet-question-label\\\"],[9],[1,[22,1,[\\\"label\\\"]],true],[10],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1,2]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\\n    \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Score\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"isComplete\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"h4\\\"],[11,\\\"data-element\\\",\\\"worksheet-score\\\"],[11,\\\"class\\\",\\\"box-margin-Bmd-v2\\\"],[9],[1,[23,[\\\"responses\\\",\\\"score\\\"]],false],[0,\\\" - \\\"],[1,[23,[\\\"responses\\\",\\\"assessmentSummary\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"h4\\\"],[11,\\\"data-element\\\",\\\"worksheet-score\\\"],[11,\\\"class\\\",\\\"box-margin-Bmd-v2\\\"],[9],[0,\\\"No score\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"summary\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Score key\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"worksheet-summary\\\"],[11,\\\"class\\\",\\\"box-margin-Bn\\\"],[9],[1,[23,[\\\"responses\\\",\\\"content\\\",\\\"worksheet\\\",\\\"summary\\\"]],true],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/sia-worksheet/migraine-v2.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/sia-worksheet/migraine\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"wKOArnED\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\",\\\"question\\\",\\\"option\\\",\\\"option\\\"],\\\"statements\\\":[[4,\\\"detail-pane\\\",null,[[\\\"bigHeaderText\\\",\\\"smallHeaderText\\\",\\\"close\\\",\\\"resizables\\\"],[\\\"Record\\\",\\\"Screenings, interventions, and assessments\\\",[23,[\\\"close\\\"]],[23,[\\\"resizables\\\"]]]],{\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"detail-pane-body\\\",null,[[\\\"sectionContext\\\"],[[22,1,[]]]],{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-margin-Bsm\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"lead-333\\\"],[9],[1,[23,[\\\"responses\\\",\\\"worksheet\\\",\\\"title\\\"]],false],[10],[0,\\\"\\\\n            \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n                \\\"],[1,[23,[\\\"responses\\\",\\\"worksheet\\\",\\\"description\\\"]],true],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"worksheet\\\",\\\"printoutUrl\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"a\\\"],[11,\\\"target\\\",\\\"_blank\\\"],[12,\\\"href\\\",[28,[[27,\\\"unbound\\\",[[23,[\\\"responses\\\",\\\"worksheet\\\",\\\"printoutUrl\\\"]]],null]]]],[9],[0,\\\"Print Test\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Status\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"disabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"title\\\"],[9],[1,[21,\\\"selectedStatus\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"single-select\\\",null,[[\\\"prompt\\\",\\\"value\\\",\\\"content\\\",\\\"sortLabels\\\",\\\"isShorter\\\",\\\"select\\\"],[\\\"Select a status\\\",[23,[\\\"selectedStatus\\\"]],[23,[\\\"permittedStates\\\"]],false,true,[23,[\\\"selectStatus\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"reasonCodes\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label box-margin-Tsm\\\"],[9],[0,\\\"Reason\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"disabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"text-with-empty-state\\\",null,[[\\\"text\\\",\\\"title\\\",\\\"class\\\"],[[23,[\\\"reasonCode\\\",\\\"displayName\\\"]],\\\"reason\\\",\\\"title\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"single-select\\\",null,[[\\\"prompt\\\",\\\"content\\\",\\\"isShorter\\\",\\\"optionLabelPath\\\",\\\"optionValuePath\\\",\\\"selection\\\",\\\"sortLabels\\\",\\\"select\\\"],[\\\"Select a reason\\\",[23,[\\\"reasonCodes\\\"]],true,\\\"displayName\\\",\\\"id\\\",[23,[\\\"reason\\\"]],false,[23,[\\\"selectReason\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"hr\\\"],[9],[10],[0,\\\"\\\\n            \\\"],[7,\\\"ol\\\"],[11,\\\"class\\\",\\\"migraine-worksheet\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"responses\\\",\\\"questions\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[22,2,[\\\"isShowing\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"li\\\"],[12,\\\"class\\\",[28,[[27,\\\"if\\\",[[22,2,[\\\"isDisabled\\\"]],\\\"is-disabled\\\"],null]]]],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,2,[\\\"isSeparator\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"hr\\\"],[9],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,2,[\\\"label\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-margin-Bsm\\\"],[9],[0,\\\"\\\\n                                        \\\"],[7,\\\"span\\\"],[11,\\\"data-element\\\",\\\"worksheet-question-label\\\"],[9],[1,[22,2,[\\\"label\\\"]],true],[10],[0,\\\"\\\\n                                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,2,[\\\"numbering\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"box-margin-Rxs\\\"],[9],[1,[22,2,[\\\"numbering\\\"]],false],[0,\\\".\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"unless\\\",[[22,2,[\\\"isSeparator\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                        \\\"],[7,\\\"span\\\"],[11,\\\"data-element\\\",\\\"worksheet-question-label\\\"],[9],[1,[22,2,[\\\"label\\\"]],true],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                                \\\"],[10],[0,\\\"\\\\n                                \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[\\\"options \\\",[27,\\\"if\\\",[[22,2,[\\\"isHorizontalRadioType\\\"]],\\\"box-margin-Txs\\\"],null]]]],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,2,[\\\"isRadioQuestion\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[22,2,[\\\"isHorizontalRadioType\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group box-margin-Ln\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[22,2,[\\\"options\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs box-fixed\\\"],[9],[0,\\\"\\\\n                                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"clearfix\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"disabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                                                \\\"],[1,[27,\\\"d-radio-button\\\",null,[[\\\"id\\\",\\\"name\\\",\\\"value\\\",\\\"selectedValue\\\",\\\"disabled\\\"],[[22,4,[\\\"id\\\"]],[22,2,[\\\"componentGuid\\\"]],[22,4,[\\\"value\\\"]],[22,2,[\\\"selectedOptionValue\\\"]],true]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                                                \\\"],[1,[27,\\\"d-radio-button\\\",null,[[\\\"id\\\",\\\"name\\\",\\\"value\\\",\\\"selectedValue\\\",\\\"disabled\\\",\\\"radioChecked\\\"],[[22,4,[\\\"id\\\"]],[22,2,[\\\"componentGuid\\\"]],[22,4,[\\\"value\\\"]],[22,2,[\\\"selectedOptionValue\\\"]],[22,2,[\\\"isDisabled\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"responseChecked\\\",[22,2,[]],[22,4,[]]],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                                                            \\\"],[7,\\\"label\\\"],[12,\\\"for\\\",[28,[[22,4,[\\\"id\\\"]]]]],[11,\\\"class\\\",\\\"pf-input pf-input--radio-label box-margin-Bn\\\"],[9],[10],[0,\\\"\\\\n                                                        \\\"],[10],[0,\\\"\\\\n                                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"text-center\\\"],[9],[0,\\\"\\\\n                                                            \\\"],[1,[22,4,[\\\"label\\\"]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,4,[\\\"showValue\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                                                \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[0,\\\"(\\\"],[1,[22,4,[\\\"displayValue\\\"]],false],[0,\\\")\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                                                        \\\"],[10],[0,\\\"\\\\n                                                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[4]},null],[0,\\\"                                            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"each\\\",[[22,2,[\\\"options\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                                \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"disabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                                        \\\"],[1,[27,\\\"d-radio-button\\\",null,[[\\\"id\\\",\\\"name\\\",\\\"value\\\",\\\"selectedValue\\\",\\\"disabled\\\"],[[22,3,[\\\"id\\\"]],[22,2,[\\\"componentGuid\\\"]],[22,3,[\\\"value\\\"]],[22,2,[\\\"selectedOptionValue\\\"]],true]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                                        \\\"],[1,[27,\\\"d-radio-button\\\",null,[[\\\"id\\\",\\\"name\\\",\\\"value\\\",\\\"selectedValue\\\",\\\"disabled\\\",\\\"radioChecked\\\"],[[22,3,[\\\"id\\\"]],[22,2,[\\\"componentGuid\\\"]],[22,3,[\\\"value\\\"]],[22,2,[\\\"selectedOptionValue\\\"]],[22,2,[\\\"isDisabled\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"responseChecked\\\",[22,2,[]],[22,3,[]]],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                                                    \\\"],[7,\\\"label\\\"],[12,\\\"for\\\",[28,[[22,3,[\\\"id\\\"]]]]],[11,\\\"class\\\",\\\"pf-input pf-input--radio-label\\\"],[9],[0,\\\"\\\\n                                                        \\\"],[1,[22,3,[\\\"label\\\"]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,3,[\\\"showValue\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                                            \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[9],[0,\\\"(\\\"],[1,[22,3,[\\\"displayValue\\\"]],false],[0,\\\")\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                                                    \\\"],[10],[0,\\\"\\\\n                                                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3]},null]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[22,2,[\\\"isNumericType\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                        \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[\\\"field-label \\\",[27,\\\"if\\\",[[22,2,[\\\"isRequired\\\"]],\\\"required\\\"],null]]]],[9],[0,\\\"Number of days\\\"],[10],[0,\\\"\\\\n                                        \\\"],[1,[27,\\\"d-editable-select\\\",null,[[\\\"contents\\\",\\\"class\\\",\\\"inputType\\\",\\\"inputMin\\\",\\\"inputMax\\\",\\\"isTooltipVisible\\\",\\\"errorMessage\\\",\\\"inputStep\\\",\\\"highlightErrors\\\",\\\"value\\\",\\\"isShorter\\\",\\\"optionLabelPath\\\",\\\"optionValuePath\\\",\\\"disabled\\\",\\\"select\\\"],[[23,[\\\"numericInputValues\\\"]],\\\"days-selector\\\",\\\"number\\\",0,[23,[\\\"maxInputValue\\\"]],true,[22,2,[\\\"rangeError\\\"]],1,true,[22,2,[\\\"value\\\"]],true,\\\"label\\\",\\\"value\\\",[23,[\\\"disabled\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"responseEntered\\\",[22,2,[]]],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                                \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,2,[\\\"secondaryLabel\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"secondary-label\\\"],[9],[1,[22,2,[\\\"secondaryLabel\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[2]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"hr\\\"],[11,\\\"class\\\",\\\"box-margin-Txs\\\"],[9],[10],[0,\\\"\\\\n            \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"lead-333 box-margin-Bsm\\\"],[9],[0,\\\"MIDAS test results\\\"],[10],[0,\\\"\\\\n\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label box-margin-Bxs\\\"],[9],[0,\\\"Score and Result\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isComplete\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"score\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"lead-333\\\"],[9],[1,[21,\\\"score\\\"],false],[0,\\\" - \\\"],[1,[21,\\\"midasAssessmentResult\\\"],false],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"score\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"p\\\"],[9],[0,\\\"Score and results are not calculated until assessment is complete\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"worksheet\\\",\\\"summary\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"box-margin-Bmd\\\"],[9],[1,[23,[\\\"responses\\\",\\\"worksheet\\\",\\\"summary\\\"]],true],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"detail-pane-footer\\\",null,[[\\\"sectionContext\\\"],[[22,1,[]]]],{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isEntitledToEditEncounter\\\"]]],null,{\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"disabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],[23,[\\\"cancel\\\"]]]],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"responses\\\",\\\"responsesGuid\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],[23,[\\\"delete\\\"]]]],[9],[0,\\\"Delete\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-primary\\\"],[12,\\\"disabled\\\",[23,[\\\"responses\\\",\\\"isIncomplete\\\"]]],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],[23,[\\\"save\\\"]]]],[9],[0,\\\"Save\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],[23,[\\\"cancel\\\"]]]],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/sia-worksheet/migraine.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/sia-worksheet/transcript-event-fields\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"B1H3yH6w\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm box-fixed\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label box-margin-Tn\\\"],[9],[0,\\\"Start Date\\\"],[10],[0,\\\"\\\\n        \\\"],[1,[27,\\\"d-date-time-picker\\\",null,[[\\\"class\\\",\\\"value\\\",\\\"tooltipMsg\\\",\\\"classNames\\\",\\\"errorMessage\\\",\\\"validateStrictDate\\\",\\\"clearValueOnError\\\",\\\"isShorter\\\",\\\"disabled\\\",\\\"data-element\\\"],[\\\"box-margin-Bn\\\",[23,[\\\"responses\\\",\\\"startDateTime\\\"]],[23,[\\\"errors\\\",\\\"startDateTimeUtc\\\"]],[23,[\\\"tooltipClass\\\"]],[23,[\\\"errors\\\",\\\"startDateTimeUtc\\\"]],true,false,true,[23,[\\\"isDisabled\\\"]],\\\"transcript-event-start\\\"]]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm box-fixed\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label box-margin-Tn\\\"],[9],[0,\\\"End Date\\\"],[10],[0,\\\"\\\\n        \\\"],[1,[27,\\\"d-date-time-picker\\\",null,[[\\\"class\\\",\\\"value\\\",\\\"tooltipMsg\\\",\\\"errorMessage\\\",\\\"validateStrictDate\\\",\\\"clearValueOnError\\\",\\\"isShorter\\\",\\\"disabled\\\",\\\"data-element\\\"],[\\\"box-margin-Bn\\\",[23,[\\\"responses\\\",\\\"endDateTime\\\"]],[23,[\\\"errors\\\",\\\"endDateTimeUtc\\\"]],[23,[\\\"errors\\\",\\\"endDateTimeUtc\\\"]],true,false,true,[23,[\\\"isDisabled\\\"]],\\\"transcript-event-end\\\"]]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label box-margin-Tn\\\"],[9],[0,\\\"Comment\\\"],[10],[0,\\\"\\\\n        \\\"],[1,[27,\\\"text-area\\\",null,[[\\\"placeholder\\\",\\\"value\\\",\\\"maxlength\\\",\\\"disabled\\\",\\\"data-element\\\"],[\\\"Enter comments\\\",[23,[\\\"responses\\\",\\\"comments\\\"]],\\\"200\\\",[23,[\\\"isDisabled\\\"]],\\\"transcript-event-comment\\\"]]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/sia-worksheet/transcript-event-fields.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/smoking-status-detail-v2\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"iWuluN8w\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\",\\\"right-module\\\",\\\"statusType\\\",\\\"index\\\",\\\"options\\\"],\\\"statements\\\":[[4,\\\"detail-pane-v2\\\",null,[[\\\"class\\\"],[\\\"side-fixed col-xs-5 type-v2\\\"]],{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"right-module\\\"]]],[[\\\"class\\\"],[\\\"fill-space flex-column\\\"]],{\\\"statements\\\":[[0,\\\"        \\\"],[1,[27,\\\"component\\\",[[22,2,[\\\"header\\\"]]],[[\\\"bigHeaderText\\\",\\\"smallHeaderText\\\",\\\"closeDetailPane\\\"],[[23,[\\\"bigHeaderText\\\"]],[23,[\\\"smallHeaderText\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"closeDetailPane\\\"],null]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,2,[\\\"body\\\"]]],[[\\\"class\\\"],[\\\"flex-grow box-padding-Alg-v2\\\"]],{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"smokingStatusTypes\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"field-label field-title\\\"],[9],[0,\\\"Current tobacco use\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showUndo\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"a\\\"],[11,\\\"data-element\\\",\\\"undo-link\\\"],[11,\\\"class\\\",\\\"box-margin-Lmd-v2 field-label__link\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"undo\\\"],null]],[9],[0,\\\"Undo\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"inActiveSmokingStatusType\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                        \\\"],[1,[27,\\\"d-radio-button\\\",null,[[\\\"data-element\\\",\\\"id\\\",\\\"name\\\",\\\"value\\\",\\\"selectedValue\\\",\\\"disabled\\\"],[\\\"smoking-option-old\\\",\\\"smoking-option-old\\\",\\\"smoking-option-old\\\",[23,[\\\"inActiveSmokingStatusType\\\",\\\"id\\\"]],[23,[\\\"smokingStatus\\\",\\\"smokingStatusIdString\\\"]],[23,[\\\"disableOldOption\\\"]]]]],false],[0,\\\"\\\\n                        \\\"],[7,\\\"label\\\"],[11,\\\"for\\\",\\\"smoking-option-old\\\"],[11,\\\"data-element\\\",\\\"smoking-option-old-label\\\"],[11,\\\"class\\\",\\\"pf-input pf-input--radio-label\\\"],[9],[0,\\\"\\\\n                            \\\"],[1,[23,[\\\"inActiveSmokingStatusType\\\",\\\"description\\\"]],false],[0,\\\"\\\\n\\\"],[4,\\\"composable-popover\\\",null,[[\\\"data-element\\\",\\\"tagName\\\"],[\\\"info-popover\\\",\\\"span\\\"]],{\\\"statements\\\":[[0,\\\"                                    \\\"],[1,[27,\\\"component\\\",[[22,5,[\\\"popover-target\\\"]]],[[\\\"tagName\\\",\\\"classNames\\\",\\\"data-element\\\"],[\\\"a\\\",\\\"icon-info text-color-placeholder\\\",\\\"info-popover-target\\\"]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,5,[\\\"popover\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"popover-content\\\"],[11,\\\"data-element\\\",\\\"smoking-popover-content\\\"],[9],[0,\\\"\\\\n                                            The selection options for tobacco use have been updated. This option, which was previously selected, will be maintained in the patient record.\\\\n                                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[5]},null],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"each\\\",[[23,[\\\"smokingStatusTypes\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                        \\\"],[1,[27,\\\"d-radio-button\\\",null,[[\\\"data-element\\\",\\\"id\\\",\\\"name\\\",\\\"value\\\",\\\"selectedValue\\\",\\\"disabled\\\"],[[27,\\\"concat\\\",[\\\"smoking-option-\\\",[22,4,[]]],null],[27,\\\"concat\\\",[\\\"smoking-option-\\\",[22,4,[]]],null],[27,\\\"concat\\\",[\\\"smoking-option-\\\",[22,4,[]]],null],[22,3,[\\\"id\\\"]],[23,[\\\"smokingStatus\\\",\\\"smokingStatusIdString\\\"]],[23,[\\\"isNotAllowedToEdit\\\"]]]]],false],[0,\\\"\\\\n                        \\\"],[7,\\\"label\\\"],[12,\\\"for\\\",[28,[\\\"smoking-option-\\\",[22,4,[]]]]],[12,\\\"data-element\\\",[28,[\\\"smoking-option-\\\",[22,4,[]],\\\"-label\\\"]]],[11,\\\"class\\\",\\\"pf-input pf-input--radio-label\\\"],[9],[0,\\\"\\\\n                            \\\"],[1,[22,3,[\\\"description\\\"]],false],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3,4]},null]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-margin-Tlg-v2\\\"],[11,\\\"data-element\\\",\\\"effective-date\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Effective date\\\"],[10],[0,\\\"\\\\n                \\\"],[1,[27,\\\"d-date-picker\\\",null,[[\\\"isLegacy\\\",\\\"value\\\",\\\"placeholder\\\",\\\"startDate\\\",\\\"endDate\\\",\\\"autoCorrectYear\\\",\\\"disabled\\\"],[false,[23,[\\\"smokingStatus\\\",\\\"formattedDate\\\"]],\\\"MM/DD/YYYY\\\",\\\"01/01/1900\\\",[23,[\\\"maxDate\\\"]],true,[23,[\\\"isNotAllowedToEdit\\\"]]]]],false],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"component\\\",[[22,2,[\\\"footer\\\"]]],[[\\\"class\\\"],[\\\"inline-flex-group-v2 box-padding-LRlg-v2 box-padding-TBsm-v2\\\"]],{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isAllowedToEdit\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm box-fixed\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--default\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"],null]],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"smokingStatus\\\",\\\"isNew\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm box-fixed\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"popover-confirm\\\",null,[[\\\"action\\\",\\\"title\\\",\\\"popoverContent\\\",\\\"confirmLabel\\\",\\\"classNames\\\",\\\"tagName\\\"],[\\\"delete\\\",\\\"Delete tobacco use\\\",\\\"This will remove this tobacco use record from this patient's record.\\\",\\\"Delete\\\",\\\"btn--default\\\",\\\"button\\\"]],{\\\"statements\\\":[[0,\\\"                            Delete\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                    \\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm text-right\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--brand\\\"],[11,\\\"data-element\\\",\\\"save-button\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"save\\\"],null]],[12,\\\"disabled\\\",[23,[\\\"smokingStatus\\\",\\\"saveDisabled\\\"]]],[11,\\\"type\\\",\\\"button\\\"],[9],[1,[27,\\\"if\\\",[[23,[\\\"isDirty\\\"]],\\\"Save\\\",\\\"Mark as reviewed\\\"],null],false],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm text-right\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--brand\\\"],[11,\\\"data-element\\\",\\\"save-button\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"save\\\"],null]],[12,\\\"disabled\\\",[23,[\\\"smokingStatus\\\",\\\"saveDisabled\\\"]]],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"Save\\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm text-right\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--brand\\\"],[11,\\\"data-element\\\",\\\"close-button\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"],null]],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"Close\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/smoking-status-detail-v2.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/smoking-status-detail\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"3GIPxpA4\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\",\\\"statusType\\\",\\\"index\\\"],\\\"statements\\\":[[4,\\\"detail-pane\\\",null,[[\\\"close\\\",\\\"class\\\",\\\"resizables\\\",\\\"resizeOnBreakPoint\\\",\\\"topSpacing\\\",\\\"isToolBoxVisible\\\",\\\"smallHeaderText\\\",\\\"bigHeaderText\\\",\\\"smokingStatus\\\"],[\\\"cancel\\\",\\\"side-fixed col-xs-5 summary-details smoking-detail\\\",[23,[\\\"resizables\\\"]],true,50,false,\\\"Social history\\\",\\\"Record smoking status\\\",[23,[\\\"smokingStatus\\\"]]]],{\\\"statements\\\":[[4,\\\"detail-pane-body\\\",null,[[\\\"sectionContext\\\"],[[22,1,[]]]],{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"smokingStatusTypes\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"panel-section\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"field-label field-title\\\"],[9],[0,\\\"Current status\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"smokingStatusTypes\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                        \\\"],[1,[27,\\\"d-radio-button\\\",null,[[\\\"id\\\",\\\"name\\\",\\\"value\\\",\\\"selectedValue\\\",\\\"disabled\\\"],[[27,\\\"concat\\\",[\\\"smoking-option-\\\",[22,3,[]]],null],[27,\\\"concat\\\",[\\\"smoking-option-\\\",[22,3,[]]],null],[22,2,[\\\"id\\\"]],[23,[\\\"smokingStatus\\\",\\\"smokingStatusIdString\\\"]],[23,[\\\"isNotAllowedToEdit\\\"]]]]],false],[0,\\\"\\\\n                        \\\"],[7,\\\"label\\\"],[12,\\\"for\\\",[28,[\\\"smoking-option-\\\",[22,3,[]]]]],[11,\\\"data-element\\\",\\\"smoking-option-label\\\"],[11,\\\"class\\\",\\\"pf-input pf-input--radio-label p is-shorter\\\"],[9],[0,\\\"\\\\n                            \\\"],[1,[22,2,[\\\"description\\\"]],false],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2,3]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"panel-section\\\"],[11,\\\"data-element\\\",\\\"effective-date\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Effective date\\\"],[10],[0,\\\"\\\\n            \\\"],[1,[27,\\\"d-date-picker\\\",null,[[\\\"isLegacy\\\",\\\"value\\\",\\\"placeholder\\\",\\\"startDate\\\",\\\"endDate\\\",\\\"autoCorrectYear\\\",\\\"disabled\\\"],[false,[23,[\\\"smokingStatus\\\",\\\"formattedDate\\\"]],\\\"MM/DD/YYYY\\\",\\\"01/01/1900\\\",[23,[\\\"maxDate\\\"]],true,[23,[\\\"isNotAllowedToEdit\\\"]]]]],false],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"detail-pane-footer\\\",null,[[\\\"sectionContext\\\"],[[22,1,[]]]],{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-sm\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"]],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isAllowedToEdit\\\"]]],null,{\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"smokingStatus\\\",\\\"isNew\\\"]]],null,{\\\"statements\\\":[[4,\\\"popover-confirm\\\",null,[[\\\"action\\\",\\\"title\\\",\\\"popoverContent\\\",\\\"confirmLabel\\\",\\\"classNames\\\"],[\\\"delete\\\",\\\"Delete smoking status\\\",\\\"This will remove this smoking status record from this patient's record.\\\",\\\"Delete\\\",\\\"btn btn-sm\\\"]],{\\\"statements\\\":[[0,\\\"                    Delete\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-primary btn-sm\\\"],[12,\\\"disabled\\\",[23,[\\\"smokingStatus\\\",\\\"saveDisabled\\\"]]],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"save\\\"]],[9],[0,\\\"Save\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/smoking-status-detail.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/social-behavioral-health\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"CfgL0alL\", \"block\": \"{\\\"symbols\\\":[\\\"options\\\",\\\"field\\\",\\\"header\\\"],\\\"statements\\\":[[1,[27,\\\"data-tunnel\\\",null,[[\\\"name\\\",\\\"onDataReceived\\\"],[\\\"behavioral-health-refresh\\\",[27,\\\"perform\\\",[[23,[\\\"loadBehavioralHealth\\\"]]],null]]]],false],[0,\\\"\\\\n\\\"],[1,[27,\\\"data-tunnel\\\",null,[[\\\"name\\\",\\\"onDataReceived\\\"],[\\\"social-health-refresh\\\",[27,\\\"action\\\",[[22,0,[]],\\\"refreshSocialHealth\\\"],null]]]],false],[0,\\\"\\\\n\\\"],[1,[27,\\\"data-tunnel\\\",null,[[\\\"name\\\",\\\"onDataReceived\\\"],[\\\"update-editing-social-history\\\",[27,\\\"action\\\",[[22,0,[]],\\\"setIsEditing\\\"],null]]]],false],[0,\\\"\\\\n\\\"],[1,[27,\\\"data-tunnel\\\",null,[[\\\"name\\\",\\\"onDataReceived\\\"],[\\\"social-history\\\",[27,\\\"action\\\",[[22,0,[]],\\\"updateTobaccoUse\\\"],null]]]],false],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"composable-card\\\",null,null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"header\\\"]]],null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,3,[\\\"title\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[23,[\\\"card\\\",\\\"title\\\"]],false],[0,\\\"\\\\n            \\\"],[7,\\\"a\\\"],[12,\\\"class\\\",[28,[\\\"icon-printer icon--md text-color-placeholder box-margin-Lmd-v2 \\\",[27,\\\"if\\\",[[23,[\\\"isLoading\\\"]],\\\"hidden\\\"],null]]]],[12,\\\"onclick\\\",[27,\\\"perform\\\",[[23,[\\\"print\\\"]]],null]],[11,\\\"data-element\\\",\\\"print-behavioral-health-button\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[3]},null],[4,\\\"component\\\",[[22,1,[\\\"content\\\"]]],null,{\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"isLoading\\\"]]],null,{\\\"statements\\\":[[4,\\\"each\\\",[[23,[\\\"cardFields\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"card-field\\\",null,[[\\\"isAllowedToEdit\\\",\\\"isEditing\\\",\\\"selectedItem\\\",\\\"data-element\\\",\\\"card-data-element\\\",\\\"content\\\",\\\"isError\\\",\\\"canHaveMultipleRecord\\\",\\\"title\\\",\\\"create\\\",\\\"edit\\\"],[[23,[\\\"isAllowedToEdit\\\"]],[22,2,[\\\"isEditing\\\"]],[23,[\\\"selectedItem\\\"]],[27,\\\"concat\\\",[[22,2,[\\\"key\\\"]],\\\"-section\\\"],null],\\\"behavioral-health\\\",[22,2,[\\\"content\\\"]],[23,[\\\"error\\\"]],[22,2,[\\\"canHaveMultipleRecord\\\"]],[22,2,[\\\"title\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"create\\\",[22,2,[]]],null],[27,\\\"action\\\",[[22,0,[]],\\\"edit\\\",[22,2,[]]],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[7,\\\"p\\\"],[12,\\\"class\\\",[28,[\\\"text-color-placeholder box-margin-Bn box-padding-Txs-v2 \\\",[27,\\\"unless\\\",[[23,[\\\"isLoading\\\"]],\\\"hidden\\\"],null]]]],[11,\\\"data-element\\\",\\\"social-history-placeholder-message\\\"],[9],[0,\\\"Loading social history...\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null],[0,\\\"\\\\n\\\"],[4,\\\"print-preview-content\\\",null,[[\\\"printTitle\\\",\\\"isVisible\\\"],[[23,[\\\"printTitle\\\"]],[23,[\\\"isPrintPreviewVisible\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"print-social-behavioral-health-section\\\",null,[[\\\"content\\\",\\\"patient\\\",\\\"class\\\"],[[23,[\\\"printInfo\\\"]],[23,[\\\"patient\\\"]],\\\"bh-print chart-print-container\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/social-behavioral-health.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/social-health/education-details\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"OCH0LfRg\", \"block\": \"{\\\"symbols\\\":[\\\"options\\\",\\\"@onSelectOption\\\"],\\\"statements\\\":[[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Highest education level completed\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"disabled\\\",\\\"value\\\",\\\"onSelect\\\",\\\"data-element\\\",\\\"optionLabelPath\\\",\\\"optionValuePath\\\"],[[23,[\\\"demographicOptions\\\",\\\"educationOptions\\\"]],[23,[\\\"isNotAllowedToEdit\\\"]],[27,\\\"readonly\\\",[[23,[\\\"content\\\",\\\"optionGuid\\\"]]],null],[22,2,[]],\\\"select-education\\\",\\\"description\\\",\\\"optionGuid\\\"]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"dropdown\\\"]]],[[\\\"prompt\\\",\\\"class\\\"],[\\\"Select grade or level of school\\\",\\\"box-padding-Rn\\\"]]],false],[0,\\\"\\\\n    \\\"],[1,[22,1,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/social-health/education-details.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/social-health/financial-resources-details\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"jVW4SwxQ\", \"block\": \"{\\\"symbols\\\":[\\\"group\\\",\\\"option\\\",\\\"index\\\",\\\"@onSelectOption\\\"],\\\"statements\\\":[[7,\\\"p\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"span\\\"],[9],[0,\\\"Describe your difficulty paying for the very basics like food, housing, medical care, and heating\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"content\\\",\\\"showUndo\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"a\\\"],[11,\\\"role\\\",\\\"link\\\"],[11,\\\"data-element\\\",\\\"undo-button\\\"],[11,\\\"class\\\",\\\"box-margin-Lmd-v2\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],[23,[\\\"undo\\\"]],[23,[\\\"content\\\"]]],null]],[9],[0,\\\"Undo\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n\\\"],[4,\\\"radio-button-group\\\",null,[[\\\"name\\\",\\\"selectedValue\\\",\\\"disabled\\\"],[\\\"financialResourceStatus\\\",[23,[\\\"content\\\",\\\"optionGuid\\\"]],[23,[\\\"isNotAllowedToEdit\\\"]]]],{\\\"statements\\\":[[4,\\\"each\\\",[[23,[\\\"demographicOptions\\\",\\\"financialResourceStatusOptions\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"radio-button\\\"]]],[[\\\"value\\\",\\\"label\\\",\\\"onChecked\\\",\\\"data-element\\\"],[[22,2,[\\\"optionGuid\\\"]],[22,2,[\\\"description\\\"]],[27,\\\"action\\\",[[22,0,[]],[22,4,[]],[22,2,[]]],null],[27,\\\"concat\\\",[\\\"social-health-option-\\\",[22,3,[]]],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2,3]},null]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/social-health/financial-resources-details.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/social-health/gender-identity-details\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"tSdCpXjD\", \"block\": \"{\\\"symbols\\\":[\\\"fieldset\\\",\\\"group\\\",\\\"option\\\",\\\"index\\\",\\\"legend\\\",\\\"@onSelectOption\\\"],\\\"statements\\\":[[4,\\\"field-set\\\",null,null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"legend\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[1,[27,\\\"component\\\",[[22,5,[\\\"label\\\"]]],[[\\\"text\\\"],[\\\"Gender identity\\\"]]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"content\\\",\\\"showUndo\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"a\\\"],[11,\\\"role\\\",\\\"link\\\"],[11,\\\"data-element\\\",\\\"undo-button\\\"],[11,\\\"class\\\",\\\"box-margin-Lmd-v2\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],[23,[\\\"undo\\\"]],[23,[\\\"content\\\"]]],null]],[9],[0,\\\"Undo\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[5]},null],[4,\\\"component\\\",[[22,1,[\\\"radio-button-group\\\"]]],[[\\\"name\\\",\\\"selectedValue\\\",\\\"disabled\\\"],[\\\"genderIdentity\\\",[23,[\\\"content\\\",\\\"optionGuid\\\"]],[23,[\\\"isNotAllowedToEdit\\\"]]]],{\\\"statements\\\":[[4,\\\"each\\\",[[23,[\\\"demographicOptions\\\",\\\"genderIdentityOptions\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"component\\\",[[22,2,[\\\"radio-button\\\"]]],[[\\\"value\\\",\\\"label\\\",\\\"onChecked\\\",\\\"data-element\\\"],[[22,3,[\\\"optionGuid\\\"]],[22,3,[\\\"description\\\"]],[27,\\\"action\\\",[[22,0,[]],[22,6,[]],[22,3,[]]],null],[27,\\\"concat\\\",[\\\"social-health-option-\\\",[22,4,[]]],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3,4]},null]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[1]},null],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-padding-Tmd-v2\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Notes\\\"],[10],[0,\\\"\\\\n    \\\"],[1,[27,\\\"text-field\\\",null,[[\\\"value\\\",\\\"disabled\\\",\\\"data-element\\\"],[[23,[\\\"content\\\",\\\"notes\\\"]],[23,[\\\"isNotesDisabled\\\"]],\\\"txt-social-health-notes\\\"]]],false],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/social-health/gender-identity-details.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/social-health/sexual-orientation-details\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"rf7xtGoB\", \"block\": \"{\\\"symbols\\\":[\\\"fieldset\\\",\\\"group\\\",\\\"option\\\",\\\"index\\\",\\\"legend\\\",\\\"@onSelectOption\\\"],\\\"statements\\\":[[4,\\\"field-set\\\",null,null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"legend\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[1,[27,\\\"component\\\",[[22,5,[\\\"label\\\"]]],[[\\\"text\\\"],[\\\"Sexual orientation\\\"]]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"content\\\",\\\"showUndo\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"a\\\"],[11,\\\"role\\\",\\\"link\\\"],[11,\\\"data-element\\\",\\\"undo-button\\\"],[11,\\\"class\\\",\\\"box-margin-Lmd-v2\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],[23,[\\\"undo\\\"]],[23,[\\\"content\\\"]]],null]],[9],[0,\\\"Undo\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[5]},null],[4,\\\"component\\\",[[22,1,[\\\"radio-button-group\\\"]]],[[\\\"name\\\",\\\"selectedValue\\\",\\\"disabled\\\"],[\\\"sexualOrientation\\\",[23,[\\\"content\\\",\\\"optionGuid\\\"]],[23,[\\\"isNotAllowedToEdit\\\"]]]],{\\\"statements\\\":[[4,\\\"each\\\",[[23,[\\\"demographicOptions\\\",\\\"sexualOrientationOptions\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"component\\\",[[22,2,[\\\"radio-button\\\"]]],[[\\\"value\\\",\\\"label\\\",\\\"onChecked\\\",\\\"data-element\\\"],[[22,3,[\\\"optionGuid\\\"]],[22,3,[\\\"description\\\"]],[27,\\\"action\\\",[[22,0,[]],[22,6,[]],[22,3,[]]],null],[27,\\\"concat\\\",[\\\"social-health-option-\\\",[22,4,[]]],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3,4]},null]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[1]},null],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-padding-Tmd-v2\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Notes\\\"],[10],[0,\\\"\\\\n    \\\"],[1,[27,\\\"text-field\\\",null,[[\\\"value\\\",\\\"disabled\\\",\\\"data-element\\\"],[[23,[\\\"content\\\",\\\"notes\\\"]],[23,[\\\"isNotesDisabled\\\"]],\\\"txt-social-health-notes\\\"]]],false],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/social-health/sexual-orientation-details.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/social-health/social-history-details\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"AJG+Tkma\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Social history\\\"],[10],[0,\\\"\\\\n\\\"],[1,[27,\\\"text-area-counter\\\",null,[[\\\"autofocus\\\",\\\"isDisabled\\\",\\\"autosize\\\",\\\"value\\\",\\\"placeholderText\\\",\\\"maxlength\\\",\\\"rows\\\"],[true,[23,[\\\"isNotAllowedToEdit\\\"]],true,[23,[\\\"content\\\",\\\"description\\\"]],\\\"Enter social history\\\",\\\"4000\\\",\\\"3\\\"]]],false]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/social-health/social-history-details.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/social-history-detail\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"Kyk6FcE4\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\",\\\"section\\\",\\\"section\\\",\\\"option\\\",\\\"option\\\"],\\\"statements\\\":[[4,\\\"detail-pane\\\",null,[[\\\"close\\\",\\\"class\\\",\\\"resizables\\\",\\\"resizeOnBreakPoint\\\",\\\"topSpacing\\\",\\\"isToolBoxVisible\\\",\\\"bigHeaderText\\\",\\\"persistedHistory\\\",\\\"socialHistory\\\"],[\\\"cancel\\\",\\\"side-fixed col-xs-5 summary-details social-history-detail\\\",[23,[\\\"resizables\\\"]],true,50,false,\\\"Social history\\\",[23,[\\\"persistedHistory\\\"]],[23,[\\\"socialHistory\\\"]]]],{\\\"statements\\\":[[4,\\\"detail-pane-body\\\",null,[[\\\"sectionContext\\\"],[[22,3,[]]]],{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"panel-header p-semibold\\\"],[9],[0,\\\"Select section to record patient's social history\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"panel-section\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"content-expander\\\",null,[[\\\"expandableContentSelector\\\",\\\"isExpanded\\\"],[\\\".gender-identity-panel\\\",[23,[\\\"isGenderIdentityExpanded\\\"]]]],{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[9],[0,\\\"Gender identity\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"social-history-recorded-status\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"persistedHistory\\\",\\\"genderIdentity\\\",\\\"optionGuid\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[23,[\\\"persistedHistory\\\",\\\"genderIdentity\\\",\\\"description\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                        Not recorded\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"canDeleteGenderIdentity\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right social-history-delete\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"link-text\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"showDelete\\\",\\\"genderIdentity\\\"],null]],[11,\\\"data-element\\\",\\\"gender-identity-delete\\\"],[9],[0,\\\"Delete\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"expandable-content gender-identity-panel\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"socialHistoryOptions\\\",\\\"genderIdentityOptions\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isAllowedToEditSocialHistory\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[1,[27,\\\"d-radio-button\\\",null,[[\\\"id\\\",\\\"name\\\",\\\"value\\\",\\\"selectedValue\\\"],[[22,5,[\\\"optionElement\\\"]],\\\"gender-identity-option\\\",[22,5,[\\\"optionGuid\\\"]],[23,[\\\"selectedGenderIdentity\\\"]]]]],false],[0,\\\"\\\\n                            \\\"],[7,\\\"label\\\"],[12,\\\"for\\\",[28,[[22,5,[\\\"optionElement\\\"]]]]],[11,\\\"class\\\",\\\"pf-input pf-input--radio-label p is-shorter\\\"],[9],[0,\\\"\\\\n                                \\\"],[1,[22,5,[\\\"description\\\"]],false],[0,\\\"\\\\n                            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                            \\\"],[1,[27,\\\"d-radio-button\\\",null,[[\\\"id\\\",\\\"name\\\",\\\"value\\\",\\\"selectedValue\\\",\\\"disabled\\\"],[[22,5,[\\\"optionElement\\\"]],\\\"gender-identity-option\\\",[22,5,[\\\"optionGuid\\\"]],[23,[\\\"selectedGenderIdentity\\\"]],true]]],false],[0,\\\"\\\\n                            \\\"],[7,\\\"label\\\"],[12,\\\"for\\\",[28,[[22,5,[\\\"optionElement\\\"]]]]],[11,\\\"class\\\",\\\"pf-input pf-input--radio-label p is-shorter\\\"],[9],[0,\\\"\\\\n                                \\\"],[1,[22,5,[\\\"description\\\"]],false],[0,\\\"\\\\n                            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[5]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Notes\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isAllowedToEditSocialHistory\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[1,[27,\\\"d-text-field\\\",null,[[\\\"data-element\\\",\\\"value\\\",\\\"size\\\",\\\"disabled\\\"],[\\\"gender-identity-notes\\\",[23,[\\\"socialHistory\\\",\\\"genderIdentity\\\",\\\"notes\\\"]],255,[23,[\\\"isNoGenderIdentity\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                            \\\"],[1,[27,\\\"d-text-field\\\",null,[[\\\"data-element\\\",\\\"value\\\",\\\"size\\\",\\\"disabled\\\"],[\\\"gender-identity-notes\\\",[23,[\\\"socialHistory\\\",\\\"genderIdentity\\\",\\\"notes\\\"]],255,true]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"panel-section\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"content-expander\\\",null,[[\\\"expandableContentSelector\\\",\\\"isExpanded\\\"],[\\\".sexual-orientation-panel\\\",[23,[\\\"isSexualOrientationExpanded\\\"]]]],{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[9],[0,\\\"Sexual orientation\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"social-history-recorded-status\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"persistedHistory\\\",\\\"sexualOrientation\\\",\\\"optionGuid\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[23,[\\\"persistedHistory\\\",\\\"sexualOrientation\\\",\\\"description\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                        Not recorded\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"canDeleteSexualOrientation\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right social-history-delete\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"link-text\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"showDelete\\\",\\\"sexualOrientation\\\"],null]],[11,\\\"data-element\\\",\\\"sexual-orientation-delete\\\"],[9],[0,\\\"Delete\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"expandable-content sexual-orientation-panel\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"socialHistoryOptions\\\",\\\"sexualOrientationOptions\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isAllowedToEditSocialHistory\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[1,[27,\\\"d-radio-button\\\",null,[[\\\"id\\\",\\\"name\\\",\\\"value\\\",\\\"selectedValue\\\"],[[22,4,[\\\"optionElement\\\"]],\\\"sexual-orientation-option\\\",[22,4,[\\\"optionGuid\\\"]],[23,[\\\"selectedSexualOrientation\\\"]]]]],false],[0,\\\"\\\\n                            \\\"],[7,\\\"label\\\"],[12,\\\"for\\\",[28,[[22,4,[\\\"optionElement\\\"]]]]],[11,\\\"class\\\",\\\"pf-input pf-input--radio-label p is-shorter\\\"],[9],[0,\\\"\\\\n                                \\\"],[1,[22,4,[\\\"description\\\"]],false],[0,\\\"\\\\n                            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                            \\\"],[1,[27,\\\"d-radio-button\\\",null,[[\\\"id\\\",\\\"name\\\",\\\"value\\\",\\\"selectedValue\\\",\\\"disabled\\\"],[[22,4,[\\\"optionElement\\\"]],\\\"sexual-orientation-option\\\",[22,4,[\\\"optionGuid\\\"]],[23,[\\\"selectedSexualOrientation\\\"]],true]]],false],[0,\\\"\\\\n                            \\\"],[7,\\\"label\\\"],[12,\\\"for\\\",[28,[[22,4,[\\\"optionElement\\\"]]]]],[11,\\\"class\\\",\\\"pf-input pf-input--radio-label p is-shorter\\\"],[9],[0,\\\"\\\\n                                \\\"],[1,[22,4,[\\\"description\\\"]],false],[0,\\\"\\\\n                            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[4]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Notes\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isAllowedToEditSocialHistory\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[1,[27,\\\"d-text-field\\\",null,[[\\\"data-element\\\",\\\"value\\\",\\\"size\\\",\\\"disabled\\\"],[\\\"sexual-orientation-notes\\\",[23,[\\\"socialHistory\\\",\\\"sexualOrientation\\\",\\\"notes\\\"]],255,[23,[\\\"isNoSexualOrientation\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                            \\\"],[1,[27,\\\"d-text-field\\\",null,[[\\\"data-element\\\",\\\"value\\\",\\\"size\\\",\\\"disabled\\\"],[\\\"sexual-orientation-notes\\\",[23,[\\\"socialHistory\\\",\\\"sexualOrientation\\\",\\\"notes\\\"]],255,true]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"detail-pane-footer\\\",null,[[\\\"sectionContext\\\"],[[22,3,[]]]],{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isAllowedToEditSocialHistory\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"]],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-primary\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"save\\\"],null]],[12,\\\"disabled\\\",[23,[\\\"socialHistory\\\",\\\"saveDisabled\\\"]]],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"Save\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"]],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[3]},null],[4,\\\"content-modal\\\",null,[[\\\"modalStyle\\\",\\\"isVisible\\\"],[7,[23,[\\\"showDeleteGenderIdentityConfirm\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,2,[\\\"header\\\"]]],[[\\\"title\\\",\\\"isCloseByXorOutsideVisible\\\"],[\\\"Delete gender identity\\\",true]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,2,[\\\"body\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"p\\\"],[9],[0,\\\"This will remove this gender identity record from this patient's record.\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,2,[\\\"footer\\\"]]],[[\\\"buttonLeftText\\\",\\\"buttonRightPrimaryText\\\",\\\"buttonLeftAction\\\",\\\"buttonRightPrimaryAction\\\"],[\\\"Cancel\\\",\\\"Delete\\\",[27,\\\"action\\\",[[22,0,[]],\\\"hideDeleteModals\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"deleteGenderIdentity\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[4,\\\"content-modal\\\",null,[[\\\"modalStyle\\\",\\\"isVisible\\\"],[7,[23,[\\\"showDeleteSexualOrientationConfirm\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"header\\\"]]],[[\\\"title\\\",\\\"isCloseByXorOutsideVisible\\\"],[\\\"Delete sexual orientation\\\",true]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,1,[\\\"body\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"p\\\"],[9],[0,\\\"This will remove this sexual orientation record from this patient's record.\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"footer\\\"]]],[[\\\"buttonLeftText\\\",\\\"buttonRightPrimaryText\\\",\\\"buttonLeftAction\\\",\\\"buttonRightPrimaryAction\\\"],[\\\"Cancel\\\",\\\"Delete\\\",[27,\\\"action\\\",[[22,0,[]],\\\"hideDeleteModals\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"deleteSexualOrientation\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/social-history-detail.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/social-history\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"3GQWCOVg\", \"block\": \"{\\\"symbols\\\":[\\\"card\\\",\\\"header\\\"],\\\"statements\\\":[[1,[27,\\\"data-tunnel\\\",null,[[\\\"name\\\",\\\"onDataReceived\\\"],[\\\"social-history\\\",[27,\\\"action\\\",[[22,0,[]],\\\"updateSocialHistory\\\"],null]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"composable-card\\\",null,null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"header\\\"]]],null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,2,[\\\"title\\\"]]],null,{\\\"statements\\\":[[0,\\\"            Social history\\\\n            \\\"],[7,\\\"a\\\"],[12,\\\"class\\\",[28,[\\\"icon-printer icon--md text-color-placeholder box-margin-Lmd-v2 \\\",[27,\\\"if\\\",[[23,[\\\"isLoading\\\"]],\\\"hidden\\\"],null]]]],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"print\\\"],null]],[11,\\\"data-element\\\",\\\"print-social-history-button\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[2]},null],[4,\\\"component\\\",[[22,1,[\\\"content\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[1,[27,\\\"card-field\\\",null,[[\\\"title\\\",\\\"content\\\",\\\"data-element\\\",\\\"card-data-element\\\",\\\"canHaveMultipleRecord\\\",\\\"selectedItem\\\",\\\"isAllowedToEdit\\\",\\\"isError\\\",\\\"create\\\",\\\"edit\\\",\\\"isEditing\\\",\\\"isLoading\\\",\\\"class\\\"],[\\\"Smoking status\\\",[23,[\\\"sortedSmokingStatuses\\\"]],\\\"smoking-status-section\\\",\\\"social-health\\\",true,[23,[\\\"selectedItem\\\"]],[23,[\\\"isAllowedToEditSocialHistory\\\"]],[23,[\\\"error\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"createSmokingStatus\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"editSmokingStatus\\\"],null],[23,[\\\"isEditingSmokingStatus\\\"]],[23,[\\\"loadSmokingStatus\\\",\\\"isRunning\\\"]],\\\"box-margin-Bxs-v2\\\"]]],false],[0,\\\"\\\\n        \\\"],[1,[27,\\\"card-field\\\",null,[[\\\"title\\\",\\\"content\\\",\\\"fieldValuePath\\\",\\\"data-element\\\",\\\"card-data-element\\\",\\\"isAllowedToEdit\\\",\\\"isError\\\",\\\"selectedItem\\\",\\\"create\\\",\\\"edit\\\",\\\"isEditing\\\",\\\"isLoading\\\",\\\"class\\\"],[\\\"Gender identity\\\",[23,[\\\"genderIdentity\\\"]],\\\"optionGuid\\\",\\\"gender-identity-section\\\",\\\"social-health\\\",[23,[\\\"isAllowedToEditSocialHistory\\\"]],[23,[\\\"error\\\"]],[23,[\\\"selectedItem\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"editSocialHistory\\\",\\\"identity\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"editSocialHistory\\\",\\\"identity\\\"],null],[23,[\\\"isEditingSocialHistory\\\"]],[23,[\\\"loadSocialHistory\\\",\\\"isRunning\\\"]],\\\"box-margin-Bxs-v2\\\"]]],false],[0,\\\"\\\\n        \\\"],[1,[27,\\\"card-field\\\",null,[[\\\"title\\\",\\\"content\\\",\\\"fieldValuePath\\\",\\\"data-element\\\",\\\"card-data-element\\\",\\\"isAllowedToEdit\\\",\\\"isError\\\",\\\"selectedItem\\\",\\\"create\\\",\\\"edit\\\",\\\"isEditing\\\",\\\"isLoading\\\",\\\"class\\\"],[\\\"Sexual orientation\\\",[23,[\\\"sexualOrientation\\\"]],\\\"optionGuid\\\",\\\"sexual-orientation-section\\\",\\\"social-health\\\",[23,[\\\"isAllowedToEditSocialHistory\\\"]],[23,[\\\"error\\\"]],[23,[\\\"selectedItem\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"editSocialHistory\\\",\\\"orientation\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"editSocialHistory\\\",\\\"orientation\\\"],null],[23,[\\\"isEditingSocialHistory\\\"]],[23,[\\\"loadSocialHistory\\\",\\\"isRunning\\\"]],[27,\\\"concat\\\",[[27,\\\"if\\\",[[23,[\\\"socialHistoryFreeText\\\"]],\\\"box-margin-Bxs-v2\\\"],null],\\\" \\\"],null]]]],false],[0,\\\"\\\\n        \\\"],[1,[27,\\\"card-field\\\",null,[[\\\"title\\\",\\\"content\\\",\\\"data-element\\\",\\\"card-data-element\\\",\\\"selectedItem\\\",\\\"isAllowedToEdit\\\",\\\"fieldValuePath\\\",\\\"create\\\",\\\"edit\\\",\\\"isEditing\\\"],[\\\"Social history (free text)\\\",[23,[\\\"socialHistoryFreeText\\\"]],\\\"social-history-section\\\",\\\"social-health\\\",[23,[\\\"selectedItem\\\"]],[23,[\\\"isAllowedToEditSocialHistory\\\"]],\\\"description\\\",[27,\\\"action\\\",[[22,0,[]],\\\"editFreeText\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"editFreeText\\\"],null],[23,[\\\"isEditingSocialHistoryFreeText\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null],[0,\\\"\\\\n\\\"],[4,\\\"print-preview-content\\\",null,[[\\\"printTitle\\\",\\\"isVisible\\\"],[[23,[\\\"printTitle\\\"]],[23,[\\\"isPrintPreviewVisible\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"print-social-history-section\\\",null,[[\\\"content\\\",\\\"patient\\\",\\\"class\\\"],[[23,[\\\"socialHistoryInfo\\\"]],[23,[\\\"patient\\\"]],\\\"sh-print chart-print-container\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/social-history.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/summary-devices-list-item\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"+7Ve62yD\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"a\\\"],[11,\\\"data-element\\\",\\\"device-name\\\"],[9],[1,[21,\\\"displayName\\\"],false],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[9],[0,\\\"Implant date: \\\"],[1,[21,\\\"implantDate\\\"],false],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[9],[0,\\\"Expiration date: \\\"],[1,[21,\\\"expirationDate\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/summary-devices-list-item.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/summary-devices-list\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"ayN3mqFm\", \"block\": \"{\\\"symbols\\\":[\\\"card\\\",\\\"content\\\",\\\"device\\\",\\\"device\\\",\\\"index\\\",\\\"header\\\"],\\\"statements\\\":[[1,[27,\\\"data-tunnel\\\",null,[[\\\"name\\\",\\\"onDataReceived\\\"],[\\\"summary-devices-list\\\",[27,\\\"action\\\",[[22,0,[]],\\\"loadDevices\\\"],null]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"composable-card\\\",null,null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"header\\\"]]],null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,6,[\\\"title\\\"]]],null,{\\\"statements\\\":[[0,\\\"            Implantable devices\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"canRecordDevice\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isAllowedToEditSummary\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"a\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"recordDevice\\\"],null]],[11,\\\"data-element\\\",\\\"record-device\\\"],[11,\\\"class\\\",\\\"icon icon-add icon--md text-color-placeholder box-margin-Lmd-v2\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[4,\\\"unless\\\",[[23,[\\\"isLoading\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"a\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"print\\\"],null]],[11,\\\"data-element\\\",\\\"print-devices-button\\\"],[11,\\\"class\\\",\\\"icon icon-printer icon--md text-color-placeholder box-margin-Lmd-v2\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[6]},null],[4,\\\"component\\\",[[22,1,[\\\"content\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isLoading\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"p\\\"],[9],[0,\\\"Loading devices...\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"loadDevicesFailed\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"text-color-placeholder\\\"],[9],[0,\\\"Can't load implantable devices. Please \\\"],[7,\\\"a\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"loadDevices\\\"],null]],[9],[0,\\\"try again.\\\"],[10],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isEditing\\\"]]],null,{\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"selectedDeviceGuid\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"section\\\"],[11,\\\"class\\\",\\\"active\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"div\\\"],[9],[0,\\\"Record device\\\"],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"activeDevices\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"list list--selectable list--hover\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"activeDevices\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[1,[27,\\\"summary-devices-list-item\\\",null,[[\\\"isAllowedToEditSummary\\\",\\\"editDevice\\\",\\\"device\\\",\\\"selectedDeviceGuid\\\",\\\"class\\\",\\\"data-element\\\"],[[23,[\\\"isAllowedToEditSummary\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"editDevice\\\"],null],[22,4,[]],[23,[\\\"selectedDeviceGuid\\\"]],\\\"active-device\\\",[27,\\\"concat\\\",[\\\"active-device-\\\",[22,5,[]]],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[4,5]},null],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isAllowedToEditSummary\\\"]]],null,{\\\"statements\\\":[[4,\\\"check-box\\\",null,[[\\\"checked\\\",\\\"disabled\\\",\\\"data-element\\\"],[[23,[\\\"isNoDevicesChecked\\\"]],[23,[\\\"isLoading\\\"]],\\\"no-devices-label\\\"]],{\\\"statements\\\":[[0,\\\"                            Patient has no implantable device\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isNoDevicesChecked\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            Patient has no implantable device\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                            No implantable device is recorded\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}],[4,\\\"if\\\",[[23,[\\\"showInactiveDevices\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-margin-Txs-v2\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"h4\\\"],[11,\\\"class\\\",\\\"h4\\\"],[11,\\\"data-element\\\",\\\"inactive-devices-header\\\"],[9],[0,\\\"Inactive\\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"list list--selectable list--hover\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"inactiveDevices\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[1,[27,\\\"summary-devices-list-item\\\",null,[[\\\"isAllowedToEditSummary\\\",\\\"editDevice\\\",\\\"device\\\",\\\"selectedDeviceGuid\\\"],[[23,[\\\"isAllowedToEditSummary\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"editDevice\\\"],null],[22,3,[]],[23,[\\\"selectedDeviceGuid\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3]},null],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"inactiveDevices\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-margin-Txs-v2\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"summary-devices-list-inactive-toggle box-padding-Txs\\\"],[11,\\\"data-element\\\",\\\"inactive-devices\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"toggleInactiveDevices\\\"],null]],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showInactiveDevices\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                Hide inactive\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                Show inactive (\\\"],[1,[23,[\\\"inactiveDevices\\\",\\\"length\\\"]],false],[0,\\\")\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[1]},null],[0,\\\"\\\\n\\\"],[4,\\\"print-preview-content\\\",null,[[\\\"isVisible\\\",\\\"printTitle\\\",\\\"class\\\"],[[23,[\\\"isPrintVisible\\\"]],[23,[\\\"printTitle\\\"]],\\\"chart-print-container print-devices-container\\\"]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"print-devices-section\\\",null,[[\\\"data\\\",\\\"noDevices\\\",\\\"users\\\",\\\"patient\\\",\\\"includeHeaderAndFooter\\\"],[[23,[\\\"devices\\\"]],[23,[\\\"noImplantableDevices\\\"]],[23,[\\\"practiceUsers\\\"]],[23,[\\\"patient\\\"]],true]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/summary-devices-list.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/summary-encounter-list\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"rbgKQo3t\", \"block\": \"{\\\"symbols\\\":[\\\"card\\\",\\\"encounter\\\",\\\"index\\\",\\\"header\\\"],\\\"statements\\\":[[1,[27,\\\"data-tunnel\\\",null,[[\\\"name\\\",\\\"onDataReceived\\\"],[\\\"summary-encounter-list\\\",[27,\\\"perform\\\",[[23,[\\\"loadEncountersTask\\\"]]],null]]]],false],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"composable-card\\\",null,null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"header\\\"]]],null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,4,[\\\"title\\\"]]],null,{\\\"statements\\\":[[0,\\\"            Encounters\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[4]},null],[4,\\\"component\\\",[[22,1,[\\\"content\\\"]]],null,{\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"isLoading\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"error\\\"]]],null,{\\\"statements\\\":[[0,\\\"                Could not load encounters for this patient. Try again later.\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"visibleEncounters\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"list list--hover\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"visibleEncounters\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"li\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"openEncounter\\\",[22,2,[]]],null]],[12,\\\"data-element\\\",[28,[\\\"encounter-item-\\\",[22,3,[]]]]],[9],[0,\\\"\\\\n                                \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"text-color-link\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[22,2,[\\\"dateOfService\\\"]]],null],false],[10],[0,\\\"\\\\n                                \\\"],[7,\\\"span\\\"],[9],[1,[22,2,[\\\"encounterAndNoteType\\\"]],false],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,2,[\\\"signed\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-lock icon-color-focus box-margin-Lmd-v2\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"chief-complaint\\\"],[9],[0,\\\"\\\\n                                    \\\"],[7,\\\"span\\\"],[9],[0,\\\"CC:\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,2,[\\\"chiefComplaint\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                        \\\"],[7,\\\"span\\\"],[9],[1,[22,2,[\\\"chiefComplaint\\\"]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                        \\\"],[7,\\\"span\\\"],[9],[0,\\\"No chief complaint recorded\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                                \\\"],[10],[0,\\\"\\\\n                            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2,3]},null],[0,\\\"                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"text-color-placeholder box-margin-Bn\\\"],[9],[0,\\\"No encounters for this patient\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[4,\\\"if\\\",[[23,[\\\"hasMoreEncounters\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[4,\\\"link-to\\\",[\\\"timeline.events\\\",[23,[\\\"patientPracticeGuid\\\"]],\\\"encounter\\\"],null,{\\\"statements\\\":[[0,\\\"View all encounters in timeline (\\\"],[1,[23,[\\\"encounters\\\",\\\"length\\\"]],false],[0,\\\")\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/summary-encounter-list.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/summary-sia-list-item\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"1EBCJ+QK\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"div\\\"],[9],[7,\\\"a\\\"],[12,\\\"data-element\\\",[28,[\\\"sia-name-\\\",[21,\\\"index\\\"]]]],[9],[1,[23,[\\\"sia\\\",\\\"displayName\\\"]],false],[10],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-block box-margin-Rlg-v2\\\"],[12,\\\"data-element\\\",[28,[\\\"sia-start-date-\\\",[21,\\\"index\\\"]]]],[9],[7,\\\"span\\\"],[9],[0,\\\"Start date:\\\"],[10],[0,\\\" \\\"],[1,[23,[\\\"sia\\\",\\\"startDate\\\"]],false],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-block\\\"],[12,\\\"data-element\\\",[28,[\\\"sia-status-\\\",[21,\\\"index\\\"]]]],[9],[7,\\\"span\\\"],[9],[0,\\\"Status:\\\"],[10],[0,\\\" \\\"],[1,[23,[\\\"sia\\\",\\\"displayStatus\\\"]],false],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/summary-sia-list-item.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/summary-sia-list\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"aSZN2b+p\", \"block\": \"{\\\"symbols\\\":[\\\"card\\\",\\\"sia\\\",\\\"index\\\",\\\"header\\\"],\\\"statements\\\":[[1,[27,\\\"data-tunnel\\\",null,[[\\\"name\\\",\\\"onDataReceived\\\"],[\\\"summary-sia-list\\\",[27,\\\"perform\\\",[[23,[\\\"loadSIAs\\\"]]],null]]]],false],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"composable-card\\\",null,null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"header\\\"]]],null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,4,[\\\"title\\\"]]],null,{\\\"statements\\\":[[0,\\\"            Screenings/ Interventions/ Assessments\\\\n            \\\"],[7,\\\"a\\\"],[12,\\\"class\\\",[28,[\\\"icon-printer icon--md text-color-placeholder box-margin-Lmd-v2 \\\",[27,\\\"if\\\",[[23,[\\\"isLoading\\\"]],\\\"hidden\\\"],null]]]],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"print\\\"],null]],[11,\\\"data-element\\\",\\\"print-sia-button\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[4]},null],[4,\\\"component\\\",[[22,1,[\\\"content\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isError\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"box-margin-Bn\\\"],[9],[1,[21,\\\"errorText\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"patientSummarySIAs\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"list list--hover list--selectable\\\"],[11,\\\"data-element\\\",\\\"sia-list\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"patientSummarySIAs\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"summary-sia-list-item\\\",null,[[\\\"selectedItem\\\",\\\"index\\\",\\\"sia\\\",\\\"edit\\\"],[[23,[\\\"selectedItem\\\"]],[22,3,[]],[22,2,[]],[27,\\\"action\\\",[[22,0,[]],\\\"edit\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2,3]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showLoadMore\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"a\\\"],[11,\\\"data-element\\\",\\\"load-more-button\\\"],[12,\\\"onclick\\\",[27,\\\"perform\\\",[[23,[\\\"loadSIAs\\\"]]],null]],[9],[0,\\\"Show more (\\\"],[1,[21,\\\"restSIAsCount\\\"],false],[0,\\\")\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"text-color-placeholder box-margin-Bn\\\"],[9],[0,\\\"No screening/interventions/assessments for this patient\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null],[0,\\\"\\\\n\\\"],[4,\\\"print-preview-content\\\",null,[[\\\"printTitle\\\",\\\"isVisible\\\"],[[23,[\\\"printTitle\\\"]],[23,[\\\"isPrintPreviewVisible\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"print-patient-sia-section\\\",null,[[\\\"printSummarySIAs\\\",\\\"patient\\\",\\\"class\\\"],[[23,[\\\"printSummarySIAs\\\"]],[23,[\\\"patient\\\"]],\\\"sh-print chart-print-container\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/summary-sia-list.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/text-area-counter\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"7RXYtiE2\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"d-pf-text-area\\\",null,[[\\\"value\\\",\\\"placeholderText\\\",\\\"maxlength\\\",\\\"rows\\\",\\\"autosize\\\",\\\"disabled\\\",\\\"data-element\\\",\\\"isShorter\\\"],[[23,[\\\"value\\\"]],[23,[\\\"placeholderText\\\"]],[23,[\\\"maxlength\\\"]],[23,[\\\"rows\\\"]],[23,[\\\"autosize\\\"]],[23,[\\\"isDisabled\\\"]],[23,[\\\"dataElement\\\"]],[23,[\\\"isShorter\\\"]]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"canShowCounter\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"counter pull-right\\\"],[9],[1,[21,\\\"charactersRemaining\\\"],false],[0,\\\" characters left\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/text-area-counter.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/transcript-comment\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"SpTAcAiF\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"commentText\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"commentType\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"hint-text\\\"],[9],[1,[21,\\\"commentType\\\"],false],[0,\\\": \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"isCollapsible\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"span\\\"],[12,\\\"class\\\",[27,\\\"if\\\",[[23,[\\\"oneline\\\"]],\\\"oneline\\\"],null]],[3,\\\"action\\\",[[22,0,[]],\\\"toggleOneLine\\\"]],[9],[1,[21,\\\"commentText\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"span\\\"],[11,\\\"data-element\\\",\\\"print-comment-text\\\"],[12,\\\"class\\\",[27,\\\"if\\\",[[23,[\\\"oneline\\\"]],\\\"oneline\\\"],null]],[9],[1,[21,\\\"commentText\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[4,\\\"if\\\",[[23,[\\\"providerName\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"hint-text\\\"],[9],[0,\\\" by \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"span\\\"],[11,\\\"data-element\\\",\\\"print-comment-provider-name\\\"],[9],[1,[21,\\\"providerName\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"date\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"hint-text\\\"],[9],[0,\\\" on \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"span\\\"],[9],[1,[27,\\\"datetime-formatted\\\",null,[[\\\"datetime\\\",\\\"isSourceInUtc\\\",\\\"data-element\\\"],[[23,[\\\"date\\\"]],[23,[\\\"convertToLocalTime\\\"]],\\\"print-comment-date\\\"]]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/transcript-comment.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/components/transcript-comments\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"QecKv+Py\", \"block\": \"{\\\"symbols\\\":[\\\"transcriptComment\\\"],\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"items\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"commentType\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"hint-text\\\"],[9],[1,[21,\\\"commentType\\\"],false],[0,\\\": \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[1,[27,\\\"transcript-comment\\\",null,[[\\\"transcriptComment\\\",\\\"isCollapsible\\\",\\\"oneline\\\",\\\"patientPracticeGuid\\\"],[[23,[\\\"items\\\",\\\"firstObject\\\"]],[23,[\\\"isCollapsible\\\"]],[23,[\\\"firstCommentOneLine\\\"]],[23,[\\\"patientPracticeGuid\\\"]]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"filteredItems\\\"]]],null,{\\\"statements\\\":[[4,\\\"unless\\\",[[23,[\\\"isExpanded\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"expand\\\"]],[9],[0,\\\"Show comments (\\\"],[1,[27,\\\"unbound\\\",[[23,[\\\"filteredItems\\\",\\\"length\\\"]]],null],false],[0,\\\")\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"ul\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"filteredItems\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"li\\\"],[9],[1,[27,\\\"transcript-comment\\\",null,[[\\\"transcriptComment\\\",\\\"isCollapsible\\\",\\\"oneline\\\",\\\"patientPracticeGuid\\\"],[[22,1,[]],[23,[\\\"isCollapsible\\\"]],[23,[\\\"oneline\\\"]],[23,[\\\"patientPracticeGuid\\\"]]]]],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"hideCollapseLink\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"collapse\\\"]],[9],[0,\\\"Hide comments (\\\"],[1,[27,\\\"unbound\\\",[[23,[\\\"filteredItems\\\",\\\"length\\\"]]],null],false],[0,\\\")\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"emptyPlaceHolder\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[1,[21,\\\"emptyPlaceHolder\\\"],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/components/transcript-comments.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/dashboardPanelItem\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"gf0qVENt\", \"block\": \"{\\\"symbols\\\":[\\\"allergy\\\",\\\"allergy\\\",\\\"allergy\\\"],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"data-qatest\\\",\\\"dashboardpanel\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"with\\\",[[23,[\\\"panelData\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"header\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"h3\\\"],[11,\\\"class\\\",\\\"header3a\\\"],[9],[1,[21,\\\"headerText\\\"],false],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\\n        \\\"],[7,\\\"h3\\\"],[11,\\\"class\\\",\\\"header3b\\\"],[9],[0,\\\"Drug Allergies\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"section\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"hasDrugAllergies\\\"]]],null,{\\\"statements\\\":[[4,\\\"each\\\",[[23,[\\\"drugAllergiesList\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"item\\\"],[9],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[9],[1,[22,3,[\\\"title\\\"]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,3,[\\\"description\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            : \\\"],[1,[22,3,[\\\"description\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[9],[1,[21,\\\"emptyText\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\\n        \\\"],[7,\\\"h3\\\"],[11,\\\"class\\\",\\\"header3b\\\"],[9],[0,\\\"Food Allergies\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"section\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"foodAllergiesList\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"item\\\"],[9],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[9],[1,[22,2,[\\\"title\\\"]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,2,[\\\"description\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    : \\\"],[1,[22,2,[\\\"description\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[9],[0,\\\"No Food Allergies recorded\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\\n        \\\"],[7,\\\"h3\\\"],[11,\\\"class\\\",\\\"header3b\\\"],[9],[0,\\\"Environmental Allergies\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"section\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"environmentalAllergiesList\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"item\\\"],[9],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[9],[1,[22,1,[\\\"title\\\"]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,1,[\\\"description\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    : \\\"],[1,[22,1,[\\\"description\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[9],[0,\\\"No Environmental Allergies recorded\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"pmhData\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"h3\\\"],[11,\\\"class\\\",\\\"header3b\\\"],[9],[0,\\\"Allergies (free text)\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"section\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"p\\\"],[9],[1,[21,\\\"pmhData\\\"],false],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/dashboardPanelItem.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/dashboardPanelItemNoSubHeaders\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"FJihOyPd\", \"block\": \"{\\\"symbols\\\":[\\\"category\\\",\\\"item\\\"],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"data-qatest\\\",\\\"dashboardpanel\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"with\\\",[[23,[\\\"panelData\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"header\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"h3\\\"],[11,\\\"class\\\",\\\"header3a\\\"],[9],[1,[21,\\\"headerText\\\"],false],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"section\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"categoriesList\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[22,1,[\\\"summeryItems\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"item\\\"],[9],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[9],[1,[22,2,[\\\"title\\\"]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,2,[\\\"description\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            : \\\"],[1,[22,2,[\\\"description\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"emptyText\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                    \\\"],[1,[21,\\\"emptyText\\\"],false],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/dashboardPanelItemNoSubHeaders.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/device\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"VAF8hEUz\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"device-detail\\\",null,[[\\\"id\\\",\\\"close\\\",\\\"updateDirty\\\",\\\"editedDeviceGuid\\\",\\\"patientGuid\\\",\\\"isDirty\\\",\\\"closing\\\"],[\\\"dDevice\\\",\\\"close\\\",\\\"updateDirty\\\",[23,[\\\"model\\\",\\\"deviceGuid\\\"]],[23,[\\\"model\\\",\\\"patientGuid\\\"]],[23,[\\\"isDirty\\\"]],[23,[\\\"closing\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/device.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/diagnosis\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"Jm9b2LFc\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"diagnosis-detail\\\",null,[[\\\"close\\\",\\\"diagnosisDeleted\\\",\\\"updateDirty\\\",\\\"isDirty\\\",\\\"closing\\\",\\\"patientGuid\\\",\\\"transcriptGuid\\\",\\\"transcriptDate\\\",\\\"diagnosisGuid\\\",\\\"isRefiningDiagnosis\\\",\\\"isRecordedFromAssessment\\\",\\\"recordMedication\\\",\\\"editMedication\\\",\\\"canAddMultiple\\\",\\\"refreshChart\\\",\\\"closeEncounterTab\\\"],[\\\"close\\\",[27,\\\"action\\\",[[22,0,[]],\\\"diagnosisDeleted\\\"],null],\\\"updateDirty\\\",[23,[\\\"isDirty\\\"]],[23,[\\\"closing\\\"]],[23,[\\\"patientPracticeGuid\\\"]],[23,[\\\"transcriptGuid\\\"]],[23,[\\\"transcriptDate\\\"]],[23,[\\\"model\\\",\\\"diagnosisGuid\\\"]],[23,[\\\"model\\\",\\\"isRefiningDiagnosis\\\"]],[23,[\\\"model\\\",\\\"isRecordedFromAssessment\\\"]],\\\"recordMedication\\\",\\\"editMedication\\\",true,\\\"refreshChartWithoutSave\\\",\\\"closeEncounterTab\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/diagnosis.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/encounter/worksheet\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"klg+RNW7\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\",\\\"right-module\\\"],\\\"statements\\\":[[4,\\\"detail-pane-v2\\\",null,[[\\\"class\\\"],[[23,[\\\"worksheetClassNames\\\"]]]],{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"right-module\\\"]]],[[\\\"class\\\"],[\\\"fill-space flex-column\\\"]],{\\\"statements\\\":[[4,\\\"component\\\",[[22,2,[\\\"header\\\"]]],[[\\\"class\\\",\\\"closeDetailPane\\\"],[\\\"box-padding-Llg-v2\\\",[27,\\\"action\\\",[[22,0,[]],\\\"closeWorksheet\\\"],null]]],{\\\"statements\\\":[[0,\\\"            Screenings/ Interventions/ Assessments > \\\"],[1,[27,\\\"if\\\",[[23,[\\\"disabled\\\"]],\\\"Review\\\",\\\"Record\\\"],null],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"component\\\",[[22,2,[\\\"body\\\"]]],[[\\\"class\\\"],[\\\"flex-grow box-padding-Alg-v2\\\"]],{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"component\\\",[[27,\\\"concat\\\",[[23,[\\\"worksheetComponent\\\"]],\\\"-v2\\\"],null]],[[\\\"permittedStates\\\",\\\"disabled\\\",\\\"reason\\\",\\\"reasonCode\\\",\\\"reasonCodes\\\",\\\"responses\\\",\\\"selectedStatus\\\",\\\"setErrors\\\",\\\"selectWorksheetReason\\\",\\\"selectWorksheetStatus\\\"],[[23,[\\\"permittedStates\\\"]],[23,[\\\"disabled\\\"]],[23,[\\\"reason\\\"]],[23,[\\\"reasonCode\\\"]],[23,[\\\"reasonCodes\\\"]],[23,[\\\"model\\\"]],[23,[\\\"selectedStatus\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"setErrors\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"selectWorksheetReason\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"selectWorksheetStatus\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"component\\\",[[22,2,[\\\"footer\\\"]]],[[\\\"class\\\"],[\\\"inline-flex-group-v2 box-padding-LRlg-v2 box-padding-TBsm-v2\\\"]],{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"disabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm text-right\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--brand\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"closeWorksheet\\\"],null]],[11,\\\"data-element\\\",\\\"btn-worksheet-close\\\"],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"\\\\n                        Close\\\\n                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm box-fixed\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--default\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"cancelWorksheet\\\"],null]],[11,\\\"data-element\\\",\\\"btn-worksheet-cancel\\\"],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"\\\\n                        Cancel\\\\n                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm box-fixed\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[12,\\\"class\\\",[28,[\\\"btn--default \\\",[27,\\\"unless\\\",[[23,[\\\"model\\\",\\\"responsesGuid\\\"]],\\\"hidden\\\"],null]]]],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"deleteWorksheet\\\"],null]],[11,\\\"data-element\\\",\\\"btn-worksheet-delete\\\"],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"\\\\n                        Delete\\\\n                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm text-right\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--brand\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"saveWorksheet\\\"],null]],[12,\\\"disabled\\\",[21,\\\"isSaveDisabled\\\"]],[11,\\\"data-element\\\",\\\"btn-worksheet-save\\\"],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"\\\\n                        Save\\\\n                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[1]},null],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/encounter/worksheet.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/family-health-history-details\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"5m8CIm9S\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\",\\\"right-module\\\",\\\"footer\\\",\\\"body\\\"],\\\"statements\\\":[[4,\\\"detail-pane-v2\\\",null,[[\\\"class\\\"],[\\\"side-fixed col-xs-5 type-v2\\\"]],{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"right-module\\\"]]],[[\\\"class\\\"],[\\\"fill-space flex-column\\\"]],{\\\"statements\\\":[[0,\\\"        \\\"],[1,[27,\\\"component\\\",[[22,2,[\\\"header\\\"]]],[[\\\"smallHeaderText\\\",\\\"bigHeaderText\\\",\\\"class\\\",\\\"closeDetailPane\\\"],[\\\"Family health history\\\",[23,[\\\"smallHeaderText\\\"]],\\\"box-padding-Llg-v2\\\",[27,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"],null]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,2,[\\\"body\\\"]]],[[\\\"class\\\"],[\\\"flex-grow box-padding-Alg-v2\\\"]],{\\\"statements\\\":[[4,\\\"view-spinner\\\",null,[[\\\"isLoading\\\"],[[23,[\\\"save\\\",\\\"isRunning\\\"]]]],{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-padding-Bmd-v2\\\"],[9],[0,\\\"\\\\n                    \\\"],[4,\\\"link-to\\\",[\\\"patient.familyhistory\\\"],null,{\\\"statements\\\":[[0,\\\"Use structured family health history\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"data-element\\\",\\\"family-health-history-text-area-container\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Family health history\\\"],[10],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"text-area-counter\\\",null,[[\\\"autofocus\\\",\\\"isDisabled\\\",\\\"autosize\\\",\\\"value\\\",\\\"placeholderText\\\",\\\"maxlength\\\",\\\"rows\\\"],[true,[23,[\\\"isNotAllowedToEdit\\\"]],true,[23,[\\\"model\\\",\\\"familyHealthHistory\\\"]],\\\"Enter family health history\\\",\\\"4000\\\",\\\"3\\\"]]],false],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[4]},null],[4,\\\"component\\\",[[22,2,[\\\"footer\\\"]]],[[\\\"class\\\"],[\\\"box-padding-TBmd-v2 box-padding-LRlg-v2\\\"]],{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"clearfix\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-left\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--default\\\"],[11,\\\"data-element\\\",\\\"btn-cancel\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"],null]],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isAllowedToEdit\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--brand\\\"],[11,\\\"data-element\\\",\\\"btn-save-family-health-history\\\"],[12,\\\"onclick\\\",[27,\\\"perform\\\",[[23,[\\\"save\\\"]]],null]],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"Save\\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3]},null]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/family-health-history-details.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/goal\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"JTN/+Qeq\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"goal-detail\\\",null,[[\\\"goal\\\",\\\"cancel\\\",\\\"delete\\\",\\\"save\\\",\\\"errors\\\",\\\"isValid\\\",\\\"id\\\"],[[23,[\\\"model\\\"]],\\\"cancel\\\",\\\"delete\\\",\\\"save\\\",[23,[\\\"errors\\\"]],[23,[\\\"isValid\\\"]],\\\"goalDetail\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/goal.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/health-concern\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"zsHWalHl\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"health-concern-detail\\\",null,[[\\\"cancel\\\",\\\"delete\\\",\\\"errors\\\",\\\"existingHealthConcerns\\\",\\\"model\\\",\\\"save\\\"],[[27,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"delete\\\"],null],[23,[\\\"errors\\\"]],[23,[\\\"healthConcerns\\\"]],[23,[\\\"model\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"save\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/health-concern.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/medication-detail-pane-footer\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"khMbbdMN\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"isEntitledToEditMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs\\\"],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[\\\"item gutter-xs \\\",[27,\\\"unless\\\",[[23,[\\\"isEntitledToEditMedications\\\"]],\\\"box-fixed\\\"],null]]]],[9],[0,\\\"\\\\n        \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"btn btn-sm text-left\\\"],[11,\\\"data-element\\\",\\\"cancel-btn\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"],null]],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isEntitledToEditMedications\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs box-fixed\\\"],[11,\\\"data-element\\\",\\\"medication-detail-footer-buttons\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"session\\\",\\\"canEditChart\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isEditing\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"canDelete\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"hasErxOrderDrafts\\\"]]],null,{\\\"statements\\\":[[4,\\\"popover-confirm\\\",null,[[\\\"confirmType\\\",\\\"isCloseButtonVisible\\\",\\\"isCancelButtonVisible\\\",\\\"isConfirmButtonVisible\\\",\\\"tagName\\\",\\\"class\\\",\\\"title\\\",\\\"popoverContent\\\"],[\\\"warning\\\",true,false,false,\\\"button\\\",\\\"btn btn-sm\\\",\\\"Cannot delete medication\\\",\\\"There are prescription drafts associated with this medication. Complete or delete the associated drafts before deleting the medication.\\\"]],{\\\"statements\\\":[[0,\\\"                                Delete\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"popover-confirm\\\",null,[[\\\"action\\\",\\\"tagName\\\",\\\"class\\\",\\\"title\\\",\\\"confirmLabel\\\",\\\"popoverContent\\\"],[\\\"deleteMedicationDetail\\\",\\\"button\\\",\\\"btn btn-sm\\\",\\\"Delete medication\\\",\\\"Delete\\\",\\\"This action is final, and will remove this medication from this patient's history.\\\"]],{\\\"statements\\\":[[0,\\\"                                Delete\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"popover-info\\\",null,[[\\\"tagName\\\",\\\"class\\\",\\\"title\\\",\\\"popoverContent\\\"],[\\\"button\\\",\\\"btn btn-sm\\\",\\\"Medication Attached to an Encounter\\\",\\\"Consider marking this medication historical by setting a stop date\\\"]],{\\\"statements\\\":[[0,\\\"                            Delete\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs box-fixed\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"a\\\"],[12,\\\"class\\\",[28,[\\\"btn btn-sm \\\",[27,\\\"unless\\\",[[23,[\\\"isMedOrderable\\\"]],\\\"disabled\\\"],null]]]],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"createOrder\\\"],null]],[11,\\\"data-element\\\",\\\"btn-order-eRx\\\"],[9],[0,\\\"Order\\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs box-fixed\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"btn btn-sm btn-primary\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"saveMedication\\\"],null]],[9],[0,\\\"Record\\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/medication-detail-pane-footer.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/medication-detail-pane-toolbox\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"x8SPzuQr\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"flex-column medications-flyout\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"navbar\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"nav\\\"],[9],[0,\\\"\\\\n          \\\"],[7,\\\"li\\\"],[11,\\\"class\\\",\\\"active\\\"],[9],[0,\\\"Frequent\\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\\n    \\\"],[1,[27,\\\"frequent-medications\\\",null,[[\\\"selectMedication\\\"],[\\\"newMedicationSelected\\\"]]],false],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/medication-detail-pane-toolbox.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/medication\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"CW8801U9\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"medication-detail\\\",null,[[\\\"id\\\",\\\"close\\\",\\\"closeEncounterTab\\\",\\\"createOrder\\\",\\\"goToPrescriptionDetails\\\",\\\"refreshChart\\\",\\\"refreshMedicationAd\\\",\\\"updateDirty\\\",\\\"editedMedicationGuid\\\",\\\"transcriptGuid\\\",\\\"isRecordedFromPlan\\\",\\\"searchText\\\",\\\"diagnosisGuid\\\",\\\"patientGuid\\\",\\\"isDirty\\\",\\\"isOrdering\\\",\\\"closing\\\",\\\"isAddingNewMedicationFromEncounter\\\",\\\"controlledSubstanceScheduleChanged\\\",\\\"showAssessmentModal\\\"],[\\\"dAddMed\\\",\\\"close\\\",\\\"closeEncounterTab\\\",\\\"createOrder\\\",\\\"goToPrescriptionDetails\\\",\\\"refreshChartWithoutSave\\\",\\\"refreshMedicationAd\\\",\\\"updateDirty\\\",[23,[\\\"model\\\",\\\"medicationGuid\\\"]],[23,[\\\"transcriptGuid\\\"]],[23,[\\\"model\\\",\\\"isRecordedFromPlan\\\"]],[23,[\\\"model\\\",\\\"searchTerm\\\"]],[23,[\\\"model\\\",\\\"diagnosisGuid\\\"]],[23,[\\\"patientPracticeGuid\\\"]],[23,[\\\"isDirty\\\"]],[23,[\\\"isOrdering\\\"]],[23,[\\\"closing\\\"]],[23,[\\\"model\\\",\\\"isAddingNewMedicationFromEncounter\\\"]],[23,[\\\"controlledSubstanceScheduleChanged\\\"]],\\\"showAssessment\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/medication.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/nutrition\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"1hsj8xuQ\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\",\\\"right-module\\\"],\\\"statements\\\":[[4,\\\"detail-pane-v2\\\",null,[[\\\"class\\\"],[\\\"side-fixed col-xs-5 type-v2\\\"]],{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"right-module\\\"]]],[[\\\"class\\\"],[\\\"fill-space flex-column\\\"]],{\\\"statements\\\":[[4,\\\"component\\\",[[22,2,[\\\"header\\\"]]],[[\\\"class\\\",\\\"closeDetailPane\\\"],[\\\"box-padding-Llg-v2\\\",[27,\\\"action\\\",[[22,0,[]],\\\"closeDetailPane\\\"],null]]],{\\\"statements\\\":[[0,\\\"            Nutrition history > \\\"],[1,[27,\\\"if\\\",[[23,[\\\"isAllowedToEdit\\\"]],\\\"Record\\\",\\\"Review\\\"],null],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"component\\\",[[22,2,[\\\"body\\\"]]],[[\\\"class\\\"],[\\\"flex-grow box-padding-Alg-v2\\\"]],{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[0,\\\"Nutrition history\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"view-spinner\\\",null,[[\\\"isLoading\\\"],[[23,[\\\"isLoading\\\"]]]],{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"text-area-counter\\\",null,[[\\\"autofocus\\\",\\\"isDisabled\\\",\\\"autosize\\\",\\\"value\\\",\\\"placeholderText\\\",\\\"maxlength\\\",\\\"rows\\\"],[true,[23,[\\\"isNotAllowedToEdit\\\"]],true,[23,[\\\"nutritionHistory\\\"]],\\\"Enter nutrition history\\\",\\\"4000\\\",\\\"3\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[4,\\\"component\\\",[[22,2,[\\\"footer\\\"]]],[[\\\"class\\\"],[\\\"inline-flex-group-v2 box-padding-LRlg-v2 box-padding-TBsm-v2\\\"]],{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isAllowedToEdit\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm box-fixed\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[11,\\\"data-element\\\",\\\"cancel-button\\\"],[11,\\\"class\\\",\\\"btn--default\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"closeDetailPane\\\"],null]],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"isNew\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm box-fixed\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"button\\\"],[11,\\\"data-element\\\",\\\"delete-button\\\"],[11,\\\"class\\\",\\\"btn--default\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"delete\\\"],null]],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"Delete\\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm text-right\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[11,\\\"data-element\\\",\\\"save-button\\\"],[11,\\\"class\\\",\\\"btn--brand\\\"],[12,\\\"disabled\\\",[21,\\\"disableSave\\\"]],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"save\\\"],null]],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"Save\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm text-right\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[11,\\\"data-element\\\",\\\"close-button\\\"],[11,\\\"class\\\",\\\"btn--brand\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"closeDetailPane\\\"],null]],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"Close\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/nutrition.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/patient\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"QedjJuN/\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\",\\\"section\\\"],\\\"statements\\\":[[1,[27,\\\"patient-header\\\",null,[[\\\"patient\\\",\\\"addPhoto\\\",\\\"patientMissingMessage\\\",\\\"patientMissingMessageDetail\\\",\\\"openPhrEnrollment\\\"],[[23,[\\\"patient\\\"]],\\\"addPhoto\\\",[23,[\\\"patientMissingMessage\\\"]],[23,[\\\"patientMissingMessageDetail\\\"]],\\\"openPhrEnrollment\\\"]]],false],[0,\\\"\\\\n\\\\n\\\"],[15,\\\"navigation\\\",[]],[0,\\\"\\\\n\\\\n\\\"],[1,[27,\\\"add-patient-photo\\\",null,[[\\\"photoUrl\\\",\\\"isVisible\\\",\\\"patientGuid\\\"],[[23,[\\\"patient\\\",\\\"imageUrl\\\"]],[23,[\\\"showPhotoUpload\\\"]],[23,[\\\"patient\\\",\\\"guid\\\"]]]]],false],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showAccessHistory\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"patient-access-history\\\",null,[[\\\"isVisible\\\",\\\"patient\\\",\\\"patientPracticeGuid\\\"],[[23,[\\\"showAccessHistory\\\"]],[23,[\\\"patient\\\"]],[23,[\\\"patientPracticeGuid\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showRecentActivity\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"recent-patient-activity\\\",null,[[\\\"isVisible\\\",\\\"patientName\\\",\\\"patientPracticeGuid\\\"],[[23,[\\\"showRecentActivity\\\"]],[23,[\\\"fullName\\\"]],[23,[\\\"patientPracticeGuid\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[1,[27,\\\"copy-modal\\\",null,[[\\\"description\\\",\\\"isVisible\\\",\\\"style\\\",\\\"text\\\",\\\"title\\\"],[\\\"Copy the link below to access this patient directly in the future\\\",[23,[\\\"showPatientLinkCopyModal\\\"]],\\\"small\\\",[23,[\\\"patientLink\\\"]],\\\"Copy a link to this patient\\\"]]],false],[0,\\\"\\\\n\\\\n\\\"],[1,[27,\\\"print-chart-modal\\\",null,[[\\\"isVisible\\\",\\\"patientController\\\",\\\"printAudit\\\"],[[23,[\\\"isPrintChartVisible\\\"]],[22,0,[]],\\\"printAudit\\\"]]],false],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isCreateClinicalDocumentVisible\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"create-patient-clinical-document-modal\\\",null,[[\\\"isVisible\\\",\\\"patientPracticeGuid\\\",\\\"patientName\\\",\\\"dob\\\",\\\"gender\\\",\\\"create\\\"],[[23,[\\\"isCreateClinicalDocumentVisible\\\"]],[23,[\\\"patientPracticeGuid\\\"]],[23,[\\\"fullName\\\"]],[23,[\\\"patient\\\",\\\"birthDate\\\"]],[23,[\\\"gender\\\"]],\\\"displayPendingClinicalSummaryModal\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"content-modal\\\",null,[[\\\"classNames\\\",\\\"modalStyle\\\",\\\"isVisible\\\"],[\\\"type-v2 clinical-document-ready-modal\\\",8,[23,[\\\"isClinicalDocumentPendingModalVisible\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,2,[\\\"header\\\"]]],[[\\\"title\\\",\\\"isCloseByXorOutsideVisible\\\"],[\\\"Clinical document is being created\\\",true]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,2,[\\\"body\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"h3\\\"],[11,\\\"class\\\",\\\"box-margin-Bmd-v2\\\"],[9],[0,\\\"Go to Timeline to access the document\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"box-margin-Bn\\\"],[9],[0,\\\"The clinical document will be ready shortly in Timeline\\\"],[10],[0,\\\"\\\\n\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,2,[\\\"footer\\\"]]],[[\\\"buttonRightPrimaryText\\\",\\\"buttonRightPrimaryAction\\\"],[\\\"Go to timeline\\\",[27,\\\"action\\\",[[22,0,[]],\\\"goToClinicalSummaryTimeline\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"shouldShowDeletedEncounterWarning\\\"]]],null,{\\\"statements\\\":[[4,\\\"content-modal\\\",null,[[\\\"modalStyle\\\",\\\"isVisible\\\"],[7,[23,[\\\"shouldShowDeletedEncounterWarning\\\"]]]],{\\\"statements\\\":[[0,\\\"        \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"header\\\"]]],[[\\\"title\\\",\\\"isCloseByXorOutsideVisible\\\"],[\\\"Encounter deleted\\\",true]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,1,[\\\"body\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"p\\\"],[9],[0,\\\"The encounter you were working in has been deleted. You can access a previous encounter or start a new one from the timeline.\\\"],[10],[0,\\\"\\\\n\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"footer\\\"]]],[[\\\"buttonRightPrimaryText\\\",\\\"buttonRightPrimaryAction\\\"],[\\\"Go to timeline\\\",[27,\\\"action\\\",[[22,0,[]],\\\"transitionToEncounterTimeline\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"shouldShowEditPinnedNoteModal\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"edit-pinned-note-modal\\\",null,[[\\\"patient\\\",\\\"isVisible\\\",\\\"location\\\"],[[23,[\\\"patient\\\"]],[23,[\\\"shouldShowEditPinnedNoteModal\\\"]],[23,[\\\"pinnedNoteModalLocation\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":true}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/patient.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/patient/-download-immunization-record\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"w+MW49aw\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\"],\\\"statements\\\":[[4,\\\"content-modal\\\",null,[[\\\"modalStyle\\\",\\\"isVisible\\\",\\\"close\\\"],[3,[23,[\\\"isDownloadImmunizationRecordVisible\\\"]],\\\"cancelDownloadImmunizationRecord\\\"]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"header\\\"]]],[[\\\"title\\\",\\\"isCloseByXorOutsideVisible\\\"],[\\\"Download patient immunization record\\\",true]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,1,[\\\"body\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"download-immunization-registry-spacer\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[9],[0,\\\"Select the registry that will receive this patient's immunization record\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n            \\\"],[1,[27,\\\"single-select\\\",null,[[\\\"content\\\",\\\"prompt\\\",\\\"optionLabelPath\\\",\\\"value\\\"],[[23,[\\\"immunizationRegistries\\\"]],\\\"Select a registry\\\",\\\"displayName\\\",[23,[\\\"selectedImmunizationRegistry\\\"]]]]],false],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"selectedImmunizationRegistry\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"download-immunization-registry-spacer\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[9],[0,\\\"Registry provider / practice ID (optional)\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[9],[1,[27,\\\"d-text-field\\\",null,[[\\\"maxlength\\\",\\\"value\\\"],[\\\"100\\\",[23,[\\\"selectedImmunizationRegistry\\\",\\\"registryProvider\\\"]]]]],false],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"footer\\\"]]],[[\\\"buttonRightPrimaryText\\\",\\\"buttonRightPrimaryAction\\\",\\\"buttonLeftText\\\",\\\"buttonLeftAction\\\"],[\\\"Download\\\",[27,\\\"action\\\",[[22,0,[]],\\\"doDownloadImmunizationRecord\\\"],null],\\\"Cancel\\\",[27,\\\"action\\\",[[22,0,[]],\\\"cancelDownloadImmunizationRecord\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/patient/-download-immunization-record.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/patient/-search-result-header\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"b5PvJ2oQ\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"slc-header clearfix\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"slc-header-inner row\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[0,\\\"PATIENT/ID\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[0,\\\"DOB/SSN\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[0,\\\"PHONE/CITY\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3  text-right\\\"],[9],[0,\\\"LAST APPOINTMENT\\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/patient/-search-result-header.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/patient/-search-result\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"9FVaqJMB\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"id\\\",\\\"patient-search-result\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"detail-inner\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"slc-row\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"selectPatient\\\",[23,[\\\"searchResult\\\"]]]],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"slc-row-icon slc-row-icon-override\\\"],[9],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[11,\\\"data-element\\\",\\\"patient--search-result-row\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"name-of-patient\\\"],[9],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"header12\\\"],[11,\\\"data-element\\\",\\\"full-name\\\"],[9],[1,[23,[\\\"searchResult\\\",\\\"fullName\\\"]],false],[10],[10],[2,\\\"\\\\n                 \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"header7\\\"],[9],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"p-666\\\"],[11,\\\"data-element\\\",\\\"patient-record-number\\\"],[9],[1,[23,[\\\"searchResult\\\",\\\"patientRecordNumber\\\"]],false],[10],[10],[0,\\\"\\\\n                \\\"],[10],[2,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-3\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"header7\\\"],[9],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"birth-date\\\"],[9],[1,[27,\\\"format-date-time-utc\\\",[[23,[\\\"searchResult\\\",\\\"birthDate\\\"]]],[[\\\"format\\\"],[\\\"MMM DD YYYY\\\"]]],false],[10],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"header7\\\"],[9],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"social-sec-number\\\"],[9],[1,[23,[\\\"searchResult\\\",\\\"socialSecurityNumber\\\"]],false],[10],[10],[0,\\\"\\\\n                \\\"],[10],[2,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-4\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"header7\\\"],[9],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"home-phone-number\\\"],[9],[1,[23,[\\\"searchResult\\\",\\\"homePhoneFormatted\\\"]],false],[10],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"header7\\\"],[9],[7,\\\"p\\\"],[11,\\\"data-element\\\",\\\"city-and-state\\\"],[9],[1,[23,[\\\"searchResult\\\",\\\"city\\\"]],false],[4,\\\"if\\\",[[23,[\\\"searchResult\\\",\\\"city\\\"]]],null,{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"searchResult\\\",\\\"state\\\"]]],null,{\\\"statements\\\":[[0,\\\", \\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[1,[23,[\\\"searchResult\\\",\\\"state\\\"]],false],[10],[10],[0,\\\"\\\\n                \\\"],[10],[2,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-2\\\"],[9],[0,\\\"\\\\n                    \\\"],[1,[27,\\\"format-date-time-utc\\\",[[23,[\\\"searchResult\\\",\\\"mostRecentVisitDate\\\"]]],[[\\\"format\\\"],[\\\"MMM DD, YYYY\\\"]]],false],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/patient/-search-result.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/patient/familyhistory\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"rnkM+DYL\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"view-spinner\\\",null,[[\\\"class\\\",\\\"isLoading\\\"],[\\\"flex-column type-v2\\\",[23,[\\\"isLoading\\\"]]]],{\\\"statements\\\":[[4,\\\"composable-header/tool-bar\\\",null,null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"button\\\"],[12,\\\"class\\\",[28,[\\\"btn--primary \\\",[27,\\\"unless\\\",[[23,[\\\"isEntitledAndAllowedToEditFHH\\\"]],\\\"invisible\\\"],null]]]],[11,\\\"data-element\\\",\\\"record-new-relative\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"addRelative\\\"],null]],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"Record new relative\\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"flex-grow flex-row bg-color-secondary family-history__container\\\"],[9],[0,\\\"\\\\n        \\\"],[1,[27,\\\"family-history-list\\\",null,[[\\\"disabled\\\",\\\"isLoading\\\",\\\"patientPracticeGuid\\\",\\\"relatives\\\",\\\"unknownCondition\\\",\\\"addDiagnosis\\\",\\\"editDiagnosis\\\",\\\"editRelative\\\"],[[23,[\\\"isNotAllowedToEditFHH\\\"]],[23,[\\\"isLoading\\\"]],[23,[\\\"patientPracticeGuid\\\"]],[23,[\\\"relatives\\\"]],[23,[\\\"condition\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"addDiagnosis\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"editDiagnosis\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"editRelative\\\"],null]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"selectedRelative\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"family-history-relative-detail\\\",null,[[\\\"disabled\\\",\\\"relationshipTypes\\\",\\\"relative\\\",\\\"close\\\",\\\"reload\\\",\\\"removeRelative\\\"],[[23,[\\\"isNotAllowedToEditFHH\\\"]],[23,[\\\"sortedRelationshipTypes\\\"]],[23,[\\\"selectedRelative\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"closeRelativeDetails\\\"],null],[27,\\\"perform\\\",[[23,[\\\"reload\\\"]]],null],[27,\\\"action\\\",[[22,0,[]],\\\"removeRelative\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"selectedObservation\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"family-history-diagnosis-detail\\\",null,[[\\\"disabled\\\",\\\"observation\\\",\\\"relatives\\\",\\\"close\\\",\\\"reload\\\",\\\"removeObservation\\\"],[[23,[\\\"isNotAllowedToEditFHH\\\"]],[23,[\\\"selectedObservation\\\"]],[23,[\\\"relatives\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"closeObservationDetails\\\"],null],[27,\\\"perform\\\",[[23,[\\\"reload\\\"]]],null],[27,\\\"action\\\",[[22,0,[]],\\\"removeObservation\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"print-preview-content\\\",null,[[\\\"isVisible\\\",\\\"printTitle\\\"],[[23,[\\\"isPrintVisible\\\"]],[23,[\\\"printTitle\\\"]]]],{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"print-family-health-history\\\",null,[[\\\"class\\\",\\\"patient\\\",\\\"relatives\\\"],[\\\"chart-print-container\\\",[23,[\\\"patient\\\",\\\"patient\\\"]],[23,[\\\"relatives\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/patient/familyhistory.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/patient/growth/charts\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"pzucYPw/\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"view-spinner\\\",null,[[\\\"isLoading\\\",\\\"contentElement\\\",\\\"class\\\"],[[23,[\\\"isLoading\\\"]],\\\".vitals-tab\\\",\\\"vitals-tab flex-grow\\\"]],{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"control-bar\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"a\\\"],[11,\\\"class\\\",\\\"btn heading-action pull-left\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"toggleIsMetric\\\"]],[9],[0,\\\"\\\\n            Show \\\"],[4,\\\"if\\\",[[23,[\\\"isMetric\\\"]]],null,{\\\"statements\\\":[[0,\\\"US customary\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"metric\\\"]],\\\"parameters\\\":[]}],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n        \\\"],[1,[27,\\\"new-encounter-button\\\",null,[[\\\"navigateToEncounter\\\",\\\"newEncounter\\\",\\\"patientPracticeGuid\\\"],[\\\"navigateToEncounter\\\",\\\"newEncounter\\\",[23,[\\\"patientController\\\",\\\"patientPracticeGuid\\\"]]]]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"vitals-tab-content\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[23,[\\\"isLoading\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"growth-charts\\\",null,[[\\\"isMetric\\\",\\\"vitalHistory\\\",\\\"patient\\\",\\\"printAudit\\\"],[[23,[\\\"isMetric\\\"]],[23,[\\\"vitalHistory\\\"]],[23,[\\\"patientController\\\"]],\\\"printAudit\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/patient/growth/charts.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/patient/immunizations\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"dbK8ZZHk\", \"block\": \"{\\\"symbols\\\":[\\\"panels\\\",\\\"errors\\\",\\\"date\\\",\\\"split-button\\\"],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"patient-immunizations immunizations-bidirectional\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"flex-column\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"actions-bar flex-no-shrink\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-left\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs box-fixed\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"split-button\\\",null,null,{\\\"statements\\\":[[0,\\\"                            \\\"],[1,[27,\\\"component\\\",[[22,4,[\\\"option\\\"]]],[[\\\"text\\\",\\\"onClick\\\",\\\"isEnabled\\\",\\\"isPrimary\\\"],[\\\"Print EHR immunizations\\\",[27,\\\"action\\\",[[22,0,[]],\\\"print\\\"],null],true,true]]],false],[0,\\\"\\\\n                            \\\"],[1,[27,\\\"component\\\",[[22,4,[\\\"option\\\"]]],[[\\\"text\\\",\\\"onClick\\\",\\\"isEnabled\\\"],[\\\"Print with comments\\\",[27,\\\"action\\\",[[22,0,[]],\\\"print\\\",true],null],true]]],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isPrintRegistryRecordEnabled\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[1,[27,\\\"component\\\",[[22,4,[\\\"option\\\"]]],[[\\\"text\\\",\\\"onClick\\\",\\\"isEnabled\\\"],[\\\"Print registry record\\\",[27,\\\"action\\\",[[22,0,[]],\\\"printRegistryRecord\\\"],null],[23,[\\\"isConnectedToRegistry\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[4]},null],[0,\\\"                    \\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs box-fixed\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--default\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"downloadImmunizationRecord\\\"],null]],[11,\\\"data-element\\\",\\\"btn-download\\\"],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"\\\\n                            Download\\\\n                        \\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isConnectedToRegistry\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs box-fixed box-margin-Txs\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"lastTransmissionDate\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"small\\\"],[9],[0,\\\"Last transmitted on \\\"],[1,[27,\\\"format-date-time-local\\\",[[23,[\\\"lastTransmissionDate\\\"]],\\\"MM/DD/YYYY\\\"],null],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isAllowedToEditImmunizations\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs box-fixed\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"popover-info\\\",null,[[\\\"tagName\\\",\\\"triggerOn\\\",\\\"popoverContent\\\",\\\"containerSelector\\\"],[\\\"div\\\",\\\"hover\\\",[23,[\\\"transmitPopOverText\\\"]],\\\".pf.outlet\\\"]],{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"div\\\"],[9],[0,\\\"\\\\n                                        \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--default\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"transmitToStateRegistry\\\"],null]],[11,\\\"data-element\\\",\\\"btn-transmit\\\"],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"\\\\n                                            Transmit to registry\\\\n                                        \\\"],[10],[0,\\\"\\\\n                                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[4,\\\"if\\\",[[23,[\\\"isConnectedToRegistry\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs box-fixed\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--default\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"searchInRegistry\\\"],null]],[11,\\\"data-element\\\",\\\"btn-search-registry\\\"],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"\\\\n                                Search in registry\\\\n                            \\\"],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isAllowedToEditImmunizations\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs box-fixed\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--default\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"connectToRegistry\\\"],null]],[11,\\\"data-element\\\",\\\"btn-connect-registry\\\"],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"\\\\n                                Connect to registry\\\\n                            \\\"],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n                    \\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}],[4,\\\"if\\\",[[23,[\\\"isAllowedToEditImmunizations\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-xs box-fixed\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--default\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"addVaccination\\\"],null]],[11,\\\"data-element\\\",\\\"btn-add-vaccine\\\"],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"\\\\n                                Add vaccine\\\\n                            \\\"],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"split-panel\\\",null,null,{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"panel\\\"]]],[[\\\"panelContentClass\\\"],[\\\"flex-column scrollable-panel\\\"]],{\\\"statements\\\":[[4,\\\"each\\\",[[27,\\\"-each-in\\\",[[23,[\\\"transmissionErrors\\\"]]],null]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[27,\\\"component\\\",[\\\"immunizations/transmission-errors\\\"],[[\\\"date\\\",\\\"errors\\\"],[[22,3,[]],[22,2,[]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2,3]},null],[0,\\\"                \\\"],[1,[27,\\\"cds-alerts\\\",null,[[\\\"cdsAlerts\\\",\\\"refresh\\\",\\\"bubbleAction\\\",\\\"classNames\\\"],[[23,[\\\"cdsAlerts\\\"]],\\\"refreshCdsAlerts\\\",\\\"cdsAction\\\",\\\"flex-no-shrink\\\"]]],false],[0,\\\"\\\\n                \\\"],[7,\\\"h3\\\"],[11,\\\"class\\\",\\\"box-padding-LRlg-v2 box-margin-TBmd-v2\\\"],[9],[0,\\\"Patient Immunization Record\\\"],[10],[0,\\\"\\\\n                \\\"],[1,[27,\\\"component\\\",[\\\"immunizations/add-immunization\\\"],[[\\\"close\\\",\\\"delete\\\",\\\"facilities\\\",\\\"isAddingImmunization\\\",\\\"isAllowedToEditImmunizations\\\",\\\"isElectronicTransmission\\\",\\\"isSearching\\\",\\\"isVisible\\\",\\\"patient\\\",\\\"preloadKeyword\\\",\\\"providers\\\",\\\"refresh\\\",\\\"updatePatientAdContextCvxCodes\\\",\\\"vaccination\\\"],[[27,\\\"action\\\",[[22,0,[]],\\\"closeDetails\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"deleteVaccination\\\"],null],[23,[\\\"facilities\\\"]],[23,[\\\"isAddingImmunization\\\"]],[23,[\\\"isAllowedToEditImmunizations\\\"]],[23,[\\\"isElectronicTransmission\\\"]],[23,[\\\"isRegistrySearchVisible\\\"]],[23,[\\\"isDetailsVisible\\\"]],[23,[\\\"patientController\\\",\\\"patient\\\"]],[23,[\\\"preloadKeyword\\\"]],[23,[\\\"practiceProviders\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"refreshImmunizations\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"updatePatientAdContextCvxCodes\\\"],null],[23,[\\\"selectedVaccination\\\"]]]]],false],[0,\\\"\\\\n                \\\"],[1,[27,\\\"component\\\",[\\\"immunizations/list-immunizations\\\"],[[\\\"immunizationList\\\",\\\"showSpinner\\\",\\\"hasNoImmunizations\\\",\\\"patient\\\",\\\"providers\\\",\\\"viewDetails\\\"],[[23,[\\\"immunizationList\\\"]],[23,[\\\"immunizationListLoading\\\"]],[23,[\\\"hasNoImmunizations\\\"]],[23,[\\\"patientController\\\",\\\"patient\\\"]],[23,[\\\"practiceProviders\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"viewImmunizationDetails\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"component\\\",[[22,1,[\\\"panel\\\"]]],[[\\\"canClose\\\",\\\"isVisible\\\"],[true,[23,[\\\"isRegistrySearchVisible\\\"]]]],{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"component\\\",[\\\"immunizations/registry-search\\\"],[[\\\"patient\\\",\\\"registryConnections\\\",\\\"registries\\\",\\\"printRegistryRecord\\\",\\\"toggleIsRegistryPrintingEnabled\\\"],[[23,[\\\"patientController\\\",\\\"patient\\\"]],[23,[\\\"registryConnections\\\"]],[23,[\\\"immunizationRegistries\\\"]],[23,[\\\"printRegistryRecord\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"toggleIsRegistryPrintingEnabled\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null],[0,\\\"    \\\"],[10],[0,\\\"\\\\n    \\\"],[1,[27,\\\"component\\\",[\\\"immunizations/print-immunizations\\\"],[[\\\"content\\\",\\\"isVisible\\\",\\\"patient\\\",\\\"isAllowedToEditImmunizations\\\",\\\"showComments\\\"],[[23,[\\\"immunizationList\\\"]],[23,[\\\"isPrintPreviewVisible\\\"]],[23,[\\\"patientController\\\",\\\"patient\\\"]],[23,[\\\"isAllowedToEditImmunizations\\\"]],[23,[\\\"printWithComments\\\"]]]]],false],[0,\\\"\\\\n    \\\"],[1,[27,\\\"component\\\",[\\\"immunizations/download-immunizations\\\"],[[\\\"content\\\",\\\"isDownloading\\\",\\\"selectedRegistry\\\",\\\"patient\\\",\\\"registries\\\"],[[23,[\\\"immunizationList\\\"]],[23,[\\\"isDownloadVisible\\\"]],[23,[\\\"selectedImmunizationRegistry\\\"]],[23,[\\\"patientController\\\",\\\"patient\\\"]],[23,[\\\"immunizationRegistries\\\"]]]]],false],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/patient/immunizations.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/patient/loading\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"qRYD6qNH\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"view-spinner\\\",null,[[\\\"isLoading\\\",\\\"class\\\"],[true,\\\"loading-container\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/patient/loading.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/patient/summary\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"OwuGMPzB\", \"block\": \"{\\\"symbols\\\":[\\\"cards\\\",\\\"index\\\",\\\"card\\\",\\\"options\\\"],\\\"statements\\\":[[1,[27,\\\"data-tunnel\\\",null,[[\\\"name\\\",\\\"onDataReceived\\\"],[\\\"patient-summary-mixpanel-event\\\",[27,\\\"action\\\",[[22,0,[]],\\\"sendPatientSummaryMixpanelEvent\\\"],null]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"view-spinner\\\",null,[[\\\"class\\\",\\\"isLoading\\\"],[\\\"patient-summary flex-column flex-grow\\\",[23,[\\\"isLoading\\\"]]]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[21,\\\"walk-me\\\"],false],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isDisplaySettingsVisible\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[1,[27,\\\"patient-summary-display-settings\\\",null,[[\\\"class\\\",\\\"cards\\\",\\\"isUnsavedChangesModalVisible\\\",\\\"cancel\\\",\\\"cancelUnsavedChangesModal\\\",\\\"discardChangesAndExit\\\",\\\"save\\\"],[\\\"fill-space--absolute flex-column\\\",[23,[\\\"cards\\\"]],[23,[\\\"isUnsavedDisplaySettingsModalVisible\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"cancelDisplaySettings\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"cancelUnsavedDisplaySettingChangesModal\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"discardDisplaySettingChangesAndExit\\\"],null],[27,\\\"perform\\\",[[23,[\\\"saveDisplaySettings\\\"]]],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"composable-header/tool-bar\\\",null,null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-flex-group-v2\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isAllowedToEditSettings\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-md box-fixed box-padding-Bn\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"a\\\"],[11,\\\"role\\\",\\\"link\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"toggleDisplaySettings\\\"],null]],[11,\\\"data-element\\\",\\\"link-display-settings\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-settings icon--md\\\"],[9],[10],[0,\\\"\\\\n                            Display settings\\\\n                        \\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm col-xs-2 box-fixed box-padding-TBn\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"composable-select\\\",null,[[\\\"content\\\",\\\"onSelect\\\",\\\"data-element\\\",\\\"optionLabelPath\\\"],[[23,[\\\"goToItems\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"selectGoToItem\\\"],null],\\\"dropdown-go-to\\\",\\\"label\\\"]],{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"component\\\",[[22,4,[\\\"dropdown\\\"]]],[[\\\"prompt\\\"],[\\\"Go to...\\\"]]],false],[0,\\\"\\\\n                        \\\"],[1,[22,4,[\\\"dropdown-menu\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[4]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm box-padding-TBn text-right\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--default\\\"],[11,\\\"data-element\\\",\\\"btn-print-chart-control-bar\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"print\\\"],null]],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"Print chart\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"  \\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm box-fixed box-padding-TBn\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isAllowedToEditSummary\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"new-encounter-button\\\",null,[[\\\"navigateToEncounter\\\",\\\"newEncounter\\\",\\\"patientPracticeGuid\\\",\\\"requiresValidation\\\",\\\"shouldCreateNewEncounter\\\",\\\"validateNewEncounter\\\"],[\\\"navigateToEncounter\\\",\\\"newEncounter\\\",[23,[\\\"patientGuid\\\"]],true,[23,[\\\"shouldCreateNewEncounter\\\"]],\\\"validateNewEncounter\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"clinical-summary flex-grow bg-color-secondary inline-flex-group-v2 box-padding-Alg-v2\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[27,\\\"-each-in\\\",[[23,[\\\"cardColumns\\\"]]],null]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[12,\\\"class\\\",[28,[\\\"item gutter-sm box-fixed \\\",[21,\\\"cardColumnSizeClass\\\"],\\\" box-padding-TBn\\\"]]],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[22,1,[]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[1,[27,\\\"component\\\",[[22,3,[\\\"componentName\\\"]]],[[\\\"card\\\",\\\"isAllowedToEditSummary\\\",\\\"patient\\\",\\\"selectedItem\\\",\\\"printAudit\\\",\\\"sendControllerAction\\\",\\\"setControllerProperties\\\"],[[22,3,[]],[23,[\\\"isAllowedToEditSummary\\\"]],[23,[\\\"patient\\\"]],[23,[\\\"selectedItem\\\"]],\\\"printAudit\\\",[27,\\\"action\\\",[[22,0,[]],\\\"sendSummaryAction\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"updateProperties\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[3]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1,2]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n        \\\"],[1,[21,\\\"outlet\\\"],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/patient/summary.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/pmh\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"0Ir0v94D\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"pmh-detail\\\",null,[[\\\"autoFocusSection\\\",\\\"close\\\",\\\"closing\\\",\\\"isDirty\\\",\\\"patient\\\",\\\"pmhAction\\\"],[[23,[\\\"section\\\"]],\\\"close\\\",[23,[\\\"closing\\\"]],[23,[\\\"isDirty\\\"]],[23,[\\\"patientController\\\"]],\\\"pmhAction\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/pmh.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/practice-dashboard/clinical-trials-login-redirect\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"DKLE3Nk8\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\"],\\\"statements\\\":[[4,\\\"content-modal\\\",null,[[\\\"class\\\",\\\"modalStyle\\\",\\\"isVisible\\\",\\\"customClose\\\"],[\\\"clinical-trials-modal\\\",7,true,[27,\\\"action\\\",[[22,0,[]],\\\"navigateBack\\\"],null]]],{\\\"statements\\\":[[0,\\\"    \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"header\\\"]]],[[\\\"title\\\",\\\"notifyCloseByX\\\"],[\\\"You are leaving Practice Fusion\\\",[27,\\\"action\\\",[[22,0,[]],\\\"navigateBack\\\"],null]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,1,[\\\"body\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[7,\\\"p\\\"],[9],[0,\\\"You are leaving the Practice Fusion website and will be directed to the website of an independent third party. Practice Fusion is not responsible for that website, for the services provided by that independent third party, or for your use of such services. Practice Fusion has not reviewed the website or otherwise approved its content or information. Please review the website’s terms and conditions if you have any questions or concerns.\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[0,\\\"    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-modal-secondary\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"navigateBack\\\"]],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-modal-primary\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"loginWithEPatientFinder\\\"]],[9],[0,\\\"Visit External Site\\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[1,[22,1,[\\\"footer\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/practice-dashboard/clinical-trials-login-redirect.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/practice-dashboard/clinical-trials\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"AnOwsUwx\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\",\\\"section\\\"],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"practice practice-dashboard clinical-trials-dashboard\\\"],[9],[0,\\\"\\\\n\\\"],[0,\\\"\\\\n\\\"],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"clinical-trials-container\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"h2\\\"],[11,\\\"class\\\",\\\"header2\\\"],[9],[0,\\\"Identify possible treatment options for your patients\\\"],[10],[0,\\\"\\\\n\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"lead-333\\\"],[9],[0,\\\"\\\\n            Practice Fusion has partnered with ePatientFinder to help you identify clinical trials in your area that your patients may qualify for.\\\\n        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"h4\\\"],[11,\\\"class\\\",\\\"header4semibold\\\"],[9],[0,\\\"How does ePatientFinder work?\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-4\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"img\\\"],[11,\\\"src\\\",\\\"assets/images/epf_panel1_lg.png\\\"],[11,\\\"class\\\",\\\"img-responsive\\\"],[9],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-4\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"img\\\"],[11,\\\"src\\\",\\\"assets/images/epf_panel2_lg.png\\\"],[11,\\\"class\\\",\\\"img-responsive\\\"],[9],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-xs-4\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"img\\\"],[11,\\\"src\\\",\\\"assets/images/epf_panel3_lg.png\\\"],[11,\\\"class\\\",\\\"img-responsive\\\"],[9],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"lead-333 content-container\\\"],[9],[0,\\\"\\\\n            Once you have signed up for an account with ePatientFinder and opted into a clinical trial in your area, ePatientFinder will alert you if any of your patients match those trials, and you can schedule pre-trial evaluations, and refer patients to those trials.\\\\n        \\\"],[10],[0,\\\"\\\\n\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"lead-333 content-container\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"b\\\"],[9],[0,\\\"Notice:\\\"],[10],[0,\\\" Once you opt-in to any trials in your area ePatientFinder will, if you have authorized them to do so, retrieve patient data for any patient seen by you in the last 24 months. If any of your patients match (or may match) a trial, they will be flagged by ePatientFinder as a possible match for you to review.\\\\n        \\\"],[10],[0,\\\"\\\\n\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"lead-333 content-container\\\"],[9],[0,\\\"\\\\n            Within 24 hours of a possible match, ePatientFinder will contact the patient on your behalf to gather any additional information about the patient to determine if they are a candidate for the trial. You must choose to opt the patient out of such contact within the 24 hour window if you do not want ePatientFinder to contact them.\\\\n        \\\"],[10],[0,\\\"\\\\n\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"lead-333 content-container\\\"],[9],[0,\\\"\\\\n\\\"],[0,\\\"            \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[11,\\\"class\\\",\\\"btn btn-primary\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"confirmSignup\\\"]],[9],[0,\\\"Sign up\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"content-modal\\\",null,[[\\\"class\\\",\\\"modalStyle\\\",\\\"isVisible\\\"],[\\\"clinical-trials-modal\\\",7,[23,[\\\"isRegistrationModalVisible\\\"]]]],{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"component\\\",[[22,2,[\\\"header\\\"]]],[[\\\"title\\\",\\\"isCloseByXorOutsideVisible\\\"],[\\\"You are leaving Practice Fusion\\\",true]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,2,[\\\"body\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"p\\\"],[9],[0,\\\"You are leaving the Practice Fusion website and will be directed to the website of an independent third party. Practice Fusion is not responsible for that website, for the services provided by that independent third party, or for your use of such services. Practice Fusion has not reviewed the website or otherwise approved its content or information. Please review the website’s terms and conditions if you have any questions or concerns.\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-modal-secondary\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"toggleProperty\\\",\\\"isRegistrationModalVisible\\\"]],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-modal-primary\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"openRegisterUrl\\\"]],[9],[0,\\\"Continue\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[1,[22,2,[\\\"footer\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"\\\\n\\\"],[0,\\\"            \\\"],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[11,\\\"class\\\",\\\"lead\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"confirmLearnMore\\\"]],[9],[0,\\\"Learn more\\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"content-modal\\\",null,[[\\\"class\\\",\\\"modalStyle\\\",\\\"isVisible\\\"],[\\\"clinical-trials-modal\\\",7,[23,[\\\"isLearnMoreModalVisible\\\"]]]],{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"component\\\",[[22,1,[\\\"header\\\"]]],[[\\\"title\\\",\\\"isCloseByXorOutsideVisible\\\"],[\\\"You are leaving Practice Fusion\\\",true]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,1,[\\\"body\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"p\\\"],[9],[0,\\\"You are leaving the Practice Fusion website and will be directed to the website of an independent third party. Practice Fusion is not responsible for that website, for the services provided by that independent third party, or for your use of such services. Practice Fusion has not reviewed the website or otherwise approved its content or information. Please review the website’s terms and conditions if you have any questions or concerns.\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-modal-secondary\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"toggleProperty\\\",\\\"isLearnMoreModalVisible\\\"]],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-modal-primary\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"openLearnMoreUrl\\\"]],[9],[0,\\\"Continue\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[1,[22,1,[\\\"footer\\\"]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/practice-dashboard/clinical-trials.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/risk-score\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"cJNcIuZK\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"risk-score-detail\\\",null,[[\\\"cancel\\\",\\\"delete\\\",\\\"save\\\",\\\"patientRiskScore\\\",\\\"persistedRiskScore\\\",\\\"socialHistoryOptions\\\"],[\\\"cancel\\\",\\\"delete\\\",\\\"save\\\",[23,[\\\"model\\\"]],[23,[\\\"persistedRiskScore\\\"]],[23,[\\\"socialHistoryOptions\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/risk-score.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/settings/favorite-diagnoses\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"fbgrHytL\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\",\\\"content\\\",\\\"group\\\",\\\"item\\\",\\\"diagnosisCode\\\"],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"favorite-diagnoses-settings-wrapper\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"name-container\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"h5\\\"],[11,\\\"class\\\",\\\"header5 name-ribbon\\\"],[9],[0,\\\"Diagnoses list\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"header-description\\\"],[9],[0,\\\"Add and edit your frequently used Diagnoses\\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"favorite-diagnoses-settings\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"diagnosis-list-settings\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"option-ribbon type-v2\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right box box-margin-Rlg-v2\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-warning\\\"],[11,\\\"data-element\\\",\\\"add-favorite-diagnosis-button\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"addNewDiagnosisInline\\\"],null]],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"Add diagnosis\\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"favorite-dx-list\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"my-list my-list-icd10\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"header\\\"],[11,\\\"class\\\",\\\"clearfix\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"gripper-wrapper\\\"],[9],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"term-column\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isManuallySorted\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"pointer diagnoses-column-header\\\"],[11,\\\"data-element\\\",\\\"dx-list-sort-toggle\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"sortAlphabetically\\\"]],[9],[0,\\\"Term\\\"],[10],[0,\\\" \\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"diagnoses-column-header\\\"],[9],[0,\\\"Term\\\"],[10],[0,\\\" \\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"sortAscending\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"icon-move-up\\\"],[11,\\\"data-element\\\",\\\"dx-list-sorted-ascending\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"sortDescending\\\"]],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                    \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"icon-move-up inverted\\\"],[11,\\\"data-element\\\",\\\"dx-list-sorted-descending\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"sortAscending\\\"]],[9],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}],[0,\\\"                        \\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"diagnoses-column-header type-column\\\"],[9],[0,\\\"Type\\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"diagnoses-column-header code-column\\\"],[9],[0,\\\"Code\\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"diagnoses-column-header description-column\\\"],[9],[0,\\\"Description\\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"diagnoses-column-header expand-column\\\"],[9],[7,\\\"a\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"toggleExpandAll\\\",[23,[\\\"anyItemsCollapsed\\\"]]],null]],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"anyItemsCollapsed\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                    Expand all\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                    Collapse all\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                            \\\"],[10],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"diagnoses-column-header blank-column\\\"],[9],[0,\\\" \\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"section\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"error\\\"]]],null,{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"error-set\\\"],[9],[0,\\\"There was an error downloading your favorites. \\\"],[7,\\\"a\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"retryAfterError\\\"]],[9],[0,\\\"Retry.\\\"],[10],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"model\\\",\\\"length\\\"]]],null,{\\\"statements\\\":[[4,\\\"sortable-group\\\",null,[[\\\"tagName\\\",\\\"class\\\",\\\"onChange\\\"],[\\\"ul\\\",\\\"sortable-dx-list\\\",\\\"reorderItems\\\"]],{\\\"statements\\\":[[4,\\\"each\\\",[[23,[\\\"sortedModel\\\"]]],null,{\\\"statements\\\":[[4,\\\"sortable-item\\\",null,[[\\\"tagName\\\",\\\"handle\\\",\\\"class\\\",\\\"model\\\",\\\"group\\\"],[\\\"li\\\",\\\".gripper-wrapper\\\",\\\"diagnosis-list-item diagnosis-list-item-v2 clearfix\\\",[22,4,[]],[22,3,[]]]],{\\\"statements\\\":[[0,\\\"                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"gripper-wrapper\\\"],[9],[7,\\\"icon\\\"],[11,\\\"class\\\",\\\"icon-row-gripper\\\"],[9],[10],[10],[0,\\\"\\\\n                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"term-column\\\"],[11,\\\"data-element\\\",\\\"term-string\\\"],[9],[1,[22,4,[\\\"name\\\"]],false],[10],[0,\\\"\\\\n                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"diagnosis-codes-group\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,4,[\\\"isExpanded\\\"]]],null,{\\\"statements\\\":[[4,\\\"each\\\",[[22,4,[\\\"sortedICD10DiagnosisCodes\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"diagnosis-codes-row\\\"],[9],[0,\\\"\\\\n                                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"type-column\\\"],[11,\\\"data-element\\\",\\\"code-system-string\\\"],[9],[1,[22,5,[\\\"codeSystem\\\"]],false],[10],[0,\\\"\\\\n                                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"code-column\\\"],[11,\\\"data-element\\\",\\\"code-string\\\"],[9],[1,[22,5,[\\\"code\\\"]],false],[10],[0,\\\"\\\\n                                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"description-column\\\"],[11,\\\"data-element\\\",\\\"description-string\\\"],[9],[1,[22,5,[\\\"description\\\"]],false],[10],[0,\\\"\\\\n                                                    \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[5]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"diagnosis-codes-row\\\"],[9],[0,\\\"\\\\n                                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"type-column\\\"],[11,\\\"data-element\\\",\\\"code-system-string\\\"],[9],[1,[22,4,[\\\"preferredIcd10Code\\\",\\\"codeSystem\\\"]],false],[10],[0,\\\"\\\\n                                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"code-column\\\"],[11,\\\"data-element\\\",\\\"code-string\\\"],[9],[1,[22,4,[\\\"preferredIcd10Code\\\",\\\"code\\\"]],false],[10],[0,\\\"\\\\n                                                    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"description-column\\\"],[11,\\\"data-element\\\",\\\"description-string\\\"],[9],[1,[22,4,[\\\"preferredIcd10Code\\\",\\\"description\\\"]],false],[10],[0,\\\"\\\\n                                                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                                        \\\"],[10],[0,\\\"\\\\n                                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"expand-column\\\"],[11,\\\"data-element\\\",\\\"expand-row-control\\\"],[9],[0,\\\"\\\\n                                            \\\"],[7,\\\"a\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"toggleExpand\\\",[22,4,[]]],null]],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,4,[\\\"isExpanded\\\"]]],null,{\\\"statements\\\":[[0,\\\"                                                    less\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                                                    more\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                                            \\\"],[10],[0,\\\"\\\\n                                        \\\"],[10],[0,\\\"\\\\n                                        \\\"],[7,\\\"div\\\"],[9],[7,\\\"icon\\\"],[11,\\\"class\\\",\\\"close-box-small box-margin-Asm-v2 box-padding-Rlg-v2\\\"],[11,\\\"data-element\\\",\\\"remove-dx-from-list\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"removeDiagnosis\\\",[22,4,[]]]],[9],[10],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[4]},null]],\\\"parameters\\\":[3]},null],[0,\\\"                        \\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]}],[0,\\\"                    \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showInlineAddDiagnosis\\\"]]],null,{\\\"statements\\\":[[0,\\\"                        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"inline-add-diagnosis\\\"],[11,\\\"data-element\\\",\\\"dx-add-inline\\\"],[9],[0,\\\"\\\\n                            \\\"],[7,\\\"i\\\"],[11,\\\"class\\\",\\\"icon-add\\\"],[9],[10],[0,\\\"\\\\n                            \\\"],[1,[27,\\\"diagnosis-typeahead-icd10\\\",null,[[\\\"canAddCustom\\\",\\\"canShowTabs\\\",\\\"query\\\",\\\"showCodes\\\",\\\"useTether\\\",\\\"diagnosisSelected\\\",\\\"data-element\\\",\\\"hintText\\\",\\\"prompt\\\",\\\"searchDataElement\\\"],[false,false,[23,[\\\"addQuery\\\"]],false,true,\\\"addFavoriteDiagnosisInline\\\",\\\"diagnosis-result-search\\\",\\\"Type at least 2 characters to start seeing results\\\",\\\"Search for diagnosis\\\",\\\"diagnosis-search-input\\\"]]],false],[0,\\\"\\\\n                        \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"                \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"isRefiningDiagnosis\\\"]]],null,{\\\"statements\\\":[[4,\\\"favorite-diagnosis-detail\\\",null,[[\\\"bigHeaderText\\\",\\\"close\\\"],[\\\"Refine diagnosis\\\",\\\"cancelAddInline\\\"]],{\\\"statements\\\":[[4,\\\"detail-pane-body\\\",null,[[\\\"sectionContext\\\"],[[22,1,[]]]],{\\\"statements\\\":[[0,\\\"                            \\\"],[1,[27,\\\"diagnosis-refine\\\",null,[[\\\"diagnosis\\\",\\\"diagnoses\\\",\\\"isAddingNewDiagnosis\\\",\\\"searchByCodeSystem\\\",\\\"showFacets\\\",\\\"hideAllPopups\\\",\\\"facetOffset\\\",\\\"diagnosisRefined\\\"],[[23,[\\\"diagnosisToRefine\\\"]],[23,[\\\"relatedDiagnoses\\\"]],true,\\\"icd10Code\\\",[23,[\\\"showRefineFacets\\\"]],false,\\\"182px 216px\\\",\\\"addFavoriteDiagnosisInline\\\"]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[4,\\\"detail-pane-footer\\\",null,[[\\\"sectionContext\\\"],[[22,1,[]]]],{\\\"statements\\\":[[0,\\\"                            \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn\\\"],[11,\\\"data-element\\\",\\\"cancel-refine-favorite-dx\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"cancelAddInline\\\"]],[9],[0,\\\"Cancel\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/settings/favorite-diagnoses.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/sia\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"uxR3J3iU\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\",\\\"right-module\\\"],\\\"statements\\\":[[4,\\\"detail-pane-v2\\\",null,[[\\\"class\\\"],[\\\"side-fixed col-xs-5 type-v2\\\"]],{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"right-module\\\"]]],[[\\\"class\\\"],[\\\"fill-space flex-column\\\"]],{\\\"statements\\\":[[0,\\\"        \\\"],[1,[27,\\\"component\\\",[[22,2,[\\\"header\\\"]]],[[\\\"bigHeaderText\\\",\\\"smallHeaderText\\\",\\\"closeDetailPane\\\"],[\\\"Read only\\\",\\\"Screenings/ Interventions/ Assessments\\\",[27,\\\"action\\\",[[22,0,[]],\\\"closeDetailPane\\\"],null]]]],false],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,2,[\\\"body\\\"]]],[[\\\"class\\\"],[\\\"flex-grow box-padding-Alg-v2\\\"]],{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"component\\\",[[23,[\\\"siaComponent\\\"]]],[[\\\"eventType\\\",\\\"isNegated\\\",\\\"permittedStates\\\",\\\"reasonCodes\\\",\\\"responses\\\",\\\"startDateTimeUtc\\\",\\\"endDateTimeUtc\\\",\\\"comments\\\",\\\"selectedStatus\\\",\\\"reasonCode\\\",\\\"resultCode\\\",\\\"transcriptGuid\\\",\\\"encounterAndNoteType\\\",\\\"dateOfService\\\",\\\"openEncounterClicked\\\"],[[23,[\\\"eventType\\\"]],[23,[\\\"isNegated\\\"]],[23,[\\\"permittedStates\\\"]],[23,[\\\"reasonCodes\\\"]],[23,[\\\"responses\\\"]],[23,[\\\"startDateTimeUtc\\\"]],[23,[\\\"endDateTimeUtc\\\"]],[23,[\\\"comments\\\"]],[23,[\\\"selectedStatus\\\"]],[23,[\\\"model\\\",\\\"reasonCode\\\"]],[23,[\\\"model\\\",\\\"resultCode\\\"]],[23,[\\\"transcriptGuid\\\"]],[23,[\\\"encounterAndNoteType\\\"]],[23,[\\\"dateOfService\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"openEncounterClicked\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"component\\\",[[22,2,[\\\"footer\\\"]]],[[\\\"class\\\"],[\\\"box-padding-TBmd-v2 box-padding-LRlg-v2\\\"]],{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"pull-right\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--brand\\\"],[11,\\\"data-element\\\",\\\"close-btn\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"closeDetailPane\\\"],null]],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"Close\\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/sia.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/smoking\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"xkqLmDut\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"smoking-status-detail-v2\\\",null,[[\\\"cancel\\\",\\\"delete\\\",\\\"save\\\",\\\"undo\\\",\\\"smokingStatus\\\",\\\"smokingStatusTypes\\\",\\\"inActiveSmokingStatusType\\\",\\\"selectedValueImage\\\",\\\"isAllowedToEdit\\\",\\\"isNotAllowedToEdit\\\"],[\\\"cancel\\\",\\\"delete\\\",\\\"save\\\",\\\"undo\\\",[23,[\\\"model\\\"]],[23,[\\\"smokingStatusTypes\\\"]],[23,[\\\"inActiveSmokingStatusType\\\"]],[23,[\\\"selectedValueImage\\\"]],[23,[\\\"isAllowedToEdit\\\"]],[23,[\\\"isNotAllowedToEdit\\\"]]]]],false],[0,\\\"\\\\n\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/smoking.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/social-health\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"i3S7Qspd\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\",\\\"right-module\\\"],\\\"statements\\\":[[4,\\\"detail-pane-v2\\\",null,[[\\\"class\\\"],[\\\"side-fixed col-xs-5 type-v2\\\"]],{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"right-module\\\"]]],[[\\\"class\\\"],[\\\"fill-space flex-column\\\"]],{\\\"statements\\\":[[0,\\\"        \\\"],[4,\\\"component\\\",[[22,2,[\\\"header\\\"]]],[[\\\"class\\\",\\\"closeDetailPane\\\"],[\\\"box-padding-Llg-v2\\\",[27,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"],null]]],{\\\"statements\\\":[[1,[21,\\\"headerText\\\"],false]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,2,[\\\"body\\\"]]],[[\\\"class\\\"],[\\\"flex-grow box-padding-An\\\"]],{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"view-spinner\\\",null,[[\\\"isLoading\\\"],[[23,[\\\"isLoading\\\"]]]]],false],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-padding-Alg-v2\\\"],[12,\\\"data-element\\\",[28,[[23,[\\\"model\\\",\\\"socialHealthFieldKey\\\"]],\\\"-detail\\\"]]],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"socialHealthFieldComponent\\\"]]],null,{\\\"statements\\\":[[0,\\\"                    \\\"],[1,[27,\\\"component\\\",[[23,[\\\"socialHealthFieldComponent\\\"]]],[[\\\"content\\\",\\\"demographicOptions\\\",\\\"isNotAllowedToEdit\\\",\\\"undo\\\",\\\"onSelectOption\\\"],[[23,[\\\"socialHealthField\\\"]],[23,[\\\"demographicOptions\\\"]],[23,[\\\"isNotAllowedToEdit\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"undo\\\"],null],[27,\\\"action\\\",[[22,0,[]],\\\"selectOption\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"component\\\",[[22,2,[\\\"footer\\\"]]],[[\\\"class\\\"],[\\\"inline-flex-group-v2 box-padding-LRlg-v2 box-padding-TBsm-v2\\\"]],{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isAllowedToEdit\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm box-fixed\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--default\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"],null]],[11,\\\"data-element\\\",\\\"btn-social-health-cancel\\\"],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"\\\\n                        Cancel\\\\n                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm box-fixed\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[12,\\\"class\\\",[28,[\\\"btn--default \\\",[27,\\\"unless\\\",[[23,[\\\"socialHealthField\\\",\\\"description\\\"]],\\\"hidden\\\"],null]]]],[12,\\\"onclick\\\",[27,\\\"perform\\\",[[23,[\\\"delete\\\"]]],null]],[11,\\\"data-element\\\",\\\"btn-social-health-delete\\\"],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"\\\\n                        Delete\\\\n                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm text-right\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--brand\\\"],[12,\\\"disabled\\\",[21,\\\"disableSave\\\"]],[12,\\\"onclick\\\",[27,\\\"perform\\\",[[23,[\\\"save\\\"]]],null]],[11,\\\"data-element\\\",\\\"btn-social-health-save\\\"],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"\\\\n                        \\\"],[1,[27,\\\"if\\\",[[23,[\\\"socialHealthField\\\",\\\"canMarkAsReviewed\\\"]],\\\"Mark as reviewed\\\",\\\"Save\\\"],null],false],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm text-right\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--brand\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"],null]],[11,\\\"data-element\\\",\\\"btn-social-health-close\\\"],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"\\\\n                        Close\\\\n                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/social-health.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/social\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"RuQ/juTR\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[27,\\\"social-history-detail\\\",null,[[\\\"cancel\\\",\\\"delete\\\",\\\"save\\\",\\\"socialHistory\\\",\\\"socialHistoryOptions\\\"],[\\\"cancel\\\",\\\"delete\\\",\\\"save\\\",[23,[\\\"model\\\"]],[23,[\\\"socialHistoryOptions\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/social.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/summary-pmh\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"NybwdyC1\", \"block\": \"{\\\"symbols\\\":[\\\"section\\\",\\\"right-module\\\"],\\\"statements\\\":[[4,\\\"detail-pane-v2\\\",null,[[\\\"class\\\"],[\\\"side-fixed col-xs-5 type-v2\\\"]],{\\\"statements\\\":[[4,\\\"component\\\",[[22,1,[\\\"right-module\\\"]]],[[\\\"class\\\"],[\\\"fill-space flex-column\\\"]],{\\\"statements\\\":[[0,\\\"        \\\"],[4,\\\"component\\\",[[22,2,[\\\"header\\\"]]],[[\\\"class\\\",\\\"closeDetailPane\\\"],[\\\"box-padding-Llg-v2\\\",[27,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"],null]]],{\\\"statements\\\":[[1,[21,\\\"headerText\\\"],false]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"],[4,\\\"component\\\",[[22,2,[\\\"body\\\"]]],[[\\\"class\\\"],[\\\"flex-grow box-padding-An\\\"]],{\\\"statements\\\":[[0,\\\"            \\\"],[1,[27,\\\"view-spinner\\\",null,[[\\\"isLoading\\\"],[[23,[\\\"isLoading\\\"]]]]],false],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"box-padding-Alg-v2\\\"],[12,\\\"data-element\\\",[28,[[23,[\\\"model\\\",\\\"section\\\"]],\\\"-detail\\\"]]],[9],[0,\\\"\\\\n                \\\"],[7,\\\"label\\\"],[11,\\\"class\\\",\\\"field-label\\\"],[9],[1,[21,\\\"title\\\"],false],[10],[0,\\\"\\\\n                \\\"],[1,[27,\\\"text-area-counter\\\",null,[[\\\"autofocus\\\",\\\"isDisabled\\\",\\\"autosize\\\",\\\"value\\\",\\\"placeholderText\\\",\\\"maxlength\\\",\\\"rows\\\"],[true,[23,[\\\"isNotAllowedToEdit\\\"]],true,[23,[\\\"pmhField\\\",\\\"value\\\"]],[23,[\\\"placeholderText\\\"]],\\\"4000\\\",\\\"3\\\"]]],false],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"component\\\",[[22,2,[\\\"footer\\\"]]],[[\\\"class\\\"],[\\\"inline-flex-group-v2 box-padding-LRlg-v2 box-padding-TBsm-v2\\\"]],{\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"isAllowedToEdit\\\"]]],null,{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm box-fixed\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--default\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"],null]],[11,\\\"data-element\\\",\\\"btn-past-medical-history-cancel\\\"],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"\\\\n                        Cancel\\\\n                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm box-fixed\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[12,\\\"class\\\",[28,[\\\"btn--default \\\",[27,\\\"unless\\\",[[23,[\\\"pmhField\\\",\\\"value\\\"]],\\\"hidden\\\"],null]]]],[12,\\\"onclick\\\",[27,\\\"perform\\\",[[23,[\\\"save\\\"]],true],null]],[11,\\\"data-element\\\",\\\"btn-past-medical-history-delete\\\"],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"\\\\n                        Delete\\\\n                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm text-right\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--brand\\\"],[12,\\\"disabled\\\",[21,\\\"disableSave\\\"]],[12,\\\"onclick\\\",[27,\\\"perform\\\",[[23,[\\\"save\\\"]],false],null]],[11,\\\"data-element\\\",\\\"btn-past-medical-history-save\\\"],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"\\\\n                        Save\\\\n                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"item gutter-sm text-right\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn--brand\\\"],[12,\\\"onclick\\\",[27,\\\"action\\\",[[22,0,[]],\\\"cancel\\\"],null]],[11,\\\"data-element\\\",\\\"btn-past-medical-history-close\\\"],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"\\\\n                        Close\\\\n                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[2]},null]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/summary-pmh.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/support-info\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"62jffNzw\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"support-info-container\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"main-header\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"h5\\\"],[11,\\\"class\\\",\\\"header5\\\"],[9],[1,[23,[\\\"model\\\",\\\"title\\\"]],false],[10],[0,\\\"\\\\n        \\\"],[7,\\\"p\\\"],[11,\\\"class\\\",\\\"sub-header\\\"],[9],[1,[23,[\\\"model\\\",\\\"tagline\\\"]],false],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"support-info\\\"],[9],[0,\\\"\\\\n        \\\"],[15,[23,[\\\"model\\\",\\\"template\\\"]],[]],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":true}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/support-info.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/clinical/addon/templates/support/pompe\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"ZozuDnLv\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"container\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-sm-8\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"h2\\\"],[9],[0,\\\"Testing for Pompe is available\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"p\\\"],[9],[0,\\\"Pompe disease is a progressive and often fatal neuromuscular disorder with symptoms that can mimic other metabolic myopathies. Making the correct diagnosis is an important step in managing your patient’s care.\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"p\\\"],[9],[0,\\\"If Pompe is suspected, the following tests are available:\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-sm-6 right-border\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"p\\\"],[9],[7,\\\"b\\\"],[9],[0,\\\"GAA enzyme testing\\\"],[10],[7,\\\"br\\\"],[9],[10],[0,\\\"\\\\n                        This is an initial screening tool for Pompe disease. GAA enzyme activity levels in the normal range exclude the diagnosis of Pompe disease.\\\\n                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-sm-6\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"p\\\"],[9],[7,\\\"b\\\"],[9],[7,\\\"em\\\"],[9],[0,\\\"GAA\\\"],[10],[0,\\\" gene sequencing\\\"],[10],[7,\\\"br\\\"],[9],[10],[0,\\\"\\\\n                        If GAA enzyme activity shows deficient or low-level activity, then \\\"],[7,\\\"em\\\"],[9],[0,\\\"GAA\\\"],[10],[0,\\\" gene sequencing is required to confirm a diagnosis of Pompe.\\\\n                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"h2\\\"],[9],[0,\\\"Order testing through Duke University at no cost\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"container limit-width\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"p\\\"],[9],[0,\\\"GAA enzyme testing and \\\"],[7,\\\"em\\\"],[9],[0,\\\"GAA\\\"],[10],[0,\\\" gene sequencing are available at no cost through Duke University’s \\\"],[7,\\\"a\\\"],[11,\\\"id\\\",\\\"duke-pompe-disease-testing-program\\\"],[11,\\\"href\\\",\\\"http://pediatrics.duke.edu/divisions/medical-genetics/biochemical-genetics-laboratory/glycogen-storage-disease-laboratory\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"trackClick\\\",\\\"duke-order-test-kit\\\"]],[9],[0,\\\"Pompe Disease Testing Program\\\"],[10],[0,\\\". You can submit a sample for testing through the following options:\\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"center options-box\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"p\\\"],[9],[7,\\\"b\\\"],[9],[0,\\\"Option 1: Order a test kit and follow the enclosed instructions\\\"],[10],[7,\\\"br\\\"],[9],[10],[0,\\\"\\\\n                        Test kits include materials for collection of whole blood sample for testing as well as pre-paid shipping label and cold-pak. Order online below or call 877-873-2753.\\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"p\\\"],[9],[7,\\\"a\\\"],[11,\\\"id\\\",\\\"duke-order-test-kit\\\"],[11,\\\"class\\\",\\\"btn btn-large cta orange\\\"],[11,\\\"href\\\",\\\"https://lsdtesting.myregistrationp.com\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"trackClick\\\",\\\"duke-order-test-kit\\\"]],[9],[0,\\\"Order testing kit\\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"center options-box\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"p\\\"],[9],[7,\\\"b\\\"],[9],[0,\\\"Option 2: Collect whole-blood specimen and submit with requisition form\\\"],[10],[7,\\\"br\\\"],[9],[10],[0,\\\"\\\\n                        Instead of using a test kit, you can submit a whole blood in EDTA (lavender top tube; 3 mL minimum) and FedEx overnight with cold-pak.\\\\n                    \\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"p\\\"],[9],[0,\\\"Each sample must be accompanied by a signed Pompe Disease Testing Program requisition form.\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"p\\\"],[9],[7,\\\"a\\\"],[11,\\\"id\\\",\\\"duke-download-req-form\\\"],[11,\\\"class\\\",\\\"btn btn-large cta orange\\\"],[11,\\\"href\\\",\\\"https://www.pompe.com/en/-/media/Pompe/Files/en/PDF/Duke_DBS_test.pdf\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"trackClick\\\",\\\"duke-download-req-form\\\"]],[9],[0,\\\"Download requisition form\\\"],[10],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"h2\\\"],[9],[0,\\\"Additional labs that offer Pompe testing\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"p\\\"],[9],[0,\\\"The following labs offer fee-based testing for Pompe:\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"container limit-width\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"center options-box\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"p\\\"],[9],[7,\\\"b\\\"],[9],[0,\\\"Integrated Genetics\\\"],[7,\\\"br\\\"],[9],[10],[0,\\\"\\\\n                        Tests offered:\\\"],[10],[0,\\\" GAA enzyme testing, \\\"],[7,\\\"em\\\"],[9],[0,\\\"GAA\\\"],[10],[0,\\\" gene sequencing\\\"],[7,\\\"br\\\"],[9],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"b\\\"],[9],[0,\\\"Phone number:\\\"],[10],[0,\\\" 877-246-1226\\\"],[7,\\\"br\\\"],[9],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"a\\\"],[11,\\\"id\\\",\\\"ig-additional-info\\\"],[11,\\\"href\\\",\\\"http://www.integratedgenetics.com/\\\"],[11,\\\"target\\\",\\\"_blank\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"trackClick\\\",\\\"ig-additional-info\\\"]],[9],[0,\\\"Additional information »\\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"p\\\"],[9],[0,\\\"Submit a sample for testing by:\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"ol\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"li\\\"],[9],[0,\\\"Creating an account with Integrated Genetics.\\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"li\\\"],[9],[0,\\\"Ordering a Pompe test kit from your account.\\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"li\\\"],[9],[0,\\\"Following the test kit’s enclosed instructions.\\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"p\\\"],[9],[0,\\\"Kits are sent at no charge and include the materials for collection plus the FedEX return label.\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"p\\\"],[9],[7,\\\"a\\\"],[11,\\\"id\\\",\\\"ig-create-account\\\"],[11,\\\"class\\\",\\\"btn btn-large cta orange\\\"],[11,\\\"href\\\",\\\"https://goldconnect.labcorpspecialtytesting.com/\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"trackClick\\\",\\\"ig-create-account\\\"]],[9],[0,\\\"Create account\\\"],[10],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"container limit-width\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"center options-box\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"p\\\"],[9],[7,\\\"b\\\"],[9],[0,\\\"Seattle Children’s Hospital\\\"],[7,\\\"br\\\"],[9],[10],[0,\\\"\\\\n                        Test offered:\\\"],[10],[0,\\\" GAA enzyme testing, \\\"],[7,\\\"em\\\"],[9],[0,\\\"GAA\\\"],[10],[0,\\\" gene sequencing\\\"],[7,\\\"br\\\"],[9],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"b\\\"],[9],[0,\\\"Department: \\\"],[10],[0,\\\"Biochemical Genetics\\\"],[7,\\\"br\\\"],[9],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"b\\\"],[9],[0,\\\"Phone number:\\\"],[10],[0,\\\" 206-987-2216\\\"],[7,\\\"br\\\"],[9],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"a\\\"],[11,\\\"id\\\",\\\"seattle-additional-info\\\"],[11,\\\"href\\\",\\\"http://seattlechildrenslab.testcatalog.org/show/POMPE-SEQ\\\"],[11,\\\"target\\\",\\\"_blank\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"trackClick\\\",\\\"seattle-additional-info\\\"]],[9],[0,\\\"Additional information »\\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"p\\\"],[9],[0,\\\"Submit a sample for testing by:\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"ol\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"li\\\"],[9],[0,\\\"Ensuring sample meets collection requirements.\\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"li\\\"],[9],[0,\\\"Completing the requisition form.\\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"li\\\"],[9],[0,\\\"Shipping sample to the Biochemical Genetic Laboratory.\\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"p\\\"],[9],[7,\\\"a\\\"],[11,\\\"id\\\",\\\"seattle-dowload-req-form\\\"],[11,\\\"class\\\",\\\"btn btn-large cta orange\\\"],[11,\\\"href\\\",\\\"http://d2xk4h2me8pjt2.cloudfront.net/webjc/attachments/185/36ab53d-biochemical-genetics-requisition-3.15.16.pdf\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"trackClick\\\",\\\"seattle-dowload-req-form\\\"]],[9],[0,\\\"Download requisition form\\\"],[10],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"container limit-width\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"center options-box\\\"],[9],[0,\\\"\\\\n                    \\\"],[7,\\\"p\\\"],[9],[7,\\\"b\\\"],[9],[0,\\\"ICAHN Mount Sinai Hospital New York\\\"],[7,\\\"br\\\"],[9],[10],[0,\\\"\\\\n                        Test offered:\\\"],[10],[0,\\\" GAA enzyme testing\\\"],[7,\\\"br\\\"],[9],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"b\\\"],[9],[0,\\\"Department: \\\"],[10],[0,\\\"Genetic Testing Laboratory\\\"],[7,\\\"br\\\"],[9],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"b\\\"],[9],[0,\\\"Phone number:\\\"],[10],[0,\\\" 212-241-7518\\\"],[7,\\\"br\\\"],[9],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"a\\\"],[11,\\\"id\\\",\\\"icahn-additional-info\\\"],[11,\\\"href\\\",\\\"http://icahn.mssm.edu/research/genomics/genetic-testing\\\"],[11,\\\"target\\\",\\\"_blank\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"trackClick\\\",\\\"icahn-additional-info\\\"]],[9],[0,\\\"Additional information »\\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"p\\\"],[9],[0,\\\"Submit a sample for testing by:\\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"ol\\\"],[9],[0,\\\"\\\\n                        \\\"],[7,\\\"li\\\"],[9],[0,\\\"Ensuring sample meets collection requirements (call lab to confirm requirements).\\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"li\\\"],[9],[0,\\\"Completing the requisition form.\\\"],[10],[0,\\\"\\\\n                        \\\"],[7,\\\"li\\\"],[9],[0,\\\"Shipping sample to the Genetic Testing Laboratory.\\\"],[10],[0,\\\"\\\\n                    \\\"],[10],[0,\\\"\\\\n                    \\\"],[7,\\\"p\\\"],[9],[7,\\\"a\\\"],[11,\\\"id\\\",\\\"icahn-download-req-form\\\"],[11,\\\"class\\\",\\\"btn btn-large cta orange\\\"],[11,\\\"href\\\",\\\"http://icahn.mssm.edu/files/ISMMS/Assets/Research/Genomics/GeneralTRFJan2015.pdf\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"trackClick\\\",\\\"icahn-download-req-form\\\"]],[9],[0,\\\"Download requisition form\\\"],[10],[10],[0,\\\"\\\\n                \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"container\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-sm-8\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"content-body\\\"],[9],[0,\\\"\\\\n                \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"body-text\\\"],[9],[7,\\\"p\\\"],[9],[7,\\\"em\\\"],[9],[0,\\\"Please note that orders for Pompe testing through the above mentioned labs can’t currently be submitted through your EHR. Practice Fusion has no affiliation with these labs.\\\"],[7,\\\"b\\\"],[9],[0,\\\" \\\"],[10],[10],[10],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/clinical/addon/templates/support/pompe.hbs\" } });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/transforms/patient-activity-segment-array', ['exports', 'clinical/models/patient/activity-segment', 'ember-data/transform'], function (exports, _activitySegment, _transform) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = _transform.default.extend({\n        deserialize(serialized) {\n            if (!serialized || !serialized.map) {\n                return [];\n            }\n            return serialized.map(function (object) {\n                return _activitySegment.default.create(object);\n            });\n        },\n        serialize(deserialized) {\n            return deserialized;\n        }\n    });\n});","define('cute-cats-tanisha/templates/components/clinical/addon/util/assessments/prolia-aesi-modal', ['exports', 'common/helpers/validation'], function (exports, _validation) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = {\n        validator: _validation.default.validator().validates('proliaMedicationHistory').using('proliaMedicationHistory', function (history) {\n            return history.selection;\n        }, 'Prolia history check is required').validates('proliaAnyAesi').required('Record any of the following adverse events is required').using('proliaAnyAesi.isSelected', 'proliaAesiHypocalcemia.isSelected', 'proliaAesiOsteonecrosisOfTheJaw.isSelected', 'proliaAesiAtypicalFemoralFractures.isSelected', 'proliaAesiSeriousInfections.isSelected', 'proliaAesiDermatologicReactions.isSelected', function (isAny, hypocalcemia, jaw, femoral, infections, reactions) {\n            return !isAny || hypocalcemia || jaw || femoral || infections || reactions;\n        }, 'At least one adverse event is required').build(),\n\n        getCompletionState: model => {\n            let isComplete = model && (!model.get('proliaAnyAesi.isSelected') || model.get('proliaLinkClicked.isSelected')),\n                completeMessage = 'Thank you, reporting for Prolia Safety Program complete',\n                incompleteMessage = {\n                title: 'Adverse event saved',\n                heading: 'Adverse events still need to be reported',\n                body: 'A task will be saved to your task list to complete later. Please complete this task as soon as possible.'\n            };\n\n            return {\n                isComplete: isComplete,\n                message: isComplete ? completeMessage : incompleteMessage\n            };\n        },\n        enforceChangeLogic: (key, model) => {\n            let changedProperty = model.get(key),\n                value = changedProperty.type === 'yesNo' ? !changedProperty.isSelected : changedProperty.value,\n                changeSettings = [],\n                eventsKeys = ['proliaAesiHypocalcemia', 'proliaAesiOsteonecrosisOfTheJaw', 'proliaAesiAtypicalFemoralFractures', 'proliaAesiSeriousInfections', 'proliaAesiDermatologicReactions'];\n\n            if (key === 'proliaMedicationHistory' && value === 'PreviousHistory') {\n                changeSettings.push({ property: 'proliaAnyAesi.isSelected', value: false });\n                eventsKeys.forEach(event => {\n                    changeSettings.push({ property: `${event}.isSelected`, value: false });\n                });\n            }\n            if (key === 'proliaAnyAesi' && !value) {\n                eventsKeys.forEach(event => {\n                    changeSettings.push({ property: `${event}.isSelected`, value: false });\n                });\n            }\n            if (eventsKeys.indexOf(key) > -1 && value) {\n                changeSettings.push({ property: 'proliaAnyAesi.isSelected', value: true });\n            }\n            if (key !== 'proliaLinkClicked') {\n                let showLink = false;\n                eventsKeys.forEach(eventKey => {\n                    if (key !== eventKey && model.get(`${eventKey}.isSelected`) || key === eventKey && value) {\n                        showLink = true;\n                    }\n                });\n                changeSettings.push({ property: 'proliaLinkClicked.isVisible', value: showLink });\n            }\n\n            return changeSettings;\n        }\n    };\n});","define('cute-cats-tanisha/templates/components/clinical/addon/util/patient-search', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = {\n        formatNameParameters(searchText) {\n            if (Ember.isEmpty(searchText)) {\n                return {};\n            }\n            const name = searchText.trim();\n            const commaIndex = name.indexOf(',');\n            const spaceIndex = name.indexOf(' ');\n\n            // The server doesn't support searching by first name (yet). So if there's a single word\n            // we use firstOrLastName and it will search on both.\n            // If we have a space or a comma we treat this as two separate searches\n            // NOTE: This has a lot of problems with middle names, double last names, and lastNames that\n            // can be used as firstNames (like Campbell)\n            if (commaIndex !== -1) {\n                return {\n                    lastName: name.substring(0, commaIndex).trim(),\n                    firstName: name.substring(commaIndex + 1).trim()\n                };\n            } else if (spaceIndex !== -1) {\n                return {\n                    firstName: name.substring(0, spaceIndex).trim(),\n                    lastName: name.substring(spaceIndex + 1).trim()\n                };\n            }\n            return {\n                firstOrLastName: name\n            };\n        }\n    };\n});","define('cute-cats-tanisha/templates/components/clinical/addon/util/transcript-comments', ['exports', 'charting/repositories/encounter-summaries'], function (exports, _encounterSummaries) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = {\n        // Injected via the inject-store-repositories instance initializer for now\n        store: null,\n\n        setTranscriptCommentDates(patientPracticeGuid, transcriptComments) {\n            if (!patientPracticeGuid) {\n                return;\n            }\n            transcriptComments.forEach(transcriptComment => {\n                const transcriptGuid = Ember.get(transcriptComment, 'transcriptGuid');\n                if (!transcriptGuid) {\n                    return;\n                }\n                _encounterSummaries.default.findEncounter(this.store, patientPracticeGuid, transcriptGuid).then(encounterSummary => {\n                    if (encounterSummary) {\n                        Ember.set(transcriptComment, 'dateOfService', encounterSummary.get('dateOfService'));\n                    }\n                });\n            });\n        }\n    };\n});","define('cute-cats-tanisha/templates/components/clinical/index', ['module', '../../vertical-index'], function (module, VerticalIndex) {\n  'use strict';\n\n  /*jshint node:true*/\n  module.exports = VerticalIndex('clinical', 'clinical');\n});","define(\"cute-cats-tanisha/templates/components/image-row\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"JpYMd64o\", \"block\": \"{\\\"symbols\\\":[\\\"cat\\\"],\\\"statements\\\":[[7,\\\"div\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"row\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[1,[27,\\\"image-tile\\\",null,[[\\\"url\\\",\\\"viewFullScreen\\\"],[[22,1,[\\\"url\\\"]],[23,[\\\"viewFullScreen\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/image-row.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/components/image-tile\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"IBi4+Sto\", \"block\": \"{\\\"symbols\\\":[\\\"@viewFullScreen\\\"],\\\"statements\\\":[[7,\\\"img\\\"],[11,\\\"class\\\",\\\"cat-tile--image-sm\\\"],[12,\\\"onClick\\\",[27,\\\"action\\\",[[22,0,[]],[22,1,[]],[23,[\\\"url\\\"]]],null]],[12,\\\"src\\\",[21,\\\"url\\\"]],[12,\\\"alt\\\",[21,\\\"url\\\"]],[9],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/components/image-tile.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/full-screen\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"IaWyWLBr\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"img\\\"],[12,\\\"src\\\",[21,\\\"formattedImgurLink\\\"]],[12,\\\"alt\\\",[21,\\\"formattedImgurLink\\\"]],[9],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/full-screen.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/homepage\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"ql83MJN8\", \"block\": \"{\\\"symbols\\\":[\\\"row\\\"],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"cat-homepage--centered\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"cat-tile-display\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"rows\\\"]]],null,{\\\"statements\\\":[[4,\\\"vertical-collection\\\",[[23,[\\\"rows\\\"]]],[[\\\"estimateHeight\\\",\\\"containerSelector\\\",\\\"lastReached\\\"],[200,\\\".cat-tile-display\\\",\\\"loadMore\\\"]],{\\\"statements\\\":[[0,\\\"                \\\"],[1,[27,\\\"image-row\\\",null,[[\\\"row\\\",\\\"viewFullScreen\\\"],[[22,1,[]],[27,\\\"action\\\",[[22,0,[]],\\\"viewFullScreen\\\"],null]]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"cat-loading-text\\\"],[9],[1,[21,\\\"landingMessage\\\"],false],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"    \\\"],[10],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"showLoadingMoreCatsMessage\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"cat-loading-more-text\\\"],[9],[0,\\\"LOADING MORE CUTE CATS...\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/homepage.hbs\" } });\n});","define(\"cute-cats-tanisha/templates/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"PbaDyBuF\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[21,\\\"outlet\\\"],false]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"cute-cats-tanisha/templates/index.hbs\" } });\n});","\n","define('cute-cats-tanisha/config/environment', [], function() {\n  var prefix = 'cute-cats-tanisha';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","\n          if (!runningTests) {\n            require(\"cute-cats-tanisha/app\")[\"default\"].create({\"name\":\"cute-cats-tanisha\",\"version\":\"0.0.0+14640b26\"});\n          }\n        \n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdlCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjhIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACltvxjxLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvrfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClhIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjrtLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnlEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxpzcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACthtttGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjlrIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvxzznSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvnzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClnJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACttCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxtTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnjnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfxNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnvllgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACplFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvvtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrlFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvxrlOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxjYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzxnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrbtyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrrHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACphPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdpnpIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrajHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvhDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrbhIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACraA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClhnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnjrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbbxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChtMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdztGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChpHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxhKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjvJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3dA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChptBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChlpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjvlCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACthIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjpttGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChjCA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdbrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrpHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;","file":"cute-cats-tanisha.js"}